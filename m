Return-Path: <linux-kernel-owner+willy=40w.ods.org-S965120AbWJKAFb@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965120AbWJKAFb (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 10 Oct 2006 20:05:31 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S964976AbWJKAFb
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 10 Oct 2006 20:05:31 -0400
Received: from smtp-out.google.com ([216.239.33.17]:33555 "EHLO
	smtp-out.google.com") by vger.kernel.org with ESMTP
	id S1030716AbWJKAF3 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 10 Oct 2006 20:05:29 -0400
DomainKey-Signature: a=rsa-sha1; s=beta; d=google.com; c=nofws; q=dns;
	h=received:message-id:date:from:to:subject:cc:mime-version:content-type;
	b=DPl6XoiO3VsBGHDzbgUsfZsrfLMbQ7Ozzwp7KwMXj7ML2XKcKWWiU83H10CJH7Brx
	KQhIVC7IOinEJ/W7WQSyQ==
Message-ID: <65dd6fd50610101705t3db93a72sc0847cd120aa05d3@mail.gmail.com>
Date: Tue, 10 Oct 2006 17:05:09 -0700
From: "Ollie Wild" <aaw@google.com>
To: linux-kernel@vger.kernel.org, parisc-linux@lists.parisc-linux.org
Subject: Removing MAX_ARG_PAGES (request for comments/assistance)
Cc: "Linus Torvalds" <torvalds@osdl.org>,
       "Arjan van de Ven" <arjan@infradead.org>, "Ingo Molnar" <mingo@elte.hu>,
       linux-mm@kvack.org, "Andrew Morton" <akpm@osdl.org>,
       "Andi Kleen" <ak@muc.de>, linux-arch@vger.kernel.org,
       "David Howells" <dhowells@redhat.com>
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_8824_9060361.1160525109224"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

------=_Part_8824_9060361.1160525109224
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi,

A few months back, there was some discussion about increasing
MAX_ARG_PAGES (http://thread.gmane.org/gmane.linux.kernel/418858).
Since this is a problem which Google seems to bump into on a regular
basis -- we just keep jacking up the limit -- I thought I'd have  a
stab at implementing the preferred solution as outlined by Linus.

I've attached a patch which replaces the pages array from the
linux_binprm struct with a stack vm_area added to the new process's
mm_struct.  The region grows using the normal page fault / stack
extension mechanism.  Since the vm_area is swappable -- which I've
confirmed via testing -- we don't have to worry about memory
starvation.

I've tested this on the um/i386, i386, and x86_64 architectures with
the elf and script binfmts.  I'd like to get feedback from the Linux
community.  If anyone would like to test/implement the areas I've
missed, I'd greatly appreciate it.

Some outstanding issues / concerns:

- I haven't addressed the CONFIG_STACK_GROWSUP (parisc) case.  Would
someone on the parisc list be willing to have a go at this?  Grant
Grundler has offered to provide me access to hardware, but I'd prefer
to let a pa-risc guru have a go.

- I haven't tested this on a NOMMU architecture.  Could someone please
validate this?

- What, if any command line limits should we enforce?  The do_execve()
callchain has plenty of hooks where the calling process can sleep, so
CPU starvation shouldn't be a problem.  Memory consumption is limited
by the RLIMIT_STACK setting.  Note, however, that I'm not providing
any guarantee on the availability of space for the actual stack.

- Inside setup_arg_pages(), I have to move the stack region.
Different linux_binfmt handlers place it in different locations
relative to STACK_TOP, and STACK_TOP itself may have different values
depending on the personality of the executable.  When executing
scripts, the arg strings need to be accessed before we know which
binary format is being executed, so we can't generally make the
correct determination beforehand.

- There are  bunch of linux_binfmt handlers which are either obsolete
or specific to particular platforms.  Would someone be willing to look
at these?

Thanks,
Ollie

------=_Part_8824_9060361.1160525109224
Content-Type: text/x-patch; name=no_MAX_ARG_PAGES.patch; 
	charset=ANSI_X3.4-1968
Content-Transfer-Encoding: base64
X-Attachment-Id: f_et4xt20l
Content-Disposition: attachment; filename="no_MAX_ARG_PAGES.patch"

ZGlmZiAtLWdpdCBhL2FyY2gveDg2XzY0L2lhMzIvaWEzMl9iaW5mbXQuYyBiL2FyY2gveDg2XzY0
L2lhMzIvaWEzMl9iaW5mbXQuYwppbmRleCA4MmVmMTgyLi4yZTVhOTM0IDEwMDY0NAotLS0gYS9h
cmNoL3g4Nl82NC9pYTMyL2lhMzJfYmluZm10LmMKKysrIGIvYXJjaC94ODZfNjQvaWEzMi9pYTMy
X2JpbmZtdC5jCkBAIC0yNzksOSArMjc5LDYgQEAgI2RlZmluZSBleGl0X2VsZl9iaW5mbXQJCQll
eGl0X2VsZjMyX2JpbgogI2RlZmluZSBsb2FkX2VsZl9iaW5hcnkgbG9hZF9lbGYzMl9iaW5hcnkK
IAogI2RlZmluZSBFTEZfUExBVF9JTklUKHIsIGxvYWRfYWRkcikJZWxmMzJfaW5pdChyKQotI2Rl
ZmluZSBzZXR1cF9hcmdfcGFnZXMoYnBybSwgc3RhY2tfdG9wLCBleGVjX3N0YWNrKSBcCi0JaWEz
Ml9zZXR1cF9hcmdfcGFnZXMoYnBybSwgc3RhY2tfdG9wLCBleGVjX3N0YWNrKQotaW50IGlhMzJf
c2V0dXBfYXJnX3BhZ2VzKHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0sIHVuc2lnbmVkIGxvbmcg
c3RhY2tfdG9wLCBpbnQgZXhlY3V0YWJsZV9zdGFjayk7CiAKICN1bmRlZiBzdGFydF90aHJlYWQK
ICNkZWZpbmUgc3RhcnRfdGhyZWFkKHJlZ3MsbmV3X3JpcCxuZXdfcnNwKSBkbyB7IFwKQEAgLTMz
OCw1NyArMzM1LDcgQEAgc3RhdGljIHZvaWQgZWxmMzJfaW5pdChzdHJ1Y3QgcHRfcmVncyAqcgog
aW50IGlhMzJfc2V0dXBfYXJnX3BhZ2VzKHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0sIHVuc2ln
bmVkIGxvbmcgc3RhY2tfdG9wLAogCQkJIGludCBleGVjdXRhYmxlX3N0YWNrKQogewotCXVuc2ln
bmVkIGxvbmcgc3RhY2tfYmFzZTsKLQlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKm1wbnQ7Ci0Jc3Ry
dWN0IG1tX3N0cnVjdCAqbW0gPSBjdXJyZW50LT5tbTsKLQlpbnQgaSwgcmV0OwotCi0Jc3RhY2tf
YmFzZSA9IHN0YWNrX3RvcCAtIE1BWF9BUkdfUEFHRVMgKiBQQUdFX1NJWkU7Ci0JbW0tPmFyZ19z
dGFydCA9IGJwcm0tPnAgKyBzdGFja19iYXNlOwotCi0JYnBybS0+cCArPSBzdGFja19iYXNlOwot
CWlmIChicHJtLT5sb2FkZXIpCi0JCWJwcm0tPmxvYWRlciArPSBzdGFja19iYXNlOwotCWJwcm0t
PmV4ZWMgKz0gc3RhY2tfYmFzZTsKLQotCW1wbnQgPSBrbWVtX2NhY2hlX2FsbG9jKHZtX2FyZWFf
Y2FjaGVwLCBTTEFCX0tFUk5FTCk7Ci0JaWYgKCFtcG50KSAKLQkJcmV0dXJuIC1FTk9NRU07IAot
Ci0JbWVtc2V0KG1wbnQsIDAsIHNpemVvZigqbXBudCkpOwotCi0JZG93bl93cml0ZSgmbW0tPm1t
YXBfc2VtKTsKLQl7Ci0JCW1wbnQtPnZtX21tID0gbW07Ci0JCW1wbnQtPnZtX3N0YXJ0ID0gUEFH
RV9NQVNLICYgKHVuc2lnbmVkIGxvbmcpIGJwcm0tPnA7Ci0JCW1wbnQtPnZtX2VuZCA9IHN0YWNr
X3RvcDsKLQkJaWYgKGV4ZWN1dGFibGVfc3RhY2sgPT0gRVhTVEFDS19FTkFCTEVfWCkKLQkJCW1w
bnQtPnZtX2ZsYWdzID0gVk1fU1RBQ0tfRkxBR1MgfCAgVk1fRVhFQzsKLQkJZWxzZSBpZiAoZXhl
Y3V0YWJsZV9zdGFjayA9PSBFWFNUQUNLX0RJU0FCTEVfWCkKLQkJCW1wbnQtPnZtX2ZsYWdzID0g
Vk1fU1RBQ0tfRkxBR1MgJiB+Vk1fRVhFQzsKLQkJZWxzZQotCQkJbXBudC0+dm1fZmxhZ3MgPSBW
TV9TVEFDS19GTEFHUzsKLSAJCW1wbnQtPnZtX3BhZ2VfcHJvdCA9IChtcG50LT52bV9mbGFncyAm
IFZNX0VYRUMpID8gCi0gCQkJUEFHRV9DT1BZX0VYRUMgOiBQQUdFX0NPUFk7Ci0JCWlmICgocmV0
ID0gaW5zZXJ0X3ZtX3N0cnVjdChtbSwgbXBudCkpKSB7Ci0JCQl1cF93cml0ZSgmbW0tPm1tYXBf
c2VtKTsKLQkJCWttZW1fY2FjaGVfZnJlZSh2bV9hcmVhX2NhY2hlcCwgbXBudCk7Ci0JCQlyZXR1
cm4gcmV0OwotCQl9Ci0JCW1tLT5zdGFja192bSA9IG1tLT50b3RhbF92bSA9IHZtYV9wYWdlcyht
cG50KTsKLQl9IAotCi0JZm9yIChpID0gMCA7IGkgPCBNQVhfQVJHX1BBR0VTIDsgaSsrKSB7Ci0J
CXN0cnVjdCBwYWdlICpwYWdlID0gYnBybS0+cGFnZVtpXTsKLQkJaWYgKHBhZ2UpIHsKLQkJCWJw
cm0tPnBhZ2VbaV0gPSBOVUxMOwotCQkJaW5zdGFsbF9hcmdfcGFnZShtcG50LCBwYWdlLCBzdGFj
a19iYXNlKTsKLQkJfQotCQlzdGFja19iYXNlICs9IFBBR0VfU0laRTsKLQl9Ci0JdXBfd3JpdGUo
Jm1tLT5tbWFwX3NlbSk7Ci0JCi0JcmV0dXJuIDA7CisJcmV0dXJuIHNldHVwX2FyZ19wYWdlcyhi
cHJtLCBzdGFja190b3AsIGV4ZWN1dGFibGVfc3RhY2spOwogfQogRVhQT1JUX1NZTUJPTChpYTMy
X3NldHVwX2FyZ19wYWdlcyk7CiAKZGlmZiAtLWdpdCBhL2ZzL2JpbmZtdF9lbGYuYyBiL2ZzL2Jp
bmZtdF9lbGYuYwppbmRleCAwNjQzNWYzLi5kMGUyMjkyIDEwMDY0NAotLS0gYS9mcy9iaW5mbXRf
ZWxmLmMKKysrIGIvZnMvYmluZm10X2VsZi5jCkBAIC0yNTUsOCArMjU1LDggQEAgI2VuZGlmCiAJ
d2hpbGUgKGFyZ2MtLSA+IDApIHsKIAkJc2l6ZV90IGxlbjsKIAkJX19wdXRfdXNlcigoZWxmX2Fk
ZHJfdClwLCBhcmd2KyspOwotCQlsZW4gPSBzdHJubGVuX3VzZXIoKHZvaWQgX191c2VyICopcCwg
UEFHRV9TSVpFKk1BWF9BUkdfUEFHRVMpOwotCQlpZiAoIWxlbiB8fCBsZW4gPiBQQUdFX1NJWkUq
TUFYX0FSR19QQUdFUykKKwkJbGVuID0gc3Rybmxlbl91c2VyKCh2b2lkIF9fdXNlciAqKXAsIE1B
WF9BUkdfU1RSTEVOKTsKKwkJaWYgKCFsZW4gfHwgbGVuID4gTUFYX0FSR19TVFJMRU4pCiAJCQly
ZXR1cm4gMDsKIAkJcCArPSBsZW47CiAJfQpAQCAtMjY2LDggKzI2Niw4IEBAICNlbmRpZgogCXdo
aWxlIChlbnZjLS0gPiAwKSB7CiAJCXNpemVfdCBsZW47CiAJCV9fcHV0X3VzZXIoKGVsZl9hZGRy
X3QpcCwgZW52cCsrKTsKLQkJbGVuID0gc3Rybmxlbl91c2VyKCh2b2lkIF9fdXNlciAqKXAsIFBB
R0VfU0laRSpNQVhfQVJHX1BBR0VTKTsKLQkJaWYgKCFsZW4gfHwgbGVuID4gUEFHRV9TSVpFKk1B
WF9BUkdfUEFHRVMpCisJCWxlbiA9IHN0cm5sZW5fdXNlcigodm9pZCBfX3VzZXIgKilwLCBNQVhf
QVJHX1NUUkxFTik7CisJCWlmICghbGVuIHx8IGxlbiA+IE1BWF9BUkdfU1RSTEVOKQogCQkJcmV0
dXJuIDA7CiAJCXAgKz0gbGVuOwogCX0KQEAgLTc2OSwxMCArNzY5LDYgQEAgc3RhdGljIGludCBs
b2FkX2VsZl9iaW5hcnkoc3RydWN0IGxpbnV4XwogCX0KIAogCS8qIE9LLCBUaGlzIGlzIHRoZSBw
b2ludCBvZiBubyByZXR1cm4gKi8KLQljdXJyZW50LT5tbS0+c3RhcnRfZGF0YSA9IDA7Ci0JY3Vy
cmVudC0+bW0tPmVuZF9kYXRhID0gMDsKLQljdXJyZW50LT5tbS0+ZW5kX2NvZGUgPSAwOwotCWN1
cnJlbnQtPm1tLT5tbWFwID0gTlVMTDsKIAljdXJyZW50LT5mbGFncyAmPSB+UEZfRk9SS05PRVhF
QzsKIAljdXJyZW50LT5tbS0+ZGVmX2ZsYWdzID0gZGVmX2ZsYWdzOwogCmRpZmYgLS1naXQgYS9m
cy9iaW5mbXRfbWlzYy5jIGIvZnMvYmluZm10X21pc2MuYwppbmRleCAxNzEzYzQ4Li4xMzc4YmEz
IDEwMDY0NAotLS0gYS9mcy9iaW5mbXRfbWlzYy5jCisrKyBiL2ZzL2JpbmZtdF9taXNjLmMKQEAg
LTEyNiw3ICsxMjYsOSBAQCBzdGF0aWMgaW50IGxvYWRfbWlzY19iaW5hcnkoc3RydWN0IGxpbnV4
CiAJCWdvdG8gX3JldDsKIAogCWlmICghKGZtdC0+ZmxhZ3MgJiBNSVNDX0ZNVF9QUkVTRVJWRV9B
UkdWMCkpIHsKLQkJcmVtb3ZlX2FyZ196ZXJvKGJwcm0pOworCQlyZXR2YWwgPSByZW1vdmVfYXJn
X3plcm8oYnBybSk7CisJCWlmIChyZXR2YWwpCisJCQlnb3RvIF9yZXQ7CiAJfQogCiAJaWYgKGZt
dC0+ZmxhZ3MgJiBNSVNDX0ZNVF9PUEVOX0JJTkFSWSkgewpkaWZmIC0tZ2l0IGEvZnMvYmluZm10
X3NjcmlwdC5jIGIvZnMvYmluZm10X3NjcmlwdC5jCmluZGV4IDFlZGJjY2EuLjViNjMwOWYgMTAw
NjQ0Ci0tLSBhL2ZzL2JpbmZtdF9zY3JpcHQuYworKysgYi9mcy9iaW5mbXRfc2NyaXB0LmMKQEAg
LTY4LDcgKzY4LDkgQEAgc3RhdGljIGludCBsb2FkX3NjcmlwdChzdHJ1Y3QgbGludXhfYmlucAog
CSAqIFRoaXMgaXMgZG9uZSBpbiByZXZlcnNlIG9yZGVyLCBiZWNhdXNlIG9mIGhvdyB0aGUKIAkg
KiB1c2VyIGVudmlyb25tZW50IGFuZCBhcmd1bWVudHMgYXJlIHN0b3JlZC4KIAkgKi8KLQlyZW1v
dmVfYXJnX3plcm8oYnBybSk7CisJcmV0dmFsID0gcmVtb3ZlX2FyZ196ZXJvKGJwcm0pOworCWlm
IChyZXR2YWwpCisJCXJldHVybiByZXR2YWw7CiAJcmV0dmFsID0gY29weV9zdHJpbmdzX2tlcm5l
bCgxLCAmYnBybS0+aW50ZXJwLCBicHJtKTsKIAlpZiAocmV0dmFsIDwgMCkgcmV0dXJuIHJldHZh
bDsgCiAJYnBybS0+YXJnYysrOwpkaWZmIC0tZ2l0IGEvZnMvY29tcGF0LmMgYi9mcy9jb21wYXQu
YwppbmRleCA0ZDNmYmNiLi4zNTI4YWZhIDEwMDY0NAotLS0gYS9mcy9jb21wYXQuYworKysgYi9m
cy9jb21wYXQuYwpAQCAtMTM4NSw2ICsxMzg1LDcgQEAgc3RhdGljIGludCBjb21wYXRfY29weV9z
dHJpbmdzKGludCBhcmdjLAogewogCXN0cnVjdCBwYWdlICprbWFwcGVkX3BhZ2UgPSBOVUxMOwog
CWNoYXIgKmthZGRyID0gTlVMTDsKKwl1bnNpZ25lZCBsb25nIGtwb3MgPSAwOwogCWludCByZXQ7
CiAKIAl3aGlsZSAoYXJnYy0tID4gMCkgewpAQCAtMTM5Myw5MiArMTM5NCw3MiBAQCBzdGF0aWMg
aW50IGNvbXBhdF9jb3B5X3N0cmluZ3MoaW50IGFyZ2MsCiAJCXVuc2lnbmVkIGxvbmcgcG9zOwog
CiAJCWlmIChnZXRfdXNlcihzdHIsIGFyZ3YrYXJnYykgfHwKLQkJCSEobGVuID0gc3Rybmxlbl91
c2VyKGNvbXBhdF9wdHIoc3RyKSwgYnBybS0+cCkpKSB7CisJCSAgICAhKGxlbiA9IHN0cm5sZW5f
dXNlcihjb21wYXRfcHRyKHN0ciksIE1BWF9BUkdfU1RSTEVOKSkpIHsKIAkJCXJldCA9IC1FRkFV
TFQ7CiAJCQlnb3RvIG91dDsKIAkJfQogCi0JCWlmIChicHJtLT5wIDwgbGVuKSAgeworCQlpZiAo
TUFYX0FSR19TVFJMRU4gPCBsZW4pIHsKIAkJCXJldCA9IC1FMkJJRzsKIAkJCWdvdG8gb3V0Owog
CQl9CiAKLQkJYnBybS0+cCAtPSBsZW47Ci0JCS8qIFhYWDogYWRkIGFyY2hpdGVjdHVyZSBzcGVj
aWZpYyBvdmVyZmxvdyBjaGVjayBoZXJlLiAqLworCQkvKiBXZSdyZSBnb2luZyB0byB3b3JrIG91
ciB3YXkgYmFja3dvcmRzLiAqLwogCQlwb3MgPSBicHJtLT5wOworCQlzdHIgKz0gbGVuOworCQli
cHJtLT5wIC09IGxlbjsKIAogCQl3aGlsZSAobGVuID4gMCkgewotCQkJaW50IGksIG5ldywgZXJy
OwogCQkJaW50IG9mZnNldCwgYnl0ZXNfdG9fY29weTsKLQkJCXN0cnVjdCBwYWdlICpwYWdlOwog
CiAJCQlvZmZzZXQgPSBwb3MgJSBQQUdFX1NJWkU7Ci0JCQlpID0gcG9zL1BBR0VfU0laRTsKLQkJ
CXBhZ2UgPSBicHJtLT5wYWdlW2ldOwotCQkJbmV3ID0gMDsKLQkJCWlmICghcGFnZSkgewotCQkJ
CXBhZ2UgPSBhbGxvY19wYWdlKEdGUF9ISUdIVVNFUik7Ci0JCQkJYnBybS0+cGFnZVtpXSA9IHBh
Z2U7Ci0JCQkJaWYgKCFwYWdlKSB7Ci0JCQkJCXJldCA9IC1FTk9NRU07CisJCQlpZiAob2Zmc2V0
ID09IDApCisJCQkJb2Zmc2V0ID0gUEFHRV9TSVpFOworCisJCQlieXRlc190b19jb3B5ID0gb2Zm
c2V0OworCQkJaWYgKGJ5dGVzX3RvX2NvcHkgPiBsZW4pCisJCQkJYnl0ZXNfdG9fY29weSA9IGxl
bjsKKworCQkJb2Zmc2V0IC09IGJ5dGVzX3RvX2NvcHk7CisJCQlwb3MgLT0gYnl0ZXNfdG9fY29w
eTsKKwkJCXN0ciAtPSBieXRlc190b19jb3B5OworCQkJbGVuIC09IGJ5dGVzX3RvX2NvcHk7CisK
KwkJCWlmICgha21hcHBlZF9wYWdlIHx8IGtwb3MgIT0gKHBvcyAmIFBBR0VfTUFTSykpIHsKKwkJ
CQlzdHJ1Y3QgcGFnZSAqcGFnZTsKKworCQkJCXJldCA9IGdldF91c2VyX3BhZ2VzKGN1cnJlbnQs
IGJwcm0tPm1tLCBwb3MsCisJCQkJCQkgICAgIDEsIDEsIDEsICZwYWdlLCBOVUxMKTsKKwkJCQlp
ZiAocmV0IDw9IDApIHsKKwkJCQkJLyogV2UndmUgZXhjZWVkIHRoZSBzdGFjayBybGltaXQuICov
CisJCQkJCXJldCA9IC1FMkJJRzsKIAkJCQkJZ290byBvdXQ7CiAJCQkJfQotCQkJCW5ldyA9IDE7
Ci0JCQl9CiAKLQkJCWlmIChwYWdlICE9IGttYXBwZWRfcGFnZSkgewotCQkJCWlmIChrbWFwcGVk
X3BhZ2UpCisJCQkJaWYgKGttYXBwZWRfcGFnZSkgewogCQkJCQlrdW5tYXAoa21hcHBlZF9wYWdl
KTsKKwkJCQkJcHV0X3BhZ2Uoa21hcHBlZF9wYWdlKTsKKwkJCQl9CiAJCQkJa21hcHBlZF9wYWdl
ID0gcGFnZTsKIAkJCQlrYWRkciA9IGttYXAoa21hcHBlZF9wYWdlKTsKKwkJCQlrcG9zID0gcG9z
ICYgUEFHRV9NQVNLOwogCQkJfQotCQkJaWYgKG5ldyAmJiBvZmZzZXQpCi0JCQkJbWVtc2V0KGth
ZGRyLCAwLCBvZmZzZXQpOwotCQkJYnl0ZXNfdG9fY29weSA9IFBBR0VfU0laRSAtIG9mZnNldDsK
LQkJCWlmIChieXRlc190b19jb3B5ID4gbGVuKSB7Ci0JCQkJYnl0ZXNfdG9fY29weSA9IGxlbjsK
LQkJCQlpZiAobmV3KQotCQkJCQltZW1zZXQoa2FkZHIrb2Zmc2V0K2xlbiwgMCwKLQkJCQkJCVBB
R0VfU0laRS1vZmZzZXQtbGVuKTsKLQkJCX0KLQkJCWVyciA9IGNvcHlfZnJvbV91c2VyKGthZGRy
K29mZnNldCwgY29tcGF0X3B0cihzdHIpLAotCQkJCQkJYnl0ZXNfdG9fY29weSk7Ci0JCQlpZiAo
ZXJyKSB7CisJCQlpZiAoY29weV9mcm9tX3VzZXIoa2FkZHIrb2Zmc2V0LCBjb21wYXRfcHRyKHN0
ciksCisJCQkJCQlieXRlc190b19jb3B5KSkgewogCQkJCXJldCA9IC1FRkFVTFQ7CiAJCQkJZ290
byBvdXQ7CiAJCQl9Ci0KLQkJCXBvcyArPSBieXRlc190b19jb3B5OwotCQkJc3RyICs9IGJ5dGVz
X3RvX2NvcHk7Ci0JCQlsZW4gLT0gYnl0ZXNfdG9fY29weTsKIAkJfQogCX0KIAlyZXQgPSAwOwog
b3V0OgotCWlmIChrbWFwcGVkX3BhZ2UpCisJaWYgKGttYXBwZWRfcGFnZSkgewogCQlrdW5tYXAo
a21hcHBlZF9wYWdlKTsKLQlyZXR1cm4gcmV0OwotfQotCi0jaWZkZWYgQ09ORklHX01NVQotCi0j
ZGVmaW5lIGZyZWVfYXJnX3BhZ2VzKGJwcm0pIGRvIHsgfSB3aGlsZSAoMCkKLQotI2Vsc2UKLQot
c3RhdGljIGlubGluZSB2b2lkIGZyZWVfYXJnX3BhZ2VzKHN0cnVjdCBsaW51eF9iaW5wcm0gKmJw
cm0pCi17Ci0JaW50IGk7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgTUFYX0FSR19QQUdFUzsgaSsrKSB7
Ci0JCWlmIChicHJtLT5wYWdlW2ldKQotCQkJX19mcmVlX3BhZ2UoYnBybS0+cGFnZVtpXSk7Ci0J
CWJwcm0tPnBhZ2VbaV0gPSBOVUxMOworCQlwdXRfcGFnZShrbWFwcGVkX3BhZ2UpOwogCX0KKwly
ZXR1cm4gcmV0OwogfQogCi0jZW5kaWYgLyogQ09ORklHX01NVSAqLwotCiAvKgogICogY29tcGF0
X2RvX2V4ZWN2ZSgpIGlzIG1vc3RseSBhIGNvcHkgb2YgZG9fZXhlY3ZlKCksIHdpdGggdGhlIGV4
Y2VwdGlvbgogICogdGhhdCBpdCBwcm9jZXNzZXMgMzIgYml0IGFyZ3YgYW5kIGVudnAgcG9pbnRl
cnMuCkBAIC0xNDkxLDcgKzE0NzIsNiBAQCBpbnQgY29tcGF0X2RvX2V4ZWN2ZShjaGFyICogZmls
ZW5hbWUsCiAJc3RydWN0IGxpbnV4X2JpbnBybSAqYnBybTsKIAlzdHJ1Y3QgZmlsZSAqZmlsZTsK
IAlpbnQgcmV0dmFsOwotCWludCBpOwogCiAJcmV0dmFsID0gLUVOT01FTTsKIAlicHJtID0ga3ph
bGxvYyhzaXplb2YoKmJwcm0pLCBHRlBfS0VSTkVMKTsKQEAgLTE1MDUsMjQgKzE0ODUsMTkgQEAg
aW50IGNvbXBhdF9kb19leGVjdmUoY2hhciAqIGZpbGVuYW1lLAogCiAJc2NoZWRfZXhlYygpOwog
Ci0JYnBybS0+cCA9IFBBR0VfU0laRSpNQVhfQVJHX1BBR0VTLXNpemVvZih2b2lkICopOwogCWJw
cm0tPmZpbGUgPSBmaWxlOwogCWJwcm0tPmZpbGVuYW1lID0gZmlsZW5hbWU7CiAJYnBybS0+aW50
ZXJwID0gZmlsZW5hbWU7Ci0JYnBybS0+bW0gPSBtbV9hbGxvYygpOwotCXJldHZhbCA9IC1FTk9N
RU07Ci0JaWYgKCFicHJtLT5tbSkKLQkJZ290byBvdXRfZmlsZTsKIAotCXJldHZhbCA9IGluaXRf
bmV3X2NvbnRleHQoY3VycmVudCwgYnBybS0+bW0pOwotCWlmIChyZXR2YWwgPCAwKQotCQlnb3Rv
IG91dF9tbTsKKwlyZXR2YWwgPSBicHJtX21tX2luaXQoYnBybSk7CisJaWYgKHJldHZhbCkKKwkJ
Z290byBvdXRfZmlsZTsKIAotCWJwcm0tPmFyZ2MgPSBjb21wYXRfY291bnQoYXJndiwgYnBybS0+
cCAvIHNpemVvZihjb21wYXRfdXB0cl90KSk7CisJYnBybS0+YXJnYyA9IGNvbXBhdF9jb3VudChh
cmd2LCBNQVhfQVJHX1NUUklOR1MpOwogCWlmICgocmV0dmFsID0gYnBybS0+YXJnYykgPCAwKQog
CQlnb3RvIG91dF9tbTsKIAotCWJwcm0tPmVudmMgPSBjb21wYXRfY291bnQoZW52cCwgYnBybS0+
cCAvIHNpemVvZihjb21wYXRfdXB0cl90KSk7CisJYnBybS0+ZW52YyA9IGNvbXBhdF9jb3VudChl
bnZwLCBNQVhfQVJHX1NUUklOR1MpOwogCWlmICgocmV0dmFsID0gYnBybS0+ZW52YykgPCAwKQog
CQlnb3RvIG91dF9tbTsKIApAQCAtMTU0NywxMCArMTUyMiw4IEBAIGludCBjb21wYXRfZG9fZXhl
Y3ZlKGNoYXIgKiBmaWxlbmFtZSwKIAlpZiAocmV0dmFsIDwgMCkKIAkJZ290byBvdXQ7CiAKLQly
ZXR2YWwgPSBzZWFyY2hfYmluYXJ5X2hhbmRsZXIoYnBybSwgcmVncyk7CisJcmV0dmFsID0gc2Vh
cmNoX2JpbmFyeV9oYW5kbGVyKGJwcm0scmVncyk7CiAJaWYgKHJldHZhbCA+PSAwKSB7Ci0JCWZy
ZWVfYXJnX3BhZ2VzKGJwcm0pOwotCiAJCS8qIGV4ZWN2ZSBzdWNjZXNzICovCiAJCXNlY3VyaXR5
X2Jwcm1fZnJlZShicHJtKTsKIAkJYWNjdF91cGRhdGVfaW50ZWdyYWxzKGN1cnJlbnQpOwpAQCAt
MTU1OSwxOSArMTUzMiwxMiBAQCBpbnQgY29tcGF0X2RvX2V4ZWN2ZShjaGFyICogZmlsZW5hbWUs
CiAJfQogCiBvdXQ6Ci0JLyogU29tZXRoaW5nIHdlbnQgd3JvbmcsIHJldHVybiB0aGUgaW5vZGUg
YW5kIGZyZWUgdGhlIGFyZ3VtZW50IHBhZ2VzKi8KLQlmb3IgKGkgPSAwIDsgaSA8IE1BWF9BUkdf
UEFHRVMgOyBpKyspIHsKLQkJc3RydWN0IHBhZ2UgKiBwYWdlID0gYnBybS0+cGFnZVtpXTsKLQkJ
aWYgKHBhZ2UpCi0JCQlfX2ZyZWVfcGFnZShwYWdlKTsKLQl9Ci0KIAlpZiAoYnBybS0+c2VjdXJp
dHkpCiAJCXNlY3VyaXR5X2Jwcm1fZnJlZShicHJtKTsKIAogb3V0X21tOgogCWlmIChicHJtLT5t
bSkKLQkJbW1kcm9wKGJwcm0tPm1tKTsKKwkJbW1wdXQgKGJwcm0tPm1tKTsKIAogb3V0X2ZpbGU6
CiAJaWYgKGJwcm0tPmZpbGUpIHsKZGlmZiAtLWdpdCBhL2ZzL2V4ZWMuYyBiL2ZzL2V4ZWMuYwpp
bmRleCBkOTkzZWExLi4yM2EzMzRjIDEwMDY0NAotLS0gYS9mcy9leGVjLmMKKysrIGIvZnMvZXhl
Yy5jCkBAIC0xNzIsNiArMTcyLDc5IEBAIGV4aXQ6CiAJZ290byBvdXQ7CiB9CiAKKyNpZmRlZiBD
T05GSUdfU1RBQ0tfR1JPV1NVUAorI2Vycm9yCUkgYnJva2UgeW91ciBidWlsZCBiZWNhdXNlIEkg
cmVhcmNoaXRlY3RlZCB0aGUgc3RhY2sgY29kZSwgYW5kIEkgXAorCWRvbid0IGhhdmUgYWNjZXNz
IHRvIGFuIGFyY2hpdGVjdHVyZSB3aGVyZSBDT05GSUdfU1RBQ0tfR1JPV1NVUCBpcyBcCisJc2V0
LiAgUGxlYXNlIGZpeGUgdGhpcyBvciBzZW5kIG1lIGEgbWFjaGluZSB3aGljaCBJIGNhbiB0ZXN0
IHRoaXMgb24uIFwKKwlcCisJLS0gT2xsaWUgV2lsZCA8YWF3QGdvb2dsZS5jb20+CisjZW5kaWYK
KworLyogQ3JlYXRlIGEgbmV3IG1tX3N0cnVjdCBhbmQgcG9wdWxhdGUgaXQgd2l0aCBhIHRlbXBv
cmFyeSBzdGFjaworICogdm1fYXJlYV9zdHJ1Y3QuICBXZSBkb24ndCBoYXZlIGVub3VnaCBjb250
ZXh0IGF0IHRoaXMgcG9pbnQgdG8gc2V0IHRoZQorICogc3RhY2sgZmxhZ3MsIHBlcm1pc3Npb25z
LCBhbmQgb2Zmc2V0LCBzbyB3ZSB1c2UgdGVtcG9yYXJ5IHZhbHVlcy4gIFdlJ2xsCisgKiB1cGRh
dGUgdGhlbSBsYXRlciBpbiBzZXR1cF9hcmdfcGFnZXMoKS4gKi8KK2ludCBicHJtX21tX2luaXQo
c3RydWN0IGxpbnV4X2JpbnBybSAqYnBybSkKK3sKKwlpbnQgZXJyOworCXN0cnVjdCBtbV9zdHJ1
Y3QgKm1tID0gTlVMTDsKKwlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSA9IE5VTEw7CisKKwli
cHJtLT5tbSA9IG1tID0gbW1fYWxsb2MoKTsKKwllcnIgPSAtRU5PTUVNOworCWlmICghbW0pCisJ
CWdvdG8gZXJyOworCisJaWYgKChlcnIgPSBpbml0X25ld19jb250ZXh0KGN1cnJlbnQsIG1tKSkp
CisJCWdvdG8gZXJyOworCisJYnBybS0+dm1hID0gdm1hID0ga21lbV9jYWNoZV96YWxsb2Modm1f
YXJlYV9jYWNoZXAsIFNMQUJfS0VSTkVMKTsKKwllcnIgPSAtRU5PTUVNOworCWlmICghdm1hKQor
CQlnb3RvIGVycjsKKworCWRvd25fd3JpdGUoJm1tLT5tbWFwX3NlbSk7CisJeworCQl2bWEtPnZt
X21tID0gbW07CisKKwkJLyogUGxhY2UgdGhlIHN0YWNrIGF0IHRoZSB0b3Agb2YgdXNlciBtZW1v
cnkuICBMYXRlciwgd2UnbGwKKwkJICogbW92ZSB0aGlzIHRvIGFuIGFwcHJvcHJpYXRlIHBsYWNl
LiAgV2UgZG9uJ3QgdXNlIFNUQUNLX1RPUAorCQkgKiBiZWNhdXNlIHRoYXQgY2FuIGRlcGVuZCBv
biBhdHRyaWJ1dGVzIHdoaWNoIGFyZW4ndAorCQkgKiBjb25maWd1cmVkIHlldC4gKi8KKwkJdm1h
LT52bV9lbmQgPSBUQVNLX1NJWkU7CisJCXZtYS0+dm1fc3RhcnQgPSB2bWEtPnZtX2VuZCAtIFBB
R0VfU0laRTsKKworCQl2bWEtPnZtX2ZsYWdzID0gVk1fU1RBQ0tfRkxBR1M7CisJCXZtYS0+dm1f
cGFnZV9wcm90ID0gcHJvdGVjdGlvbl9tYXBbdm1hLT52bV9mbGFncyAmIDB4N107CisJCWlmICgo
ZXJyID0gaW5zZXJ0X3ZtX3N0cnVjdChtbSwgdm1hKSkpIHsKKwkJCXVwX3dyaXRlKCZtbS0+bW1h
cF9zZW0pOworCQkJZ290byBlcnI7CisJCX0KKworCQltbS0+c3RhY2tfdm0gPSBtbS0+dG90YWxf
dm0gPSAxOworCX0KKwl1cF93cml0ZSgmbW0tPm1tYXBfc2VtKTsKKworCWJwcm0tPnAgPSB2bWEt
PnZtX2VuZCAtIHNpemVvZih2b2lkICopOworCisJcmV0dXJuIDA7CisKK2VycjoKKwlpZiAodm1h
KSB7CisJCWJwcm0tPnZtYSA9IE5VTEw7CisJCWttZW1fY2FjaGVfZnJlZSh2bV9hcmVhX2NhY2hl
cCwgdm1hKTsKKwl9CisKKwlpZiAobW0pIHsKKwkJYnBybS0+bW0gPSBOVUxMOworCQltbWRyb3Ao
bW0pOworCX0KKworCXJldHVybiBlcnI7Cit9CisKK0VYUE9SVF9TWU1CT0woYnBybV9tbV9pbml0
KTsKKwogLyoKICAqIGNvdW50KCkgY291bnRzIHRoZSBudW1iZXIgb2Ygc3RyaW5ncyBpbiBhcnJh
eSBBUkdWLgogICovCkBAIC0xOTcsMTUgKzI3MCwxNiBAQCBzdGF0aWMgaW50IGNvdW50KGNoYXIg
X191c2VyICogX191c2VyICogCiB9CiAKIC8qCi0gKiAnY29weV9zdHJpbmdzKCknIGNvcGllcyBh
cmd1bWVudC9lbnZpcm9ubWVudCBzdHJpbmdzIGZyb20gdXNlcgotICogbWVtb3J5IHRvIGZyZWUg
cGFnZXMgaW4ga2VybmVsIG1lbS4gVGhlc2UgYXJlIGluIGEgZm9ybWF0IHJlYWR5Ci0gKiB0byBi
ZSBwdXQgZGlyZWN0bHkgaW50byB0aGUgdG9wIG9mIG5ldyB1c2VyIG1lbW9yeS4KKyAqICdjb3B5
X3N0cmluZ3MoKScgY29waWVzIGFyZ3VtZW50L2Vudmlyb25tZW50IHN0cmluZ3MgZnJvbSB0aGUg
b2xkCisgKiBwcm9jZXNzZXMncyBtZW1vcnkgdG8gdGhlIG5ldyBwcm9jZXNzJ3Mgc3RhY2suICBU
aGUgY2FsbCB0byBnZXRfdXNlcl9wYWdlcygpCisgKiBlbnN1cmVzIHRoZSBkZXN0aW5hdGlvbiBw
YWdlIGlzIGNyZWF0ZWQgYW5kIG5vdCBzd2FwcGVkIG91dC4KICAqLwogc3RhdGljIGludCBjb3B5
X3N0cmluZ3MoaW50IGFyZ2MsIGNoYXIgX191c2VyICogX191c2VyICogYXJndiwKIAkJCXN0cnVj
dCBsaW51eF9iaW5wcm0gKmJwcm0pCiB7CiAJc3RydWN0IHBhZ2UgKmttYXBwZWRfcGFnZSA9IE5V
TEw7CiAJY2hhciAqa2FkZHIgPSBOVUxMOworCXVuc2lnbmVkIGxvbmcga3BvcyA9IDA7CiAJaW50
IHJldDsKIAogCXdoaWxlIChhcmdjLS0gPiAwKSB7CkBAIC0yMTQsNjkgKzI4OCw2OCBAQCBzdGF0
aWMgaW50IGNvcHlfc3RyaW5ncyhpbnQgYXJnYywgY2hhciBfCiAJCXVuc2lnbmVkIGxvbmcgcG9z
OwogCiAJCWlmIChnZXRfdXNlcihzdHIsIGFyZ3YrYXJnYykgfHwKLQkJCQkhKGxlbiA9IHN0cm5s
ZW5fdXNlcihzdHIsIGJwcm0tPnApKSkgeworCQkJCSEobGVuID0gc3Rybmxlbl91c2VyKHN0ciwg
TUFYX0FSR19TVFJMRU4pKSkgewogCQkJcmV0ID0gLUVGQVVMVDsKIAkJCWdvdG8gb3V0OwogCQl9
CiAKLQkJaWYgKGJwcm0tPnAgPCBsZW4pICB7CisJCWlmIChNQVhfQVJHX1NUUkxFTiA8IGxlbikg
ewogCQkJcmV0ID0gLUUyQklHOwogCQkJZ290byBvdXQ7CiAJCX0KIAotCQlicHJtLT5wIC09IGxl
bjsKLQkJLyogWFhYOiBhZGQgYXJjaGl0ZWN0dXJlIHNwZWNpZmljIG92ZXJmbG93IGNoZWNrIGhl
cmUuICovCisJCS8qIFdlJ3JlIGdvaW5nIHRvIHdvcmsgb3VyIHdheSBiYWNrd29yZHMuICovCiAJ
CXBvcyA9IGJwcm0tPnA7CisJCXN0ciArPSBsZW47CisJCWJwcm0tPnAgLT0gbGVuOwogCiAJCXdo
aWxlIChsZW4gPiAwKSB7Ci0JCQlpbnQgaSwgbmV3LCBlcnI7CiAJCQlpbnQgb2Zmc2V0LCBieXRl
c190b19jb3B5OwotCQkJc3RydWN0IHBhZ2UgKnBhZ2U7CiAKIAkJCW9mZnNldCA9IHBvcyAlIFBB
R0VfU0laRTsKLQkJCWkgPSBwb3MvUEFHRV9TSVpFOwotCQkJcGFnZSA9IGJwcm0tPnBhZ2VbaV07
Ci0JCQluZXcgPSAwOwotCQkJaWYgKCFwYWdlKSB7Ci0JCQkJcGFnZSA9IGFsbG9jX3BhZ2UoR0ZQ
X0hJR0hVU0VSKTsKLQkJCQlicHJtLT5wYWdlW2ldID0gcGFnZTsKLQkJCQlpZiAoIXBhZ2UpIHsK
LQkJCQkJcmV0ID0gLUVOT01FTTsKKwkJCWlmIChvZmZzZXQgPT0gMCkKKwkJCQlvZmZzZXQgPSBQ
QUdFX1NJWkU7CisKKwkJCWJ5dGVzX3RvX2NvcHkgPSBvZmZzZXQ7CisJCQlpZiAoYnl0ZXNfdG9f
Y29weSA+IGxlbikKKwkJCQlieXRlc190b19jb3B5ID0gbGVuOworCisJCQlvZmZzZXQgLT0gYnl0
ZXNfdG9fY29weTsKKwkJCXBvcyAtPSBieXRlc190b19jb3B5OworCQkJc3RyIC09IGJ5dGVzX3Rv
X2NvcHk7CisJCQlsZW4gLT0gYnl0ZXNfdG9fY29weTsKKworCQkJaWYgKCFrbWFwcGVkX3BhZ2Ug
fHwga3BvcyAhPSAocG9zICYgUEFHRV9NQVNLKSkgeworCQkJCXN0cnVjdCBwYWdlICpwYWdlOwor
CisJCQkJcmV0ID0gZ2V0X3VzZXJfcGFnZXMoY3VycmVudCwgYnBybS0+bW0sIHBvcywKKwkJCQkJ
CSAgICAgMSwgMSwgMSwgJnBhZ2UsIE5VTEwpOworCQkJCWlmIChyZXQgPD0gMCkgeworCQkJCQkv
KiBXZSd2ZSBleGNlZWQgdGhlIHN0YWNrIHJsaW1pdC4gKi8KKwkJCQkJcmV0ID0gLUUyQklHOwog
CQkJCQlnb3RvIG91dDsKIAkJCQl9Ci0JCQkJbmV3ID0gMTsKLQkJCX0KIAotCQkJaWYgKHBhZ2Ug
IT0ga21hcHBlZF9wYWdlKSB7Ci0JCQkJaWYgKGttYXBwZWRfcGFnZSkKKwkJCQlpZiAoa21hcHBl
ZF9wYWdlKSB7CiAJCQkJCWt1bm1hcChrbWFwcGVkX3BhZ2UpOworCQkJCQlwdXRfcGFnZShrbWFw
cGVkX3BhZ2UpOworCQkJCX0KIAkJCQlrbWFwcGVkX3BhZ2UgPSBwYWdlOwogCQkJCWthZGRyID0g
a21hcChrbWFwcGVkX3BhZ2UpOworCQkJCWtwb3MgPSBwb3MgJiBQQUdFX01BU0s7CiAJCQl9Ci0J
CQlpZiAobmV3ICYmIG9mZnNldCkKLQkJCQltZW1zZXQoa2FkZHIsIDAsIG9mZnNldCk7Ci0JCQli
eXRlc190b19jb3B5ID0gUEFHRV9TSVpFIC0gb2Zmc2V0OwotCQkJaWYgKGJ5dGVzX3RvX2NvcHkg
PiBsZW4pIHsKLQkJCQlieXRlc190b19jb3B5ID0gbGVuOwotCQkJCWlmIChuZXcpCi0JCQkJCW1l
bXNldChrYWRkcitvZmZzZXQrbGVuLCAwLAotCQkJCQkJUEFHRV9TSVpFLW9mZnNldC1sZW4pOwot
CQkJfQotCQkJZXJyID0gY29weV9mcm9tX3VzZXIoa2FkZHIrb2Zmc2V0LCBzdHIsIGJ5dGVzX3Rv
X2NvcHkpOwotCQkJaWYgKGVycikgeworCQkJaWYgKGNvcHlfZnJvbV91c2VyKGthZGRyK29mZnNl
dCwgc3RyLCBieXRlc190b19jb3B5KSkgewogCQkJCXJldCA9IC1FRkFVTFQ7CiAJCQkJZ290byBv
dXQ7CiAJCQl9Ci0KLQkJCXBvcyArPSBieXRlc190b19jb3B5OwotCQkJc3RyICs9IGJ5dGVzX3Rv
X2NvcHk7Ci0JCQlsZW4gLT0gYnl0ZXNfdG9fY29weTsKIAkJfQogCX0KIAlyZXQgPSAwOwogb3V0
OgotCWlmIChrbWFwcGVkX3BhZ2UpCisJaWYgKGttYXBwZWRfcGFnZSkgewogCQlrdW5tYXAoa21h
cHBlZF9wYWdlKTsKKwkJcHV0X3BhZ2Uoa21hcHBlZF9wYWdlKTsKKwl9CiAJcmV0dXJuIHJldDsK
IH0KIApAQCAtMjk1LDE1NyArMzY4LDc0IEBAIGludCBjb3B5X3N0cmluZ3Nfa2VybmVsKGludCBh
cmdjLGNoYXIgKioKIAogRVhQT1JUX1NZTUJPTChjb3B5X3N0cmluZ3Nfa2VybmVsKTsKIAotI2lm
ZGVmIENPTkZJR19NTVUKLS8qCi0gKiBUaGlzIHJvdXRpbmUgaXMgdXNlZCB0byBtYXAgaW4gYSBw
YWdlIGludG8gYW4gYWRkcmVzcyBzcGFjZTogbmVlZGVkIGJ5Ci0gKiBleGVjdmUoKSBmb3IgdGhl
IGluaXRpYWwgc3RhY2sgYW5kIGVudmlyb25tZW50IHBhZ2VzLgotICoKLSAqIHZtYS0+dm1fbW0t
Pm1tYXBfc2VtIGlzIGhlbGQgZm9yIHdyaXRpbmcuCi0gKi8KLXZvaWQgaW5zdGFsbF9hcmdfcGFn
ZShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKLQkJCXN0cnVjdCBwYWdlICpwYWdlLCB1bnNp
Z25lZCBsb25nIGFkZHJlc3MpCi17Ci0Jc3RydWN0IG1tX3N0cnVjdCAqbW0gPSB2bWEtPnZtX21t
OwotCXB0ZV90ICogcHRlOwotCXNwaW5sb2NrX3QgKnB0bDsKLQotCWlmICh1bmxpa2VseShhbm9u
X3ZtYV9wcmVwYXJlKHZtYSkpKQotCQlnb3RvIG91dDsKLQotCWZsdXNoX2RjYWNoZV9wYWdlKHBh
Z2UpOwotCXB0ZSA9IGdldF9sb2NrZWRfcHRlKG1tLCBhZGRyZXNzLCAmcHRsKTsKLQlpZiAoIXB0
ZSkKLQkJZ290byBvdXQ7Ci0JaWYgKCFwdGVfbm9uZSgqcHRlKSkgewotCQlwdGVfdW5tYXBfdW5s
b2NrKHB0ZSwgcHRsKTsKLQkJZ290byBvdXQ7Ci0JfQotCWluY19tbV9jb3VudGVyKG1tLCBhbm9u
X3Jzcyk7Ci0JbHJ1X2NhY2hlX2FkZF9hY3RpdmUocGFnZSk7Ci0Jc2V0X3B0ZV9hdChtbSwgYWRk
cmVzcywgcHRlLCBwdGVfbWtkaXJ0eShwdGVfbWt3cml0ZShta19wdGUoCi0JCQkJCXBhZ2UsIHZt
YS0+dm1fcGFnZV9wcm90KSkpKTsKLQlwYWdlX2FkZF9uZXdfYW5vbl9ybWFwKHBhZ2UsIHZtYSwg
YWRkcmVzcyk7Ci0JcHRlX3VubWFwX3VubG9jayhwdGUsIHB0bCk7Ci0KLQkvKiBubyBuZWVkIGZv
ciBmbHVzaF90bGIgKi8KLQlyZXR1cm47Ci1vdXQ6Ci0JX19mcmVlX3BhZ2UocGFnZSk7Ci0JZm9y
Y2Vfc2lnKFNJR0tJTEwsIGN1cnJlbnQpOwotfQotCiAjZGVmaW5lIEVYVFJBX1NUQUNLX1ZNX1BB
R0VTCTIwCS8qIHJhbmRvbSAqLwogCisvKiBGaW5hbGl6ZXMgdGhlIHN0YWNrIHZtX2FyZWFfc3Ry
dWN0LiAgVGhlIGZsYWdzIGFuZCBwZXJtaXNzaW9ucyBhcmUgdXBkYXRlZCwKKyAqIHRoZSBzdGFj
ayBpcyBvcHRpb25hbGx5IHJlbG9jYXRlZCwgYW5kIHNvbWUgZXh0cmEgc3BhY2UgaXMgYWRkZWQu
CisgKi8KIGludCBzZXR1cF9hcmdfcGFnZXMoc3RydWN0IGxpbnV4X2JpbnBybSAqYnBybSwKIAkJ
ICAgIHVuc2lnbmVkIGxvbmcgc3RhY2tfdG9wLAogCQkgICAgaW50IGV4ZWN1dGFibGVfc3RhY2sp
CiB7Ci0JdW5zaWduZWQgbG9uZyBzdGFja19iYXNlOwotCXN0cnVjdCB2bV9hcmVhX3N0cnVjdCAq
bXBudDsKKwl1bnNpZ25lZCBsb25nIHJldDsKKwl1bnNpZ25lZCBsb25nIHN0YWNrX2Jhc2UsIHN0
YWNrX3NoaWZ0OwogCXN0cnVjdCBtbV9zdHJ1Y3QgKm1tID0gY3VycmVudC0+bW07Ci0JaW50IGks
IHJldDsKLQlsb25nIGFyZ19zaXplOwogCi0jaWZkZWYgQ09ORklHX1NUQUNLX0dST1dTVVAKLQkv
KiBNb3ZlIHRoZSBhcmd1bWVudCBhbmQgZW52aXJvbm1lbnQgc3RyaW5ncyB0byB0aGUgYm90dG9t
IG9mIHRoZQotCSAqIHN0YWNrIHNwYWNlLgotCSAqLwotCWludCBvZmZzZXQsIGo7Ci0JY2hhciAq
dG8sICpmcm9tOwotCi0JLyogU3RhcnQgYnkgc2hpZnRpbmcgYWxsIHRoZSBwYWdlcyBkb3duICov
Ci0JaSA9IDA7Ci0JZm9yIChqID0gMDsgaiA8IE1BWF9BUkdfUEFHRVM7IGorKykgewotCQlzdHJ1
Y3QgcGFnZSAqcGFnZSA9IGJwcm0tPnBhZ2Vbal07Ci0JCWlmICghcGFnZSkKLQkJCWNvbnRpbnVl
OwotCQlicHJtLT5wYWdlW2krK10gPSBwYWdlOwotCX0KKwlCVUdfT04oc3RhY2tfdG9wID4gVEFT
S19TSVpFKTsKKwlCVUdfT04oc3RhY2tfdG9wICYgflBBR0VfTUFTSyk7CiAKLQkvKiBOb3cgbW92
ZSB0aGVtIHdpdGhpbiB0aGVpciBwYWdlcyAqLwotCW9mZnNldCA9IGJwcm0tPnAgJSBQQUdFX1NJ
WkU7Ci0JdG8gPSBrbWFwKGJwcm0tPnBhZ2VbMF0pOwotCWZvciAoaiA9IDE7IGogPCBpOyBqKysp
IHsKLQkJbWVtbW92ZSh0bywgdG8gKyBvZmZzZXQsIFBBR0VfU0laRSAtIG9mZnNldCk7Ci0JCWZy
b20gPSBrbWFwKGJwcm0tPnBhZ2Vbal0pOwotCQltZW1jcHkodG8gKyBQQUdFX1NJWkUgLSBvZmZz
ZXQsIGZyb20sIG9mZnNldCk7Ci0JCWt1bm1hcChicHJtLT5wYWdlW2ogLSAxXSk7Ci0JCXRvID0g
ZnJvbTsKLQl9Ci0JbWVtbW92ZSh0bywgdG8gKyBvZmZzZXQsIFBBR0VfU0laRSAtIG9mZnNldCk7
Ci0Ja3VubWFwKGJwcm0tPnBhZ2VbaiAtIDFdKTsKLQotCS8qIExpbWl0IHN0YWNrIHNpemUgdG8g
MUdCICovCi0Jc3RhY2tfYmFzZSA9IGN1cnJlbnQtPnNpZ25hbC0+cmxpbVtSTElNSVRfU1RBQ0td
LnJsaW1fbWF4OwotCWlmIChzdGFja19iYXNlID4gKDEgPDwgMzApKQotCQlzdGFja19iYXNlID0g
MSA8PCAzMDsKLQlzdGFja19iYXNlID0gUEFHRV9BTElHTihzdGFja190b3AgLSBzdGFja19iYXNl
KTsKLQotCS8qIEFkanVzdCBicHJtLT5wIHRvIHBvaW50IHRvIHRoZSBlbmQgb2YgdGhlIHN0cmlu
Z3MuICovCi0JYnBybS0+cCA9IHN0YWNrX2Jhc2UgKyBQQUdFX1NJWkUgKiBpIC0gb2Zmc2V0Owot
Ci0JbW0tPmFyZ19zdGFydCA9IHN0YWNrX2Jhc2U7Ci0JYXJnX3NpemUgPSBpIDw8IFBBR0VfU0hJ
RlQ7Ci0KLQkvKiB6ZXJvIHBhZ2VzIHRoYXQgd2VyZSBjb3BpZWQgYWJvdmUgKi8KLQl3aGlsZSAo
aSA8IE1BWF9BUkdfUEFHRVMpCi0JCWJwcm0tPnBhZ2VbaSsrXSA9IE5VTEw7Ci0jZWxzZQotCXN0
YWNrX2Jhc2UgPSBhcmNoX2FsaWduX3N0YWNrKHN0YWNrX3RvcCAtIE1BWF9BUkdfUEFHRVMqUEFH
RV9TSVpFKTsKKwlzdGFja19iYXNlID0gYXJjaF9hbGlnbl9zdGFjayhzdGFja190b3AgLSBtbS0+
c3RhY2tfdm0qUEFHRV9TSVpFKTsKIAlzdGFja19iYXNlID0gUEFHRV9BTElHTihzdGFja19iYXNl
KTsKLQlicHJtLT5wICs9IHN0YWNrX2Jhc2U7Ci0JbW0tPmFyZ19zdGFydCA9IGJwcm0tPnA7Ci0J
YXJnX3NpemUgPSBzdGFja190b3AgLSAoUEFHRV9NQVNLICYgKHVuc2lnbmVkIGxvbmcpIG1tLT5h
cmdfc3RhcnQpOwotI2VuZGlmCiAKLQlhcmdfc2l6ZSArPSBFWFRSQV9TVEFDS19WTV9QQUdFUyAq
IFBBR0VfU0laRTsKKwlzdGFja19zaGlmdCA9IChicHJtLT5wICYgUEFHRV9NQVNLKSAtIHN0YWNr
X2Jhc2U7CisJQlVHX09OKHN0YWNrX3NoaWZ0IDwgMCk7CisJYnBybS0+cCAtPSBzdGFja19zaGlm
dDsKKwltbS0+YXJnX3N0YXJ0ID0gYnBybS0+cDsKIAogCWlmIChicHJtLT5sb2FkZXIpCi0JCWJw
cm0tPmxvYWRlciArPSBzdGFja19iYXNlOwotCWJwcm0tPmV4ZWMgKz0gc3RhY2tfYmFzZTsKLQot
CW1wbnQgPSBrbWVtX2NhY2hlX2FsbG9jKHZtX2FyZWFfY2FjaGVwLCBTTEFCX0tFUk5FTCk7Ci0J
aWYgKCFtcG50KQotCQlyZXR1cm4gLUVOT01FTTsKLQotCW1lbXNldChtcG50LCAwLCBzaXplb2Yo
Km1wbnQpKTsKKwkJYnBybS0+bG9hZGVyIC09IHN0YWNrX3NoaWZ0OworCWJwcm0tPmV4ZWMgLT0g
c3RhY2tfc2hpZnQ7CiAKIAlkb3duX3dyaXRlKCZtbS0+bW1hcF9zZW0pOwogCXsKLQkJbXBudC0+
dm1fbW0gPSBtbTsKLSNpZmRlZiBDT05GSUdfU1RBQ0tfR1JPV1NVUAotCQltcG50LT52bV9zdGFy
dCA9IHN0YWNrX2Jhc2U7Ci0JCW1wbnQtPnZtX2VuZCA9IHN0YWNrX2Jhc2UgKyBhcmdfc2l6ZTsK
LSNlbHNlCi0JCW1wbnQtPnZtX2VuZCA9IHN0YWNrX3RvcDsKLQkJbXBudC0+dm1fc3RhcnQgPSBt
cG50LT52bV9lbmQgLSBhcmdfc2l6ZTsKLSNlbmRpZgorCQlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3Qg
KnZtYSA9IGJwcm0tPnZtYTsKKwogCQkvKiBBZGp1c3Qgc3RhY2sgZXhlY3V0ZSBwZXJtaXNzaW9u
czsgZXhwbGljaXRseSBlbmFibGUKIAkJICogZm9yIEVYU1RBQ0tfRU5BQkxFX1gsIGRpc2FibGUg
Zm9yIEVYU1RBQ0tfRElTQUJMRV9YCiAJCSAqIGFuZCBsZWF2ZSBhbG9uZSAoYXJjaCBkZWZhdWx0
KSBvdGhlcndpc2UuICovCiAJCWlmICh1bmxpa2VseShleGVjdXRhYmxlX3N0YWNrID09IEVYU1RB
Q0tfRU5BQkxFX1gpKQotCQkJbXBudC0+dm1fZmxhZ3MgPSBWTV9TVEFDS19GTEFHUyB8ICBWTV9F
WEVDOworCQkJdm1hLT52bV9mbGFncyB8PSBWTV9FWEVDOwogCQllbHNlIGlmIChleGVjdXRhYmxl
X3N0YWNrID09IEVYU1RBQ0tfRElTQUJMRV9YKQotCQkJbXBudC0+dm1fZmxhZ3MgPSBWTV9TVEFD
S19GTEFHUyAmIH5WTV9FWEVDOwotCQllbHNlCi0JCQltcG50LT52bV9mbGFncyA9IFZNX1NUQUNL
X0ZMQUdTOwotCQltcG50LT52bV9mbGFncyB8PSBtbS0+ZGVmX2ZsYWdzOwotCQltcG50LT52bV9w
YWdlX3Byb3QgPSBwcm90ZWN0aW9uX21hcFttcG50LT52bV9mbGFncyAmIDB4N107Ci0JCWlmICgo
cmV0ID0gaW5zZXJ0X3ZtX3N0cnVjdChtbSwgbXBudCkpKSB7Ci0JCQl1cF93cml0ZSgmbW0tPm1t
YXBfc2VtKTsKLQkJCWttZW1fY2FjaGVfZnJlZSh2bV9hcmVhX2NhY2hlcCwgbXBudCk7Ci0JCQly
ZXR1cm4gcmV0OworCQkJdm1hLT52bV9mbGFncyAmPSB+Vk1fRVhFQzsKKwkJLy8gRklYTUU6IEFy
ZSB0aGUgbmV4dCB0d28gbGluZXMgc3VmZmljaWVudCwgb3IgZG8gSSBuZWVkIHRvCisJCS8vIGRv
IHNvbWUgYWRkaXRpb25hbCBtYWdpYz8KKwkJdm1hLT52bV9mbGFncyB8PSBtbS0+ZGVmX2ZsYWdz
OworCQl2bWEtPnZtX3BhZ2VfcHJvdCA9IHByb3RlY3Rpb25fbWFwW3ZtYS0+dm1fZmxhZ3MgJiAw
eDddOworCisJCS8qIE1vdmUgc3RhY2sgcGFnZXMgZG93biBpbiBtZW1vcnkuICovCisJCWlmIChz
dGFja19zaGlmdCkgeworCQkJLy8gRklYTUU6IFZlcmlmeSB0aGUgc2hpZnQgaXMgT0suCisKKwkJ
CS8qIFRoaXMgc2hvdWxkIGJlIHNhZmUgZXZlbiB3aXRoIG92ZXJsYXAgYmVjYXVzZSB3ZQorCQkJ
ICogYXJlIHNoaWZ0aW5nIGRvd24uICovCisJCQlyZXQgPSBtb3ZlX3ZtYSh2bWEsIHZtYS0+dm1f
c3RhcnQsCisJCQkJCXZtYS0+dm1fZW5kIC0gdm1hLT52bV9zdGFydCwKKwkJCQkJdm1hLT52bV9l
bmQgLSB2bWEtPnZtX3N0YXJ0LAorCQkJCQl2bWEtPnZtX3N0YXJ0IC0gc3RhY2tfc2hpZnQpOwor
CQkJaWYgKHJldCAmIH5QQUdFX01BU0spIHsKKwkJCQl1cF93cml0ZSgmbW0tPm1tYXBfc2VtKTsK
KwkJCQlyZXR1cm4gcmV0OworCQkJfQogCQl9Ci0JCW1tLT5zdGFja192bSA9IG1tLT50b3RhbF92
bSA9IHZtYV9wYWdlcyhtcG50KTsKLQl9CiAKLQlmb3IgKGkgPSAwIDsgaSA8IE1BWF9BUkdfUEFH
RVMgOyBpKyspIHsKLQkJc3RydWN0IHBhZ2UgKnBhZ2UgPSBicHJtLT5wYWdlW2ldOwotCQlpZiAo
cGFnZSkgewotCQkJYnBybS0+cGFnZVtpXSA9IE5VTEw7Ci0JCQlpbnN0YWxsX2FyZ19wYWdlKG1w
bnQsIHBhZ2UsIHN0YWNrX2Jhc2UpOworCQkvLyBFeHBhbmQgdGhlIHN0YWNrLgorCQl2bWEgPSBm
aW5kX3ZtYShtbSwgYnBybS0+cCk7CisJCUJVR19PTighdm1hIHx8IGJwcm0tPnAgPCB2bWEtPnZt
X3N0YXJ0KTsKKwkJaWYgKGV4cGFuZF9zdGFjayh2bWEsIHN0YWNrX2Jhc2UgLQorCQkJCQlFWFRS
QV9TVEFDS19WTV9QQUdFUyAqIFBBR0VfU0laRSkpIHsKKwkJCXVwX3dyaXRlKCZtbS0+bW1hcF9z
ZW0pOworCQkJcmV0dXJuIC1FRkFVTFQ7CiAJCX0KLQkJc3RhY2tfYmFzZSArPSBQQUdFX1NJWkU7
CiAJfQogCXVwX3dyaXRlKCZtbS0+bW1hcF9zZW0pOwogCQpAQCAtNDU0LDIzICs0NDQsNiBAQCAj
ZW5kaWYKIAogRVhQT1JUX1NZTUJPTChzZXR1cF9hcmdfcGFnZXMpOwogCi0jZGVmaW5lIGZyZWVf
YXJnX3BhZ2VzKGJwcm0pIGRvIHsgfSB3aGlsZSAoMCkKLQotI2Vsc2UKLQotc3RhdGljIGlubGlu
ZSB2b2lkIGZyZWVfYXJnX3BhZ2VzKHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0pCi17Ci0JaW50
IGk7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgTUFYX0FSR19QQUdFUzsgaSsrKSB7Ci0JCWlmIChicHJt
LT5wYWdlW2ldKQotCQkJX19mcmVlX3BhZ2UoYnBybS0+cGFnZVtpXSk7Ci0JCWJwcm0tPnBhZ2Vb
aV0gPSBOVUxMOwotCX0KLX0KLQotI2VuZGlmIC8qIENPTkZJR19NTVUgKi8KLQogc3RydWN0IGZp
bGUgKm9wZW5fZXhlYyhjb25zdCBjaGFyICpuYW1lKQogewogCXN0cnVjdCBuYW1laWRhdGEgbmQ7
CkBAIC05ODYsOCArOTU5LDEwIEBAIHZvaWQgY29tcHV0ZV9jcmVkcyhzdHJ1Y3QgbGludXhfYmlu
cHJtICoKIAogRVhQT1JUX1NZTUJPTChjb21wdXRlX2NyZWRzKTsKIAotdm9pZCByZW1vdmVfYXJn
X3plcm8oc3RydWN0IGxpbnV4X2JpbnBybSAqYnBybSkKK2ludCByZW1vdmVfYXJnX3plcm8oc3Ry
dWN0IGxpbnV4X2JpbnBybSAqYnBybSkKIHsKKwlpbnQgcmV0ID0gMDsKKwogCWlmIChicHJtLT5h
cmdjKSB7CiAJCXVuc2lnbmVkIGxvbmcgb2Zmc2V0OwogCQljaGFyICoga2FkZHI7CkBAIC0xMDAx
LDEzICs5NzYsMjMgQEAgdm9pZCByZW1vdmVfYXJnX3plcm8oc3RydWN0IGxpbnV4X2JpbnBybQog
CQkJCWNvbnRpbnVlOwogCQkJb2Zmc2V0ID0gMDsKIAkJCWt1bm1hcF9hdG9taWMoa2FkZHIsIEtN
X1VTRVIwKTsKKwkJCXB1dF9wYWdlKHBhZ2UpOwogaW5zaWRlOgotCQkJcGFnZSA9IGJwcm0tPnBh
Z2VbYnBybS0+cC9QQUdFX1NJWkVdOworCQkJcmV0ID0gZ2V0X3VzZXJfcGFnZXMoY3VycmVudCwg
YnBybS0+bW0sIGJwcm0tPnAsCisJCQkJCSAgICAgMSwgMCwgMSwgJnBhZ2UsIE5VTEwpOworCQkJ
aWYgKHJldCA8PSAwKSB7CisJCQkJcmV0ID0gLUVGQVVMVDsKKwkJCQlnb3RvIG91dDsKKwkJCX0K
IAkJCWthZGRyID0ga21hcF9hdG9taWMocGFnZSwgS01fVVNFUjApOwogCQl9CiAJCWt1bm1hcF9h
dG9taWMoa2FkZHIsIEtNX1VTRVIwKTsKIAkJYnBybS0+YXJnYy0tOworCQlyZXQgPSAwOwogCX0K
Kworb3V0OgorCXJldHVybiByZXQ7CiB9CiAKIEVYUE9SVF9TWU1CT0wocmVtb3ZlX2FyZ196ZXJv
KTsKQEAgLTEwMzQsNyArMTAxOSw3IEBAICNpZmRlZiBfX2FscGhhX18KIAkJZnB1dChicHJtLT5m
aWxlKTsKIAkJYnBybS0+ZmlsZSA9IE5VTEw7CiAKLQkgICAgICAgIGxvYWRlciA9IFBBR0VfU0la
RSpNQVhfQVJHX1BBR0VTLXNpemVvZih2b2lkICopOworCSAgICAgICAgbG9hZGVyID0gYnBybS0+
dm1hLT52bV9lbmQgLSBzaXplb2Yodm9pZCAqKTsKIAogCQlmaWxlID0gb3Blbl9leGVjKCIvc2Jp
bi9sb2FkZXIiKTsKIAkJcmV0dmFsID0gUFRSX0VSUihmaWxlKTsKQEAgLTExMjcsNyArMTExMiw2
IEBAIGludCBkb19leGVjdmUoY2hhciAqIGZpbGVuYW1lLAogCXN0cnVjdCBsaW51eF9iaW5wcm0g
KmJwcm07CiAJc3RydWN0IGZpbGUgKmZpbGU7CiAJaW50IHJldHZhbDsKLQlpbnQgaTsKIAogCXJl
dHZhbCA9IC1FTk9NRU07CiAJYnBybSA9IGt6YWxsb2Moc2l6ZW9mKCpicHJtKSwgR0ZQX0tFUk5F
TCk7CkBAIC0xMTQxLDI1ICsxMTI1LDE5IEBAIGludCBkb19leGVjdmUoY2hhciAqIGZpbGVuYW1l
LAogCiAJc2NoZWRfZXhlYygpOwogCi0JYnBybS0+cCA9IFBBR0VfU0laRSpNQVhfQVJHX1BBR0VT
LXNpemVvZih2b2lkICopOwotCiAJYnBybS0+ZmlsZSA9IGZpbGU7CiAJYnBybS0+ZmlsZW5hbWUg
PSBmaWxlbmFtZTsKIAlicHJtLT5pbnRlcnAgPSBmaWxlbmFtZTsKLQlicHJtLT5tbSA9IG1tX2Fs
bG9jKCk7Ci0JcmV0dmFsID0gLUVOT01FTTsKLQlpZiAoIWJwcm0tPm1tKQotCQlnb3RvIG91dF9m
aWxlOwogCi0JcmV0dmFsID0gaW5pdF9uZXdfY29udGV4dChjdXJyZW50LCBicHJtLT5tbSk7Ci0J
aWYgKHJldHZhbCA8IDApCi0JCWdvdG8gb3V0X21tOworCXJldHZhbCA9IGJwcm1fbW1faW5pdChi
cHJtKTsKKwlpZiAocmV0dmFsKQorCQlnb3RvIG91dF9maWxlOwogCi0JYnBybS0+YXJnYyA9IGNv
dW50KGFyZ3YsIGJwcm0tPnAgLyBzaXplb2Yodm9pZCAqKSk7CisJYnBybS0+YXJnYyA9IGNvdW50
KGFyZ3YsIE1BWF9BUkdfU1RSSU5HUyk7CiAJaWYgKChyZXR2YWwgPSBicHJtLT5hcmdjKSA8IDAp
CiAJCWdvdG8gb3V0X21tOwogCi0JYnBybS0+ZW52YyA9IGNvdW50KGVudnAsIGJwcm0tPnAgLyBz
aXplb2Yodm9pZCAqKSk7CisJYnBybS0+ZW52YyA9IGNvdW50KGVudnAsIE1BWF9BUkdfU1RSSU5H
Uyk7CiAJaWYgKChyZXR2YWwgPSBicHJtLT5lbnZjKSA8IDApCiAJCWdvdG8gb3V0X21tOwogCkBA
IC0xMTg2LDggKzExNjQsNiBAQCBpbnQgZG9fZXhlY3ZlKGNoYXIgKiBmaWxlbmFtZSwKIAogCXJl
dHZhbCA9IHNlYXJjaF9iaW5hcnlfaGFuZGxlcihicHJtLHJlZ3MpOwogCWlmIChyZXR2YWwgPj0g
MCkgewotCQlmcmVlX2FyZ19wYWdlcyhicHJtKTsKLQogCQkvKiBleGVjdmUgc3VjY2VzcyAqLwog
CQlzZWN1cml0eV9icHJtX2ZyZWUoYnBybSk7CiAJCWFjY3RfdXBkYXRlX2ludGVncmFscyhjdXJy
ZW50KTsKQEAgLTExOTYsMTkgKzExNzIsMTIgQEAgaW50IGRvX2V4ZWN2ZShjaGFyICogZmlsZW5h
bWUsCiAJfQogCiBvdXQ6Ci0JLyogU29tZXRoaW5nIHdlbnQgd3JvbmcsIHJldHVybiB0aGUgaW5v
ZGUgYW5kIGZyZWUgdGhlIGFyZ3VtZW50IHBhZ2VzKi8KLQlmb3IgKGkgPSAwIDsgaSA8IE1BWF9B
UkdfUEFHRVMgOyBpKyspIHsKLQkJc3RydWN0IHBhZ2UgKiBwYWdlID0gYnBybS0+cGFnZVtpXTsK
LQkJaWYgKHBhZ2UpCi0JCQlfX2ZyZWVfcGFnZShwYWdlKTsKLQl9Ci0KIAlpZiAoYnBybS0+c2Vj
dXJpdHkpCiAJCXNlY3VyaXR5X2Jwcm1fZnJlZShicHJtKTsKIAogb3V0X21tOgogCWlmIChicHJt
LT5tbSkKLQkJbW1kcm9wKGJwcm0tPm1tKTsKKwkJbW1wdXQgKGJwcm0tPm1tKTsKIAogb3V0X2Zp
bGU6CiAJaWYgKGJwcm0tPmZpbGUpIHsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvYmluZm10
cy5oIGIvaW5jbHVkZS9saW51eC9iaW5mbXRzLmgKaW5kZXggYzFlODJjNS4uM2UxMTU5MSAxMDA2
NDQKLS0tIGEvaW5jbHVkZS9saW51eC9iaW5mbXRzLmgKKysrIGIvaW5jbHVkZS9saW51eC9iaW5m
bXRzLmgKQEAgLTUsMTIgKzUsOSBAQCAjaW5jbHVkZSA8bGludXgvY2FwYWJpbGl0eS5oPgogCiBz
dHJ1Y3QgcHRfcmVnczsKIAotLyoKLSAqIE1BWF9BUkdfUEFHRVMgZGVmaW5lcyB0aGUgbnVtYmVy
IG9mIHBhZ2VzIGFsbG9jYXRlZCBmb3IgYXJndW1lbnRzCi0gKiBhbmQgZW52ZWxvcGUgZm9yIHRo
ZSBuZXcgcHJvZ3JhbS4gMzIgc2hvdWxkIHN1ZmZpY2UsIHRoaXMgZ2l2ZXMKLSAqIGEgbWF4aW11
bSBlbnYrYXJnIG9mIDEyOGtCIHcvNEtCIHBhZ2VzIQotICovCi0jZGVmaW5lIE1BWF9BUkdfUEFH
RVMgMzIKKy8qIEZJWE1FOiBGaW5kIHJlYWwgbGltaXRzLCBvciBub25lLiAqLworI2RlZmluZSBN
QVhfQVJHX1NUUkxFTiAoUEFHRV9TSVpFICogMzIpCisjZGVmaW5lIE1BWF9BUkdfU1RSSU5HUyAw
eDdGRkZGRkZGCiAKIC8qIHNpemVvZihsaW51eF9iaW5wcm0tPmJ1ZikgKi8KICNkZWZpbmUgQklO
UFJNX0JVRl9TSVpFIDEyOApAQCAtMjIsNyArMTksNyBAQCAjaWZkZWYgX19LRVJORUxfXwogICov
CiBzdHJ1Y3QgbGludXhfYmlucHJtewogCWNoYXIgYnVmW0JJTlBSTV9CVUZfU0laRV07Ci0Jc3Ry
dWN0IHBhZ2UgKnBhZ2VbTUFYX0FSR19QQUdFU107CisJc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2
bWE7CiAJc3RydWN0IG1tX3N0cnVjdCAqbW07CiAJdW5zaWduZWQgbG9uZyBwOyAvKiBjdXJyZW50
IHRvcCBvZiBtZW0gKi8KIAlpbnQgc2hfYmFuZzsKQEAgLTY1LDcgKzYyLDcgQEAgZXh0ZXJuIGlu
dCByZWdpc3Rlcl9iaW5mbXQoc3RydWN0IGxpbnV4XwogZXh0ZXJuIGludCB1bnJlZ2lzdGVyX2Jp
bmZtdChzdHJ1Y3QgbGludXhfYmluZm10ICopOwogCiBleHRlcm4gaW50IHByZXBhcmVfYmlucHJt
KHN0cnVjdCBsaW51eF9iaW5wcm0gKik7Ci1leHRlcm4gdm9pZCByZW1vdmVfYXJnX3plcm8oc3Ry
dWN0IGxpbnV4X2JpbnBybSAqKTsKK2V4dGVybiBpbnQgX19tdXN0X2NoZWNrIHJlbW92ZV9hcmdf
emVybyhzdHJ1Y3QgbGludXhfYmlucHJtICopOwogZXh0ZXJuIGludCBzZWFyY2hfYmluYXJ5X2hh
bmRsZXIoc3RydWN0IGxpbnV4X2JpbnBybSAqLHN0cnVjdCBwdF9yZWdzICopOwogZXh0ZXJuIGlu
dCBmbHVzaF9vbGRfZXhlYyhzdHJ1Y3QgbGludXhfYmlucHJtICogYnBybSk7CiAKQEAgLTgyLDYg
Kzc5LDcgQEAgI2RlZmluZSBFWFNUQUNLX0VOQUJMRV9YICAyCS8qIEVuYWJsZSBleAogZXh0ZXJu
IGludCBzZXR1cF9hcmdfcGFnZXMoc3RydWN0IGxpbnV4X2JpbnBybSAqIGJwcm0sCiAJCQkgICB1
bnNpZ25lZCBsb25nIHN0YWNrX3RvcCwKIAkJCSAgIGludCBleGVjdXRhYmxlX3N0YWNrKTsKK2V4
dGVybiBpbnQgYnBybV9tbV9pbml0KHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0pOwogZXh0ZXJu
IGludCBjb3B5X3N0cmluZ3Nfa2VybmVsKGludCBhcmdjLGNoYXIgKiogYXJndixzdHJ1Y3QgbGlu
dXhfYmlucHJtICpicHJtKTsKIGV4dGVybiB2b2lkIGNvbXB1dGVfY3JlZHMoc3RydWN0IGxpbnV4
X2JpbnBybSAqYmlucHJtKTsKIGV4dGVybiBpbnQgZG9fY29yZWR1bXAobG9uZyBzaWduciwgaW50
IGV4aXRfY29kZSwgc3RydWN0IHB0X3JlZ3MgKiByZWdzKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUv
bGludXgvbW0uaCBiL2luY2x1ZGUvbGludXgvbW0uaAppbmRleCAyNjE0NjYyLi40ZjMwZTI4IDEw
MDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L21tLmgKKysrIGIvaW5jbHVkZS9saW51eC9tbS5oCkBA
IC03MzgsNyArNzM4LDYgQEAgI2VuZGlmCiAKIGV4dGVybiBpbnQgbWFrZV9wYWdlc19wcmVzZW50
KHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBlbmQpOwogZXh0ZXJuIGludCBhY2Nl
c3NfcHJvY2Vzc192bShzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywgdW5zaWduZWQgbG9uZyBhZGRy
LCB2b2lkICpidWYsIGludCBsZW4sIGludCB3cml0ZSk7Ci12b2lkIGluc3RhbGxfYXJnX3BhZ2Uo
c3RydWN0IHZtX2FyZWFfc3RydWN0ICosIHN0cnVjdCBwYWdlICosIHVuc2lnbmVkIGxvbmcpOwog
CiBpbnQgZ2V0X3VzZXJfcGFnZXMoc3RydWN0IHRhc2tfc3RydWN0ICp0c2ssIHN0cnVjdCBtbV9z
dHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIHN0YXJ0LAogCQlpbnQgbGVuLCBpbnQgd3JpdGUsIGlu
dCBmb3JjZSwgc3RydWN0IHBhZ2UgKipwYWdlcywgc3RydWN0IHZtX2FyZWFfc3RydWN0ICoqdm1h
cyk7CkBAIC03NTQsNiArNzUzLDkgQEAgaW50IEZBU1RDQUxMKHNldF9wYWdlX2RpcnR5KHN0cnVj
dCBwYWdlIAogaW50IHNldF9wYWdlX2RpcnR5X2xvY2soc3RydWN0IHBhZ2UgKnBhZ2UpOwogaW50
IGNsZWFyX3BhZ2VfZGlydHlfZm9yX2lvKHN0cnVjdCBwYWdlICpwYWdlKTsKIAorZXh0ZXJuIHVu
c2lnbmVkIGxvbmcgbW92ZV92bWEoc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEsCisJCXVuc2ln
bmVkIGxvbmcgb2xkX2FkZHIsIHVuc2lnbmVkIGxvbmcgb2xkX2xlbiwKKwkJdW5zaWduZWQgbG9u
ZyBuZXdfbGVuLCB1bnNpZ25lZCBsb25nIG5ld19hZGRyKTsKIGV4dGVybiB1bnNpZ25lZCBsb25n
IGRvX21yZW1hcCh1bnNpZ25lZCBsb25nIGFkZHIsCiAJCQkgICAgICAgdW5zaWduZWQgbG9uZyBv
bGRfbGVuLCB1bnNpZ25lZCBsb25nIG5ld19sZW4sCiAJCQkgICAgICAgdW5zaWduZWQgbG9uZyBm
bGFncywgdW5zaWduZWQgbG9uZyBuZXdfYWRkcik7CmRpZmYgLS1naXQgYS9rZXJuZWwvYXVkaXRz
Yy5jIGIva2VybmVsL2F1ZGl0c2MuYwppbmRleCA0MmYyZjExLi5kMjVjNzNlIDEwMDY0NAotLS0g
YS9rZXJuZWwvYXVkaXRzYy5jCisrKyBiL2tlcm5lbC9hdWRpdHNjLmMKQEAgLTE3NDgsNiArMTc0
OCwxMCBAQCBpbnQgX19hdWRpdF9pcGNfc2V0X3Blcm0odW5zaWduZWQgbG9uZyBxCiAKIGludCBh
dWRpdF9icHJtKHN0cnVjdCBsaW51eF9iaW5wcm0gKmJwcm0pCiB7CisJLyogRklYTUU6IERvbid0
IGRvIGFueXRoaW5nIGZvciBub3cgdW50aWwgSSBmaWd1cmUgb3V0IGhvdyB0byBoYW5kbGUKKwkg
KiB0aGlzLiAgV2l0aCB0aGUgbGF0ZXN0IGNoYW5nZXMsIGttYWxsb2MgY291bGQgd2VsbCBmYWls
IHVuZGVyIGdvb2QKKwkgKiBzY2VuYXJpb3MuICovCisjaWYgMAogCXN0cnVjdCBhdWRpdF9hdXhf
ZGF0YV9leGVjdmUgKmF4OwogCXN0cnVjdCBhdWRpdF9jb250ZXh0ICpjb250ZXh0ID0gY3VycmVu
dC0+YXVkaXRfY29udGV4dDsKIAl1bnNpZ25lZCBsb25nIHAsIG5leHQ7CkBAIC0xNzc1LDYgKzE3
NzksNyBAQCBpbnQgYXVkaXRfYnBybShzdHJ1Y3QgbGludXhfYmlucHJtICpicHJtCiAJYXgtPmQu
dHlwZSA9IEFVRElUX0VYRUNWRTsKIAlheC0+ZC5uZXh0ID0gY29udGV4dC0+YXV4OwogCWNvbnRl
eHQtPmF1eCA9ICh2b2lkICopYXg7CisjZW5kaWYKIAlyZXR1cm4gMDsKIH0KIApkaWZmIC0tZ2l0
IGEvbW0vbXJlbWFwLmMgYi9tbS9tcmVtYXAuYwppbmRleCA5Yzc2OWZhLi45NTdiNmFmIDEwMDY0
NAotLS0gYS9tbS9tcmVtYXAuYworKysgYi9tbS9tcmVtYXAuYwpAQCAtMTU1LDcgKzE1NSw3IEBA
IHN0YXRpYyB1bnNpZ25lZCBsb25nIG1vdmVfcGFnZV90YWJsZXMoc3QKIAlyZXR1cm4gbGVuICsg
b2xkX2FkZHIgLSBvbGRfZW5kOwkvKiBob3cgbXVjaCBkb25lICovCiB9CiAKLXN0YXRpYyB1bnNp
Z25lZCBsb25nIG1vdmVfdm1hKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLAordW5zaWduZWQg
bG9uZyBtb3ZlX3ZtYShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKIAkJdW5zaWduZWQgbG9u
ZyBvbGRfYWRkciwgdW5zaWduZWQgbG9uZyBvbGRfbGVuLAogCQl1bnNpZ25lZCBsb25nIG5ld19s
ZW4sIHVuc2lnbmVkIGxvbmcgbmV3X2FkZHIpCiB7Cg==
------=_Part_8824_9060361.1160525109224--
