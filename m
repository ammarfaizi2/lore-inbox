Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261890AbTKGXZw (ORCPT <rfc822;willy@w.ods.org>);
	Fri, 7 Nov 2003 18:25:52 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261882AbTKGWTw
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Fri, 7 Nov 2003 17:19:52 -0500
Received: from 153.Red-213-4-13.pooles.rima-tde.net ([213.4.13.153]:18441 "EHLO
	kerberos.felipe-alfaro.com") by vger.kernel.org with ESMTP
	id S264350AbTKGOGF (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Fri, 7 Nov 2003 09:06:05 -0500
Subject: 2.6.0-test9: ACPI suspend problems with acpi_ps_parse_loop() and
	ascending callbacks
From: Felipe Alfaro Solana <felipe_alfaro@linuxmail.org>
To: len.brown@intel.com
Cc: acpi-devel@lists.sourceforge.net,
       Linux Kernel Mailinglist <linux-kernel@vger.kernel.org>
Content-Type: multipart/mixed; boundary="=-RDYgymAgtY5wjnW7Vcuo"
Message-Id: <1068213955.762.25.camel@teapot.felipe-alfaro.com>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.4.5 (1.4.5-7) 
Date: Fri, 07 Nov 2003 15:05:55 +0100
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


--=-RDYgymAgtY5wjnW7Vcuo
Content-Type: text/plain
Content-Transfer-Encoding: 7bit

Hi!

I've been playing with ACPI suspend (S3) on my Packard Bell Chrom@
laptop for a few weeks. 

To make the system enter S3, I do:

# echo -n mem > /sys/power/state

Most of the time, it works flawlessly, but from time to time, while
trying to suspend to S3, the system is suspended incorrectly. By
incorrectly I mean:

1. The system seems to enter S3 before completing proper kernel
suspension, that is, freezing processes, sending power events to
buses/drivers, etc. To be more concrete, upon resume, the only message
shown on the screen is:

Stopping tasks: ===================================|

No additional PM events are written to the screen, like those that are
dumped when the system enters S3 appropiately.

2. The harddisk is not properly spun down, but instead, it seems that
power is cut out. I'm sure about this since I can clearly hear the disk
heads making the typical "click" sound when they are being parked. This
"click" sound should only be heard when the system shuts down (init 0)
or when I remove the power plug.

3. The system seems to be able to resume. The screen lits up, but the
only message that appears is the one I described above. Then, the system
sits idle (hung up) or simply reboots after a few seconds.

So far, I've been trying to nail down where the problem lies. When the
system enters S3 correctly, I can see that _PTS, _ADR and _GST
namespaces are evaluated by the ACPI subsystem. However, from time to
time, the system doesn't follow the predefined steps and prematurely and
inconsistently enters S3 sleep (before it should).

Given the following code fragment from drivers/acpi/parsers/nsparse.c
from the acpi_ps_parse_loop() function (starting at line ~830):

                /* This op complete, notify the dispatcher */

                if (walk_state->ascending_callback != NULL) {
                        walk_state->op    = op;
                        walk_state->opcode = op->common.aml_opcode;

                        printk("acpi_ps_parse_loop(): calling
walk_state->ascending_callback...\n");
                        status = walk_state->ascending_callback
(walk_state);
                        printk("acpi_ps_parse_loop(): calling
acpi_ps_next_parse_state...\n");
                        status = acpi_ps_next_parse_state (walk_state,
op, status);
                        if (status == AE_CTRL_PENDING) {
                                status = AE_OK;
                                goto close_this_op;
                        }
                }


I have extracted the following conclusions:

1. The problem is related to an ascending callback being invoked from
the acpi_ps_parse_loop() function. The call is made in the code snippet
from above.

2. When acpi_pm_prepare() is called, it seems the ACPI subsystem starts
evaluating the _PTS namespace. At some point, the _ADR namespace is
evaluated from within _PTS. Then, a control method must be executed and
thus, acpi_psx_execute() is invoked. acpi_psx_execute() calls
acpi_ps_parse_aml() which in turn calls acpi_ps_parse_loop(). Well, it's
inside the code fragment shown above where the system stops executing
code and then enters S3 before it should.

In fact, the first printk() displays its output, then
wait_state->ascending_callback() is called and then, control does never
return to the following line (the second printk). In fact, after
invoking walk_state->ascending_callback() the system enters S3 without
properly finalizing the suspend sequence.

I'm no ACPI expert, so I've been unable to track down what function is
being pointed to by walk_state->ascending_callback(). Also, I don't
understand why control is never returned after invoking the ascending
callback function.

I hope someone from this list could throuw some light on this issue.
I have attached a copy of /proc/acpi/dsdt and /proc/acpi/fadt to see if
someone can help me in figuring out what's going on.

Thank you very much!

   Felipe Alfaro


--=-RDYgymAgtY5wjnW7Vcuo
Content-Disposition: attachment; filename=dsdt
Content-Type: application/octet-stream; name=dsdt
Content-Transfer-Encoding: base64

RFNEVFUzAAABfk5FQwAAAE5EMDAwMDIwAQAAAE1TRlQKAAABEBNcX1BSX1uDC0NQVTABEAQAAAYI
QkRMWQoBCEFTQ0MKAwhQTUJTCwAEW4BQV1JHAQsABApAW4EcUFdSRwEAIFNDSUYBAEcFAAFHUElS
AVJJRU4BW4EXUFdSRwEAQBQAAlRQT0wBABZMUE9MAVuBFVBXUkcBAEAYAAVHSTA1AUdJMDYBW4Ea
UFdSRwEASBoABEdPMTIBR08xMwFHTzE0AQhTTUJTC0AEW4BTTUIwAQtABAoQW4EuU01CMAFIU1RT
CFNTVFMISFNUQwhIQ01ECEhBRFIISERUMAhIRFQxCEJMS0QIW4ENU01CMAEAKEhEVFcQFB5XVFNC
AHAK/2eiEGd2Z6ALe0hTVFMKAgCkZ6QKABQ6U0NNRARwCgVgoi9gcGhIQURScGlIQ01EcGpIRFRX
cAr/SFNUU3BrSFNUQ6AJV1RTQnAKAGChA3ZgFBBTQllUAlNDTURoaQoACkQUD1dCWVQDU0NNRGhp
agpIFA9XV1JEA1NDTURoaWoKTBRBBldCTEsEcAoFYKJFBWBwaEhBRFJwaUhDTURwSFNUQ2BwamBw
CgBhohBgcIOIa2EAQkxLRHZgdWFwakhEVDBwSFNUQ2BwCv9IU1RTcApUSFNUQ6AJV1RTQnAKAGCh
A3ZgFBpSU0JUAn1oCgFoU0NNRGhpCgAKRKRIRFQwFBpSQllUAn1oCgFoU0NNRGhpCgAKSKRIRFQw
FBpSV1JEAn1oCgFoU0NNRGhpCgAKTKRIRFRXFEQHUkJMSwNwCgVgoixgfWgKAUhBRFJwaUhDTURw
Cv9IU1RTcApUSFNUQ6AJV1RTQnAKAGChA3ZgcEhTVENgcEhEVDBgcmAKAWcIUkJVRhECZ3AKAFJC
VUZwCgBhohJgcEJMS0SIUkJVRmEAdmB1YaRSQlVGCFxfUzBfEgoECgUKBQoACgAIXF9TM18SCgQK
AQoBCgAKAAhcX1M0XxIKBAoACgAKAAoACFxfUzVfEgoECgAKAAoACgBbgSZQV1JHAQBAGkhQVzEB
AAJTU0dSAUhQVzABRkxQVwEAFEtCUFcBCEZMUFABCFZGUFABFAdJTklfAKMULU1DVEgBcAoAYKAK
k4doChFwCgFgoAqTh2gKJ3AKAmCgCpOHaAoUcAoDYKRgEIqmAlxfU0JfW4KEQwJOUlRICF9ISUQM
QdAKAwhfQURSCgAIQ1JTXxFMCAqIiA0AAgwAAAAAAP8AAAAAAUcB+Az4DAEIiA0AAQwDAAAAAPcM
AAD4DIgNAAEMAwAAAA3//wAAAPOHFwAADAMAAAAAAAAKAP//CwAAAAAAAAACAIcXAAAMAwAAAAAA
sAwA//8NAAAAAAAAUAEAhxcAAAwDAAAAAAAAACD//9//AAAAAAAA4N95AFuAVE1FTQIKZwoBW4EL
VE1FTQFNRU1UCFuAUE1DUgIKegoBW4ELUE1DUgFQQ0lSARQQTURFVAB5TUVNVAoXYKRgFBFURkNT
AHRNREVUC8B/YKRgW4BTUEFEAgrQCghbgQ9TUEFEAQA4AAdQUzJFAQhGTEFHCgEIT1NGTAoCFEAG
X0lOSQBcSU5JX6Abk01DVEhcX09TXwoBcAoBRkxBR3AKAU9TRkygG5NNQ1RIXF9PU18KAnAKAUZM
QUdwCgJPU0ZMoBuTTUNUSFxfT1NfCgNwCgBGTEFHcAoDT1NGTBQSX1JFRwKgC5NoCgJwaEZMQUcU
Pl9DUlMAoDJGTEFHikNSU18KdlRNRU2KQ1JTXwqCVExFTnBNREVUVE1FTXQMAADg/1RNRU1UTEVO
pENSU18IX1BSVBJPDQoSFQQM//8HAAoDXC5fU0JfTE5LRAoAEhUEDP//CQAKAFwuX1NCX0xOS0IK
ABIVBAz//wsACgBcLl9TQl9MTktDCgASFQQM//8LAAoBXC5fU0JfTE5LRAoAEhUEDP//AQAKAFwu
X1NCX0xOS0EKABIVBAz//w8ACgBcLl9TQl9MTktDCgASFQQM//8PAAoBXC5fU0JfTE5LRAoAEhUE
DP//DAAKAFwuX1NCX0xOS0EKABIVBAz//wwACgFcLl9TQl9MTktCCgASFQQM//8MAAoCXC5fU0Jf
TE5LQwoAW4IPUE1VXwhfQURSDAMABwBbgoDeAVNCUkcIX0FEUgwAAAcAW4BQSVgwAgpgCgQQRC1c
X1NCX1uBKVwvBF9TQl9OUlRIU0JSR1BJWDABUElSQQhQSVJCCFBJUkMIUElSRAgIQlVGQREJCgYj
AQAYeQBbgkIKTE5LQQhfSElEDEHQDA8IX1VJRAoBFBlfU1RBAHtQSVJBCoBgoAVgpAoBoQSkCgsI
X1BSUxEJCgYjAAQYeQAUDV9ESVMAcAqAUElSQRQoX0NSUwCLQlVGQQoBSVJBMHtQSVJBCg9gcAFh
eWFgSVJBMKRCVUZBFBxfU1JTAYtoCgFJUkFfgklSQV9gdmBwYFBJUkEUDV9JTkkAcAoAUElSQVuC
QgpMTktCCF9ISUQMQdAMDwhfVUlECgIUGV9TVEEAe1BJUkIKgGCgBWCkCgGhBKQKCwhfUFJTEQkK
BiMgABh5ABQNX0RJUwBwCoBQSVJCFChfQ1JTAItCVUZBCgFJUkEwe1BJUkIKD2BwAWF5YWBJUkEw
pEJVRkEUHF9TUlMBi2gKAUlSQV+CSVJBX2B2YHBgUElSQhQNX0lOSQBwCgBQSVJCW4JFCkxOS0MI
X0hJRAxB0AwPCF9VSUQKAxQZX1NUQQB7UElSQwqAYKAFYKQKAaEEpAoLCF9QUlMRDAoJMQUjoAQY
OHkAFA1fRElTAHAKgFBJUkMUKF9DUlMAi0JVRkEKAUlSQTB7UElSQwoPYHABYXlhYElSQTCkQlVG
QRQcX1NSUwGLaAoBSVJBX4JJUkFfYHZgcGBQSVJDFA1fSU5JAHAKAFBJUkNbgkIKTE5LRAhfSElE
DEHQDA8IX1VJRAoEFBlfU1RBAHtQSVJECoBgoAVgpAoBoQSkCgsIX1BSUxEJCgYjAAIYeQAUDV9E
SVMAcAqAUElSRBQoX0NSUwCLQlVGQQoBSVJBMHtQSVJECg9gcAFheWFgSVJBMKRCVUZBFBxfU1JT
AYtoCgFJUkFfgklSQV9gdmBwYFBJUkQUDV9JTkkAcAoAUElSRFuCShZTWVNSCF9ISUQMQdAMAhQh
X1NUQQCgF5KUXC8DX1NCX05SVEhPU0ZMCgKkCg+kCgAIXC5fU0JfTVNDMRFOBQpaSxAAEEsiAB5L
RAAcS2MAAUtlAAFLZwAJS3IADkuAAAFLhAADS4gAAUuMAANLkAAQS6IAHkvgABBHAdAE0AQAAkcB
AAQABABARwFABEAEABBHAXADcAMAAnkACFwuX1NCX01TQzIRRgQKQksQABBLIgAeS2MAAUtlAAFL
ZwAJS+AAEEcB0ATQBAACRwEAAAAAAAJHAQAAAAAAMEcBQARABAAQRwFwA3ADAAJ5ABRLB19DUlMA
oBmSlFwvA19TQl9OUlRIT1NGTAoCpE1TQzGhSQWLTVNDMgoiUE0wMItNU0MyCiRQTTAxi01TQzIK
KlBNMTCLTVNDMgosUE0xMXILAAQKBlBNMDBwUE0wMFBNMDFyCwAEChBQTTEwcFBNMTBQTTExpE1T
QzJbgkELTUVNXwhfSElEDEHQDAEUIV9TVEEAoBeSlFwvA19TQl9OUlRIT1NGTAoCpAoPpAoACE1F
TTERTgQKSoYJAAEAAAAAAAAKAIYJAAAAAA4AAAACAIYJAAEAABAAAADwH4YJAAAAAMD+ABAAAIYJ
AAAAAOD+ABAAAIYJAAAAAPj/AAAIAHkAFCpfQ1JTAIpNRU0xCiBUT1AxoBNGTEFHdE1ERVQMAAAQ
AFRPUDGkTUVNMVuCI1BJQ18IX0hJRAtB0AhfQ1JTERAKDUsgAAJLoAACIgQAeQBbgjVETUFECF9I
SUQMQdACAAhfQ1JTESAKHSoQBEsAABBLgQADS4cAAUuJAANLjwABS8AAIHkAW4IhVE1SXwhfSElE
DEHQAQAIX0NSUxEMCglLQAAEIgEAeQBbgiFSVENfCF9ISUQMQdALAAhfQ1JTEQwKCUtwAAIiAAF5
AFuCHlNQS1IIX0hJRAxB0AgACF9DUlMRCQoGS2EAAXkAW4IhQ09QUghfSElEDEHQDAQIX0NSUxEM
CglL8AAQIgAgeQBbgkcGUFMyTQhfSElEDAapAgAIX0NJRAxB0A8OCF9VSUQKABQ3X1NUQQCgK1wv
A19TQl9OUlRIUFMyRaAVkJNcR0kwNQoBk1xHSTA2CgGkCg+hBKQKAKEEpAoACF9DUlMRCAoFIgAQ
eQBbgkcGUDJNSQhfSElEDAapAgAIX0NJRAxB0A8TCF9VSUQKARQ3X1NUQQCgK1wvA19TQl9OUlRI
UFMyRaAVkJNcR0kwNQoBk1xHSTA2CgGkCgChBKQKD6EEpAoACF9DUlMRCAoFIgAQeQBbgkgEUFMy
SwhfSElEDEHQAyAIX0NSUxEQCg1LYAABS2QAASICAHkAFCFfU1RBAKAVkJNcR0kwNQoBk1xHSTA2
CgGkCg+hBKQKAFuCSARQMktJCF9ISUQMQdADAwhfQ1JTERAKDUtgAAFLZAABIgIAeQAUIV9TVEEA
oBWQk1xHSTA1CgGTXEdJMDYKAaQKAKEEpAoPW4KKEgFFSU9fCF9ISUQMQdAKBluAXC8EX1NCX05S
VEhTQlJHUElYMgIKkAoCW4EaXC8EX1NCX05SVEhTQlJHUElYMgFURE1BEFuAXC8EX1NCX05SVEhT
QlJHUElYMwIKsAoBW4EaXC8EX1NCX05SVEhTQlJHUElYMwFHQ0ZHCFuAXC8EX1NCX05SVEhQTVVf
UElYNAIKUAoEW4EaXC8EX1NCX05SVEhQTVVfUElYNAFEQUNLIFuAXC8EX1NCX05SVEhQTVVfUElY
NQIKUAowW4FICFwvBF9TQl9OUlRIUE1VX1BJWDUBRENLMAhEQ0sxCERDSzIIAEgEUlNBMAhSU0Ex
CFJTQTIIUlNBMwhSU0IwEFJTQjIIUlNCMwhSU0MwEFJTQzIIUlNDMwhHRFIyEEdETTIIAChHRFIz
EEdETTMIAChHRFI0EEdETTQIAAhHRFI1EEdETTUICFNUQkwSRAgJEgIAEgIAEgIAEgIAEikNCyAC
C0ACC2ACC4ACCwADCxADCyADCzADCzAFCwQGC4AOC0APCwACEggCC/ADC3ADEhoIC/gDC/gCCyAC
CygCCzgCC+gCCzgDC+gDEhoIC/gDC/gCCyACCygCCzgCC+gCCzgDC+gDEgsDC7wDC3gDC3gCCERF
VlMSQyYJEgIAEgIAEgIAEgIAEkAODRIQBwoACmAKAAoICgAKAgoDEhAHCiAKYAoACggKAAoCCgMS
EAcKQApgCgAKCAoACgIKAxIQBwpgCmAKAAoICgAKAgoDEhAHCgAKBgoACgEKAAoQCgUSEAcKAgoG
CgAKAQoAChAKBRIQBwoECgYKAAoBCgAKEAoFEhAHCgYKBgoACgEKAAoQCgUSEAcKAAoDCgEKgAoA
CgEKBhIQBwoBCgMKAQqACgAKAQoGEhAHCgIKAwoBCoAKAAoBCgYSEAcKAwoDCgEKgAoACgEKBhIQ
BwoQChAKAAoQCgAKgAoGEiQCEhAHCgAKEAoGChAKCwogCgYSEAcKEAoQCgYKEAoLCiAKBhJLCAgS
EAcKAAoHCgkKQAoLCggKCRIQBwoBCgcKCQpACgsKCAoJEhAHCgIKBwoJCkAKCwoICgkSEAcKAwoH
CgkKQAoLCggKCRIQBwoECgcKCQpACgsKCAoJEhAHCgUKBwoJCkAKCwoICgkSEAcKBgoHCgkKQAoL
CggKCRIQBwoHCgcKCQpACgsKCAoJEksICBIQBwoACnAKCQoBCgwKgAoJEhAHChAKcAoJCgEKDAqA
CgkSEAcKIApwCgkKAQoMCoAKCRIQBwowCnAKCQoBCgwKgAoJEhAHCkAKcAoJCgEKDAqACgkSEAcK
UApwCgkKAQoMCoAKCRIQBwpgCnAKCQoBCgwKgAoJEhAHCnAKcAoJCgEKDAqACgkSNQMSEAcKAAoG
CgYKBAoMCoAKAxIQBwoCCgYKBgoECgwKgAoDEhAHCgQKBgoGCgQKDAqACgMIUk9VVBIiEAoACgAK
AAoACgAKAAoACgAKAAoACgAKAAoACgAKAAoAFEwrUlJJTwSgCJBHQ0ZHCgKhBKQKAAhMU1RTCggI
TFNURwoPoByUaExTVFOgCZRoTFNUR6QAoQqkUkdOUmhpamtwiYOIU1RCTGgAAWoACgAKAGagBpNm
/6QBcFJTQTCIUk9VVAoAAHBSU0ExiFJPVVQKAQBwUlNBMohST1VUCgIAcFJTQTOIUk9VVAoDAHBS
U0IwiFJPVVQKBABwUlNCMohST1VUCgUAcFJTQjOIUk9VVAoGAHBSU0MwiFJPVVQKBwBwUlNDMohS
T1VUCggAcFJTQzOIUk9VVAoJAHBEQ0swiFJPVVQKCgBwRENLMYhST1VUCgsAcERDSzKIUk9VVAoM
AHCDiIOIg4hERVZTaABmAAoAAGBwg4iDiIOIREVWU2gAZgAKAQBhcIOIg4iDiERFVlNoAGYACgIA
YnCDiIOIg4hERVZTaABmAAoDAGNwg4iDiIOIREVWU2gAZgAKBABkcIOIg4iDiERFVlNoAGYACgUA
ZXCDiIOIg4hERVZTaABmAAoGAGagMGmAY2N7g4hST1VUZABjZ3BniFJPVVRkAIBlZXuDiFJPVVRm
AGVncGeIUk9VVGYAoU0EgGFhe4OIUk9VVGIAYWd9Z2CIUk9VVGIAfYOIUk9VVGQAY2dwZ4hST1VU
ZAB7R0NGRwoCZ6AWZ32DiFJPVVRmAGVncGeIUk9VVGYAcIOIUk9VVAoAAFJTQTBwg4hST1VUCgEA
UlNBMXCDiFJPVVQKAgBSU0EycIOIUk9VVAoDAFJTQTNwg4hST1VUCgQAUlNCMHCDiFJPVVQKBQBS
U0IycIOIUk9VVAoGAFJTQjNwg4hST1VUCgcAUlNDMHCDiFJPVVQKCABSU0MycIOIUk9VVAoJAFJT
QzNwg4hST1VUCgoARENLMHCDiFJPVVQKCwBEQ0sxcIOIUk9VVAoMAERDSzIIR0VORBJCCAcSFAkK
AAoPCgEKIAoBCkAKAQqACgESFAkKAgoPCgMKIAoDCkAKAwqACgMSEAcKAAoACgAKAAoACgAKABIQ
BwoFCg8KCQoQCgkKIAoEEhAHCgYKDwoKChAKCgpACgQSEAcKBwoPCgsKAAoLChAKCxIQBwoICg8K
DAoACgwKEAoMFEAvUkdOUgRwUlNCMIhST1VUCgAAcFJTQjKIUk9VVAoBAHBSU0MwiFJPVVQKAgBw
UlNDMohST1VUCgMAcFJTQTOIUk9VVAoEAHBHRFIyiFJPVVQKBQBwR0RSM4hST1VUCgYAcEdEUjSI
Uk9VVAoHAHBHRFI1iFJPVVQKCABwR0RNMohST1VUCgkAcEdETTOIUk9VVAoKAHBHRE00iFJPVVQK
CwBwR0RNNYhST1VUCgwACENBVEcKAAhNT0RFCgAIUE9SVAoACFNJWkUKAHBoQ0FUR3BpTU9ERXBq
UE9SVHBrU0laRXRDQVRHCglDQVRHcIOIUk9VVIOIiEdFTkRDQVRHAAoAAABicFBPUlSIUk9VVIOI
iEdFTkRDQVRHAAoAAAB7g4hST1VUg4iIR0VORENBVEcACgIAAAoPY3VjdFNJWkUKAWSBZGV6Cv9l
ZnBmiFJPVVSDiIhHRU5EQ0FURwAKAgAAoEIGfZNDQVRHCgCTQ0FURwoBAHCIUk9VVIOIiEdFTkRo
AAoIAABnoBZNT0RFe2eAg4iIR0VORGgACgcAAGehEH1ng4iIR0VORGgACgcAZ3BniFJPVVSDiIhH
RU5EaAAKCAAAcIhST1VUg4iIR0VORGgACgYAAGegFk1PREV7Z4CDiIhHRU5EaAAKBQAAZ6EQfWeD
iIhHRU5EaAAKBQBncGeIUk9VVIOIiEdFTkRoAAoGAABwiFJPVVQKAABSU0IwcIhST1VUCgEAUlNC
MnCIUk9VVAoCAFJTQzBwiFJPVVQKAwBSU0MycIhST1VUCgQAUlNBM3CIUk9VVAoFAEdEUjJwiFJP
VVQKBgBHRFIzcIhST1VUCgcAR0RSNHCIUk9VVAoIAEdEUjVwiFJPVVQKCQBHRE0ycIhST1VUCgoA
R0RNM3CIUk9VVAoLAEdETTRwiFJPVVQKDABHRE01cGiIUk9VVAoAAHBNT0RFiFJPVVQKAQBwYohS
T1VUCgIAcGOIUk9VVAoDAKRST1VUCERUQkwSQAUJEgIAEgIAEgIAEgIAEhQJCj8KAQoCCgAKBAoA
CggKEAogEgwECwAICgAKAAsACBICABICABIYBQwAAAIADAAAAgAMAAAiAAoADAAAQgAUJVJETUED
dmp5agoBYXkKA2Fif2IL//9icFRETUFge2BiVERNQQhcU1BJTwtwA1uAU01DMQFTUElPCgJbgRBT
TUMxAUlORFgIREFUQQhbhk4KSU5EWERBVEEBQ1IwMAhDUjAxCENSMDIIQ1IwMwhDUjA0CENSMDUI
Q1IwNghDUjA3CENSMDgIQ1IwOQhDUjBBCENSMEIIQ1IwQwhDUjBECENSMEUIQ1IwRggAQAhDUjIw
CENSMjEIQ1IyMghDUjIzCENSMjQIQ1IyNQhDUjI2CENSMjcIQ1IyOAhDUjI5CENSMkEIQ1IyQghD
UjJDCENSMkQIQ1IyRQhDUjJGCBQeRU5GRwBwClVJTkRYo6Ojo3ANSU8gZGVsYXkAWzEUHkVYRkcA
cAqqSU5EWKOjo6NwDUlPIGRlbGF5AFsxW4BcRkRDQwELcAMKCFuBDlxGRENDAQAgRkRDNAhbgkAh
RkRDMAhfSElEDEHQBwAUSwRfU1RBAEVORkdwQ1IyMGB7Q1IyNwrwYXtDUjI2CvBjRVhGR6AVlGAK
QKAMYaAJkpNjCvCkCg+kCg2hD6AIk2AKAKQKAKEEpAoNFDtfRElTAEVORkdwRkRDNGB7YAofYKAC
YKEecAogQ1IyMHtDUjI3Cg9DUjI3fUNSMjYK8ENSMjZFWEZHFEUMX0NSUwAIQlVGMBEjCiBHAfID
8gMBAkcB9AP0AwECRwH3A/cDAQEiQAAqBAB5AItCVUYwCgJJT0Jfi0JVRjAKBElPUl+MQlVGMAoZ
SVJRTIxCVUYwChxETUFMRU5GR3BDUjIwYHlgCgJhcmEKAmFwYUlPQl9wSU9CX0lPUl97Q1IyNwrw
YKAMk2AKAHAKAElSUUyhEHpgCgRhcAFieWJhSVJRTHtDUjI2CvBgemAKBGFwAWJ5YmFETUFMRVhG
R6RCVUYwCF9QUlMRJgojMQVHAfID8gMBAkcB9AP0AwECRwH3A/cDAQEiQAAqBAA4eQAURQhfU1JT
AYtoCgJJT0Jfi2gKGUlSUUyLaAocRE1BTEVORkdwSU9CX2B6YAoCYXBhQ1IyMHBDUjI3YHtgCg9g
gklSUUxhdmGgCZNhCgZwCgZheWEKBGF9YGFhcGFDUjI3e0NSMjYKD2B7RE1BTAoPY4JjYnZieWIK
BGF9YGFDUjI2RVhGR1uCSx1VQVIxCF9ISUQMQdAFAQhfVUlECgEIX1BSVxIGAgoKCgQUO19TVEEA
RU5GR3BDUjI0YHtDUjI4CvBhRVhGR6AOlGAKQKAFYaQKD6QKDaEPoAiTYAoApAoAoQSkCg0UIF9E
SVMARU5GR3AKIENSMjR7Q1IyOAoPQ1IyOEVYRkcUQQtfQ1JTAAhCVUYxERAKDUcB+AP4AwgIIhAA
eQCLQlVGMQoCSU9CX4tCVUYxCgRJT1Jfi0JVRjEKCUlSUUxFTkZHcENSMjRgoEYElGAKQHBDUjI0
YHlgCgJhcGFJT0JfcElPQl9JT1Jfe0NSMjgK8GCgDJNgCgBwCgBJUlFMoRB6YAoEYXABYnliYUlS
UUyhGHAKAElPQl9wSU9CX0lPUl9wCgBJUlFMRVhGR6RCVUYxCF9QUlMROgo3MQBHAfgD+AMICCIQ
ADEARwH4AvgCCAgiCAAxAEcB6APoAwgIIhAAMQBHAegC6AIICCIIADh5ABRIBl9TUlMBi2gKAklP
Ql+LaAoESU9SX4toCglJUlFMRU5GR3BJT0JfYHpgCgJhcGFDUjI0e0NSMjgKD2KgDpNJUlFMCgBw
YkNSMjihGIJJUlFMYHZgeWAKBGF9YWJicGJDUjI4RVhGR1uAVVBDUwEKcgoCW4EQVVBDUwFJTkRf
CERBVF8IW4ZFDElORF9EQVRfAQBACEJUMTAIQlQxMQhCVDEyCEJUMTMIAEAOQlQzMAhCVDMxCEJU
MzIIQlQzMwhCVDM0CEJUMzUIQlQzNghCVDM3CEJUMzgIQlQzOQhCVDNBCEJUM0IIQlQzQwhCVDNE
CEJUM0UIQlQzRghCVDQwCEJUNDEIQlQ0MghCVDQzCEJUNDQIQlQ0NQhCVDQ2CEJUNDcIQlQ0OAhC
VDQ5CEJUNEEIQlQ0QghCVDRDCEJUNEQIQlQ0RQhCVDRGCFsCXFNNQkYIXEZHRUMKAFuCSFRFQzBf
CF9ISUQMQdAMCRQLX0lOSQBcVURUVAhfQ1JTERUKEkcBYgBiAAABRwFmAGYAAAF5AAhfR1BFCgkU
El9SRUcCoAuTaAoDcGhGR0VDW4BFQ1JNAwqACoBbgUMVRUNSTQFOTVNHCFNMRUQEU0xQVARNT0RF
AUtZSU4BQUNNRAFQQk5TAVRNRTABVE1FMQEAAkxJRFMBTFNXMAFMV0tFAVdBS0YBTVdLRQFJTlRN
AUVYVE0BUENNTQFBRFBfAUFGTFQBQkFUMAFCQVQxAUJBVEwBQkFUQwEAAkJQVTAQQlBVMRBCREMw
EEJEQzEQQkZDMBBCRkMxEEJUQzAQQlRDMRBCRFYwEEJEVjEQQlNUMBBCU1QxEEJQUjAQQlBSMRBC
UkMwEEJSQzEQQlBWMBBCUFYxEEJUUDAQQlRQMRBCQ1cwEEJDVzEQQkNMMBBCQ0wxEEJDRzAQQkNH
MRBCRzIwEEJHMjEQQk1PMBBCTU8xEEJJRjAgQklGMSBCU04wIEJTTjEgQlRZMBBCVFkxEEFDMF8Q
UFNWXxBDUlRfEFRNUF8QTkFCVAIATgpCVFNUAxQTX1EwNACGXC5fU0JfQkFUMAqAFB9fUTA1AHAK
BURCRziGXC8DX1NCX05SVEhQUkIxCoAUQAhfUTA2AIZcLl9TQl9BQ19fCoBwCgBcLwVfU0JfTlJU
SFNCUkdFSU9fQlQzMHAKhFNXTUlwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzFge2AKAWCgBJNgAaEi
oCCTXC8DX1NCX05SVEhPU0ZMCgKGXC5fU0JfQkFUMAqAdUFQTVMUH19RMDcAcAoHREJHOFxVRFRU
hlwuX1RaX1RIUk0KgRRCJF9RMDgAcAoAXC8FX1NCX05SVEhTQlJHRUlPX0JUMzBwCoRTV01JcFwv
BV9TQl9OUlRIU0JSR0VJT19CVDMxYHtgCgRgemAKAmCgTA+TYAGgTgaTXC8DX1NCX05SVEhPU0ZM
CgFcLwNfU0JfQkFUMF9CSUZcLwNfU0JfQkFUMF9CU1RwCgFcRkFLRYZcLl9TQl9BQ19fCgCGXC5f
U0JfQkFUMAoAhlwuX1NCX0JBVDAKgIZcLl9TQl9CQVQwCoGgRgaTXC8DX1NCX05SVEhPU0ZMCgJc
LwNfU0JfQkFUMF9CSUZcLwNfU0JfQkFUMF9CU1SGXC5fU0JfQUNfXwoAhlwuX1NCX0JBVDAKAIZc
Ll9TQl9CQVQwCoCGXC5fU0JfQkFUMAqBoCCTXC8DX1NCX05SVEhPU0ZMCgOGXC5fU0JfQkFUMAoA
oUkPoE4Gk1wvA19TQl9OUlRIT1NGTAoBXC8DX1NCX0JBVDBfQklGXC8DX1NCX0JBVDBfQlNUcAoB
XEZBS0WGXC5fU0JfQUNfXwoAhlwuX1NCX0JBVDAKAIZcLl9TQl9CQVQwCoCGXC5fU0JfQkFUMAqB
oEYGk1wvA19TQl9OUlRIT1NGTAoCXC8DX1NCX0JBVDBfQklGXC8DX1NCX0JBVDBfQlNUhlwuX1NC
X0FDX18KAIZcLl9TQl9CQVQwCgGGXC5fU0JfQkFUMAqAhlwuX1NCX0JBVDAKgaAgk1wvA19TQl9O
UlRIT1NGTAoDhlwuX1NCX0JBVDAKARRJBF9RMDkAoCCTXC8DX1NCX05SVEhPU0ZMCgKGXC5fU0Jf
QkFUMAqAoCCTXC8DX1NCX05SVEhPU0ZMCgOGXC5fU0JfQkFUMAqAFB9fUTBBAHAKCkRCRziGXC8D
X1NCX05SVEhMSUQwCoAUBl9RMEIAFAZfUTBDABQGX1EwRABbgg9JREUwCF9BRFIMAQAHAFuCSyJB
R1BfCF9BRFIMAAABAFuCSSFWR0FfCF9BRFIKAAhTV0lUCgEIQ1JUQQoBCExDREEKAQhUVkFfCgEI
VE9HRgoAFAlfU1RBAKQKDxQbX0RPUwFwDVZHQSAtLV9ET1MAWzFwaFNXSVQUJl9ET0QAcA1WR0Eg
LS1fRE9EAFsxpBIPAwwAAQEADBABAQALAAJbgkIHQ1JUXwhfQURSCwABFCNfRENTAHANQ1JUIC0t
X0RDUwBbMaAIQ1JUQaQKH6EEpAodFClfREdTAHANQ1JUIC0tX0RHUwBbMXBDUlRBYKAIQ1JUQaQK
AaEEpAoAFBVfRFNTAXANQ1JUIC0tX0RTUwBbMVuCRQtMQ0RfCF9BRFILEAEUI19EQ1MAcA1MQ0Qg
LS1fRENTAFsxoAhMQ0RBpAofoQSkCh0UKV9ER1MAcA1MQ0QgLS1fREdTAFsxcExDREFgoAhMQ0RB
pAoBoQSkCgAUFV9EU1MBcA1MQ0QgLS1fRFNTAFsxCF9CQ0wSFgoKBgoECgAKAQoCCgMKBAoFCgYK
BxQmX0JDTQFwaFwvBV9TQl9OUlRIU0JSR0VJT19CVDMwcAqHU1dNSVuCTwZUVl9fCF9BRFILAAIU
Il9EQ1MAcA1UViAtLV9EQ1MAWzGgCFRWQV+kCh+hBKQKHRQoX0RHUwBwDVRWIC0tX0RHUwBbMXBU
VkFfYKAIVFZBX6QKAaEEpAoAFBRfRFNTAXANVFYgLS1fRFNTAFsxW4JDBVVTQl8IX0FEUgwCAAcA
CF9QUjASBgFQVVNCCFVTUFcKAFuELlBVU0IAAAAUC19TVEEApFVTUFcUDF9PTl8AcAFVU1BXFAxf
T0ZGAHAAVVNQV1uCG01ETTAIX0FEUgwAAA8ACF9QUlcSBgIKCwoDW4IbUFJCMQhfSElEDEHQDAwI
X1BSVxIGAgoLCgRbgkUGTElEMAhfSElEDEHQDA0IX1BSVxIGAgoLCgQUSARfTElEAHAKA1wvBV9T
Ql9OUlRIU0JSR0VJT19CVDMwcAqEU1dNSXBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzMmB7YAoBYKRg
EE0EXF9HUEUULF9MMEIAoByQRkdFQ1NDSUaGXC8DX1NCX05SVEhQUkIxCgKATFBPTExQT0wUGF9M
MEEAhlwvA19TQl9OUlRIUFJCMQoCW4JJVUJBVDAIX0hJRAxB0AwKCF9VSUQKAAhfUENMEgcBXF9T
Ql8UBl9JTkkAFEgFX1NUQQBwCgBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzMHAKhFNXTUlwXC8FX1NC
X05SVEhTQlJHRUlPX0JUMzFge2AKBGB6YAoCYKAHk2ABpAofoQSkCg8IQlVGRhIzDQoBCxQFCxQF
CgELMCoLOAEKnApkCmQNUEMtVlAtV1AxNgANAA1MSW9uAA1ORUMgIAAUQjZfQklGAHAKAVwvBV9T
Ql9OUlRIU0JSR0VJT19CVDMwcAqEU1dNSXBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzMWBwXC8FX1NC
X05SVEhTQlJHRUlPX0JUMzJheWEKCGF9YGFgcGCIQlVGRgoAAHBcLwVfU0JfTlJUSFNCUkdFSU9f
QlQzM2BwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzRheWEKCGF9YGFgcGCIQlVGRgoBAHBcLwVfU0Jf
TlJUSFNCUkdFSU9fQlQzNWBwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzZheWEKCGF9YGFgcGCIQlVG
RgoCAHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzN2BwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzhheWEK
CGF9YGFgcGCIQlVGRgoDAHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzOWBwXC8FX1NCX05SVEhTQlJH
RUlPX0JUM0FheWEKCGF9YGFgcGCIQlVGRgoEAHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzQmBwXC8F
X1NCX05SVEhTQlJHRUlPX0JUM0NheWEKCGF9YGFgcGCIQlVGRgoFAHBcLwVfU0JfTlJUSFNCUkdF
SU9fQlQzRGBwXC8FX1NCX05SVEhTQlJHRUlPX0JUM0VheWEKCGF9YGFgcGCIQlVGRgoGAHBcLwVf
U0JfTlJUSFNCUkdFSU9fQlQ0MGBwXC8FX1NCX05SVEhTQlJHRUlPX0JUNDFheWEKCGF9YGFgcGCI
QlVGRgoHAHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQ0MmBwXC8FX1NCX05SVEhTQlJHRUlPX0JUNDNh
eWEKCGF9YGFgcGCIQlVGRgoIAHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQ0NGBwXC8FX1NCX05SVEhT
QlJHRUlPX0JUNDVheWEKCGF9YGFgcA1QQy1WUC1XUDE2AIhCVUZGCgkAoBqTYAoDcA1QQy1WUC1X
UDE1AIhCVUZGCgkAcA0AiEJVRkYKCgBwDUxJb24AiEJVRkYKCwBwXC8FX1NCX05SVEhTQlJHRUlP
X0JUNDZge2AKA2CgFJNgCgFwDU5pTWgAiEJVRkYKCwBwDU5FQyAgAIhCVUZGCgwApEJVRkYIQkZC
MRITBAoADP////8M/////wwAAAEAFE8RX0JTVABwCgJcLwVfU0JfTlJUSFNCUkdFSU9fQlQzMHAK
hFNXTUlwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzJgcGCIQkZCMQoAAHBcLwVfU0JfTlJUSFNCUkdF
SU9fQlQzM2BwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzRheWEKCGF9YGFgcGCIQkZCMQoBAHBcLwVf
U0JfTlJUSFNCUkdFSU9fQlQzNWBwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzZheWEKCGF9YGFgcGCI
QkZCMQoCAHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQzN2BwXC8FX1NCX05SVEhTQlJHRUlPX0JUMzhh
eWEKCGF9YGFgcGCIQkZCMQoDAKRCRkIxW4JPDEFDX18IX0hJRA1BQ1BJMDAwMwAIX1BDTBIHAVxf
U0JfFAZfSU5JABRFCl9QU1IAcAoAXC8FX1NCX05SVEhTQlJHRUlPX0JUMzBwCoRTV01JcFwvBV9T
Ql9OUlRIU0JSR0VJT19CVDMxYHtgCgFgoCKTXEZBS0UKAXAKAGBwCgBcRkFLRYZcLl9TQl9BQ19f
CgCgOZNcLwNfU0JfTlJUSE9TRkwKAaAlkJNcR0kwNQoBk1xHSTA2CgGgEpKTXEFTQ0MAdlxBU0ND
pAoBpGAUFktFTFYBcGhidwoKYmJyYgusCmKkYghQTENZCgAIXEJBQzAKQQhcQlBTVgpGCFxCQ1JU
CmkIXEJUTVAKQRRDDFxVRFRUAHAKBFwvBV9TQl9OUlRIU0JSR0VJT19CVDMwcAqEU1dNSXBcLwVf
U0JfTlJUSFNCUkdFSU9fQlQxMGBwYFxCQUMwcFwvBV9TQl9OUlRIU0JSR0VJT19CVDExYHBgXEJQ
U1ZwXC8FX1NCX05SVEhTQlJHRUlPX0JUMTJgcGBcQkNSVHBcLwVfU0JfTlJUSFNCUkdFSU9fQlQx
M2BwYFxCVE1QdFxCQUMwCgFcQkFDMHRcQlBTVgoBXEJQU1YQShFcX1RaX1uCD0ZBTkMIX0hJRAxB
0AwLW4VAEFRIUk0IX0FMMBIGAUZBTkMULF9BQzAAoA5QTENZe1xCUFNWCv9goQp7XEJBQzAK/2Bw
S0VMVmBhcGFnpGcIX1BTTBIMAVwuX1BSX0NQVTAUCV9UQzEApAoCFAlfVEMyAKQKAxQsX1BTVgCg
DlBMQ1l7XEJBQzAK/2ChCntcQlBTVgr/YHBLRUxWYGFwYWekZxQbX0NSVAB7XEJDUlQK/2BwS0VM
VmBhcGFnpGcUH19UTVAAe1xCVE1QCv9gcApAYHBLRUxWYGFwYWekZxQKX1RTUACkC1gCFCZfU0NQ
AaAJaHAKAVBMQ1mhCHAKAFBMQ1mGXC5fVFpfVEhSTQqBW4EOUFdSRwEASBdUUDEyAQhEVkFECgAI
RFZNUwoACERWVFAKABRDG19QVFMBcGhEQkc4cAoAXC8DX1NCX05SVEhQQ0lSoBeTaAoCcAoBXC8D
X1NCX05SVEhQQ0lSoEUJkpNoCgV7aAoBYKBICJNgCgFwXC8FX1NCX05SVEhTQlJHRUlPX0dEUjJE
VkFEcFwvBV9TQl9OUlRIU0JSR0VJT19HRE0yRFZNU3ILAAQKBGBwYFwvBV9TQl9OUlRIU0JSR0VJ
T19HRFIycAoRXC8FX1NCX05SVEhTQlJHRUlPX0dETTJwVFAxMkRWVFBwCgFUUDEyoBJ9k2gKA5No
CgQAcAqFU1dNSaAKk2gKBVBXRFZooEsEkEZHRUNTQ0lGoD+VaAoFcAoHXC8FX1NCX05SVEhTQlJH
RUlPX0JUMzBwaFwvBV9TQl9OUlRIU0JSR0VJT19CVDMycAqEU1dNSaBLB5BGR0VDXFNDSUZwXC8E
X1NCX05SVEhMSUQwX0xJRGCgLpNgCgFwCgVcLwVfU0JfTlJUSFNCUkdFSU9fQlQzMHAKhFNXTUlw
CgFcUklFTqEqcAoGXC8FX1NCX05SVEhTQlJHRUlPX0JUMzBwCoRTV01JcAoAXFJJRU4USQ5fV0FL
AXloCgREQkc4cAoAXC8DX1NCX05SVEhQQ0lSoEQFkpNoCgV7aAoBYKBHBJNgCgFwRFZBRFwvBV9T
Ql9OUlRIU0JSR0VJT19HRFIycERWTVNcLwVfU0JfTlJUSFNCUkdFSU9fR0RNMnBEVlRQVFAxMqAR
kEZHRUNTQ0lGcAqGU1dNSaAmkpRcLwNfU0JfTlJUSE9TRkwKAoZcLwNfU0JfTlJUSFBSQjEKAqEs
oCpcLwVfU0JfTlJUSFNCUkdFQzBfQlRTVIZcLwNfU0JfTlJUSFBSQjEKAoZcLl9UWl9USFJNCoEU
H1BXRFYBcAoAR08xNFsiCmRwCgFHTzEycAoBR08xM1uAVEVNUAEKgAoBW4ELVEVNUAFEQkc4CFuA
REVCMAEKkAoCW4ELREVCMAJEQkc5EFuAXFBQQjIBCrIKAVuBDFxQUEIyAVNXTUkIW4BcUFBCMwEK
swoBW4EMXFBQQjMBQVBNUwhbAU1VRUMACEZBS0UKAB==

--=-RDYgymAgtY5wjnW7Vcuo
Content-Disposition: attachment; filename=fadt
Content-Type: text/plain; name=fadt; charset=UTF-8
Content-Transfer-Encoding: base64

RkFDUPQAAAAB9E5FQwAAAE5EMDAwMDIwAQAAAE1TRlSXAAAAAID/D+AA/w8AAAkAsgAAAOEeHwAA
BAAAAAAAAAQEAAAAAAAAIgAAAAgEAAAMBAAAAAAAAAQCAQQEAAAATARMBAAEEAABAA0AAAEAALEA
AAAAAAAAAAAAAAAAAAAAAAAAAID/DwAAAADgAP8PAAAAAAEEAAAABAAAAAAAAAEEAAAAAAAAAAAA
AAECAAAEBAAAAAAAAAECAAAAAAAAAAAAAAEBAAAiAAAAAAAAAAEEAAAIBAAAAAAAAAEAAAAMBAAA
AAAAAAEAAAAAAAAAAAAAAA==

--=-RDYgymAgtY5wjnW7Vcuo--

