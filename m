Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S131472AbQKJXcE>; Fri, 10 Nov 2000 18:32:04 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S131713AbQKJXby>; Fri, 10 Nov 2000 18:31:54 -0500
Received: from e34.co.us.ibm.com ([32.97.110.132]:46294 "EHLO
	e34.esmtp.ibm.com") by vger.kernel.org with ESMTP
	id <S131472AbQKJXbj>; Fri, 10 Nov 2000 18:31:39 -0500
Importance: Normal
Subject: [patch] nfsd optimizations for test10
To: linux-kernel@vger.kernel.org
Cc: nfs@lists.sourceforge.net, hjl@valinux.com
X-Mailer: Lotus Notes Release 5.0.2a (Intl) 23 November 1999
Message-ID: <OF973C73DE.C4472EDD-ON88256993.0080B320@LocalDomain>
From: "Ying Chen/Almaden/IBM" <ying@almaden.ibm.com>
Date: Fri, 10 Nov 2000 15:31:31 -0800
X-MIMETrack: Serialize by Router on D03NM042/03/M/IBM(Release 5.0.5 |September 22, 2000) at
 11/10/2000 03:31:33 PM
MIME-Version: 1.0
Content-type: multipart/mixed; 
	Boundary="0__=882569930080B3208f9e8a93df938690918c882569930080B320"
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

--0__=882569930080B3208f9e8a93df938690918c882569930080B320
Content-type: text/plain; charset=us-ascii

Hi,

I made some optimizations on racache in nfsd in test10. The idea is to
replace with existing fixed length table for readahead cache in NFSD with a
hash table.
The old racache is essentially ineffective in dealing with large # of
files, and yet eats CPU cycles in scanning the table (even though the table
is small),
the hash table-based is much more effective and fast. I have generated the
patch for test10 and tested it.

(See attached file: nfshdiff)(See attached file: nfsdiff)


Ying
--0__=882569930080B3208f9e8a93df938690918c882569930080B320
Content-type: application/octet-stream; 
	name="nfshdiff"
Content-Disposition: attachment; filename="nfshdiff"
Content-transfer-encoding: base64

ZGlmZiAtcnVOIG5mc2Qub3JpZy9uZnNkLmggbmZzZC5vcHQvbmZzZC5oCi0tLSBuZnNkLm9yaWcv
bmZzZC5oCUZyaSBOb3YgMTAgMTU6Mjc6MzcgMjAwMAorKysgbmZzZC5vcHQvbmZzZC5oCUZyaSBO
b3YgMTAgMTY6MDM6NDMgMjAwMApAQCAtNzYsNyArNzYsNyBAQAogCiAvKiBuZnNkL3Zmcy5jICov
CiBpbnQJCWZoX2xvY2tfcGFyZW50KHN0cnVjdCBzdmNfZmggKiwgc3RydWN0IGRlbnRyeSAqKTsK
LWludAkJbmZzZF9yYWNhY2hlX2luaXQoaW50KTsKK2ludAkJbmZzZF9yYWNhY2hlX2luaXQodm9p
ZCk7CiB2b2lkCQluZnNkX3JhY2FjaGVfc2h1dGRvd24odm9pZCk7CiBpbnQJCW5mc2RfbG9va3Vw
KHN0cnVjdCBzdmNfcnFzdCAqLCBzdHJ1Y3Qgc3ZjX2ZoICosCiAJCQkJY29uc3QgY2hhciAqLCBp
bnQsIHN0cnVjdCBzdmNfZmggKik7CmRpZmYgLXJ1TiBuZnNkLm9yaWcvcmFjYWNoZS5oIG5mc2Qu
b3B0L3JhY2FjaGUuaAotLS0gbmZzZC5vcmlnL3JhY2FjaGUuaAlGcmkgTm92IDEwIDE2OjEwOjIz
IDIwMDAKKysrIG5mc2Qub3B0L3JhY2FjaGUuaAlGcmkgTm92IDEwIDE1OjUwOjQ5IDIwMDAKQEAg
LTAsMCArMSw0MyBAQAorLyoKKyAqIGluY2x1ZGUvbGludXgvbmZzZC9yYWNhY2hlLmgKKyAqCisg
KiBSZWFkIGFoZWFkIHJhY2FjaGUuIAorICovCisKKyNpZm5kZWYgTkZTUkFDQUNIRV9ICisjZGVm
aW5lIE5GU1JBQ0FDSEVfSAorCisjaWZkZWYgX19LRVJORUxfXworI2luY2x1ZGUgPGxpbnV4L3Nj
aGVkLmg+CisKKy8qCisgKiBUaGlzIGlzIGEgY2FjaGUgb2YgcmVhZGFoZWFkIHBhcmFtcyB0aGF0
IGhlbHAgdXMgY2hvb3NlIHRoZSBwcm9wZXIKKyAqIHJlYWRhaGVhZCBzdHJhdGVneS4gSW5pdGlh
bGx5LCB3ZSBzZXQgYWxsIHJlYWRhaGVhZCBwYXJhbWV0ZXJzIHRvIDAKKyAqIGFuZCBsZXQgdGhl
IFZGUyBoYW5kbGUgdGhpbmdzLgorICogSWYgeW91IGluY3JlYXNlIHRoZSBudW1iZXIgb2YgY2Fj
aGVkIGZpbGVzIHZlcnkgbXVjaCwgeW91J2xsIG5lZWQgdG8KKyAqIGFkZCBhIGhhc2ggdGFibGUg
aGVyZS4KKyAqLworLyoKKyAqIFJlcHJlc2VudGF0aW9uIG9mIGFuIHJhY2FjaGUgZW50cnkuIFRo
ZSBmaXJzdCB0d28gbWVtYmVycyAqbXVzdCoKKyAqIGJlIGhhc2hfbmV4dCBhbmQgaGFzaF9wcmV2
LgorICovCitzdHJ1Y3QgcmFwYXJtcyB7CisJc3RydWN0IHJhcGFybXMJCSpwX2hhc2hfbmV4dDsK
KwlzdHJ1Y3QgcmFwYXJtcwkJKnBfaGFzaF9wcmV2OworCXN0cnVjdCByYXBhcm1zCQkqcF9scnVf
bmV4dDsKKwlzdHJ1Y3QgcmFwYXJtcwkJKnBfbHJ1X3ByZXY7CisJaW5vX3QJCQlwX2lubzsKKwlk
ZXZfdAkJCXBfZGV2OworCXVuc2lnbmVkIGxvbmcJCXBfcmVhZGEsCisJCQkJcF9yYW1heCwKKwkJ
CQlwX3JhZW5kLAorCQkJCXBfcmFsZW4sCisJCQkJcF9yYXdpbjsKK307CisKK2ludCBuZnNkX3Jh
Y2FjaGVfaW5pdCh2b2lkKTsKK3ZvaWQJbmZzZF9yYWNhY2hlX3NodXRkb3duKHZvaWQpOworc3Ry
dWN0IHJhcGFybXMgKm5mc2RfZ2V0X3JhcGFybXMoZGV2X3QgLCBpbm9fdCApOworCisjZW5kaWYg
LyogX19LRVJORUxfXyAqLworI2VuZGlmIC8qIE5GU1JBQ0FDSEVfSCAqLwpkaWZmIC1ydU4gbmZz
ZC5vcmlnL3N0YXRzLmggbmZzZC5vcHQvc3RhdHMuaAotLS0gbmZzZC5vcmlnL3N0YXRzLmgJVHVl
IEp1bCAxOCAyMzowNDowNiAyMDAwCisrKyBuZnNkLm9wdC9zdGF0cy5oCUZyaSBOb3YgMTAgMTU6
NTE6NTIgMjAwMApAQCAtMjUsOCArMjUsOCBAQAogCQkJCQkgKiBvZiBhdmFpbGFibGUgdGhyZWFk
cyB3ZXJlIGluIHVzZSAqLwogCXVuc2lnbmVkIGludAl0aF9mdWxsY250OwkvKiBudW1iZXIgb2Yg
dGltZXMgbGFzdCBmcmVlIHRocmVhZCB3YXMgdXNlZCAqLwogCXVuc2lnbmVkIGludAlyYV9zaXpl
OwkvKiBzaXplIG9mIHJhIGNhY2hlICovCi0JdW5zaWduZWQgaW50CXJhX2RlcHRoWzExXTsJLyog
bnVtYmVyIG9mIHRpbWVzIHJhIGVudHJ5IHdhcyBmb3VuZCB0aGF0IGRlZXAKLQkJCQkJICogaW4g
dGhlIGNhY2hlICgxMHBlcmNlbnRpbGVzKS4gWzEwXSA9IG5vdCBmb3VuZCAqLworCXVuc2lnbmVk
IGludAlyYV9oaXRzOwkvKiByYSBjYWNoZSBoaXRzICovCisJdW5zaWduZWQgaW50CXJhX21pc3Nl
czsJLyogcmEgY2FjaGUgbWlzc2VzICovCiB9OwogCiAvKiB0aHJlYWQgdXNhZ2Ugd3JhcHMgdmVy
eSBtaWxsaW9uIHNlY29uZHMgKGFwcHJveCBvbmUgZm9ydG5pZ2h0KSAqLwo=

--0__=882569930080B3208f9e8a93df938690918c882569930080B320
Content-type: application/octet-stream; 
	name="nfsdiff"
Content-Disposition: attachment; filename="nfsdiff"
Content-transfer-encoding: base64

ZGlmZiAtcnVOIG5mc2Qub3JpZy9NYWtlZmlsZSBuZnNkLm9wdC9NYWtlZmlsZQotLS0gbmZzZC5v
cmlnL01ha2VmaWxlCVdlZCBEZWMgIDggMTU6MTc6NTUgMTk5OQorKysgbmZzZC5vcHQvTWFrZWZp
bGUJRnJpIE5vdiAxMCAxNzoxMDo1NiAyMDAwCkBAIC05LDcgKzksNyBAQAogCiBPX1RBUkdFVCA6
PSBuZnNkLm8KIE9fT0JKUyAgIDo9IG5mc3N2Yy5vIG5mc2N0bC5vIG5mc3Byb2MubyBuZnNmaC5v
IHZmcy5vIFwKLQkgICAgZXhwb3J0Lm8gYXV0aC5vIGxvY2tkLm8gbmZzY2FjaGUubyBuZnN4ZHIu
byBcCisJICAgIGV4cG9ydC5vIGF1dGgubyBsb2NrZC5vIG5mc2NhY2hlLm8gbmZzcmFjYWNoZS5v
IG5mc3hkci5vIFwKIAkgICAgc3RhdHMubwogaWZkZWYgQ09ORklHX05GU0RfVjMKICAgT19PQkpT
ICs9IG5mczNwcm9jLm8gbmZzM3hkci5vCmRpZmYgLXJ1TiBuZnNkLm9yaWcvbmZzcmFjYWNoZS5j
IG5mc2Qub3B0L25mc3JhY2FjaGUuYwotLS0gbmZzZC5vcmlnL25mc3JhY2FjaGUuYwlXZWQgRGVj
IDMxIDE2OjAwOjAwIDE5NjkKKysrIG5mc2Qub3B0L25mc3JhY2FjaGUuYwlGcmkgTm92IDEwIDE3
OjAwOjUzIDIwMDAKQEAgLTAsMCArMSwyMzMgQEAKKy8qCisgKiBsaW51eC9mcy9uZnNkL25mc3Jh
Y2FjaGUuYworICoKKyAqIE5GU0QgcmFjYWNoZS4gCisgKi8KKworI2luY2x1ZGUgPGxpbnV4L2tl
cm5lbC5oPgorI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CisjaW5jbHVkZSA8bGludXgvbWFsbG9j
Lmg+CisjaW5jbHVkZSA8bGludXgvc3RyaW5nLmg+CisKKyNpbmNsdWRlIDxsaW51eC9zdW5ycGMv
c3ZjLmg+CisjaW5jbHVkZSA8bGludXgvbmZzZC9uZnNkLmg+CisjaW5jbHVkZSA8bGludXgvbmZz
ZC9yYWNhY2hlLmg+CisKKyNkZWZpbmUgQ0FDSEVTSVpFCQkyMDQ4CisjZGVmaW5lIEhBU0hTSVpF
CQk1MTIKKyNkZWZpbmUgUkVRSEFTSChpbm8sIGRldikJKCgoKGlubykgPj4gMjQpIF4gKGlubykg
XiAoZGV2KSkgJiAoSEFTSFNJWkUtMSkpCisKK3NwaW5sb2NrX3QgcmFjYWNoZV9sb2NrID0gU1BJ
Tl9MT0NLX1VOTE9DS0VEOworCisvKgorICogVGhlIHBvc2l0aW9uIG9mIHRoZSBwb2ludGVycyBh
cmUgaW1wb3J0YW50LiBEb24ndCBjaGFuZ2UgaXQgd2l0aG91dCBrbm93aW5nIHdoYXQKKyAqIHlv
dSBhcmUgZG9pbmcuIAorICovCitzdHJ1Y3QgcmFjYWNoZV9oZWFkIHsKKwlzdHJ1Y3QgcmFwYXJt
cyAqCW5leHQ7CisJc3RydWN0IHJhcGFybXMgKglwcmV2OworfTsKKworc3RhdGljIHN0cnVjdCBy
YXBhcm1zICoJCXJhcGFybV9jYWNoZSA9IE5VTEw7CitzdGF0aWMgc3RydWN0IHJhY2FjaGVfaGVh
ZCAqCWhhc2hfbGlzdDsKKworc3RhdGljIHN0cnVjdCByYXBhcm1zICoJbHJ1X2hlYWQgPSBOVUxM
Oworc3RhdGljIHN0cnVjdCByYXBhcm1zICoJbHJ1X3RhaWwgPSBOVUxMOworc3RhdGljIHN0cnVj
dCByYXBhcm1zICoJZnJlZV9oZWFkOworc3RhdGljIHN0cnVjdCByYXBhcm1zICoJZnJlZV90YWls
OworCitpbnQKK25mc2RfcmFjYWNoZV9pbml0KHZvaWQpCit7CisJc3RydWN0IHJhcGFybXMJKnJw
OworCXN0cnVjdCByYWNhY2hlX2hlYWQJKnJhaGVhZDsKKwlzaXplX3QJCQlpOworCXVuc2lnbmVk
IGxvbmcJCW9yZGVyOworCisJbHJ1X2hlYWQgPSBOVUxMOworCWxydV90YWlsID0gTlVMTDsKKwlp
ID0gQ0FDSEVTSVpFICogc2l6ZW9mIChzdHJ1Y3QgcmFwYXJtcyk7CisJZm9yIChvcmRlciA9IDA7
IChQQUdFX1NJWkUgPDwgb3JkZXIpIDwgaTsgb3JkZXIrKykKKwkJOworCXJhcGFybV9jYWNoZSA9
IChzdHJ1Y3QgcmFwYXJtcyAqKQorCQlfX2dldF9mcmVlX3BhZ2VzKEdGUF9LRVJORUwsIG9yZGVy
KTsKKwlpZiAoIXJhcGFybV9jYWNoZSkgeworCQlwcmludGsgKEtFUk5fRVJSICJuZnNkOiBjYW5u
b3QgYWxsb2NhdGUgJVpkIGJ5dGVzIGZvciByYWNhY2hlXG4iLCBpKTsKKwkJcmV0dXJuIC0xOwor
CX0KKwltZW1zZXQocmFwYXJtX2NhY2hlLCAwLCBpKTsKKworCWkgPSBIQVNIU0laRSAqIHNpemVv
ZiAoc3RydWN0IHJhY2FjaGVfaGVhZCk7CisJaGFzaF9saXN0ID0ga21hbGxvYyAoaSwgR0ZQX0tF
Uk5FTCk7CisJaWYgKCFoYXNoX2xpc3QpIHsKKwkJZnJlZV9wYWdlcyAoKHVuc2lnbmVkIGxvbmcp
cmFwYXJtX2NhY2hlLCBvcmRlcik7CisJCXJhcGFybV9jYWNoZSA9IE5VTEw7CisJCXByaW50ayAo
S0VSTl9FUlIgIm5mc2Q6IGNhbm5vdCBhbGxvY2F0ZSAlWmQgYnl0ZXMgZm9yIGhhc2ggbGlzdCBp
biByYWNhY2hlXG4iLCBpKTsKKwkJcmV0dXJuIC0xOworCX0KKworCXNwaW5fbG9jaygmcmFjYWNo
ZV9sb2NrKTsgCisJZm9yIChpID0gMCwgcmFoZWFkID0gaGFzaF9saXN0OyBpIDwgSEFTSFNJWkU7
IGkrKywgcmFoZWFkKyspCisJCXJhaGVhZC0+bmV4dCA9IHJhaGVhZC0+cHJldiA9IChzdHJ1Y3Qg
cmFwYXJtcyAqKSByYWhlYWQ7CisKKwlmb3IgKGkgPSAwLCBycCA9IHJhcGFybV9jYWNoZTsgaSA8
IENBQ0hFU0laRTsgaSsrLCBycCsrKSB7CisJCXJwLT5wX2hhc2hfbmV4dCA9IHJwLT5wX2hhc2hf
cHJldiA9IHJwOworCQlycC0+cF9scnVfbmV4dCA9IHJwICsgMTsKKwkJcnAtPnBfbHJ1X3ByZXYg
PSBycCAtIDE7CisJfQorCWZyZWVfaGVhZCA9IHJhcGFybV9jYWNoZTsKKwlmcmVlX3RhaWwgPSBy
YXBhcm1fY2FjaGUgKyBDQUNIRVNJWkUgLSAxOworCWZyZWVfaGVhZC0+cF9scnVfcHJldiA9IE5V
TEw7CisJZnJlZV90YWlsLT5wX2xydV9uZXh0ID0gTlVMTDsKKwlzcGluX3VubG9jaygmcmFjYWNo
ZV9sb2NrKTsgCisKKwluZnNkc3RhdHMucmFfc2l6ZSA9IENBQ0hFU0laRTsKKwlyZXR1cm4gMDsK
K30KKwordm9pZAorbmZzZF9yYWNhY2hlX3NodXRkb3duKHZvaWQpCit7CisJc2l6ZV90CQkJaTsK
Kwl1bnNpZ25lZCBsb25nCQlvcmRlcjsKKworCWkgPSBDQUNIRVNJWkUgKiBzaXplb2YgKHN0cnVj
dCByYXBhcm1zKTsKKwlmb3IgKG9yZGVyID0gMDsgKFBBR0VfU0laRSA8PCBvcmRlcikgPCBpOyBv
cmRlcisrKQorCQk7CisJc3Bpbl9sb2NrKCZyYWNhY2hlX2xvY2spOyAKKwlmcmVlX3BhZ2VzICgo
dW5zaWduZWQgbG9uZylyYXBhcm1fY2FjaGUsIG9yZGVyKTsKKwlyYXBhcm1fY2FjaGUgPSBOVUxM
OworCWtmcmVlIChoYXNoX2xpc3QpOworCWhhc2hfbGlzdCA9IE5VTEw7CisJc3Bpbl91bmxvY2so
JnJhY2FjaGVfbG9jayk7IAorfQorCisvKgorICogTW92ZSBjYWNoZSBlbnRyeSBmcm9tIExSVSBs
aXN0IHRvIGZyb250IG9mIExSVSBsaXN0CisgKi8KK3N0YXRpYyB2b2lkCitscnVfcHV0X2Zyb250
KHN0cnVjdCByYXBhcm1zICpycCkKK3sKKwlzdHJ1Y3QgcmFwYXJtcwkqcHJldiA9IHJwLT5wX2xy
dV9wcmV2LAorCQkJCSpuZXh0ID0gcnAtPnBfbHJ1X25leHQ7CisKKwlpZiAocHJldikKKwkJcHJl
di0+cF9scnVfbmV4dCA9IG5leHQ7CisJZWxzZQorCQlyZXR1cm47CisJaWYgKG5leHQpCisJCW5l
eHQtPnBfbHJ1X3ByZXYgPSBwcmV2OworCWVsc2UKKwkJbHJ1X3RhaWwgPSBwcmV2OworCisJcnAt
PnBfbHJ1X25leHQgPSBscnVfaGVhZDsKKwlycC0+cF9scnVfcHJldiA9IE5VTEw7CisJbHJ1X2hl
YWQtPnBfbHJ1X3ByZXYgPSBycDsKKwlscnVfaGVhZCA9IHJwOworfQorCisvKgorICogTW92ZSBj
YWNoZSBlbnRyeSBmcm9tIHRoZSBmcmVlIGxpc3QgdG8gZnJvbnQgb2YgTFJVIGxpc3QKKyAqLwor
c3RhdGljIHZvaWQKK2xydV9pbnNlcnRfZnJvbnQoc3RydWN0IHJhcGFybXMgKnJwKQoreworCXJw
LT5wX2xydV9wcmV2ID0gTlVMTDsKKwlycC0+cF9scnVfbmV4dCA9IGxydV9oZWFkOworCWlmIChs
cnVfaGVhZCkKKwkJbHJ1X2hlYWQtPnBfbHJ1X3ByZXYgPSBycDsKKwlscnVfaGVhZCA9IHJwOwor
CWlmICghbHJ1X3RhaWwpCisJCWxydV90YWlsID0gcnA7Cit9CisKKy8qCisgKiBNb3ZlIGNhY2hl
IGVudHJ5IGZyb20gdGhlIGZyZWUgbGlzdCB0byBmcm9udCBvZiBMUlUgbGlzdAorICogTWVhbndo
aWxlLCByZW1vdmUgaXQgZnJvbSB0aGUgaGFzaCBsaXN0IGFsc28uCisgKi8KK3N0YXRpYyBzdHJ1
Y3QgcmFwYXJtcyAqbHJ1X3JlbW92ZV9pdGVtKHN0cnVjdCByYXBhcm1zICppdGVtKQoreworCXN0
cnVjdCByYXBhcm1zCSpycDsKKwlzdHJ1Y3QgcmFwYXJtcwkqcHJldjsgCisJc3RydWN0IHJhcGFy
bXMJKm5leHQ7IAorCisJcnAgPSBpdGVtLT5wX2xydV9wcmV2OworCWlmIChpdGVtICE9IGxydV9o
ZWFkKSB7CisJCXJwLT5wX2xydV9uZXh0ID0gaXRlbS0+cF9scnVfbmV4dDsKKwkJaWYgKHJwLT5w
X2xydV9uZXh0KSAKKwkJCXJwLT5wX2xydV9uZXh0LT5wX2xydV9wcmV2ID0gcnA7CisJfSBlbHNl
IHsKKwkJbHJ1X2hlYWQgPSBpdGVtLT5wX2xydV9uZXh0OworCQlpZiAobHJ1X2hlYWQpIAorCQkJ
bHJ1X2hlYWQtPnBfbHJ1X3ByZXYgPSBOVUxMOworCX0KKwlpdGVtLT5wX2xydV9wcmV2ID0gTlVM
TDsKKwlpdGVtLT5wX2xydV9uZXh0ID0gTlVMTDsKKwlpZiAoaXRlbSA9PSBscnVfdGFpbCkKKwkJ
bHJ1X3RhaWwgPSBycDsKKwlwcmV2ID0gaXRlbS0+cF9oYXNoX3ByZXYsCisJbmV4dCA9IGl0ZW0t
PnBfaGFzaF9uZXh0OworCXByZXYtPnBfaGFzaF9uZXh0ID0gbmV4dDsKKwluZXh0LT5wX2hhc2hf
cHJldiA9IHByZXY7CisJaXRlbS0+cF9oYXNoX25leHQgPSBOVUxMOworCWl0ZW0tPnBfaGFzaF9w
cmV2ID0gTlVMTDsKKworCXJldHVybiBpdGVtOworfQorCisKK3N0YXRpYyBpbmxpbmUgc3RydWN0
IHJhcGFybXMJKgorbmZzZF9yYWNhY2hlX2luc2VydChpbm9fdCBpbm8sIGRldl90IGRldikKK3sK
KwlzdHJ1Y3QgcmFwYXJtcwkqcmEgPSBOVUxMOworCXN0cnVjdCByYWNhY2hlX2hlYWQgKnJhcDsK
KworCWlmICghZnJlZV9oZWFkKSB7CisJCS8qIFJlcGxhY2Ugd2l0aCBMUlUuICovCisJCWlmIChs
cnVfdGFpbCkgCisJCQlyYSA9IGxydV9yZW1vdmVfaXRlbShscnVfdGFpbCk7CisJfSBlbHNlIHsK
KwkJcmEgPSBmcmVlX2hlYWQ7CisJCWZyZWVfaGVhZCA9IGZyZWVfaGVhZC0+cF9scnVfbmV4dDsg
CisJfQorCW1lbXNldChyYSwgMCwgc2l6ZW9mKCpyYSkpOworCXJhLT5wX2RldiA9IGRldjsKKwly
YS0+cF9pbm8gPSBpbm87CisJcmFwID0gKHN0cnVjdCByYWNhY2hlX2hlYWQgKikgJmhhc2hfbGlz
dFtSRVFIQVNIKGlubywgZGV2KV07CisJcmEtPnBfaGFzaF9uZXh0ID0gcmFwLT5uZXh0OworCXJh
LT5wX2hhc2hfcHJldiA9IChzdHJ1Y3QgcmFwYXJtcyAqKSByYXA7CisJcmFwLT5uZXh0LT5wX2hh
c2hfcHJldiA9IHJhOworCXJhcC0+bmV4dCA9IHJhOworCisJbHJ1X2luc2VydF9mcm9udChyYSk7
CisJcmV0dXJuIHJhOworfQorCisvKgorICogVHJ5IHRvIGZpbmQgYW4gZW50cnkgbWF0Y2hpbmcg
dGhlIGN1cnJlbnQgY2FsbCBpbiB0aGUgY2FjaGUuIFdoZW4gbm9uZQorICogaXMgZm91bmQsIHdl
IGdyYWIgdGhlIG9sZGVzdCB1bmxvY2tlZCBlbnRyeSBvZmYgdGhlIExSVSBsaXN0LgorICogTm90
ZSB0aGF0IG5vIG9wZXJhdGlvbiB3aXRoaW4gdGhlIGxvb3AgbWF5IHNsZWVwLgorICovCitzdHJ1
Y3QgcmFwYXJtcyAqCituZnNkX2dldF9yYXBhcm1zKGRldl90IGRldiwgaW5vX3QgaW5vKQorewor
CXN0cnVjdCByYXBhcm1zCSpyYWhlYWQ7CisJc3RydWN0IHJhcGFybXMJKnJhID0gTlVMTDsKKwor
CXNwaW5fbG9jaygmcmFjYWNoZV9sb2NrKTsKKworCXJhID0gcmFoZWFkID0gKHN0cnVjdCByYXBh
cm1zICopICZoYXNoX2xpc3RbUkVRSEFTSChpbm8sIGRldildOworCXdoaWxlICgocmEgPSByYS0+
cF9oYXNoX25leHQpICE9IHJhaGVhZCkgeworCSAgICAgCWlmICgocmEtPnBfaW5vID09IGlubykg
JiYgKHJhLT5wX2RldiA9PSBkZXYpKSB7IAorCQkJbHJ1X3B1dF9mcm9udChyYSk7CisJCQluZnNk
c3RhdHMucmFfaGl0cysrOworCQkJZ290byBmb3VuZDsKKwkJfQorCX0KKwkvKiBEaWQgbm90IGZp
bmQgb25lLiBHZXQgYSBuZXcgaXRlbSBhbmQgaW5zZXJ0IGl0IGludG8gdGhlIGhhc2ggdGFibGUu
ICovCisJcmEgPSBuZnNkX3JhY2FjaGVfaW5zZXJ0KGlubywgZGV2KTsKKwluZnNkc3RhdHMucmFf
bWlzc2VzKys7Citmb3VuZDoKKwlzcGluX3VubG9jaygmcmFjYWNoZV9sb2NrKTsKKwlyZXR1cm4g
cmE7Cit9CmRpZmYgLXJ1TiBuZnNkLm9yaWcvbmZzc3ZjLmMgbmZzZC5vcHQvbmZzc3ZjLmMKLS0t
IG5mc2Qub3JpZy9uZnNzdmMuYwlTdW4gT2N0ICAxIDIwOjM1OjE2IDIwMDAKKysrIG5mc2Qub3B0
L25mc3N2Yy5jCUZyaSBOb3YgMTAgMTc6MDM6MDkgMjAwMApAQCAtNDMsNyArNDMsNyBAQAogc3Rh
dGljIHZvaWQJCQluZnNkKHN0cnVjdCBzdmNfcnFzdCAqcnFzdHApOwogc3RydWN0IHRpbWV2YWwJ
CQluZnNzdmNfYm9vdDsKIHN0YXRpYyBzdHJ1Y3Qgc3ZjX3NlcnYgCQkqbmZzZF9zZXJ2Owotc3Rh
dGljIGludAkJCW5mc2RfYnVzeTsKK3N0YXRpYyBhdG9taWNfdAkJCW5mc2RfYnVzeTsKIHN0YXRp
YyB1bnNpZ25lZCBsb25nCQluZnNkX2xhc3RfY2FsbDsKIAogc3RydWN0IG5mc2RfbGlzdCB7CkBA
IC03Miw3ICs3Miw3IEBACiAJCW5yc2VydnMgPSBORlNEX01BWFNFUlZTOwogCQogCS8qIFJlYWRh
aGVhZCBwYXJhbSBjYWNoZSAtIHdpbGwgbm8tb3AgaWYgaXQgYWxyZWFkeSBleGlzdHMgKi8KLQll
cnJvciA9CW5mc2RfcmFjYWNoZV9pbml0KDIqbnJzZXJ2cyk7CisJZXJyb3IgPQluZnNkX3JhY2Fj
aGVfaW5pdCgpOwogCWlmIChlcnJvcjwwKQogCQlnb3RvIG91dDsKIAlpZiAoIW5mc2Rfc2Vydikg
ewpAQCAtMTg1LDggKzE4NSw4IEBACiAJCSAgICA7CiAJCWlmIChlcnIgPCAwKQogCQkJYnJlYWs7
Ci0JCXVwZGF0ZV90aHJlYWRfdXNhZ2UobmZzZF9idXN5KTsKLQkJbmZzZF9idXN5Kys7CisJCXVw
ZGF0ZV90aHJlYWRfdXNhZ2UoYXRvbWljX3JlYWQoJm5mc2RfYnVzeSkpOworCQlhdG9taWNfaW5j
KCZuZnNkX2J1c3kpOwogCiAJCS8qIExvY2sgdGhlIGV4cG9ydCBoYXNoIHRhYmxlcyBmb3IgcmVh
ZGluZy4gKi8KIAkJZXhwX3JlYWRsb2NrKCk7CkBAIC0yMDUsOCArMjA1LDggQEAKIAogCQkvKiBV
bmxvY2sgZXhwb3J0IGhhc2ggdGFibGVzICovCiAJCWV4cF91bmxvY2soKTsKLQkJdXBkYXRlX3Ro
cmVhZF91c2FnZShuZnNkX2J1c3kpOwotCQluZnNkX2J1c3ktLTsKKwkJdXBkYXRlX3RocmVhZF91
c2FnZShhdG9taWNfcmVhZCgmbmZzZF9idXN5KSk7CisJCWF0b21pY19kZWMoJm5mc2RfYnVzeSk7
CiAJfQogCiAJaWYgKGVyciAhPSAtRUlOVFIpIHsKZGlmZiAtcnVOIG5mc2Qub3JpZy9zdGF0cy5j
IG5mc2Qub3B0L3N0YXRzLmMKLS0tIG5mc2Qub3JpZy9zdGF0cy5jCVR1ZSBKdWwgMTggMjM6MDQ6
MDYgMjAwMAorKysgbmZzZC5vcHQvc3RhdHMuYwlGcmkgTm92IDEwIDE3OjA0OjUyIDIwMDAKQEAg
LTE1LDkgKzE1LDggQEAKICAqCXRoIDx0aHJlYWRzPiA8ZnVsbGNudD4gPDEwJS0yMCU+IDwyMCUt
MzAlPiAuLi4gPDkwJS0xMDAlPiA8MTAwJT4gCiAgKgkJCXRpbWUgKHNlY29uZHMpIHdoZW4gbmZz
ZCB0aHJlYWQgdXNhZ2UgYWJvdmUgdGhyZXNob2xkcwogICoJCQlhbmQgbnVtYmVyIG9mIHRpbWVz
IHRoYXQgYWxsIHRocmVhZHMgd2VyZSBpbiB1c2UKLSAqCXJhIGNhY2hlLXNpemUgIDwxMCUgIDwy
MCUgIDwzMCUgLi4uIDwxMDAlIG5vdC1mb3VuZAotICoJCQludW1iZXIgb2YgdGltZXMgdGhhdCBy
ZWFkLWFoZWFkIGVudHJ5IHdhcyBmb3VuZCB0aGF0IGRlZXAgaW4KLSAqCQkJdGhlIGNhY2hlLgor
ICoJcmEgY2FjaGUtc2l6ZSAgPHJhY2FjaGUtc2l6ZT4gPGhpdHM+IDxtaXNzZXM+IAorCQkJcmFj
YWNoZSBzaXplLCBoaXRzLCBhbmQgbWlzc2VzCiAgKglwbHVzIGdlbmVyaWMgUlBDIHN0YXRzIChz
ZWUgbmV0L3N1bnJwYy9zdGF0cy5jKQogICoKICAqIENvcHlyaWdodCAoQykgMTk5NSwgMTk5Niwg
MTk5NyBPbGFmIEtpcmNoIDxva2lyQG1vbmFkLnN3Yi5kZT4KQEAgLTY1LDExICs2NCw4IEBACiAJ
fQogCiAJLyogbmV3bGluZSBhbmQgcmEtY2FjaGUgKi8KLQlsZW4gKz0gc3ByaW50ZihidWZmZXIr
bGVuLCAiXG5yYSAldSIsIG5mc2RzdGF0cy5yYV9zaXplKTsKLQlmb3IgKGk9MDsgaTwxMTsgaSsr
KQotCQlsZW4gKz0gc3ByaW50ZihidWZmZXIrbGVuLCAiICV1IiwgbmZzZHN0YXRzLnJhX2RlcHRo
W2ldKTsKLQlsZW4gKz0gc3ByaW50ZihidWZmZXIrbGVuLCAiXG4iKTsKLQkKKwlsZW4gKz0gc3By
aW50ZihidWZmZXIrbGVuLCAiXG5yYSAldSAldSAldVxuIiwgbmZzZHN0YXRzLnJhX3NpemUsIAor
CQkJbmZzZHN0YXRzLnJhX2hpdHMsIG5mc2RzdGF0cy5yYV9taXNzZXMpOwogCiAJLyogQXNzdW1l
IHdlIGhhdmVuJ3QgaGl0IEVPRiB5ZXQuIFdpbGwgYmUgc2V0IGJ5IHN2Y19wcm9jX3JlYWQuICov
CiAJKmVvZiA9IDA7CmRpZmYgLXJ1TiBuZnNkLm9yaWcvdmZzLmMgbmZzZC5vcHQvdmZzLmMKLS0t
IG5mc2Qub3JpZy92ZnMuYwlNb24gT2N0IDE2IDEyOjU4OjUxIDIwMDAKKysrIG5mc2Qub3B0L3Zm
cy5jCUZyaSBOb3YgMTAgMTc6MDk6MjMgMjAwMApAQCAtMzYsNiArMzYsNyBAQAogCiAjaW5jbHVk
ZSA8bGludXgvc3VucnBjL3N2Yy5oPgogI2luY2x1ZGUgPGxpbnV4L25mc2QvbmZzZC5oPgorI2lu
Y2x1ZGUgPGxpbnV4L25mc2QvcmFjYWNoZS5oPgogI2lmZGVmIENPTkZJR19ORlNEX1YzCiAjaW5j
bHVkZSA8bGludXgvbmZzMy5oPgogI2luY2x1ZGUgPGxpbnV4L25mc2QveGRyMy5oPgpAQCAtNTYs
MjggKzU3LDYgQEAKICNkZWZpbmUgSVNfSVNNTkRMSyhpKQkoU19JU1JFRygoaSktPmlfbW9kZSkg
JiYgTUFOREFUT1JZX0xPQ0soaSkpCiAKIC8qCi0gKiBUaGlzIGlzIGEgY2FjaGUgb2YgcmVhZGFo
ZWFkIHBhcmFtcyB0aGF0IGhlbHAgdXMgY2hvb3NlIHRoZSBwcm9wZXIKLSAqIHJlYWRhaGVhZCBz
dHJhdGVneS4gSW5pdGlhbGx5LCB3ZSBzZXQgYWxsIHJlYWRhaGVhZCBwYXJhbWV0ZXJzIHRvIDAK
LSAqIGFuZCBsZXQgdGhlIFZGUyBoYW5kbGUgdGhpbmdzLgotICogSWYgeW91IGluY3JlYXNlIHRo
ZSBudW1iZXIgb2YgY2FjaGVkIGZpbGVzIHZlcnkgbXVjaCwgeW91J2xsIG5lZWQgdG8KLSAqIGFk
ZCBhIGhhc2ggdGFibGUgaGVyZS4KLSAqLwotc3RydWN0IHJhcGFybXMgewotCXN0cnVjdCByYXBh
cm1zCQkqcF9uZXh0OwotCXVuc2lnbmVkIGludAkJcF9jb3VudDsKLQlpbm9fdAkJCXBfaW5vOwot
CWRldl90CQkJcF9kZXY7Ci0JdW5zaWduZWQgbG9uZwkJcF9yZWFkYSwKLQkJCQlwX3JhbWF4LAot
CQkJCXBfcmFlbmQsCi0JCQkJcF9yYWxlbiwKLQkJCQlwX3Jhd2luOwotfTsKLQotc3RhdGljIHN0
cnVjdCByYXBhcm1zICoJCXJhcGFybWw7Ci1zdGF0aWMgc3RydWN0IHJhcGFybXMgKgkJcmFwYXJt
X2NhY2hlOwotCi0vKgogICogTG9vayB1cCBvbmUgY29tcG9uZW50IG9mIGEgcGF0aG5hbWUuCiAg
KiBOLkIuIEFmdGVyIHRoaXMgY2FsbCBfYm90aF8gZmhwIGFuZCByZXNmaCBuZWVkIGFuIGZoX3B1
dAogICoKQEAgLTU0MCw0MiArNTE5LDYgQEAKIH0KIAogLyoKLSAqIE9idGFpbiB0aGUgcmVhZGFo
ZWFkIHBhcmFtZXRlcnMgZm9yIHRoZSBmaWxlCi0gKiBzcGVjaWZpZWQgYnkgKGRldiwgaW5vKS4K
LSAqLwotc3RhdGljIGlubGluZSBzdHJ1Y3QgcmFwYXJtcyAqCi1uZnNkX2dldF9yYXBhcm1zKGRl
dl90IGRldiwgaW5vX3QgaW5vKQotewotCXN0cnVjdCByYXBhcm1zCSpyYSwgKipyYXAsICoqZnJh
cCA9IE5VTEw7Ci0JaW50IGRlcHRoID0gMDsKLQkKLQlmb3IgKHJhcCA9ICZyYXBhcm1fY2FjaGU7
IChyYSA9ICpyYXApOyByYXAgPSAmcmEtPnBfbmV4dCkgewotCQlpZiAocmEtPnBfaW5vID09IGlu
byAmJiByYS0+cF9kZXYgPT0gZGV2KQotCQkJZ290byBmb3VuZDsKLQkJZGVwdGgrKzsKLQkJaWYg
KHJhLT5wX2NvdW50ID09IDApCi0JCQlmcmFwID0gcmFwOwotCX0KLQlkZXB0aCA9IG5mc2RzdGF0
cy5yYV9zaXplKjExLzEwOwotCWlmICghZnJhcCkKLQkJcmV0dXJuIE5VTEw7Ci0JcmFwID0gZnJh
cDsKLQlyYSA9ICpmcmFwOwotCW1lbXNldChyYSwgMCwgc2l6ZW9mKCpyYSkpOwotCXJhLT5wX2Rl
diA9IGRldjsKLQlyYS0+cF9pbm8gPSBpbm87Ci1mb3VuZDoKLQlpZiAocmFwICE9ICZyYXBhcm1f
Y2FjaGUpIHsKLQkJKnJhcCA9IHJhLT5wX25leHQ7Ci0JCXJhLT5wX25leHQgICA9IHJhcGFybV9j
YWNoZTsKLQkJcmFwYXJtX2NhY2hlID0gcmE7Ci0JfQotCXJhLT5wX2NvdW50Kys7Ci0JbmZzZHN0
YXRzLnJhX2RlcHRoW2RlcHRoKjEwL25mc2RzdGF0cy5yYV9zaXplXSsrOwotCXJldHVybiByYTsK
LX0KLQotLyoKICAqIFJlYWQgZGF0YSBmcm9tIGEgZmlsZS4gY291bnQgbXVzdCBjb250YWluIHRo
ZSByZXF1ZXN0ZWQgcmVhZCBjb3VudAogICogb24gZW50cnkuIE9uIHJldHVybiwgKmNvdW50IGNv
bnRhaW5zIHRoZSBudW1iZXIgb2YgYnl0ZXMgYWN0dWFsbHkgcmVhZC4KICAqIE4uQi4gQWZ0ZXIg
dGhpcyBjYWxsIGZocCBuZWVkcyBhbiBmaF9wdXQKQEAgLTYyNiw3ICs1NjksNiBAQAogCQlyYS0+
cF9yYWVuZCA9IGZpbGUuZl9yYWVuZDsKIAkJcmEtPnBfcmFsZW4gPSBmaWxlLmZfcmFsZW47CiAJ
CXJhLT5wX3Jhd2luID0gZmlsZS5mX3Jhd2luOwotCQlyYS0+cF9jb3VudCAtPSAxOwogCX0KIAog
CWlmIChlcnIgPj0gMCkgewpAQCAtMTU0Niw0MiArMTQ4OCw0IEBACiAJCWVyciA9IHBlcm1pc3Np
b24oaW5vZGUsIE1BWV9FWEVDKTsKIAogCXJldHVybiBlcnI/IG5mc2Vycm5vKGVycikgOiAwOwot
fQotCi12b2lkCi1uZnNkX3JhY2FjaGVfc2h1dGRvd24odm9pZCkKLXsKLQlpZiAoIXJhcGFybV9j
YWNoZSkKLQkJcmV0dXJuOwotCWRwcmludGsoIm5mc2Q6IGZyZWVpbmcgcmVhZGFoZWFkIGJ1ZmZl
cnMuXG4iKTsKLQlrZnJlZShyYXBhcm1sKTsKLQlyYXBhcm1fY2FjaGUgPSByYXBhcm1sID0gTlVM
TDsKLX0KLS8qCi0gKiBJbml0aWFsaXplIHJlYWRhaGVhZCBwYXJhbSBjYWNoZQotICovCi1pbnQK
LW5mc2RfcmFjYWNoZV9pbml0KGludCBjYWNoZV9zaXplKQotewotCWludAlpOwotCi0JaWYgKHJh
cGFybV9jYWNoZSkKLQkJcmV0dXJuIDA7Ci0JcmFwYXJtbCA9IGttYWxsb2Moc2l6ZW9mKHN0cnVj
dCByYXBhcm1zKSAqIGNhY2hlX3NpemUsIEdGUF9LRVJORUwpOwotCi0JaWYgKHJhcGFybWwgIT0g
TlVMTCkgewotCQlkcHJpbnRrKCJuZnNkOiBhbGxvY2F0aW5nICVkIHJlYWRhaGVhZCBidWZmZXJz
LlxuIiwKLQkJCWNhY2hlX3NpemUpOwotCQltZW1zZXQocmFwYXJtbCwgMCwgc2l6ZW9mKHN0cnVj
dCByYXBhcm1zKSAqIGNhY2hlX3NpemUpOwotCQlmb3IgKGkgPSAwOyBpIDwgY2FjaGVfc2l6ZSAt
IDE7IGkrKykgewotCQkJcmFwYXJtbFtpXS5wX25leHQgPSByYXBhcm1sICsgaSArIDE7Ci0JCX0K
LQkJcmFwYXJtX2NhY2hlID0gcmFwYXJtbDsKLQl9IGVsc2UgewotCQlwcmludGsoS0VSTl9XQVJO
SU5HCi0JCSAgICAgICAibmZzZDogQ291bGQgbm90IGFsbG9jYXRlIG1lbW9yeSByZWFkLWFoZWFk
IGNhY2hlLlxuIik7Ci0JCXJldHVybiAtRU5PTUVNOwotCX0KLQluZnNkc3RhdHMucmFfc2l6ZSA9
IGNhY2hlX3NpemU7Ci0JcmV0dXJuIDA7CiB9Cg==

--0__=882569930080B3208f9e8a93df938690918c882569930080B320--

-
To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
the body of a message to majordomo@vger.kernel.org
Please read the FAQ at http://www.tux.org/lkml/
