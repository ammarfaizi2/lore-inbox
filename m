Return-Path: <linux-kernel-owner+willy=40w.ods.org-S267627AbUHJSHx@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S267627AbUHJSHx (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 10 Aug 2004 14:07:53 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S267608AbUHJSEN
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 10 Aug 2004 14:04:13 -0400
Received: from mx1.redhat.com ([66.187.233.31]:14568 "EHLO mx1.redhat.com")
	by vger.kernel.org with ESMTP id S267566AbUHJSAa (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 10 Aug 2004 14:00:30 -0400
From: David Howells <dhowells@redhat.com>
In-Reply-To: <16109.1092044758@redhat.com> 
References: <16109.1092044758@redhat.com>  <Pine.LNX.4.58.0408072221480.1793@ppc970.osdl.org> <Xine.LNX.4.44.0408080046130.27710-100000@dhcp83-76.boston.redhat.com> 
Cc: Linus Torvalds <torvalds@osdl.org>, James Morris <jmorris@redhat.com>,
       akpm@osdl.org, linux-kernel@vger.kernel.org, arjanv@redhat.com,
       dwmw2@infradead.org, greg@kroah.com, Chris Wright <chrisw@osdl.org>,
       sfrench@samba.org, mike@halcrow.us,
       Trond Myklebust <trond.myklebust@fys.uio.no>,
       Kyle Moffett <mrmacman_g4@mac.com>,
       viro@parcelfarce.linux.theplanet.co.uk
Subject: [PATCH] implement in-kernel keys & keyring management [try #5]
User-Agent: EMH/1.14.1 SEMI/1.14.5 (Awara-Onsen) FLIM/1.14.5 (Demachiyanagi) APEL/10.6 Emacs/21.3 (i386-redhat-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.5 - "Awara-Onsen")
Content-Type: text/plain; charset=US-ASCII
Date: Tue, 10 Aug 2004 18:59:58 +0100
Message-ID: <5788.1092160798@redhat.com>
To: unlisted-recipients:; (no To-header on input)
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


I've modified my patch to avoid a locking error that Al Viro pointed out. If
you have two keyrings A and B, if one process tries to link A to B, whilst in
parallel another process tries to link B to A, it could end up creating a
cycle in the graph. I've added code to serialise link calls with respect to
one another to obviate that problem.

It can be found at:

	http://people.redhat.com/~dhowells/keys/keys-268rc2-5.diff.bz2

David.
