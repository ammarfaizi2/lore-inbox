Return-Path: <linux-kernel-owner+akpm=40zip.com.au-S1751283AbWFESuS@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751283AbWFESuS (ORCPT <rfc822;akpm@zip.com.au>);
	Mon, 5 Jun 2006 14:50:18 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751284AbWFESuS
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Mon, 5 Jun 2006 14:50:18 -0400
Received: from pentafluge.infradead.org ([213.146.154.40]:60134 "EHLO
	pentafluge.infradead.org") by vger.kernel.org with ESMTP
	id S1751283AbWFESuQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Mon, 5 Jun 2006 14:50:16 -0400
Subject: Re: 2.6.17-rc5-mm1
From: Arjan van de Ven <arjan@infradead.org>
To: Christoph Lameter <clameter@sgi.com>
Cc: Andy Whitcroft <apw@shadowen.org>, "Martin J. Bligh" <mbligh@mbligh.org>,
        Andrew Morton <akpm@osdl.org>, mbligh@google.com,
        linux-kernel@vger.kernel.org, ak@suse.de,
        Hugh Dickins <hugh@veritas.com>
In-Reply-To: <Pine.LNX.4.64.0606051137400.17951@schroedinger.engr.sgi.com>
References: <447DEF49.9070401@google.com>
	 <20060531140652.054e2e45.akpm@osdl.org> <447E093B.7020107@mbligh.org>
	 <20060531144310.7aa0e0ff.akpm@osdl.org> <447E104B.6040007@mbligh.org>
	 <447F1702.3090405@shadowen.org> <44842C01.2050604@shadowen.org>
	 <Pine.LNX.4.64.0606051137400.17951@schroedinger.engr.sgi.com>
Content-Type: text/plain
Date: Mon, 05 Jun 2006 20:49:59 +0200
Message-Id: <1149533399.3111.120.camel@laptopd505.fenrus.org>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.3 (2.2.3-2.fc4) 
Content-Transfer-Encoding: 7bit
X-SRS-Rewrite: SMTP reverse-path rewritten from <arjan@infradead.org> by pentafluge.infradead.org
	See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 2006-06-05 at 11:43 -0700, Christoph Lameter wrote:
> On Mon, 5 Jun 2006, Andy Whitcroft wrote:
> 
> > Ok.  Did a split search on -mm2 for this.  With the full stack I was
> > still tripping up on the bad thread hand-off trigger above.  However,
> > when split searching I seemed to get somewhat different panics pretty
> > commonly in the allocator.  My split search led me to the start of the
> > swapless page migration patches:
> > 
> > GOOD:page-migration-cleanup-pass-mapping-to-migration-functions.patch
> > GOOD:page-migration-cleanup-move-fallback-handling-into-special-function.patch
> > ----:swapless-pm-add-r-w-migration-entries.patch
> > -BAD:swapless-pm-add-r-w-migration-entries-fix-2.patch
> 
> 
> So it happens with r-w-migration-entries but not without fix-2? Or does 
> it require the fix-2 in order to happen? Without the fix page migration 
> is broken.
> 
> Does LTP include any page migration tests? Guess not? If not then this 
> could be simply due to code rearrangement making the problem appear in a 
> different way.
> 
> Which test did this?
> 
> Swap migration uses the two higest numbers of swap types (30 and 31). If 
> those are generated by something then we could have trouble but I do not 
> see how the patches could hurt otherwise.
ltp has many weird swap tests

(and I assume you're not talking about the pte's that are swapped, but
only the file type in the swap signature; since the higher bits in the
pte are used by the non-linear vma feature afaik)


