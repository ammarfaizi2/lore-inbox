Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S293436AbSB1O47>; Thu, 28 Feb 2002 09:56:59 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S293109AbSB1OyZ>; Thu, 28 Feb 2002 09:54:25 -0500
Received: from dell-paw-3.cambridge.redhat.com ([195.224.55.237]:31991 "HELO
	executor.cambridge.redhat.com") by vger.kernel.org with SMTP
	id <S293357AbSB1Owi>; Thu, 28 Feb 2002 09:52:38 -0500
To: linux-kernel@vger.kernel.org
Cc: torvalds@transmeta.org
Subject: thread groups bug?
User-Agent: EMH/1.14.1 SEMI/1.14.3 (Ushinoya) FLIM/1.14.3
 (=?ISO-8859-4?Q?Unebigory=F2mae?=) APEL/10.3 Emacs/21.1
 (i386-redhat-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.3 - "Ushinoya")
Content-Type: text/plain; charset=US-ASCII
Date: Thu, 28 Feb 2002 14:52:36 +0000
Message-ID: <2628.1014907956@warthog.cambridge.redhat.com>
From: David Howells <dhowells@redhat.com>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


If the master thread of a thread group (PID==TGID) performs an execve() then
it is possible to end up with two or more thread groups with the same TGID.

Would you be willing to have an execve() on the master thread kill all the
other threads? (And thus be slightly closer to POSIX compliance).

Similarly, if the master thread exits, should all the other threads be killed
too?

If a subsidary thread does an execve(), then what should happen? I can see two
ways of handling it: (1) Make it seem that the master thread did an execve(),
and kill all the other threads (which is closer to POSIX); and (2) allow the
child thread to depart the thread group and set up by itself (as happens now).

Of course, comparing the Linux "threading" system to POSIX threads doesn't
hold up very well:-/

David
