Return-Path: <linux-kernel-owner+willy=40w.ods.org-S261428AbULNGCU@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261428AbULNGCU (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 14 Dec 2004 01:02:20 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261429AbULNGCU
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 14 Dec 2004 01:02:20 -0500
Received: from fmr17.intel.com ([134.134.136.16]:35767 "EHLO
	orsfmr002.jf.intel.com") by vger.kernel.org with ESMTP
	id S261428AbULNGBf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 14 Dec 2004 01:01:35 -0500
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----_=_NextPart_001_01C4E1A2.2C66B27B"
Subject: RE: [Compatibilty patch] sigtimedwait
Date: Tue, 14 Dec 2004 14:00:11 +0800
Message-ID: <894E37DECA393E4D9374E0ACBBE7427013CA15@pdsmsx402.ccr.corp.intel.com>
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator: 
Thread-Topic: [Compatibilty patch] sigtimedwait
Thread-Index: AcTeVSgLH+g8oy9NS++fVZFFHxhGlADTBV1A
From: "Zou, Nanhai" <nanhai.zou@intel.com>
To: "David S. Miller" <davem@davemloft.net>
Cc: <linux-kernel@vger.kernel.org>, <akpm@osdl.org>,
       "Luck, Tony" <tony.luck@intel.com>, <ak@suse.de>, <ralf@linux-mips.org>,
       <paulus@au.ibm.com>, <schwidefsky@de.ibm.com>,
       "Stephen Rothwell" <sfr@canb.auug.org.au>
X-OriginalArrivalTime: 14 Dec 2004 06:00:12.0625 (UTC) FILETIME=[2CD3DC10:01C4E1A2]
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.

------_=_NextPart_001_01C4E1A2.2C66B27B
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

Thanks for the suggestion.
I have updated the patch, add a macro __COMPAT_ENDIAN_SWAP__ in
include/asm-mips/compat.h

Also I have changed the name from siginfo_t32 to compat_siginfo_t
according to Stephen Rothwell's suggestion=20

This patch is against 2.6.10-rc3-mm1.

Signed-off-by: Zou Nan hai <Nanhai.zou@intel.com>

> -----Original Message-----
> From: David S. Miller [mailto:davem@davemloft.net]
> Sent: Friday, December 10, 2004 9:08 AM
> To: Zou, Nanhai
> Cc: linux-kernel@vger.kernel.org; akpm@osdl.org; Luck, Tony;
ak@suse.de;
> ralf@linux-mips.org; paulus@au.ibm.com; schwidefsky@de.ibm.com
> Subject: Re: [Compatibilty patch] sigtimedwait
>=20
> On Fri, 10 Dec 2004 08:40:57 +0800
> "Zou, Nanhai" <nanhai.zou@intel.com> wrote:
>=20
> > But I can't put a
> > #ifdef __LITTLE_ENDIAN
> > here,
> > Because
> > only MIPS does the byte swapping in little endian mode.
> > X86_64 and ia64 does not.
>=20
> Good point.  Perhaps we can turn this into a cleaner looking
> macro name that gets set in include/asm/compat.h

------_=_NextPart_001_01C4E1A2.2C66B27B
Content-Type: application/octet-stream;
	name="compat-sigtimedwait.patch"
Content-Transfer-Encoding: base64
Content-Description: compat-sigtimedwait.patch
Content-Disposition: attachment;
	filename="compat-sigtimedwait.patch"

ZGlmZiAtTnJhdXAgYS9hcmNoL2lhNjQvaWEzMi9pYTMyX2VudHJ5LlMgYi9hcmNoL2lhNjQvaWEz
Mi9pYTMyX2VudHJ5LlMKLS0tIGEvYXJjaC9pYTY0L2lhMzIvaWEzMl9lbnRyeS5TCTIwMDQtMTIt
MTMgMDM6NTY6MjkuMDAwMDAwMDAwIC0wODAwCisrKyBiL2FyY2gvaWE2NC9pYTMyL2lhMzJfZW50
cnkuUwkyMDA0LTEyLTEzIDAzOjU3OjA5LjAwMDAwMDAwMCAtMDgwMApAQCAtMzg3LDcgKzM4Nyw3
IEBAIGlhMzJfc3lzY2FsbF90YWJsZToKIAlkYXRhOCBzeXMzMl9ydF9zaWdhY3Rpb24KIAlkYXRh
OCBzeXMzMl9ydF9zaWdwcm9jbWFzayAvKiAxNzUgKi8KIAlkYXRhOCBzeXNfcnRfc2lncGVuZGlu
ZwotCWRhdGE4IHN5czMyX3J0X3NpZ3RpbWVkd2FpdAorCWRhdGE4IGNvbXBhdF9ydF9zaWd0aW1l
ZHdhaXQKIAlkYXRhOCBzeXMzMl9ydF9zaWdxdWV1ZWluZm8KIAlkYXRhOCBzeXMzMl9ydF9zaWdz
dXNwZW5kCiAJZGF0YTggc3lzMzJfcHJlYWQJICAvKiAxODAgKi8KZGlmZiAtTnJhdXAgYS9hcmNo
L2lhNjQvaWEzMi9pYTMyX3NpZ25hbC5jIGIvYXJjaC9pYTY0L2lhMzIvaWEzMl9zaWduYWwuYwot
LS0gYS9hcmNoL2lhNjQvaWEzMi9pYTMyX3NpZ25hbC5jCTIwMDQtMTItMTMgMDM6NTY6MjkuMDAw
MDAwMDAwIC0wODAwCisrKyBiL2FyY2gvaWE2NC9pYTMyL2lhMzJfc2lnbmFsLmMJMjAwNC0xMi0x
MyAwMzo1OTo1NC4wMDAwMDAwMDAgLTA4MDAKQEAgLTU5LDE5ICs1OSwxOSBAQCBzdHJ1Y3QgcnRf
c2lnZnJhbWVfaWEzMgogICAgICAgIGludCBzaWc7CiAgICAgICAgaW50IHBpbmZvOwogICAgICAg
IGludCBwdWM7Ci0gICAgICAgc2lnaW5mb190MzIgaW5mbzsKKyAgICAgICBjb21wYXRfc2lnaW5m
b190IGluZm87CiAgICAgICAgc3RydWN0IHVjb250ZXh0X2lhMzIgdWM7CiAgICAgICAgc3RydWN0
IF9mcHN0YXRlX2lhMzIgZnBzdGF0ZTsKICAgICAgICBjaGFyIHJldGNvZGVbOF07CiB9OwogCiBp
bnQKLWNvcHlfc2lnaW5mb19mcm9tX3VzZXIzMiAoc2lnaW5mb190ICp0bywgc2lnaW5mb190MzIg
X191c2VyICpmcm9tKQorY29weV9zaWdpbmZvX2Zyb21fdXNlcjMyIChzaWdpbmZvX3QgKnRvLCBj
b21wYXRfc2lnaW5mb190IF9fdXNlciAqZnJvbSkKIHsKIAl1bnNpZ25lZCBsb25nIHRtcDsKIAlp
bnQgZXJyOwogCi0JaWYgKCFhY2Nlc3Nfb2soVkVSSUZZX1JFQUQsIGZyb20sIHNpemVvZihzaWdp
bmZvX3QzMikpKQorCWlmICghYWNjZXNzX29rKFZFUklGWV9SRUFELCBmcm9tLCBzaXplb2YoY29t
cGF0X3NpZ2luZm9fdCkpKQogCQlyZXR1cm4gLUVGQVVMVDsKIAogCWVyciA9IF9fZ2V0X3VzZXIo
dG8tPnNpX3NpZ25vLCAmZnJvbS0+c2lfc2lnbm8pOwpAQCAtMTEwLDEyICsxMTAsMTIgQEAgY29w
eV9zaWdpbmZvX2Zyb21fdXNlcjMyIChzaWdpbmZvX3QgKnRvLAogfQogCiBpbnQKLWNvcHlfc2ln
aW5mb190b191c2VyMzIgKHNpZ2luZm9fdDMyIF9fdXNlciAqdG8sIHNpZ2luZm9fdCAqZnJvbSkK
K2NvcHlfc2lnaW5mb190b191c2VyMzIgKGNvbXBhdF9zaWdpbmZvX3QgX191c2VyICp0bywgc2ln
aW5mb190ICpmcm9tKQogewogCXVuc2lnbmVkIGludCBhZGRyOwogCWludCBlcnI7CiAKLQlpZiAo
IWFjY2Vzc19vayhWRVJJRllfV1JJVEUsIHRvLCBzaXplb2Yoc2lnaW5mb190MzIpKSkKKwlpZiAo
IWFjY2Vzc19vayhWRVJJRllfV1JJVEUsIHRvLCBzaXplb2YoY29tcGF0X3NpZ2luZm9fdCkpKQog
CQlyZXR1cm4gLUVGQVVMVDsKIAogCS8qIElmIHlvdSBjaGFuZ2Ugc2lnaW5mb190IHN0cnVjdHVy
ZSwgcGxlYXNlIGJlIHN1cmUKQEAgLTU4OSwzNCArNTg5LDcgQEAgc3lzMzJfcnRfc2lncHJvY21h
c2sgKGludCBob3csIGNvbXBhdF9zaQogfQogCiBhc21saW5rYWdlIGxvbmcKLXN5czMyX3J0X3Np
Z3RpbWVkd2FpdCAoY29tcGF0X3NpZ3NldF90IF9fdXNlciAqdXRoZXNlLCBzaWdpbmZvX3QzMiBf
X3VzZXIgKnVpbmZvLAotCQkgICAgICAgc3RydWN0IGNvbXBhdF90aW1lc3BlYyBfX3VzZXIgKnV0
cywgdW5zaWduZWQgaW50IHNpZ3NldHNpemUpCi17Ci0JbW1fc2VnbWVudF90IG9sZF9mcyA9IGdl
dF9mcygpOwotCXN0cnVjdCB0aW1lc3BlYyB0OwotCXNpZ2luZm9fdCBpbmZvOwotCXNpZ3NldF90
IHM7Ci0JaW50IHJldDsKLQotCWlmIChjb3B5X2Zyb21fdXNlcigmcy5zaWcsIHV0aGVzZSwgc2l6
ZW9mKGNvbXBhdF9zaWdzZXRfdCkpKQotCQlyZXR1cm4gLUVGQVVMVDsKLQlpZiAodXRzICYmIGdl
dF9jb21wYXRfdGltZXNwZWMoJnQsIHV0cykpCi0JCXJldHVybiAtRUZBVUxUOwotCXNldF9mcyhL
RVJORUxfRFMpOwotCXJldCA9IHN5c19ydF9zaWd0aW1lZHdhaXQoKHNpZ3NldF90IF9fdXNlciAq
KSAmcywKLQkJCQkgIHVpbmZvID8gKHNpZ2luZm9fdCBfX3VzZXIgKikgJmluZm8gOiBOVUxMLAot
CQkJCSAgdXRzID8gKHN0cnVjdCB0aW1lc3BlYyBfX3VzZXIgKikgJnQgOiBOVUxMLAotCQkJCSAg
c2lnc2V0c2l6ZSk7Ci0Jc2V0X2ZzKG9sZF9mcyk7Ci0JaWYgKHJldCA+PSAwICYmIHVpbmZvKSB7
Ci0JCWlmIChjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHVpbmZvLCAmaW5mbykpCi0JCQlyZXR1cm4g
LUVGQVVMVDsKLQl9Ci0JcmV0dXJuIHJldDsKLX0KLQotYXNtbGlua2FnZSBsb25nCi1zeXMzMl9y
dF9zaWdxdWV1ZWluZm8gKGludCBwaWQsIGludCBzaWcsIHNpZ2luZm9fdDMyIF9fdXNlciAqdWlu
Zm8pCitzeXMzMl9ydF9zaWdxdWV1ZWluZm8gKGludCBwaWQsIGludCBzaWcsIGNvbXBhdF9zaWdp
bmZvX3QgX191c2VyICp1aW5mbykKIHsKIAltbV9zZWdtZW50X3Qgb2xkX2ZzID0gZ2V0X2ZzKCk7
CiAJc2lnaW5mb190IGluZm87CmRpZmYgLU5yYXVwIGEvYXJjaC9pYTY0L2lhMzIvaWEzMnByaXYu
aCBiL2FyY2gvaWE2NC9pYTMyL2lhMzJwcml2LmgKLS0tIGEvYXJjaC9pYTY0L2lhMzIvaWEzMnBy
aXYuaAkyMDA0LTEyLTEzIDAzOjU2OjI5LjAwMDAwMDAwMCAtMDgwMAorKysgYi9hcmNoL2lhNjQv
aWEzMi9pYTMycHJpdi5oCTIwMDQtMTItMTMgMDQ6MDE6MjAuMDAwMDAwMDAwIC0wODAwCkBAIC0y
MzIsNyArMjMyLDcgQEAgdHlwZWRlZiB1bmlvbiBzaWd2YWwzMiB7CiAKICNkZWZpbmUgU0lHRVZf
UEFEX1NJWkUzMiAoKFNJR0VWX01BWF9TSVpFL3NpemVvZihpbnQpKSAtIDMpCiAKLXR5cGVkZWYg
c3RydWN0IHNpZ2luZm8zMiB7Cit0eXBlZGVmIHN0cnVjdCBjb21wYXRfc2lnaW5mbyB7CiAJaW50
IHNpX3NpZ25vOwogCWludCBzaV9lcnJubzsKIAlpbnQgc2lfY29kZTsKQEAgLTI4Miw3ICsyODIs
NyBAQCB0eXBlZGVmIHN0cnVjdCBzaWdpbmZvMzIgewogCQkJaW50IF9mZDsKIAkJfSBfc2lncG9s
bDsKIAl9IF9zaWZpZWxkczsKLX0gc2lnaW5mb190MzI7Cit9IGNvbXBhdF9zaWdpbmZvX3Q7CiAK
IHR5cGVkZWYgc3RydWN0IHNpZ2V2ZW50MzIgewogCXNpZ3ZhbF90MzIgc2lnZXZfdmFsdWU7CkBA
IC01NTksMTAgKzU1OSw2IEBAIHN0cnVjdCB1c2VyX3JlZ3Nfc3RydWN0MzIgewogZXh0ZXJuIGlu
dCBzYXZlX2lhMzJfZnBzdGF0ZSAoc3RydWN0IHRhc2tfc3RydWN0ICosIHN0cnVjdCBpYTMyX3Vz
ZXJfaTM4N19zdHJ1Y3QgX191c2VyICopOwogZXh0ZXJuIGludCBzYXZlX2lhMzJfZnB4c3RhdGUg
KHN0cnVjdCB0YXNrX3N0cnVjdCAqLCBzdHJ1Y3QgaWEzMl91c2VyX2Z4c3Jfc3RydWN0IF9fdXNl
ciAqKTsKIAotLyogUHJvdG90eXBlcyBmb3IgdXNlIGluIHN5c19pYTMyLmMgKi8KLWludCBjb3B5
X3NpZ2luZm9fdG9fdXNlcjMyIChzaWdpbmZvX3QzMiBfX3VzZXIgKnRvLCBzaWdpbmZvX3QgKmZy
b20pOwotaW50IGNvcHlfc2lnaW5mb19mcm9tX3VzZXIzMiAoc2lnaW5mb190ICp0bywgc2lnaW5m
b190MzIgX191c2VyICpmcm9tKTsKLQogI2VuZGlmIC8qICFDT05GSUdfSUEzMl9TVVBQT1JUICov
CiAKICNlbmRpZiAvKiBfQVNNX0lBNjRfSUEzMl9QUklWX0ggKi8KZGlmZiAtTnJhdXAgYS9hcmNo
L2lhNjQvaWEzMi9zeXNfaWEzMi5jIGIvYXJjaC9pYTY0L2lhMzIvc3lzX2lhMzIuYwotLS0gYS9h
cmNoL2lhNjQvaWEzMi9zeXNfaWEzMi5jCTIwMDQtMTItMTMgMDM6NTY6MjkuMDAwMDAwMDAwIC0w
ODAwCisrKyBiL2FyY2gvaWE2NC9pYTMyL3N5c19pYTMyLmMJMjAwNC0xMi0xMyAwNDoxMzo1OS4w
MDAwMDAwMDAgLTA4MDAKQEAgLTI2NDEsNyArMjY0MSw3IEBAIGxvbmcgc3lzMzJfZmFkdmlzZTY0
XzY0KGludCBmZCwgX191MzIgb2YKIH0gCiAKIGFzbWxpbmthZ2UgbG9uZyBzeXMzMl93YWl0aWQo
aW50IHdoaWNoLCBjb21wYXRfcGlkX3QgcGlkLAotCQkJICAgICBzaWdpbmZvX3QzMiBfX3VzZXIg
KnVpbmZvLCBpbnQgb3B0aW9ucywKKwkJCSAgICAgY29tcGF0X3NpZ2luZm9fdCBfX3VzZXIgKnVp
bmZvLCBpbnQgb3B0aW9ucywKIAkJCSAgICAgc3RydWN0IGNvbXBhdF9ydXNhZ2UgX191c2VyICp1
cnUpCiB7CiAJc2lnaW5mb190IGluZm87CmRpZmYgLU5yYXVwIGEvYXJjaC9taXBzL2tlcm5lbC9z
Y2FsbDY0LW4zMi5TIGIvYXJjaC9taXBzL2tlcm5lbC9zY2FsbDY0LW4zMi5TCi0tLSBhL2FyY2gv
bWlwcy9rZXJuZWwvc2NhbGw2NC1uMzIuUwkyMDA0LTEyLTEzIDAzOjU2OjI5LjAwMDAwMDAwMCAt
MDgwMAorKysgYi9hcmNoL21pcHMva2VybmVsL3NjYWxsNjQtbjMyLlMJMjAwNC0xMi0xMyAwMzo1
NzowOS4wMDAwMDAwMDAgLTA4MDAKQEAgLTI0Myw3ICsyNDMsNyBAQCBFWFBPUlQoc3lzbjMyX2Nh
bGxfdGFibGUpCiAJUFRSCXN5c19jYXBnZXQKIAlQVFIJc3lzX2NhcHNldAogCVBUUglzeXMzMl9y
dF9zaWdwZW5kaW5nCQkvKiA2MTI1ICovCi0JUFRSCXN5czMyX3J0X3NpZ3RpbWVkd2FpdAorCVBU
Ugljb21wYXRfcnRfc2lndGltZWR3YWl0CiAJUFRSCXN5czMyX3J0X3NpZ3F1ZXVlaW5mbwogCVBU
UglzeXMzMl9ydF9zaWdzdXNwZW5kCiAJUFRSCXN5czMyX3NpZ2FsdHN0YWNrCmRpZmYgLU5yYXVw
IGEvYXJjaC9taXBzL2tlcm5lbC9zY2FsbDY0LW8zMi5TIGIvYXJjaC9taXBzL2tlcm5lbC9zY2Fs
bDY0LW8zMi5TCi0tLSBhL2FyY2gvbWlwcy9rZXJuZWwvc2NhbGw2NC1vMzIuUwkyMDA0LTEyLTEz
IDAzOjU2OjI5LjAwMDAwMDAwMCAtMDgwMAorKysgYi9hcmNoL21pcHMva2VybmVsL3NjYWxsNjQt
bzMyLlMJMjAwNC0xMi0xMyAwMzo1NzowOS4wMDAwMDAwMDAgLTA4MDAKQEAgLTQyMCw3ICs0MjAs
NyBAQCBzeXNfY2FsbF90YWJsZToKIAlQVFIJc3lzMzJfcnRfc2lnYWN0aW9uCiAJUFRSCXN5czMy
X3J0X3NpZ3Byb2NtYXNrIAkJLyogNDE5NSAqLwogCVBUUglzeXMzMl9ydF9zaWdwZW5kaW5nCi0J
UFRSCXN5czMyX3J0X3NpZ3RpbWVkd2FpdAorCVBUUgljb21wYXRfcnRfc2lndGltZWR3YWl0CiAJ
UFRSCXN5czMyX3J0X3NpZ3F1ZXVlaW5mbwogCVBUUglzeXMzMl9ydF9zaWdzdXNwZW5kCiAJUFRS
CXN5czMyX3ByZWFkCQkJLyogNDIwMCAqLwpkaWZmIC1OcmF1cCBhL2FyY2gvbWlwcy9rZXJuZWwv
c2lnbmFsMzIuYyBiL2FyY2gvbWlwcy9rZXJuZWwvc2lnbmFsMzIuYwotLS0gYS9hcmNoL21pcHMv
a2VybmVsL3NpZ25hbDMyLmMJMjAwNC0xMi0xMyAwMzo1NjoyOS4wMDAwMDAwMDAgLTA4MDAKKysr
IGIvYXJjaC9taXBzL2tlcm5lbC9zaWduYWwzMi5jCTIwMDQtMTItMTMgMDQ6MjU6NDYuMDAwMDAw
MDAwIC0wODAwCkBAIC0zNyw3ICszNyw3IEBAIHR5cGVkZWYgdW5pb24gc2lndmFsMzIgewogCXMz
MiBzaXZhbF9wdHI7CiB9IHNpZ3ZhbF90MzI7CiAKLXR5cGVkZWYgc3RydWN0IHNpZ2luZm8zMiB7
Cit0eXBlZGVmIHN0cnVjdCBjb21wYXRfc2lnaW5mb3sKIAlpbnQgc2lfc2lnbm87CiAJaW50IHNp
X2NvZGU7CiAJaW50IHNpX2Vycm5vOwpAQCAtOTMsNyArOTMsNyBAQCB0eXBlZGVmIHN0cnVjdCBz
aWdpbmZvMzIgewogCQl9IF9ydDsKIAogCX0gX3NpZmllbGRzOwotfSBzaWdpbmZvX3QzMjsKK30g
Y29tcGF0X3NpZ2luZm9fdDsKIAogLyoKICAqIEluY2x1ZGluZyA8YXNtL3VuaXN0ZC5oPiB3b3Vs
ZCBnaXZlIHVzZSB0aGUgNjQtYml0IHN5c2NhbGwgbnVtYmVycyAuLi4KQEAgLTM4OSwxNSArMzg5
LDE1IEBAIHN0cnVjdCBzaWdmcmFtZSB7CiBzdHJ1Y3QgcnRfc2lnZnJhbWUzMiB7CiAJdTMyIHJz
X2Fzc1s0XTsJCQkvKiBhcmd1bWVudCBzYXZlIHNwYWNlIGZvciBvMzIgKi8KIAl1MzIgcnNfY29k
ZVsyXTsJCQkvKiBzaWduYWwgdHJhbXBvbGluZSAqLwotCXN0cnVjdCBzaWdpbmZvMzIgcnNfaW5m
bzsKKwlzdHJ1Y3QgY29tcGF0X3NpZ2luZm9fdCByc19pbmZvOwogCXN0cnVjdCB1Y29udGV4dDMy
IHJzX3VjOwogfTsKIAotc3RhdGljIGludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHNpZ2luZm9f
dDMyICp0bywgc2lnaW5mb190ICpmcm9tKQoraW50IGNvcHlfc2lnaW5mb190b191c2VyMzIoY29t
cGF0X3NpZ2luZm9fdCAqdG8sIHNpZ2luZm9fdCAqZnJvbSkKIHsKIAlpbnQgZXJyOwogCi0JaWYg
KCFhY2Nlc3Nfb2sgKFZFUklGWV9XUklURSwgdG8sIHNpemVvZihzaWdpbmZvX3QzMikpKQorCWlm
ICghYWNjZXNzX29rIChWRVJJRllfV1JJVEUsIHRvLCBzaXplb2YoY29tcGF0X3NpZ2luZm9fdCkp
KQogCQlyZXR1cm4gLUVGQVVMVDsKIAogCS8qIElmIHlvdSBjaGFuZ2Ugc2lnaW5mb190IHN0cnVj
dHVyZSwgcGxlYXNlIGJlIHN1cmUKQEAgLTY3Nyw3ICs2NzcsNyBAQCBzdGF0aWMgaW5saW5lIHZv
aWQgc2V0dXBfcnRfZnJhbWUoc3RydWN0CiAJZXJyIHw9IF9fcHV0X3VzZXIoMHgwMDAwMDAwYyAg
ICAgICAgICAgICAgICAgICAgICAsIGZyYW1lLT5yc19jb2RlICsgMSk7CiAJZmx1c2hfY2FjaGVf
c2lndHJhbXAoKHVuc2lnbmVkIGxvbmcpIGZyYW1lLT5yc19jb2RlKTsKIAotCS8qIENvbnZlcnQg
KHNpZ2luZm9fdCAtPiBzaWdpbmZvX3QzMikgYW5kIGNvcHkgdG8gdXNlci4gKi8KKwkvKiBDb252
ZXJ0IChzaWdpbmZvX3QgLT4gY29tcGF0X3NpZ2luZm9fdCkgYW5kIGNvcHkgdG8gdXNlci4gKi8K
IAllcnIgfD0gY29weV9zaWdpbmZvX3RvX3VzZXIzMigmZnJhbWUtPnJzX2luZm8sIGluZm8pOwog
CiAJLyogQ3JlYXRlIHRoZSB1Y29udGV4dC4gICovCkBAIC04OTAsOTggKzg5MCw3IEBAIGFzbWxp
bmthZ2UgaW50IHN5czMyX3J0X3NpZ3BlbmRpbmcoY29tcGEKIAlyZXR1cm4gcmV0OwogfQogCi1h
c21saW5rYWdlIGludCBzeXMzMl9ydF9zaWd0aW1lZHdhaXQoY29tcGF0X3NpZ3NldF90ICp1dGhl
c2UsCi0Jc2lnaW5mb190MzIgKnVpbmZvLCBzdHJ1Y3QgY29tcGF0X3RpbWVzcGVjICp1dHMsCi0J
Y29tcGF0X3RpbWVfdCBzaWdzZXRzaXplKQotewotCWludCByZXQsIHNpZzsKLQlzaWdzZXRfdCB0
aGVzZTsKLQljb21wYXRfc2lnc2V0X3QgdGhlc2UzMjsKLQlzdHJ1Y3QgdGltZXNwZWMgdHM7Ci0J
c2lnaW5mb190IGluZm87Ci0JbG9uZyB0aW1lb3V0ID0gMDsKLQotCS8qCi0JICogQXMgdGhlIHJl
c3VsdCBvZiBhIGJyYWluZmFydGluZyBjb21wZXRpdGlvbiBhIGZldyB5ZWFycyBhZ28gdGhlCi0J
ICogc2l6ZSBvZiBzaWdzZXRfdCBmb3IgdGhlIDMyLWJpdCBrZXJuZWwgd2FzIGNob29zZW4gdG8g
YmUgMTI4IGJpdHMKLQkgKiBidXQgbm90aGluZyBzbyBmYXIgaXMgYWN0dWFsbHkgdXNpbmcgdGhh
dCBtYW55LCA2NCBhcmUgZW5vdWdoLiAgU28KLQkgKiBmb3Igbm93IHdlIGp1c3QgZHJvcCB0aGUg
aGlnaCBiaXRzLgotCSAqLwotCWlmIChjb3B5X2Zyb21fdXNlciAoJnRoZXNlMzIsIHV0aGVzZSwg
c2l6ZW9mKGNvbXBhdF9vbGRfc2lnc2V0X3QpKSkKLQkJcmV0dXJuIC1FRkFVTFQ7Ci0KLQlzd2l0
Y2ggKF9OU0lHX1dPUkRTKSB7Ci0jaWZkZWYgX19NSVBTRUJfXwotCWNhc2UgNDogdGhlc2Uuc2ln
WzNdID0gdGhlc2UzMi5zaWdbNl0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzddKSA8PCAzMik7Ci0J
Y2FzZSAzOiB0aGVzZS5zaWdbMl0gPSB0aGVzZTMyLnNpZ1s0XSB8ICgoKGxvbmcpdGhlc2UzMi5z
aWdbNV0pIDw8IDMyKTsKLQljYXNlIDI6IHRoZXNlLnNpZ1sxXSA9IHRoZXNlMzIuc2lnWzJdIHwg
KCgobG9uZyl0aGVzZTMyLnNpZ1szXSkgPDwgMzIpOwotCWNhc2UgMTogdGhlc2Uuc2lnWzBdID0g
dGhlc2UzMi5zaWdbMF0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzFdKSA8PCAzMik7Ci0jZW5kaWYK
LSNpZmRlZiBfX01JUFNFTF9fCi0JY2FzZSA0OiB0aGVzZS5zaWdbM10gPSB0aGVzZTMyLnNpZ1s3
XSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbNl0pIDw8IDMyKTsKLQljYXNlIDM6IHRoZXNlLnNpZ1sy
XSA9IHRoZXNlMzIuc2lnWzVdIHwgKCgobG9uZyl0aGVzZTMyLnNpZ1s0XSkgPDwgMzIpOwotCWNh
c2UgMjogdGhlc2Uuc2lnWzFdID0gdGhlc2UzMi5zaWdbM10gfCAoKChsb25nKXRoZXNlMzIuc2ln
WzJdKSA8PCAzMik7Ci0JY2FzZSAxOiB0aGVzZS5zaWdbMF0gPSB0aGVzZTMyLnNpZ1sxXSB8ICgo
KGxvbmcpdGhlc2UzMi5zaWdbMF0pIDw8IDMyKTsKLSNlbmRpZgotCX0KLQotCS8qCi0JICogSW52
ZXJ0IHRoZSBzZXQgb2YgYWxsb3dlZCBzaWduYWxzIHRvIGdldCB0aG9zZSB3ZQotCSAqIHdhbnQg
dG8gYmxvY2suCi0JICovCi0Jc2lnZGVsc2V0bWFzaygmdGhlc2UsIHNpZ21hc2soU0lHS0lMTCl8
c2lnbWFzayhTSUdTVE9QKSk7Ci0Jc2lnbm90c2V0KCZ0aGVzZSk7Ci0KLQlpZiAodXRzKSB7Ci0J
CWlmIChnZXRfdXNlciAodHMudHZfc2VjLCAmdXRzLT50dl9zZWMpIHx8Ci0JCSAgICBnZXRfdXNl
ciAodHMudHZfbnNlYywgJnV0cy0+dHZfbnNlYykpCi0JCQlyZXR1cm4gLUVJTlZBTDsKLQkJaWYg
KHRzLnR2X25zZWMgPj0gMTAwMDAwMDAwMEwgfHwgdHMudHZfbnNlYyA8IDAKLQkJICAgIHx8IHRz
LnR2X3NlYyA8IDApCi0JCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQlzcGluX2xvY2tfaXJxKCZj
dXJyZW50LT5zaWdoYW5kLT5zaWdsb2NrKTsKLQlzaWcgPSBkZXF1ZXVlX3NpZ25hbChjdXJyZW50
LCAmdGhlc2UsICZpbmZvKTsKLQlpZiAoIXNpZykgewotCQkvKiBOb25lIHJlYWR5IC0tIHRlbXBv
cmFyaWx5IHVuYmxvY2sgdGhvc2Ugd2UncmUgaW50ZXJlc3RlZAotCQkgICBpbiBzbyB0aGF0IHdl
J2xsIGJlIGF3YWtlbmVkIHdoZW4gdGhleSBhcnJpdmUuICAqLwotCQlzaWdzZXRfdCBvbGRibG9j
a2VkID0gY3VycmVudC0+YmxvY2tlZDsKLQkJc2lnYW5kc2V0cygmY3VycmVudC0+YmxvY2tlZCwg
JmN1cnJlbnQtPmJsb2NrZWQsICZ0aGVzZSk7Ci0JCXJlY2FsY19zaWdwZW5kaW5nKCk7Ci0JCXNw
aW5fdW5sb2NrX2lycSgmY3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0KLQkJdGltZW91dCA9
IE1BWF9TQ0hFRFVMRV9USU1FT1VUOwotCQlpZiAodXRzKQotCQkJdGltZW91dCA9ICh0aW1lc3Bl
Y190b19qaWZmaWVzKCZ0cykKLQkJCQkgICArICh0cy50dl9zZWMgfHwgdHMudHZfbnNlYykpOwot
Ci0JCWN1cnJlbnQtPnN0YXRlID0gVEFTS19JTlRFUlJVUFRJQkxFOwotCQl0aW1lb3V0ID0gc2No
ZWR1bGVfdGltZW91dCh0aW1lb3V0KTsKLQotCQlzcGluX2xvY2tfaXJxKCZjdXJyZW50LT5zaWdo
YW5kLT5zaWdsb2NrKTsKLQkJc2lnID0gZGVxdWV1ZV9zaWduYWwoY3VycmVudCwgJnRoZXNlLCAm
aW5mbyk7Ci0JCWN1cnJlbnQtPmJsb2NrZWQgPSBvbGRibG9ja2VkOwotCQlyZWNhbGNfc2lncGVu
ZGluZygpOwotCX0KLQlzcGluX3VubG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2sp
OwotCi0JaWYgKHNpZykgewotCQlyZXQgPSBzaWc7Ci0JCWlmICh1aW5mbykgewotCQkJaWYgKGNv
cHlfc2lnaW5mb190b191c2VyMzIodWluZm8sICZpbmZvKSkKLQkJCQlyZXQgPSAtRUZBVUxUOwot
CQl9Ci0JfSBlbHNlIHsKLQkJcmV0ID0gLUVBR0FJTjsKLQkJaWYgKHRpbWVvdXQpCi0JCQlyZXQg
PSAtRUlOVFI7Ci0JfQotCi0JcmV0dXJuIHJldDsKLX0KLQotYXNtbGlua2FnZSBpbnQgc3lzMzJf
cnRfc2lncXVldWVpbmZvKGludCBwaWQsIGludCBzaWcsIHNpZ2luZm9fdDMyICp1aW5mbykKK2Fz
bWxpbmthZ2UgaW50IHN5czMyX3J0X3NpZ3F1ZXVlaW5mbyhpbnQgcGlkLCBpbnQgc2lnLCBjb21w
YXRfc2lnaW5mb190ICp1aW5mbykKIHsKIAlzaWdpbmZvX3QgaW5mbzsKIAlpbnQgcmV0OwpkaWZm
IC1OcmF1cCBhL2FyY2gvcHBjNjQva2VybmVsL21pc2MuUyBiL2FyY2gvcHBjNjQva2VybmVsL21p
c2MuUwotLS0gYS9hcmNoL3BwYzY0L2tlcm5lbC9taXNjLlMJMjAwNC0xMi0xMyAwMzo1NjoyOS4w
MDAwMDAwMDAgLTA4MDAKKysrIGIvYXJjaC9wcGM2NC9rZXJuZWwvbWlzYy5TCTIwMDQtMTItMTMg
MDM6NTc6MDkuMDAwMDAwMDAwIC0wODAwCkBAIC04NzAsNyArODcwLDcgQEAgX0dMT0JBTChzeXNf
Y2FsbF90YWJsZTMyKQogCS5sbG9uZyAuc3lzMzJfcnRfc2lnYWN0aW9uCiAJLmxsb25nIC5zeXMz
Ml9ydF9zaWdwcm9jbWFzawogCS5sbG9uZyAuc3lzMzJfcnRfc2lncGVuZGluZyAgICAgLyogMTc1
ICovCi0JLmxsb25nIC5zeXMzMl9ydF9zaWd0aW1lZHdhaXQKKwkubGxvbmcgLmNvbXBhdF9ydF9z
aWd0aW1lZHdhaXQKIAkubGxvbmcgLnN5czMyX3J0X3NpZ3F1ZXVlaW5mbwogCS5sbG9uZyAucHBj
MzJfcnRfc2lnc3VzcGVuZAogCS5sbG9uZyAuc3lzMzJfcHJlYWQ2NApkaWZmIC1OcmF1cCBhL2Fy
Y2gvcHBjNjQva2VybmVsL3NpZ25hbDMyLmMgYi9hcmNoL3BwYzY0L2tlcm5lbC9zaWduYWwzMi5j
Ci0tLSBhL2FyY2gvcHBjNjQva2VybmVsL3NpZ25hbDMyLmMJMjAwNC0xMi0xMyAwMzo1NjoyOS4w
MDAwMDAwMDAgLTA4MDAKKysrIGIvYXJjaC9wcGM2NC9rZXJuZWwvc2lnbmFsMzIuYwkyMDA0LTEy
LTEzIDA0OjIxOjQzLjAwMDAwMDAwMCAtMDgwMApAQCAtNzEsNyArNzEsNyBAQCBzdHJ1Y3Qgc2ln
cmVnczMyIHsKICAqCiAgKi8KIHN0cnVjdCBydF9zaWdmcmFtZTMyIHsKLQlzdHJ1Y3QgY29tcGF0
X3NpZ2luZm8JaW5mbzsKKwljb21wYXRfc2lnaW5mb190CWluZm87CiAJc3RydWN0IHVjb250ZXh0
MzIJdWM7CiAJLyoKIAkgKiBQcm9ncmFtcyB1c2luZyB0aGUgcnM2MDAwL3hjb2ZmIGFiaSBjYW4g
c2F2ZSB1cCB0byAxOSBncApAQCAtMzQyLDcgKzM0Miw2IEBAIGxvbmcgc3lzMzJfc2lnYWN0aW9u
KGludCBzaWcsIHN0cnVjdCBvbGQKICAqICAgICAgIHNpZ3BlbmRpbmcgICAgICAgICAgICAgICBz
eXMzMl9ydF9zaWdwZW5kaW5nCiAgKiAgICAgICBzaWdwcm9jbWFzayAgICAgICAgICAgICAgc3lz
MzJfcnRfc2lncHJvY21hc2sKICAqICAgICAgIHNpZ3JldHVybiAgICAgICAgICAgICAgICBzeXMz
Ml9ydF9zaWdyZXR1cm4KLSAqICAgICAgIHNpZ3RpbWVkd2FpdCAgICAgICAgICAgICBzeXMzMl9y
dF9zaWd0aW1lZHdhaXQKICAqICAgICAgIHNpZ3F1ZXVlaW5mbyAgICAgICAgICAgICBzeXMzMl9y
dF9zaWdxdWV1ZWluZm8KICAqICAgICAgIHNpZ3N1c3BlbmQgICAgICAgICAgICAgICBzeXMzMl9y
dF9zaWdzdXNwZW5kCiAgKgpAQCAtNDQ2LDcgKzQ0NSw3IEBAIGxvbmcgc3lzMzJfcnRfc2lncGVu
ZGluZyhjb21wYXRfc2lnc2V0X3QKIH0KIAogCi1zdGF0aWMgbG9uZyBjb3B5X3NpZ2luZm9fdG9f
dXNlcjMyKGNvbXBhdF9zaWdpbmZvX3QgX191c2VyICpkLCBzaWdpbmZvX3QgKnMpCitsb25nIGNv
cHlfc2lnaW5mb190b191c2VyMzIoY29tcGF0X3NpZ2luZm9fdCBfX3VzZXIgKmQsIHNpZ2luZm9f
dCAqcykKIHsKIAlsb25nIGVycjsKIApAQCAtNTAxLDM1ICs1MDAsNiBAQCBzdGF0aWMgbG9uZyBj
b3B5X3NpZ2luZm9fdG9fdXNlcjMyKGNvbXBhCiAJcmV0dXJuIGVycjsKIH0KIAotbG9uZyBzeXMz
Ml9ydF9zaWd0aW1lZHdhaXQoY29tcGF0X3NpZ3NldF90IF9fdXNlciAqdXRoZXNlLCBjb21wYXRf
c2lnaW5mb190IF9fdXNlciAqdWluZm8sCi0JCXN0cnVjdCBjb21wYXRfdGltZXNwZWMgX191c2Vy
ICp1dHMsIGNvbXBhdF9zaXplX3Qgc2lnc2V0c2l6ZSkKLXsKLQlzaWdzZXRfdCBzOwotCWNvbXBh
dF9zaWdzZXRfdCBzMzI7Ci0Jc3RydWN0IHRpbWVzcGVjIHQ7Ci0JaW50IHJldDsKLQltbV9zZWdt
ZW50X3Qgb2xkX2ZzID0gZ2V0X2ZzKCk7Ci0Jc2lnaW5mb190IGluZm87Ci0KLQlpZiAoY29weV9m
cm9tX3VzZXIoJnMzMiwgdXRoZXNlLCBzaXplb2YoY29tcGF0X3NpZ3NldF90KSkpCi0JCXJldHVy
biAtRUZBVUxUOwotCXNpZ3NldF9mcm9tX2NvbXBhdCgmcywgJnMzMik7Ci0JaWYgKHV0cyAmJiBn
ZXRfY29tcGF0X3RpbWVzcGVjKCZ0LCB1dHMpKQotCQlyZXR1cm4gLUVGQVVMVDsKLQlzZXRfZnMo
S0VSTkVMX0RTKTsKLQkvKiBUaGUgX191c2VyIHBvaW50ZXIgY2FzdHMgYXJlIHZhbGlkIGJlY2F1
c2Ugb2YgdGhlIHNldF9mcygpICovCi0JcmV0ID0gc3lzX3J0X3NpZ3RpbWVkd2FpdCgoc2lnc2V0
X3QgX191c2VyICopICZzLAotCQkJdWluZm8gPyAoc2lnaW5mb190IF9fdXNlciAqKSAmaW5mbyA6
IE5VTEwsCi0JCQl1dHMgPyAoc3RydWN0IHRpbWVzcGVjIF9fdXNlciAqKSAmdCA6IE5VTEwsCi0J
CQlzaWdzZXRzaXplKTsKLQlzZXRfZnMob2xkX2ZzKTsKLQlpZiAocmV0ID49IDAgJiYgdWluZm8p
IHsKLQkJaWYgKGNvcHlfc2lnaW5mb190b191c2VyMzIodWluZm8sICZpbmZvKSkKLQkJCXJldHVy
biAtRUZBVUxUOwotCX0KLQlyZXR1cm4gcmV0OwotfQotCiAvKgogICogTm90ZTogaXQgaXMgbmVj
ZXNzYXJ5IHRvIHRyZWF0IHBpZCBhbmQgc2lnIGFzIHVuc2lnbmVkIGludHMsIHdpdGggdGhlCiAg
KiBjb3JyZXNwb25kaW5nIGNhc3QgdG8gYSBzaWduZWQgaW50IHRvIGluc3VyZSB0aGF0IHRoZSBw
cm9wZXIgY29udmVyc2lvbgpkaWZmIC1OcmF1cCBhL2FyY2gvczM5MC9rZXJuZWwvY29tcGF0X2xp
bnV4LmMgYi9hcmNoL3MzOTAva2VybmVsL2NvbXBhdF9saW51eC5jCi0tLSBhL2FyY2gvczM5MC9r
ZXJuZWwvY29tcGF0X2xpbnV4LmMJMjAwNC0xMi0xMyAwMzo1NjoyOS4wMDAwMDAwMDAgLTA4MDAK
KysrIGIvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfbGludXguYwkyMDA0LTEyLTEzIDA0OjA1OjEw
LjAwMDAwMDAwMCAtMDgwMApAQCAtNjM0LDkyICs2MzQsOCBAQCBhc21saW5rYWdlIGxvbmcgc3lz
MzJfcnRfc2lncGVuZGluZyhjb21wCiAJcmV0dXJuIHJldDsKIH0KIAotZXh0ZXJuIGludAotY29w
eV9zaWdpbmZvX3RvX3VzZXIzMihzaWdpbmZvX3QzMiAqdG8sIHNpZ2luZm9fdCAqZnJvbSk7Ci0K
LWFzbWxpbmthZ2UgbG9uZwotc3lzMzJfcnRfc2lndGltZWR3YWl0KGNvbXBhdF9zaWdzZXRfdCAq
dXRoZXNlLCBzaWdpbmZvX3QzMiAqdWluZm8sCi0JCSAgICAgIHN0cnVjdCBjb21wYXRfdGltZXNw
ZWMgKnV0cywgc2l6ZV90IHNpZ3NldHNpemUpCi17Ci0JaW50IHJldCwgc2lnOwotCXNpZ3NldF90
IHRoZXNlOwotCWNvbXBhdF9zaWdzZXRfdCB0aGVzZTMyOwotCXN0cnVjdCB0aW1lc3BlYyB0czsK
LQlzaWdpbmZvX3QgaW5mbzsKLQlsb25nIHRpbWVvdXQgPSAwOwotCi0JLyogWFhYOiBEb24ndCBw
cmVjbHVkZSBoYW5kbGluZyBkaWZmZXJlbnQgc2l6ZWQgc2lnc2V0X3Qncy4gICovCi0JaWYgKHNp
Z3NldHNpemUgIT0gc2l6ZW9mKHNpZ3NldF90KSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAo
Y29weV9mcm9tX3VzZXIgKCZ0aGVzZTMyLCB1dGhlc2UsIHNpemVvZihjb21wYXRfc2lnc2V0X3Qp
KSkKLQkJcmV0dXJuIC1FRkFVTFQ7Ci0KLQlzd2l0Y2ggKF9OU0lHX1dPUkRTKSB7Ci0JY2FzZSA0
OiB0aGVzZS5zaWdbM10gPSB0aGVzZTMyLnNpZ1s2XSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbN10p
IDw8IDMyKTsKLQljYXNlIDM6IHRoZXNlLnNpZ1syXSA9IHRoZXNlMzIuc2lnWzRdIHwgKCgobG9u
Zyl0aGVzZTMyLnNpZ1s1XSkgPDwgMzIpOwotCWNhc2UgMjogdGhlc2Uuc2lnWzFdID0gdGhlc2Uz
Mi5zaWdbMl0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzNdKSA8PCAzMik7Ci0JY2FzZSAxOiB0aGVz
ZS5zaWdbMF0gPSB0aGVzZTMyLnNpZ1swXSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbMV0pIDw8IDMy
KTsKLQl9Ci0JCQotCS8qCi0JICogSW52ZXJ0IHRoZSBzZXQgb2YgYWxsb3dlZCBzaWduYWxzIHRv
IGdldCB0aG9zZSB3ZQotCSAqIHdhbnQgdG8gYmxvY2suCi0JICovCi0Jc2lnZGVsc2V0bWFzaygm
dGhlc2UsIHNpZ21hc2soU0lHS0lMTCl8c2lnbWFzayhTSUdTVE9QKSk7Ci0Jc2lnbm90c2V0KCZ0
aGVzZSk7Ci0KLQlpZiAodXRzKSB7Ci0JCWlmIChnZXRfY29tcGF0X3RpbWVzcGVjKCZ0cywgdXRz
KSkKLQkJCXJldHVybiAtRUlOVkFMOwotCQlpZiAodHMudHZfbnNlYyA+PSAxMDAwMDAwMDAwTCB8
fCB0cy50dl9uc2VjIDwgMAotCQkgICAgfHwgdHMudHZfc2VjIDwgMCkKLQkJCXJldHVybiAtRUlO
VkFMOwotCX0KLQotCXNwaW5fbG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwot
CXNpZyA9IGRlcXVldWVfc2lnbmFsKGN1cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCWlmICghc2ln
KSB7Ci0JCS8qIE5vbmUgcmVhZHkgLS0gdGVtcG9yYXJpbHkgdW5ibG9jayB0aG9zZSB3ZSdyZSBp
bnRlcmVzdGVkCi0JCSAgIGluIHNvIHRoYXQgd2UnbGwgYmUgYXdha2VuZWQgd2hlbiB0aGV5IGFy
cml2ZS4gICovCi0JCWN1cnJlbnQtPnJlYWxfYmxvY2tlZCA9IGN1cnJlbnQtPmJsb2NrZWQ7Ci0J
CXNpZ2FuZHNldHMoJmN1cnJlbnQtPmJsb2NrZWQsICZjdXJyZW50LT5ibG9ja2VkLCAmdGhlc2Up
OwotCQlyZWNhbGNfc2lncGVuZGluZygpOwotCQlzcGluX3VubG9ja19pcnEoJmN1cnJlbnQtPnNp
Z2hhbmQtPnNpZ2xvY2spOwotCi0JCXRpbWVvdXQgPSBNQVhfU0NIRURVTEVfVElNRU9VVDsKLQkJ
aWYgKHV0cykKLQkJCXRpbWVvdXQgPSAodGltZXNwZWNfdG9famlmZmllcygmdHMpCi0JCQkJICAg
KyAodHMudHZfc2VjIHx8IHRzLnR2X25zZWMpKTsKLQotCQljdXJyZW50LT5zdGF0ZSA9IFRBU0tf
SU5URVJSVVBUSUJMRTsKLQkJdGltZW91dCA9IHNjaGVkdWxlX3RpbWVvdXQodGltZW91dCk7Ci0K
LQkJc3Bpbl9sb2NrX2lycSgmY3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0JCXNpZyA9IGRl
cXVldWVfc2lnbmFsKGN1cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCQljdXJyZW50LT5ibG9ja2Vk
ID0gY3VycmVudC0+cmVhbF9ibG9ja2VkOwotCQlzaWdpbml0c2V0KCZjdXJyZW50LT5yZWFsX2Js
b2NrZWQsIDApOwotCQlyZWNhbGNfc2lncGVuZGluZygpOwotCX0KLQlzcGluX3VubG9ja19pcnEo
JmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwotCi0JaWYgKHNpZykgewotCQlyZXQgPSBzaWc7
Ci0JCWlmICh1aW5mbykgewotCQkJaWYgKGNvcHlfc2lnaW5mb190b191c2VyMzIodWluZm8sICZp
bmZvKSkKLQkJCQlyZXQgPSAtRUZBVUxUOwotCQl9Ci0JfSBlbHNlIHsKLQkJcmV0ID0gLUVBR0FJ
TjsKLQkJaWYgKHRpbWVvdXQpCi0JCQlyZXQgPSAtRUlOVFI7Ci0JfQotCi0JcmV0dXJuIHJldDsK
LX0KLQogYXNtbGlua2FnZSBsb25nCi1zeXMzMl9ydF9zaWdxdWV1ZWluZm8oaW50IHBpZCwgaW50
IHNpZywgc2lnaW5mb190MzIgX191c2VyICp1aW5mbykKK3N5czMyX3J0X3NpZ3F1ZXVlaW5mbyhp
bnQgcGlkLCBpbnQgc2lnLCBjb21wYXRfc2lnaW5mb190IF9fdXNlciAqdWluZm8pCiB7CiAJc2ln
aW5mb190IGluZm87CiAJaW50IHJldDsKZGlmZiAtTnJhdXAgYS9hcmNoL3MzOTAva2VybmVsL2Nv
bXBhdF9saW51eC5oIGIvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfbGludXguaAotLS0gYS9hcmNo
L3MzOTAva2VybmVsL2NvbXBhdF9saW51eC5oCTIwMDQtMTItMTMgMDM6NTY6MjkuMDAwMDAwMDAw
IC0wODAwCisrKyBiL2FyY2gvczM5MC9rZXJuZWwvY29tcGF0X2xpbnV4LmgJMjAwNC0xMi0xMyAw
NDowNTozNy4wMDAwMDAwMDAgLTA4MDAKQEAgLTM0LDcgKzM0LDcgQEAgdHlwZWRlZiB1bmlvbiBz
aWd2YWwzMiB7CiAgICAgICAgIF9fdTMyICAgc2l2YWxfcHRyOwogfSBzaWd2YWxfdDMyOwogICAg
ICAgICAgICAgICAgICAKLXR5cGVkZWYgc3RydWN0IHNpZ2luZm8zMiB7Cit0eXBlZGVmIHN0cnVj
dCBjb21wYXRfc2lnaW5mbyB7CiAJaW50CXNpX3NpZ25vOwogCWludAlzaV9lcnJubzsKIAlpbnQJ
c2lfY29kZTsKQEAgLTgyLDcgKzgyLDcgQEAgdHlwZWRlZiBzdHJ1Y3Qgc2lnaW5mbzMyIHsKIAkJ
CWludAlfZmQ7CiAJCX0gX3NpZ3BvbGw7CiAJfSBfc2lmaWVsZHM7Ci19IHNpZ2luZm9fdDMyOyAg
Cit9IGNvbXBhdF9zaWdpbmZvX3Q7CiAKIC8qCiAgKiBIb3cgdGhlc2UgZmllbGRzIGFyZSB0byBi
ZSBhY2Nlc3NlZC4KQEAgLTIxNCw3ICsyMTQsNCBAQCBzdHJ1Y3Qgc2lnZXZlbnQzMiB7CiAJfSBf
c2lnZXZfdW47CiB9OwogCi1leHRlcm4gaW50IGNvcHlfc2lnaW5mb190b191c2VyMzIoc2lnaW5m
b190MzIgX191c2VyICp0bywgc2lnaW5mb190ICpmcm9tKTsKLWV4dGVybiBpbnQgY29weV9zaWdp
bmZvX2Zyb21fdXNlcjMyKHNpZ2luZm9fdCAqdG8sIHNpZ2luZm9fdDMyIF9fdXNlciAqZnJvbSk7
Ci0KICNlbmRpZiAvKiBfQVNNX1MzOTBYX1MzOTBfSCAqLwpkaWZmIC1OcmF1cCBhL2FyY2gvczM5
MC9rZXJuZWwvY29tcGF0X3NpZ25hbC5jIGIvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfc2lnbmFs
LmMKLS0tIGEvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfc2lnbmFsLmMJMjAwNC0xMi0xMyAwMzo1
NjoyOS4wMDAwMDAwMDAgLTA4MDAKKysrIGIvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfc2lnbmFs
LmMJMjAwNC0xMi0xMyAwNDoyMjowOS4wMDAwMDAwMDAgLTA4MDAKQEAgLTQ4LDE3ICs0OCwxNyBA
QCB0eXBlZGVmIHN0cnVjdCAKIHsKIAlfX3U4IGNhbGxlZV91c2VkX3N0YWNrW19fU0lHTkFMX0ZS
QU1FU0laRTMyXTsKIAlfX3U4IHJldGNvZGVbUzM5MF9TWVNDQUxMX1NJWkVdOwotCXN0cnVjdCBz
aWdpbmZvMzIgaW5mbzsKKwljb21wYXRfc2lnaW5mb190IGluZm87CiAJc3RydWN0IHVjb250ZXh0
MzIgdWM7CiB9IHJ0X3NpZ2ZyYW1lMzI7CiAKIGFzbWxpbmthZ2UgaW50IEZBU1RDQUxMKGRvX3Np
Z25hbChzdHJ1Y3QgcHRfcmVncyAqcmVncywgc2lnc2V0X3QgKm9sZHNldCkpOwogCi1pbnQgY29w
eV9zaWdpbmZvX3RvX3VzZXIzMihzaWdpbmZvX3QzMiBfX3VzZXIgKnRvLCBzaWdpbmZvX3QgKmZy
b20pCitpbnQgY29weV9zaWdpbmZvX3RvX3VzZXIzMihjb21wYXRfc2lnaW5mb190IF9fdXNlciAq
dG8sIHNpZ2luZm9fdCAqZnJvbSkKIHsKIAlpbnQgZXJyOwogCi0JaWYgKCFhY2Nlc3Nfb2sgKFZF
UklGWV9XUklURSwgdG8sIHNpemVvZihzaWdpbmZvX3QzMikpKQorCWlmICghYWNjZXNzX29rIChW
RVJJRllfV1JJVEUsIHRvLCBzaXplb2YoY29tcGF0X3NpZ2luZm9fdCkpKQogCQlyZXR1cm4gLUVG
QVVMVDsKIAogCS8qIElmIHlvdSBjaGFuZ2Ugc2lnaW5mb190IHN0cnVjdHVyZSwgcGxlYXNlIGJl
IHN1cmUKQEAgLTEwNiwxMiArMTA2LDEyIEBAIGludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHNp
Z2luZm9fdDMyIF8KIAlyZXR1cm4gZXJyOwogfQogCi1pbnQgY29weV9zaWdpbmZvX2Zyb21fdXNl
cjMyKHNpZ2luZm9fdCAqdG8sIHNpZ2luZm9fdDMyIF9fdXNlciAqZnJvbSkKK2ludCBjb3B5X3Np
Z2luZm9fZnJvbV91c2VyMzIoc2lnaW5mb190ICp0bywgY29tcGF0X3NpZ2luZm9fdCBfX3VzZXIg
KmZyb20pCiB7CiAJaW50IGVycjsKIAl1MzIgdG1wOwogCi0JaWYgKCFhY2Nlc3Nfb2sgKFZFUklG
WV9SRUFELCBmcm9tLCBzaXplb2Yoc2lnaW5mb190MzIpKSkKKwlpZiAoIWFjY2Vzc19vayAoVkVS
SUZZX1JFQUQsIGZyb20sIHNpemVvZihjb21wYXRfc2lnaW5mb190KSkpCiAJCXJldHVybiAtRUZB
VUxUOwogCiAJZXJyID0gX19nZXRfdXNlcih0by0+c2lfc2lnbm8sICZmcm9tLT5zaV9zaWdubyk7
CmRpZmYgLU5yYXVwIGEvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfd3JhcHBlci5TIGIvYXJjaC9z
MzkwL2tlcm5lbC9jb21wYXRfd3JhcHBlci5TCi0tLSBhL2FyY2gvczM5MC9rZXJuZWwvY29tcGF0
X3dyYXBwZXIuUwkyMDA0LTEyLTEzIDAzOjU2OjI5LjAwMDAwMDAwMCAtMDgwMAorKysgYi9hcmNo
L3MzOTAva2VybmVsL2NvbXBhdF93cmFwcGVyLlMJMjAwNC0xMi0xMyAwMzo1NzowOS4wMDAwMDAw
MDAgLTA4MDAKQEAgLTg0MCwxMyArODQwLDEzIEBAIHN5czMyX3J0X3NpZ3BlbmRpbmdfd3JhcHBl
cjoKIAlsbGdmcgklcjMsJXIzCQkJIyBzaXplX3QKIAlqZwlzeXMzMl9ydF9zaWdwZW5kaW5nCSMg
YnJhbmNoIHRvIHN5c3RlbSBjYWxsCiAKLQkuZ2xvYmwgIHN5czMyX3J0X3NpZ3RpbWVkd2FpdF93
cmFwcGVyIAotc3lzMzJfcnRfc2lndGltZWR3YWl0X3dyYXBwZXI6CisJLmdsb2JsICBjb21wYXRf
cnRfc2lndGltZWR3YWl0X3dyYXBwZXIKK2NvbXBhdF9ydF9zaWd0aW1lZHdhaXRfd3JhcHBlcjoK
IAlsbGd0cgklcjIsJXIyCQkJIyBjb25zdCBzaWdzZXRfZW11MzFfdCAqCiAJbGxndHIJJXIzLCVy
MwkJCSMgc2lnaW5mb19lbXUzMV90ICoKIAlsbGd0cgklcjQsJXI0CQkJIyBjb25zdCBzdHJ1Y3Qg
Y29tcGF0X3RpbWVzcGVjICoKIAlsbGdmcgklcjUsJXI1CQkJIyBzaXplX3QKLQlqZwlzeXMzMl9y
dF9zaWd0aW1lZHdhaXQJIyBicmFuY2ggdG8gc3lzdGVtIGNhbGwKKwlqZwljb21wYXRfcnRfc2ln
dGltZWR3YWl0CSMgYnJhbmNoIHRvIHN5c3RlbSBjYWxsCiAKIAkuZ2xvYmwgIHN5czMyX3J0X3Np
Z3F1ZXVlaW5mb193cmFwcGVyIAogc3lzMzJfcnRfc2lncXVldWVpbmZvX3dyYXBwZXI6CmRpZmYg
LU5yYXVwIGEvYXJjaC9zMzkwL2tlcm5lbC9wdHJhY2UuYyBiL2FyY2gvczM5MC9rZXJuZWwvcHRy
YWNlLmMKLS0tIGEvYXJjaC9zMzkwL2tlcm5lbC9wdHJhY2UuYwkyMDA0LTEyLTEzIDAzOjU2OjI5
LjAwMDAwMDAwMCAtMDgwMAorKysgYi9hcmNoL3MzOTAva2VybmVsL3B0cmFjZS5jCTIwMDQtMTIt
MTMgMDQ6MTQ6NTUuMDAwMDAwMDAwIC0wODAwCkBAIC01NTksMTMgKzU1OSwxMyBAQCBkb19wdHJh
Y2VfZW11MzEoc3RydWN0IHRhc2tfc3RydWN0ICpjaGlsCiAJY2FzZSBQVFJBQ0VfR0VUU0lHSU5G
TzoKIAkJaWYgKGNoaWxkLT5sYXN0X3NpZ2luZm8gPT0gTlVMTCkKIAkJCXJldHVybiAtRUlOVkFM
OwotCQlyZXR1cm4gY29weV9zaWdpbmZvX3RvX3VzZXIzMigoc2lnaW5mb190MzIgX191c2VyICop
IGRhdGEsCisJCXJldHVybiBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKChjb21wYXRfc2lnaW5mb190
IF9fdXNlciAqKSBkYXRhLAogCQkJCQkgICAgICBjaGlsZC0+bGFzdF9zaWdpbmZvKTsKIAljYXNl
IFBUUkFDRV9TRVRTSUdJTkZPOgogCQlpZiAoY2hpbGQtPmxhc3Rfc2lnaW5mbyA9PSBOVUxMKQog
CQkJcmV0dXJuIC1FSU5WQUw7CiAJCXJldHVybiBjb3B5X3NpZ2luZm9fZnJvbV91c2VyMzIoY2hp
bGQtPmxhc3Rfc2lnaW5mbywKLQkJCQkJCShzaWdpbmZvX3QzMiBfX3VzZXIgKikgZGF0YSk7CisJ
CQkJCQkoY29tcGF0X3NpZ2luZm9fdCBfX3VzZXIgKikgZGF0YSk7CiAJfQogCXJldHVybiBwdHJh
Y2VfcmVxdWVzdChjaGlsZCwgcmVxdWVzdCwgYWRkciwgZGF0YSk7CiB9CmRpZmYgLU5yYXVwIGEv
YXJjaC9zMzkwL2tlcm5lbC9zeXNjYWxscy5TIGIvYXJjaC9zMzkwL2tlcm5lbC9zeXNjYWxscy5T
Ci0tLSBhL2FyY2gvczM5MC9rZXJuZWwvc3lzY2FsbHMuUwkyMDA0LTEyLTEzIDAzOjU2OjI5LjAw
MDAwMDAwMCAtMDgwMAorKysgYi9hcmNoL3MzOTAva2VybmVsL3N5c2NhbGxzLlMJMjAwNC0xMi0x
MyAwMzo1NzowOS4wMDAwMDAwMDAgLTA4MDAKQEAgLTE4NSw3ICsxODUsNyBAQCBTWVNDQUxMKHN5
c19ydF9zaWdyZXR1cm5fZ2x1ZSxzeXNfcnRfc2lnCiBTWVNDQUxMKHN5c19ydF9zaWdhY3Rpb24s
c3lzX3J0X3NpZ2FjdGlvbixzeXMzMl9ydF9zaWdhY3Rpb25fd3JhcHBlcikKIFNZU0NBTEwoc3lz
X3J0X3NpZ3Byb2NtYXNrLHN5c19ydF9zaWdwcm9jbWFzayxzeXMzMl9ydF9zaWdwcm9jbWFza193
cmFwcGVyKQkvKiAxNzUgKi8KIFNZU0NBTEwoc3lzX3J0X3NpZ3BlbmRpbmcsc3lzX3J0X3NpZ3Bl
bmRpbmcsc3lzMzJfcnRfc2lncGVuZGluZ193cmFwcGVyKQotU1lTQ0FMTChzeXNfcnRfc2lndGlt
ZWR3YWl0LHN5c19ydF9zaWd0aW1lZHdhaXQsc3lzMzJfcnRfc2lndGltZWR3YWl0X3dyYXBwZXIp
CitTWVNDQUxMKHN5c19ydF9zaWd0aW1lZHdhaXQsc3lzX3J0X3NpZ3RpbWVkd2FpdCxjb21wYXRf
cnRfc2lndGltZWR3YWl0X3dyYXBwZXIpCiBTWVNDQUxMKHN5c19ydF9zaWdxdWV1ZWluZm8sc3lz
X3J0X3NpZ3F1ZXVlaW5mbyxzeXMzMl9ydF9zaWdxdWV1ZWluZm9fd3JhcHBlcikKIFNZU0NBTEwo
c3lzX3J0X3NpZ3N1c3BlbmRfZ2x1ZSxzeXNfcnRfc2lnc3VzcGVuZF9nbHVlLHN5czMyX3J0X3Np
Z3N1c3BlbmRfZ2x1ZSkKIFNZU0NBTEwoc3lzX3ByZWFkNjQsc3lzX3ByZWFkNjQsc3lzMzJfcHJl
YWQ2NF93cmFwcGVyKQkJLyogMTgwICovCmRpZmYgLU5yYXVwIGEvYXJjaC9zcGFyYzY0L2tlcm5l
bC9zaWduYWwzMi5jIGIvYXJjaC9zcGFyYzY0L2tlcm5lbC9zaWduYWwzMi5jCi0tLSBhL2FyY2gv
c3BhcmM2NC9rZXJuZWwvc2lnbmFsMzIuYwkyMDA0LTEyLTEzIDAzOjU2OjI4LjAwMDAwMDAwMCAt
MDgwMAorKysgYi9hcmNoL3NwYXJjNjQva2VybmVsL3NpZ25hbDMyLmMJMjAwNC0xMi0xMyAwNDoy
MDo0My4wMDAwMDAwMDAgLTA4MDAKQEAgLTg2LDcgKzg2LDcgQEAgc3RydWN0IG5ld19zaWduYWxf
ZnJhbWUzMiB7CiAJX19zaWdpbmZvX2ZwdV90CQlmcHVfc3RhdGU7CiB9OwogCi1zdHJ1Y3Qgc2ln
aW5mbzMyIHsKK3R5cGVkZWYgc3RydWN0IGNvbXBhdF9zaWdpbmZvewogCWludCBzaV9zaWdubzsK
IAlpbnQgc2lfZXJybm87CiAJaW50IHNpX2NvZGU7CkBAIC0xMzYsMTEgKzEzNiwxMSBAQCBzdHJ1
Y3Qgc2lnaW5mbzMyIHsKIAkJCWludCBfZmQ7CiAJCX0gX3NpZ3BvbGw7CiAJfSBfc2lmaWVsZHM7
Ci19OworfWNvbXBhdF9zaWdpbmZvX3Q7CiAKIHN0cnVjdCBydF9zaWduYWxfZnJhbWUzMiB7CiAJ
c3RydWN0IHNwYXJjX3N0YWNrZjMyCXNzOwotCXN0cnVjdCBzaWdpbmZvMzIJaW5mbzsKKwljb21w
YXRfc2lnaW5mb190CWluZm87CiAJc3RydWN0IHB0X3JlZ3MzMglyZWdzOwogCWNvbXBhdF9zaWdz
ZXRfdAkJbWFzazsKIAkvKiBfX3NpZ2luZm9fZnB1MzJfdCAqICovIHUzMiBmcHVfc2F2ZTsKQEAg
LTE1NywxMSArMTU3LDExIEBAIHN0cnVjdCBydF9zaWduYWxfZnJhbWUzMiB7CiAjZGVmaW5lIE5G
X0FMSUdORURTWiAgKCgoc2l6ZW9mKHN0cnVjdCBuZXdfc2lnbmFsX2ZyYW1lMzIpICsgNykgJiAo
fjcpKSkKICNkZWZpbmUgUlRfQUxJR05FRFNaICAoKChzaXplb2Yoc3RydWN0IHJ0X3NpZ25hbF9m
cmFtZTMyKSArIDcpICYgKH43KSkpCiAKLWludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHN0cnVj
dCBzaWdpbmZvMzIgX191c2VyICp0bywgc2lnaW5mb190ICpmcm9tKQoraW50IGNvcHlfc2lnaW5m
b190b191c2VyMzIoY29tcGF0X3NpZ2luZm9fdCBfX3VzZXIgKnRvLCBzaWdpbmZvX3QgKmZyb20p
CiB7CiAJaW50IGVycjsKIAotCWlmICghYWNjZXNzX29rKFZFUklGWV9XUklURSwgdG8sIHNpemVv
ZihzdHJ1Y3Qgc2lnaW5mbzMyKSkpCisJaWYgKCFhY2Nlc3Nfb2soVkVSSUZZX1dSSVRFLCB0bywg
c2l6ZW9mKGNvbXBhdF9zaWdpbmZvX3QpKSkKIAkJcmV0dXJuIC1FRkFVTFQ7CiAKIAkvKiBJZiB5
b3UgY2hhbmdlIHNpZ2luZm9fdCBzdHJ1Y3R1cmUsIHBsZWFzZSBiZSBzdXJlCkBAIC0yMTAsOSAr
MjEwLDkgQEAgaW50IGNvcHlfc2lnaW5mb190b191c2VyMzIoc3RydWN0IHNpZ2luZgogLyogQ0FV
VElPTjogVGhpcyBpcyBqdXN0IGEgdmVyeSBtaW5pbWFsaXN0IGltcGxlbWVudGF0aW9uIGZvciB0
aGUKICAqICAgICAgICAgIHNha2Ugb2YgY29tcGF0X3N5c19ydF9zaWdxdWV1ZWluZm8oKQogICov
Ci1pbnQgY29weV9zaWdpbmZvX3RvX2tlcm5lbDMyKHNpZ2luZm9fdCAqdG8sIHN0cnVjdCBzaWdp
bmZvMzIgX191c2VyICpmcm9tKQoraW50IGNvcHlfc2lnaW5mb190b19rZXJuZWwzMihzaWdpbmZv
X3QgKnRvLCBjb21wYXRfc2lnaW5mb190IF9fdXNlciAqZnJvbSkKIHsKLQlpZiAoIWFjY2Vzc19v
ayhWRVJJRllfV1JJVEUsIGZyb20sIHNpemVvZihzdHJ1Y3Qgc2lnaW5mbzMyKSkpCisJaWYgKCFh
Y2Nlc3Nfb2soVkVSSUZZX1dSSVRFLCBmcm9tLCBzaXplb2YoY29tcGF0X3NpZ2luZm9fdCkpKQog
CQlyZXR1cm4gLUVGQVVMVDsKIAogCWlmIChjb3B5X2Zyb21fdXNlcih0bywgZnJvbSwgMypzaXpl
b2YoaW50KSkgfHwKZGlmZiAtTnJhdXAgYS9hcmNoL3NwYXJjNjQva2VybmVsL3N5c19zcGFyYzMy
LmMgYi9hcmNoL3NwYXJjNjQva2VybmVsL3N5c19zcGFyYzMyLmMKLS0tIGEvYXJjaC9zcGFyYzY0
L2tlcm5lbC9zeXNfc3BhcmMzMi5jCTIwMDQtMTItMTMgMDM6NTY6MjguMDAwMDAwMDAwIC0wODAw
CisrKyBiL2FyY2gvc3BhcmM2NC9rZXJuZWwvc3lzX3NwYXJjMzIuYwkyMDA0LTEyLTEzIDA0OjA2
OjUxLjAwMDAwMDAwMCAtMDgwMApAQCAtMTA0NCw5MyArMTA0NCw4IEBAIGFzbWxpbmthZ2UgbG9u
ZyBzeXMzMl9ydF9zaWdwZW5kaW5nKGNvbXAKIAlyZXR1cm4gcmV0OwogfQogCi1hc21saW5rYWdl
IGxvbmcgc3lzMzJfcnRfc2lndGltZWR3YWl0KGNvbXBhdF9zaWdzZXRfdCBfX3VzZXIgKnV0aGVz
ZSwKLQkJCQkgICAgICBzdHJ1Y3Qgc2lnaW5mbzMyIF9fdXNlciAqdWluZm8sCi0JCQkJICAgICAg
c3RydWN0IGNvbXBhdF90aW1lc3BlYyBfX3VzZXIgKnV0cywKLQkJCQkgICAgICBjb21wYXRfc2l6
ZV90IHNpZ3NldHNpemUpCi17Ci0JaW50IHJldCwgc2lnOwotCXNpZ3NldF90IHRoZXNlOwotCWNv
bXBhdF9zaWdzZXRfdCB0aGVzZTMyOwotCXN0cnVjdCB0aW1lc3BlYyB0czsKLQlzaWdpbmZvX3Qg
aW5mbzsKLQlsb25nIHRpbWVvdXQgPSAwOwotCi0JLyogWFhYOiBEb24ndCBwcmVjbHVkZSBoYW5k
bGluZyBkaWZmZXJlbnQgc2l6ZWQgc2lnc2V0X3Qncy4gICovCi0JaWYgKHNpZ3NldHNpemUgIT0g
c2l6ZW9mKHNpZ3NldF90KSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAoY29weV9mcm9tX3Vz
ZXIgKCZ0aGVzZTMyLCB1dGhlc2UsIHNpemVvZihjb21wYXRfc2lnc2V0X3QpKSkKLQkJcmV0dXJu
IC1FRkFVTFQ7Ci0KLQlzd2l0Y2ggKF9OU0lHX1dPUkRTKSB7Ci0JY2FzZSA0OiB0aGVzZS5zaWdb
M10gPSB0aGVzZTMyLnNpZ1s2XSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbN10pIDw8IDMyKTsKLQlj
YXNlIDM6IHRoZXNlLnNpZ1syXSA9IHRoZXNlMzIuc2lnWzRdIHwgKCgobG9uZyl0aGVzZTMyLnNp
Z1s1XSkgPDwgMzIpOwotCWNhc2UgMjogdGhlc2Uuc2lnWzFdID0gdGhlc2UzMi5zaWdbMl0gfCAo
KChsb25nKXRoZXNlMzIuc2lnWzNdKSA8PCAzMik7Ci0JY2FzZSAxOiB0aGVzZS5zaWdbMF0gPSB0
aGVzZTMyLnNpZ1swXSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbMV0pIDw8IDMyKTsKLQl9Ci0JCQot
CS8qCi0JICogSW52ZXJ0IHRoZSBzZXQgb2YgYWxsb3dlZCBzaWduYWxzIHRvIGdldCB0aG9zZSB3
ZQotCSAqIHdhbnQgdG8gYmxvY2suCi0JICovCi0Jc2lnZGVsc2V0bWFzaygmdGhlc2UsIHNpZ21h
c2soU0lHS0lMTCl8c2lnbWFzayhTSUdTVE9QKSk7Ci0Jc2lnbm90c2V0KCZ0aGVzZSk7Ci0KLQlp
ZiAodXRzKSB7Ci0JCWlmIChnZXRfY29tcGF0X3RpbWVzcGVjKCZ0cywgdXRzKSkKLQkJCXJldHVy
biAtRUlOVkFMOwotCQlpZiAodHMudHZfbnNlYyA+PSAxMDAwMDAwMDAwTCB8fCB0cy50dl9uc2Vj
IDwgMAotCQkgICAgfHwgdHMudHZfc2VjIDwgMCkKLQkJCXJldHVybiAtRUlOVkFMOwotCX0KLQot
CXNwaW5fbG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwotCXNpZyA9IGRlcXVl
dWVfc2lnbmFsKGN1cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCWlmICghc2lnKSB7Ci0JCXRpbWVv
dXQgPSBNQVhfU0NIRURVTEVfVElNRU9VVDsKLQkJaWYgKHV0cykKLQkJCXRpbWVvdXQgPSAodGlt
ZXNwZWNfdG9famlmZmllcygmdHMpCi0JCQkJICAgKyAodHMudHZfc2VjIHx8IHRzLnR2X25zZWMp
KTsKLQotCQlpZiAodGltZW91dCkgewotCQkJLyogTm9uZSByZWFkeSAtLSB0ZW1wb3JhcmlseSB1
bmJsb2NrIHRob3NlIHdlJ3JlCi0JCQkgKiBpbnRlcmVzdGVkIHdoaWxlIHdlIGFyZSBzbGVlcGlu
ZyBpbiBzbyB0aGF0IHdlJ2xsCi0JCQkgKiBiZSBhd2FrZW5lZCB3aGVuIHRoZXkgYXJyaXZlLiAg
Ki8KLQkJCWN1cnJlbnQtPnJlYWxfYmxvY2tlZCA9IGN1cnJlbnQtPmJsb2NrZWQ7Ci0JCQlzaWdh
bmRzZXRzKCZjdXJyZW50LT5ibG9ja2VkLCAmY3VycmVudC0+YmxvY2tlZCwgJnRoZXNlKTsKLQkJ
CXJlY2FsY19zaWdwZW5kaW5nKCk7Ci0JCQlzcGluX3VubG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hh
bmQtPnNpZ2xvY2spOwotCi0JCQljdXJyZW50LT5zdGF0ZSA9IFRBU0tfSU5URVJSVVBUSUJMRTsK
LQkJCXRpbWVvdXQgPSBzY2hlZHVsZV90aW1lb3V0KHRpbWVvdXQpOwotCi0JCQlzcGluX2xvY2tf
aXJxKCZjdXJyZW50LT5zaWdoYW5kLT5zaWdsb2NrKTsKLQkJCXNpZyA9IGRlcXVldWVfc2lnbmFs
KGN1cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCQkJY3VycmVudC0+YmxvY2tlZCA9IGN1cnJlbnQt
PnJlYWxfYmxvY2tlZDsKLQkJCXNpZ2luaXRzZXQoJmN1cnJlbnQtPnJlYWxfYmxvY2tlZCwgMCk7
Ci0JCQlyZWNhbGNfc2lncGVuZGluZygpOwotCQl9Ci0JfQotCXNwaW5fdW5sb2NrX2lycSgmY3Vy
cmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0KLQlpZiAoc2lnKSB7Ci0JCXJldCA9IHNpZzsKLQkJ
aWYgKHVpbmZvKSB7Ci0JCQlpZiAoY29weV9zaWdpbmZvX3RvX3VzZXIzMih1aW5mbywgJmluZm8p
KQotCQkJCXJldCA9IC1FRkFVTFQ7Ci0JCX0KLQl9IGVsc2UgewotCQlyZXQgPSAtRUFHQUlOOwot
CQlpZiAodGltZW91dCkKLQkJCXJldCA9IC1FSU5UUjsKLQl9Ci0KLQlyZXR1cm4gcmV0OwotfQot
CiBhc21saW5rYWdlIGxvbmcgY29tcGF0X3N5c19ydF9zaWdxdWV1ZWluZm8oaW50IHBpZCwgaW50
IHNpZywKLQkJCQkJICAgc3RydWN0IHNpZ2luZm8zMiBfX3VzZXIgKnVpbmZvKQorCQkJCQkgICBj
b21wYXRfc2lnaW5mb190IF9fdXNlciAqdWluZm8pCiB7CiAJc2lnaW5mb190IGluZm87CiAJaW50
IHJldDsKQEAgLTE3MzksNyArMTY1NCw3IEBAIHN5czMyX3RpbWVyX2NyZWF0ZSh1MzIgY2xvY2ss
IHN0cnVjdCBzaWcKIH0KIAogYXNtbGlua2FnZSBsb25nIGNvbXBhdF9zeXNfd2FpdGlkKHUzMiB3
aGljaCwgdTMyIHBpZCwKLQkJCQkgIHN0cnVjdCBzaWdpbmZvMzIgX191c2VyICp1aW5mbywgdTMy
IG9wdGlvbnMsCisJCQkJICBjb21wYXRfc2lnaW5mb190IF9fdXNlciAqdWluZm8sIHUzMiBvcHRp
b25zLAogCQkJCSAgc3RydWN0IGNvbXBhdF9ydXNhZ2UgX191c2VyICp1cnUpCiB7CiAJc2lnaW5m
b190IGluZm87CmRpZmYgLU5yYXVwIGEvYXJjaC9zcGFyYzY0L2tlcm5lbC9zeXN0YmxzLlMgYi9h
cmNoL3NwYXJjNjQva2VybmVsL3N5c3RibHMuUwotLS0gYS9hcmNoL3NwYXJjNjQva2VybmVsL3N5
c3RibHMuUwkyMDA0LTEyLTEzIDAzOjU2OjI4LjAwMDAwMDAwMCAtMDgwMAorKysgYi9hcmNoL3Nw
YXJjNjQva2VybmVsL3N5c3RibHMuUwkyMDA0LTEyLTEzIDAzOjU3OjA5LjAwMDAwMDAwMCAtMDgw
MApAQCAtNDEsNyArNDEsNyBAQCBzeXNfY2FsbF90YWJsZTMyOgogLyo5MCovCS53b3JkIHN5c19k
dXAyLCBzeXNfc2V0ZnN1aWQsIGNvbXBhdF9zeXNfZmNudGwsIHN5czMyX3NlbGVjdCwgc3lzX3Nl
dGZzZ2lkCiAJLndvcmQgc3lzX2ZzeW5jLCBzeXMzMl9zZXRwcmlvcml0eSwgc3lzX25pc19zeXNj
YWxsLCBzeXNfbmlzX3N5c2NhbGwsIHN5c19uaXNfc3lzY2FsbAogLyoxMDAqLyAud29yZCBzeXMz
Ml9nZXRwcmlvcml0eSwgc3lzMzJfcnRfc2lncmV0dXJuLCBzeXMzMl9ydF9zaWdhY3Rpb24sIHN5
czMyX3J0X3NpZ3Byb2NtYXNrLCBzeXMzMl9ydF9zaWdwZW5kaW5nCi0JLndvcmQgc3lzMzJfcnRf
c2lndGltZWR3YWl0LCBzeXMzMl9ydF9zaWdxdWV1ZWluZm8sIHN5czMyX3J0X3NpZ3N1c3BlbmQs
IHN5c19zZXRyZXN1aWQsIHN5c19nZXRyZXN1aWQKKwkud29yZCBjb21wYXRfcnRfc2lndGltZWR3
YWl0LCBzeXMzMl9ydF9zaWdxdWV1ZWluZm8sIHN5czMyX3J0X3NpZ3N1c3BlbmQsIHN5c19zZXRy
ZXN1aWQsIHN5c19nZXRyZXN1aWQKIC8qMTEwKi8JLndvcmQgc3lzX3NldHJlc2dpZCwgc3lzX2dl
dHJlc2dpZCwgc3lzX3NldHJlZ2lkLCBzeXNfbmlzX3N5c2NhbGwsIHN5c19uaXNfc3lzY2FsbAog
CS53b3JkIHN5czMyX2dldGdyb3Vwcywgc3lzMzJfZ2V0dGltZW9mZGF5LCBzeXMzMl9nZXRydXNh
Z2UsIHN5c19uaXNfc3lzY2FsbCwgc3lzX2dldGN3ZAogLyoxMjAqLwkud29yZCBjb21wYXRfc3lz
X3JlYWR2LCBjb21wYXRfc3lzX3dyaXRldiwgc3lzMzJfc2V0dGltZW9mZGF5LCBzeXMzMl9mY2hv
d24xNiwgc3lzX2ZjaG1vZApkaWZmIC1OcmF1cCBhL2FyY2gveDg2XzY0L2lhMzIvaWEzMl9zaWdu
YWwuYyBiL2FyY2gveDg2XzY0L2lhMzIvaWEzMl9zaWduYWwuYwotLS0gYS9hcmNoL3g4Nl82NC9p
YTMyL2lhMzJfc2lnbmFsLmMJMjAwNC0xMi0xMyAwMzo1NjoyOS4wMDAwMDAwMDAgLTA4MDAKKysr
IGIvYXJjaC94ODZfNjQvaWEzMi9pYTMyX3NpZ25hbC5jCTIwMDQtMTItMTMgMDQ6MDg6MjQuMDAw
MDAwMDAwIC0wODAwCkBAIC00NCwxMCArNDQsMTAgQEAKIGFzbWxpbmthZ2UgaW50IGRvX3NpZ25h
bChzdHJ1Y3QgcHRfcmVncyAqcmVncywgc2lnc2V0X3QgKm9sZHNldCk7CiB2b2lkIHNpZ25hbF9m
YXVsdChzdHJ1Y3QgcHRfcmVncyAqcmVncywgdm9pZCBfX3VzZXIgKmZyYW1lLCBjaGFyICp3aGVy
ZSk7CiAKLWludCBpYTMyX2NvcHlfc2lnaW5mb190b191c2VyKHNpZ2luZm9fdDMyIF9fdXNlciAq
dG8sIHNpZ2luZm9fdCAqZnJvbSkKK2ludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKGNvbXBhdF9z
aWdpbmZvX3QgX191c2VyICp0bywgc2lnaW5mb190ICpmcm9tKQogewogCWludCBlcnI7Ci0JaWYg
KCFhY2Nlc3Nfb2sgKFZFUklGWV9XUklURSwgdG8sIHNpemVvZihzaWdpbmZvX3QzMikpKQorCWlm
ICghYWNjZXNzX29rIChWRVJJRllfV1JJVEUsIHRvLCBzaXplb2YoY29tcGF0X3NpZ2luZm9fdCkp
KQogCQlyZXR1cm4gLUVGQVVMVDsKIAogCS8qIElmIHlvdSBjaGFuZ2Ugc2lnaW5mb190IHN0cnVj
dHVyZSwgcGxlYXNlIG1ha2Ugc3VyZSB0aGF0CkBAIC05NSwxMSArOTUsMTEgQEAgaW50IGlhMzJf
Y29weV9zaWdpbmZvX3RvX3VzZXIoc2lnaW5mb190MwogCXJldHVybiBlcnI7CiB9CiAKLWludCBp
YTMyX2NvcHlfc2lnaW5mb19mcm9tX3VzZXIoc2lnaW5mb190ICp0bywgc2lnaW5mb190MzIgX191
c2VyICpmcm9tKQoraW50IGNvcHlfc2lnaW5mb19mcm9tX3VzZXIzMihzaWdpbmZvX3QgKnRvLCBj
b21wYXRfc2lnaW5mb190IF9fdXNlciAqZnJvbSkKIHsKIAlpbnQgZXJyOwogCXUzMiBwdHIzMjsK
LQlpZiAoIWFjY2Vzc19vayAoVkVSSUZZX1JFQUQsIGZyb20sIHNpemVvZihzaWdpbmZvX3QzMikp
KQorCWlmICghYWNjZXNzX29rIChWRVJJRllfUkVBRCwgZnJvbSwgc2l6ZW9mKGNvbXBhdF9zaWdp
bmZvX3QpKSkKIAkJcmV0dXJuIC1FRkFVTFQ7CiAKIAllcnIgPSBfX2dldF91c2VyKHRvLT5zaV9z
aWdubywgJmZyb20tPnNpX3NpZ25vKTsKQEAgLTE4OCw3ICsxODgsNyBAQCBzdHJ1Y3QgcnRfc2ln
ZnJhbWUKIAlpbnQgc2lnOwogCXUzMiBwaW5mbzsKIAl1MzIgcHVjOwotCXN0cnVjdCBzaWdpbmZv
MzIgaW5mbzsKKwljb21wYXRfc2lnaW5mb190IGluZm87CiAJc3RydWN0IHVjb250ZXh0X2lhMzIg
dWM7CiAJc3RydWN0IF9mcHN0YXRlX2lhMzIgZnBzdGF0ZTsKIAljaGFyIHJldGNvZGVbOF07CkBA
IC01MzYsNyArNTM2LDcgQEAgdm9pZCBpYTMyX3NldHVwX3J0X2ZyYW1lKGludCBzaWcsIHN0cnVj
dAogCX0KIAllcnIgfD0gX19wdXRfdXNlcigodTMyKSh1NjQpJmZyYW1lLT5pbmZvLCAmZnJhbWUt
PnBpbmZvKTsKIAllcnIgfD0gX19wdXRfdXNlcigodTMyKSh1NjQpJmZyYW1lLT51YywgJmZyYW1l
LT5wdWMpOwotCWVyciB8PSBpYTMyX2NvcHlfc2lnaW5mb190b191c2VyKCZmcmFtZS0+aW5mbywg
aW5mbyk7CisJZXJyIHw9IGNvcHlfc2lnaW5mb190b191c2VyMzIoJmZyYW1lLT5pbmZvLCBpbmZv
KTsKIAlpZiAoZXJyKQogCQlnb3RvIGdpdmVfc2lnc2VndjsKIApkaWZmIC1OcmF1cCBhL2FyY2gv
eDg2XzY0L2lhMzIvaWEzMmVudHJ5LlMgYi9hcmNoL3g4Nl82NC9pYTMyL2lhMzJlbnRyeS5TCi0t
LSBhL2FyY2gveDg2XzY0L2lhMzIvaWEzMmVudHJ5LlMJMjAwNC0xMi0xMyAwMzo1NjoyOS4wMDAw
MDAwMDAgLTA4MDAKKysrIGIvYXJjaC94ODZfNjQvaWEzMi9pYTMyZW50cnkuUwkyMDA0LTEyLTEz
IDAzOjU3OjA5LjAwMDAwMDAwMCAtMDgwMApAQCAtNDc5LDcgKzQ3OSw3IEBAIGlhMzJfc3lzX2Nh
bGxfdGFibGU6CiAJLnF1YWQgc3lzMzJfcnRfc2lnYWN0aW9uCiAJLnF1YWQgc3lzMzJfcnRfc2ln
cHJvY21hc2sJLyogMTc1ICovCiAJLnF1YWQgc3lzMzJfcnRfc2lncGVuZGluZwotCS5xdWFkIHN5
czMyX3J0X3NpZ3RpbWVkd2FpdAorCS5xdWFkIGNvbXBhdF9ydF9zaWd0aW1lZHdhaXQKIAkucXVh
ZCBzeXMzMl9ydF9zaWdxdWV1ZWluZm8KIAkucXVhZCBzdHViMzJfcnRfc2lnc3VzcGVuZAogCS5x
dWFkIHN5czMyX3ByZWFkCQkvKiAxODAgKi8KZGlmZiAtTnJhdXAgYS9hcmNoL3g4Nl82NC9pYTMy
L3N5c19pYTMyLmMgYi9hcmNoL3g4Nl82NC9pYTMyL3N5c19pYTMyLmMKLS0tIGEvYXJjaC94ODZf
NjQvaWEzMi9zeXNfaWEzMi5jCTIwMDQtMTItMTMgMDM6NTY6MjkuMDAwMDAwMDAwIC0wODAwCisr
KyBiL2FyY2gveDg2XzY0L2lhMzIvc3lzX2lhMzIuYwkyMDA0LTEyLTEzIDA0OjA4OjU5LjAwMDAw
MDAwMCAtMDgwMApAQCAtNjI4LDUzICs2MjgsMTQgQEAgc3lzMzJfcnRfc2lncGVuZGluZyhjb21w
YXRfc2lnc2V0X3QgX191cwogCXJldHVybiByZXQ7CiB9CiAKLQotYXNtbGlua2FnZSBsb25nCi1z
eXMzMl9ydF9zaWd0aW1lZHdhaXQoY29tcGF0X3NpZ3NldF90IF9fdXNlciAqdXRoZXNlLCBzaWdp
bmZvX3QzMiBfX3VzZXIgKnVpbmZvLAotCQkgICAgICBzdHJ1Y3QgY29tcGF0X3RpbWVzcGVjIF9f
dXNlciAqdXRzLCBjb21wYXRfc2l6ZV90IHNpZ3NldHNpemUpCi17Ci0Jc2lnc2V0X3QgczsKLQlj
b21wYXRfc2lnc2V0X3QgczMyOwotCXN0cnVjdCB0aW1lc3BlYyB0OwotCWludCByZXQ7Ci0JbW1f
c2VnbWVudF90IG9sZF9mcyA9IGdldF9mcygpOwotCXNpZ2luZm9fdCBpbmZvOwotCQkKLQlpZiAo
Y29weV9mcm9tX3VzZXIgKCZzMzIsIHV0aGVzZSwgc2l6ZW9mKGNvbXBhdF9zaWdzZXRfdCkpKQot
CQlyZXR1cm4gLUVGQVVMVDsKLQlzd2l0Y2ggKF9OU0lHX1dPUkRTKSB7Ci0JY2FzZSA0OiBzLnNp
Z1szXSA9IHMzMi5zaWdbNl0gfCAoKChsb25nKXMzMi5zaWdbN10pIDw8IDMyKTsKLQljYXNlIDM6
IHMuc2lnWzJdID0gczMyLnNpZ1s0XSB8ICgoKGxvbmcpczMyLnNpZ1s1XSkgPDwgMzIpOwotCWNh
c2UgMjogcy5zaWdbMV0gPSBzMzIuc2lnWzJdIHwgKCgobG9uZylzMzIuc2lnWzNdKSA8PCAzMik7
Ci0JY2FzZSAxOiBzLnNpZ1swXSA9IHMzMi5zaWdbMF0gfCAoKChsb25nKXMzMi5zaWdbMV0pIDw8
IDMyKTsKLQl9Ci0JaWYgKHV0cyAmJiBnZXRfY29tcGF0X3RpbWVzcGVjKCZ0LCB1dHMpKQotCQly
ZXR1cm4gLUVGQVVMVDsKLQlpZiAodWluZm8pIHsKLQkJLyogc3RvcCBkYXRhIGxlYWsgdG8gdXNl
ciBzcGFjZSBpbiBjYXNlIG9mIHN0cnVjdHVyZSBmaWxsIG1pc21hdGNoCi0JCSAqIGJldHdlZW4g
c3lzX3J0X3NpZ3RpbWVkd2FpdCAmIGlhMzJfY29weV9zaWdpbmZvX3RvX3VzZXIuCi0JCSAqLwot
CQltZW1zZXQoJmluZm8sIDAsIHNpemVvZihpbmZvKSk7Ci0JfQotCXNldF9mcyAoS0VSTkVMX0RT
KTsKLQlyZXQgPSBzeXNfcnRfc2lndGltZWR3YWl0KCZzLCB1aW5mbyA/ICZpbmZvIDogTlVMTCwg
dXRzID8gJnQgOiBOVUxMLAotCQkJc2lnc2V0c2l6ZSk7Ci0Jc2V0X2ZzIChvbGRfZnMpOwotCWlm
IChyZXQgPj0gMCAmJiB1aW5mbykgewotCQlpZiAoaWEzMl9jb3B5X3NpZ2luZm9fdG9fdXNlcih1
aW5mbywgJmluZm8pKQotCQkJcmV0dXJuIC1FRkFVTFQ7Ci0JfQotCXJldHVybiByZXQ7Ci19Ci0K
IGFzbWxpbmthZ2UgbG9uZwotc3lzMzJfcnRfc2lncXVldWVpbmZvKGludCBwaWQsIGludCBzaWcs
IHNpZ2luZm9fdDMyIF9fdXNlciAqdWluZm8pCitzeXMzMl9ydF9zaWdxdWV1ZWluZm8oaW50IHBp
ZCwgaW50IHNpZywgY29tcGF0X3NpZ2luZm9fdCBfX3VzZXIgKnVpbmZvKQogewogCXNpZ2luZm9f
dCBpbmZvOwogCWludCByZXQ7CiAJbW1fc2VnbWVudF90IG9sZF9mcyA9IGdldF9mcygpOwogCQot
CWlmIChpYTMyX2NvcHlfc2lnaW5mb19mcm9tX3VzZXIoJmluZm8sIHVpbmZvKSkKKwlpZiAoY29w
eV9zaWdpbmZvX2Zyb21fdXNlcjMyKCZpbmZvLCB1aW5mbykpCiAJCXJldHVybiAtRUZBVUxUOwog
CXNldF9mcyAoS0VSTkVMX0RTKTsKIAlyZXQgPSBzeXNfcnRfc2lncXVldWVpbmZvKHBpZCwgc2ln
LCAmaW5mbyk7CkBAIC0xMDAwLDcgKzk2MSw3IEBAIGFzbWxpbmthZ2UgbG9uZyBzeXMzMl9jbG9u
ZSh1bnNpZ25lZCBpbnQKIH0KIAogYXNtbGlua2FnZSBsb25nIHN5czMyX3dhaXRpZChpbnQgd2hp
Y2gsIGNvbXBhdF9waWRfdCBwaWQsCi0JCQkgICAgIHNpZ2luZm9fdDMyIF9fdXNlciAqdWluZm8s
IGludCBvcHRpb25zLAorCQkJICAgICBjb21wYXRfc2lnaW5mb190IF9fdXNlciAqdWluZm8sIGlu
dCBvcHRpb25zLAogCQkJICAgICBzdHJ1Y3QgY29tcGF0X3J1c2FnZSBfX3VzZXIgKnVydSkKIHsK
IAlzaWdpbmZvX3QgaW5mbzsKQEAgLTEwMjIsNyArOTgzLDcgQEAgYXNtbGlua2FnZSBsb25nIHN5
czMyX3dhaXRpZChpbnQgd2hpY2gsIAogCiAJQlVHX09OKGluZm8uc2lfY29kZSAmIF9fU0lfTUFT
Syk7CiAJaW5mby5zaV9jb2RlIHw9IF9fU0lfQ0hMRDsKLQlyZXR1cm4gaWEzMl9jb3B5X3NpZ2lu
Zm9fdG9fdXNlcih1aW5mbywgJmluZm8pOworCXJldHVybiBjb3B5X3NpZ2luZm9fdG9fdXNlcjMy
KHVpbmZvLCAmaW5mbyk7CiB9CiAKIC8qCmRpZmYgLU5yYXVwIGEvaW5jbHVkZS9hc20tbWlwcy9j
b21wYXQuaCBiL2luY2x1ZGUvYXNtLW1pcHMvY29tcGF0LmgKLS0tIGEvaW5jbHVkZS9hc20tbWlw
cy9jb21wYXQuaAkyMDA0LTEyLTEzIDAzOjU2OjI5LjAwMDAwMDAwMCAtMDgwMAorKysgYi9pbmNs
dWRlL2FzbS1taXBzL2NvbXBhdC5oCTIwMDQtMTItMTMgMDM6NTc6MDkuMDAwMDAwMDAwIC0wODAw
CkBAIC0xMzcsNSArMTM3LDggQEAgc3RhdGljIGlubGluZSB2b2lkICpjb21wYXRfYWxsb2NfdXNl
cl9zcAogCiAJcmV0dXJuICh2b2lkICopIChyZWdzLT5yZWdzWzI5XSAtIGxlbik7CiB9CisjaWYg
ZGVmaW5lZCAoX19NSVBTRUxfXykKKyNkZWZpbmUgX19DT01QQVRfRU5ESUFOX1NXQVBfXyAJMQor
I2VuZGlmCiAKICNlbmRpZiAvKiBfQVNNX0NPTVBBVF9IICovCmRpZmYgLU5yYXVwIGEvaW5jbHVk
ZS9hc20tc3BhcmM2NC9zaWdpbmZvLmggYi9pbmNsdWRlL2FzbS1zcGFyYzY0L3NpZ2luZm8uaAot
LS0gYS9pbmNsdWRlL2FzbS1zcGFyYzY0L3NpZ2luZm8uaAkyMDA0LTEyLTEzIDAzOjU2OjQwLjAw
MDAwMDAwMCAtMDgwMAorKysgYi9pbmNsdWRlL2FzbS1zcGFyYzY0L3NpZ2luZm8uaAkyMDA0LTEy
LTEzIDA0OjI1OjA4LjAwMDAwMDAwMCAtMDgwMApAQCAtMjQsNyArMjQsNyBAQCB0eXBlZGVmIHVu
aW9uIHNpZ3ZhbDMyIHsKIAl1MzIgc2l2YWxfcHRyOwogfSBzaWd2YWxfdDMyOwogCi1zdHJ1Y3Qg
c2lnaW5mbzMyOworc3RydWN0IGNvbXBhdF9zaWdpbmZvOwogCiAjZW5kaWYgLyogQ09ORklHX0NP
TVBBVCAqLwogCkBAIC01Niw5ICs1Niw2IEBAIHR5cGVkZWYgc3RydWN0IHNpZ2V2ZW50MzIgewog
CX0gX3NpZ2V2X3VuOwogfSBzaWdldmVudF90MzI7CiAKLWV4dGVybiBpbnQgY29weV9zaWdpbmZv
X3RvX3VzZXIzMihzdHJ1Y3Qgc2lnaW5mbzMyIF9fdXNlciAqdG8sIHNpZ2luZm9fdCAqZnJvbSk7
Ci1leHRlcm4gaW50IGNvcHlfc2lnaW5mb190b19rZXJuZWwzMihzaWdpbmZvX3QgKnRvLCBzdHJ1
Y3Qgc2lnaW5mbzMyIF9fdXNlciAqZnJvbSk7Ci0KICNlbmRpZiAvKiBDT05GSUdfQ09NUEFUICov
CiAKICNlbmRpZiAvKiBfX0tFUk5FTF9fICovCmRpZmYgLU5yYXVwIGEvaW5jbHVkZS9hc20teDg2
XzY0L2lhMzIuaCBiL2luY2x1ZGUvYXNtLXg4Nl82NC9pYTMyLmgKLS0tIGEvaW5jbHVkZS9hc20t
eDg2XzY0L2lhMzIuaAkyMDA0LTEyLTEzIDAzOjU2OjI5LjAwMDAwMDAwMCAtMDgwMAorKysgYi9p
bmNsdWRlL2FzbS14ODZfNjQvaWEzMi5oCTIwMDQtMTItMTMgMDQ6MjM6MzUuMDAwMDAwMDAwIC0w
ODAwCkBAIC03OCw3ICs3OCw3IEBAIHN0cnVjdCBzdGF0NjQgewogCXVuc2lnbmVkIGxvbmcgbG9u
ZwlzdF9pbm87CiB9IF9fYXR0cmlidXRlX18oKHBhY2tlZCkpOwogCi10eXBlZGVmIHN0cnVjdCBz
aWdpbmZvMzIgewordHlwZWRlZiBzdHJ1Y3QgY29tcGF0X3NpZ2luZm97CiAJaW50IHNpX3NpZ25v
OwogCWludCBzaV9lcnJubzsKIAlpbnQgc2lfY29kZTsKQEAgLTEyOCw3ICsxMjgsNyBAQCB0eXBl
ZGVmIHN0cnVjdCBzaWdpbmZvMzIgewogCQkJaW50IF9mZDsKIAkJfSBfc2lncG9sbDsKIAl9IF9z
aWZpZWxkczsKLX0gc2lnaW5mb190MzI7Cit9IGNvbXBhdF9zaWdpbmZvX3Q7CiAKIHN0cnVjdCBz
aWdmcmFtZTMyCiB7CkBAIC0xNDUsNyArMTQ1LDcgQEAgc3RydWN0IHJ0X3NpZ2ZyYW1lMzIKICAg
ICAgICAgaW50IHNpZzsKICAgICAgICAgdTMyIHBpbmZvOwogICAgICAgICB1MzIgcHVjOwotICAg
ICAgICBzdHJ1Y3Qgc2lnaW5mbzMyIGluZm87CisgICAgICAgIGNvbXBhdF9zaWdpbmZvX3QgaW5m
bzsKICAgICAgICAgc3RydWN0IHVjb250ZXh0X2lhMzIgdWM7CiAgICAgICAgIHN0cnVjdCBfZnBz
dGF0ZV9pYTMyIGZwc3RhdGU7CiB9OwpAQCAtMTY1LDggKzE2NSw2IEBAIHN0cnVjdCBzaWdpbmZv
X3Q7CiBpbnQgZG9fZ2V0X3RocmVhZF9hcmVhKHN0cnVjdCB0aHJlYWRfc3RydWN0ICp0LCBzdHJ1
Y3QgdXNlcl9kZXNjIF9fdXNlciAqaW5mbyk7CiBpbnQgZG9fc2V0X3RocmVhZF9hcmVhKHN0cnVj
dCB0aHJlYWRfc3RydWN0ICp0LCBzdHJ1Y3QgdXNlcl9kZXNjIF9fdXNlciAqaW5mbyk7CiBpbnQg
aWEzMl9jaGlsZF90bHMoc3RydWN0IHRhc2tfc3RydWN0ICpwLCBzdHJ1Y3QgcHRfcmVncyAqY2hp
bGRyZWdzKTsKLWludCBpYTMyX2NvcHlfc2lnaW5mb19mcm9tX3VzZXIoc2lnaW5mb190ICp0bywg
c2lnaW5mb190MzIgX191c2VyICpmcm9tKTsKLWludCBpYTMyX2NvcHlfc2lnaW5mb190b191c2Vy
KHNpZ2luZm9fdDMyIF9fdXNlciAqdG8sIHNpZ2luZm9fdCAqZnJvbSk7CiAjZW5kaWYKIAogI2Vu
ZGlmIC8qICFDT05GSUdfSUEzMl9TVVBQT1JUICovCmRpZmYgLU5yYXVwIGEvaW5jbHVkZS9saW51
eC9jb21wYXQuaCBiL2luY2x1ZGUvbGludXgvY29tcGF0LmgKLS0tIGEvaW5jbHVkZS9saW51eC9j
b21wYXQuaAkyMDA0LTEyLTEzIDAzOjU2OjI5LjAwMDAwMDAwMCAtMDgwMAorKysgYi9pbmNsdWRl
L2xpbnV4L2NvbXBhdC5oCTIwMDQtMTItMTMgMDQ6MjQ6MjguMDAwMDAwMDAwIC0wODAwCkBAIC0x
NDMsNiArMTQzLDggQEAgbG9uZyBjb21wYXRfZ2V0X2JpdG1hcCh1bnNpZ25lZCBsb25nICptYQog
CQkgICAgICAgdW5zaWduZWQgbG9uZyBiaXRtYXBfc2l6ZSk7CiBsb25nIGNvbXBhdF9wdXRfYml0
bWFwKGNvbXBhdF91bG9uZ190IF9fdXNlciAqdW1hc2ssIHVuc2lnbmVkIGxvbmcgKm1hc2ssCiAJ
CSAgICAgICB1bnNpZ25lZCBsb25nIGJpdG1hcF9zaXplKTsKLQorc3RydWN0IGNvbXBhdF9zaWdp
bmZvOworaW50IGNvcHlfc2lnaW5mb19mcm9tX3VzZXIzMihzaWdpbmZvX3QgKnRvLCBzdHJ1Y3Qg
Y29tcGF0X3NpZ2luZm8gX191c2VyICpmcm9tKTsKK2ludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMy
KHN0cnVjdCBjb21wYXRfc2lnaW5mbyBfX3VzZXIgKnRvLCBzaWdpbmZvX3QgKmZyb20pOwogI2Vu
ZGlmIC8qIENPTkZJR19DT01QQVQgKi8KICNlbmRpZiAvKiBfTElOVVhfQ09NUEFUX0ggKi8KZGlm
ZiAtTnJhdXAgYS9rZXJuZWwvY29tcGF0LmMgYi9rZXJuZWwvY29tcGF0LmMKLS0tIGEva2VybmVs
L2NvbXBhdC5jCTIwMDQtMTItMTMgMDM6NTY6NDEuMDAwMDAwMDAwIC0wODAwCisrKyBiL2tlcm5l
bC9jb21wYXQuYwkyMDA0LTEyLTEzIDA0OjExOjUyLjAwMDAwMDAwMCAtMDgwMApAQCAtNjgyLDYg
KzY4Miw5MiBAQCBsb25nIGNvbXBhdF9wdXRfYml0bWFwKGNvbXBhdF91bG9uZ190IF9fCiAJcmV0
dXJuIDA7CiB9CiAKK3ZvaWQKK3NpZ3NldF9mcm9tX2NvbXBhdCAoc2lnc2V0X3QgKnNldCwgY29t
cGF0X3NpZ3NldF90ICpjb21wYXQpCit7CisJc3dpdGNoIChfTlNJR19XT1JEUykgeworI2lmIGRl
ZmluZWQgKF9fQ09NUEFUX0VORElBTl9TV0FQX18pCisJY2FzZSA0OiBzZXQtPnNpZ1szXSA9IGNv
bXBhdC0+c2lnWzddIHwgKCgobG9uZyljb21wYXQtPnNpZ1s2XSkgPDwgMzIgKTsKKwljYXNlIDM6
IHNldC0+c2lnWzJdID0gY29tcGF0LT5zaWdbNV0gfCAoKChsb25nKWNvbXBhdC0+c2lnWzRdKSA8
PCAzMiApOworCWNhc2UgMjogc2V0LT5zaWdbMV0gPSBjb21wYXQtPnNpZ1szXSB8ICgoKGxvbmcp
Y29tcGF0LT5zaWdbMl0pIDw8IDMyICk7CisJY2FzZSAxOiBzZXQtPnNpZ1swXSA9IGNvbXBhdC0+
c2lnWzFdIHwgKCgobG9uZyljb21wYXQtPnNpZ1swXSkgPDwgMzIgKTsKKyNlbHNlCisJY2FzZSA0
OiBzZXQtPnNpZ1szXSA9IGNvbXBhdC0+c2lnWzZdIHwgKCgobG9uZyljb21wYXQtPnNpZ1s3XSkg
PDwgMzIgKTsKKwljYXNlIDM6IHNldC0+c2lnWzJdID0gY29tcGF0LT5zaWdbNF0gfCAoKChsb25n
KWNvbXBhdC0+c2lnWzVdKSA8PCAzMiApOworCWNhc2UgMjogc2V0LT5zaWdbMV0gPSBjb21wYXQt
PnNpZ1syXSB8ICgoKGxvbmcpY29tcGF0LT5zaWdbM10pIDw8IDMyICk7CisJY2FzZSAxOiBzZXQt
PnNpZ1swXSA9IGNvbXBhdC0+c2lnWzBdIHwgKCgobG9uZyljb21wYXQtPnNpZ1sxXSkgPDwgMzIg
KTsKKyNlbmRpZgorCX0KK30KKworYXNtbGlua2FnZSBsb25nCitjb21wYXRfcnRfc2lndGltZWR3
YWl0IChjb21wYXRfc2lnc2V0X3QgX191c2VyICp1dGhlc2UsCisJCXN0cnVjdCBjb21wYXRfc2ln
aW5mbyBfX3VzZXIgKnVpbmZvLAorCQlzdHJ1Y3QgY29tcGF0X3RpbWVzcGVjIF9fdXNlciAqdXRz
LCBjb21wYXRfc2l6ZV90IHNpZ3NldHNpemUpCit7CisJY29tcGF0X3NpZ3NldF90IHMzMjsKKwlz
aWdzZXRfdCBzOworCWludCBzaWc7CisJc3RydWN0IHRpbWVzcGVjIHQ7CisJc2lnaW5mb190IGlu
Zm87CisJbG9uZyByZXQsIHRpbWVvdXQgPSAwOworCisJaWYgKHNpZ3NldHNpemUgIT0gc2l6ZW9m
KHNpZ3NldF90KSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAoY29weV9mcm9tX3VzZXIoJnMz
MiwgdXRoZXNlLCBzaXplb2YoY29tcGF0X3NpZ3NldF90KSkpCisJCXJldHVybiAtRUZBVUxUOwor
CXNpZ3NldF9mcm9tX2NvbXBhdCgmcywgJnMzMik7CisJc2lnZGVsc2V0bWFzaygmcyxzaWdtYXNr
KFNJR0tJTEwpfHNpZ21hc2soU0lHU1RPUCkpOworCXNpZ25vdHNldCgmcyk7CisKKwlpZiAodXRz
KSB7CisJCWlmIChnZXRfY29tcGF0X3RpbWVzcGVjICgmdCwgdXRzKSkKKwkJCXJldHVybiAtRUZB
VUxUOworCQlpZiAodC50dl9uc2VjID49IDEwMDAwMDAwMDBMIHx8IHQudHZfbnNlYyA8IDAKKwkJ
CQl8fCB0LnR2X3NlYyA8IDApCisJCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlzcGluX2xvY2tf
aXJxKCZjdXJyZW50LT5zaWdoYW5kLT5zaWdsb2NrKTsKKwlzaWcgPSBkZXF1ZXVlX3NpZ25hbChj
dXJyZW50LCAmcywgJmluZm8pOworCWlmICghc2lnKSB7CisJCXRpbWVvdXQgPSBNQVhfU0NIRURV
TEVfVElNRU9VVDsKKwkJaWYgKHV0cykKKwkJCXRpbWVvdXQgPSB0aW1lc3BlY190b19qaWZmaWVz
KCZ0KQorCQkJCSsodC50dl9zZWMgfHwgdC50dl9uc2VjKTsKKwkJaWYgKHRpbWVvdXQpIHsKKwkJ
CWN1cnJlbnQtPnJlYWxfYmxvY2tlZCA9IGN1cnJlbnQtPmJsb2NrZWQ7CisJCQlzaWdhbmRzZXRz
KCZjdXJyZW50LT5ibG9ja2VkLCAmY3VycmVudC0+YmxvY2tlZCwgJnMpOworCisJCQlyZWNhbGNf
c2lncGVuZGluZygpOworCQkJc3Bpbl91bmxvY2tfaXJxKCZjdXJyZW50LT5zaWdoYW5kLT5zaWds
b2NrKTsKKworCQkJY3VycmVudC0+c3RhdGUgPSBUQVNLX0lOVEVSUlVQVElCTEU7CisJCQl0aW1l
b3V0ID0gc2NoZWR1bGVfdGltZW91dCh0aW1lb3V0KTsKKworCQkJc3Bpbl9sb2NrX2lycSgmY3Vy
cmVudC0+c2lnaGFuZC0+c2lnbG9jayk7CisJCQlzaWcgPSBkZXF1ZXVlX3NpZ25hbChjdXJyZW50
LCAmcywgJmluZm8pOworCQkJY3VycmVudC0+YmxvY2tlZCA9IGN1cnJlbnQtPnJlYWxfYmxvY2tl
ZDsKKwkJCXNpZ2luaXRzZXQoJmN1cnJlbnQtPnJlYWxfYmxvY2tlZCwgMCk7CisJCQlyZWNhbGNf
c2lncGVuZGluZygpOworCQl9CisJfQorCXNwaW5fdW5sb2NrX2lycSgmY3VycmVudC0+c2lnaGFu
ZC0+c2lnbG9jayk7CisKKwlpZiAoc2lnKSB7CisJCXJldCA9IHNpZzsKKwkJaWYgKHVpbmZvKSB7
CisJCQlpZiAoY29weV9zaWdpbmZvX3RvX3VzZXIzMih1aW5mbywgJmluZm8pKQorCQkJCXJldCA9
IC1FRkFVTFQ7CisJCX0KKwl9ZWxzZSB7CisJCXJldCA9IHRpbWVvdXQ/LUVJTlRSOi1FQUdBSU47
CisJfQorCXJldHVybiByZXQ7CisKK30KKwogI2lmZGVmIF9fQVJDSF9XQU5UX0NPTVBBVF9TWVNf
VElNRQogCiAvKiBjb21wYXRfdGltZV90IGlzIGEgMzIgYml0ICJsb25nIiBhbmQgbmVlZHMgdG8g
Z2V0IGNvbnZlcnRlZC4gKi8K

------_=_NextPart_001_01C4E1A2.2C66B27B--
