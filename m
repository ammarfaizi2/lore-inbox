Return-Path: <linux-kernel-owner+w=401wt.eu-S1750714AbXACLwQ@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1750714AbXACLwQ (ORCPT <rfc822;w@1wt.eu>);
	Wed, 3 Jan 2007 06:52:16 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1750719AbXACLwQ
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 3 Jan 2007 06:52:16 -0500
Received: from srv5.dvmed.net ([207.36.208.214]:50996 "EHLO mail.dvmed.net"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750714AbXACLwP (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 3 Jan 2007 06:52:15 -0500
Message-ID: <459B98C9.1040309@garzik.org>
Date: Wed, 03 Jan 2007 06:51:37 -0500
From: Jeff Garzik <jeff@garzik.org>
User-Agent: Thunderbird 1.5.0.9 (X11/20061219)
MIME-Version: 1.0
To: Grzegorz Kulewski <kangur@polcom.net>
CC: Alan <alan@lxorguk.ukuu.org.uk>, Mikael Pettersson <mikpe@it.uu.se>,
       s0348365@sms.ed.ac.uk, torvalds@osdl.org, 76306.1226@compuserve.com,
       akpm@osdl.org, bunk@stusta.de, greg@kroah.com,
       linux-kernel@vger.kernel.org, yanmin_zhang@linux.intel.com
Subject: Re: kernel + gcc 4.1 = several problems
References: <200701030212.l032CDXe015365@harpo.it.uu.se> <20070103102944.09e81786@localhost.localdomain> <Pine.LNX.4.63.0701031128420.14187@alpha.polcom.net>
In-Reply-To: <Pine.LNX.4.63.0701031128420.14187@alpha.polcom.net>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam-Score: -4.3 (----)
X-Spam-Report: SpamAssassin version 3.1.7 on srv5.dvmed.net summary:
	Content analysis details:   (-4.3 points, 5.0 required)
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

Grzegorz Kulewski wrote:
> On Wed, 3 Jan 2007, Alan wrote:
>> The proper fix for all of this mess is to fix the gcc compiler suite to
>> actually generate i686 code when told to use i686. CMOV is an optional
>> i686 extension which gcc uses without checking. In early PIV days it made
>> sense but on modern processors CMOV is so pointless the bug should be
>> fixed. At that point an i686 kernel would contain i686 instructions and
>> actually run on all i686 processors ending all the i586 pain for most
>> users and distributions.
> 
> Could you explain why CMOV is pointless now? Are there any benchmarks 
> proving that?

In theory modern processors should have no trouble converting a 
test/move sequence into the same uops generated by a cmov instruction, 
for one.

	Jeff



