Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S264177AbUDGVjh (ORCPT <rfc822;willy@w.ods.org>);
	Wed, 7 Apr 2004 17:39:37 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S264189AbUDGVjh
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 7 Apr 2004 17:39:37 -0400
Received: from ppp-217-133-42-200.cust-adsl.tiscali.it ([217.133.42.200]:11435
	"EHLO dualathlon.random") by vger.kernel.org with ESMTP
	id S264177AbUDGVjd (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 7 Apr 2004 17:39:33 -0400
Date: Wed, 7 Apr 2004 23:39:31 +0200
From: Andrea Arcangeli <andrea@suse.de>
To: Ingo Molnar <mingo@elte.hu>
Cc: Eric Whiting <ewhiting@amis.com>, akpm@osdl.org,
       linux-kernel@vger.kernel.org
Subject: Re: -mmX 4G patches feedback [numbers: how much performance impact]
Message-ID: <20040407213931.GN26888@dualathlon.random>
References: <40718B2A.967D9467@amis.com> <20040405174616.GH2234@dualathlon.random> <4071D11B.1FEFD20A@amis.com> <20040405221641.GN2234@dualathlon.random> <20040406115539.GA31465@elte.hu> <20040406155925.GW2234@dualathlon.random> <20040406192549.GA14869@elte.hu> <20040406202548.GI2234@dualathlon.random> <20040407072517.GA32140@elte.hu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040407072517.GA32140@elte.hu>
User-Agent: Mutt/1.4.1i
X-GPG-Key: 1024D/68B9CB43 13D9 8355 295F 4823 7C49  C012 DFA1 686E 68B9 CB43
X-PGP-Key: 1024R/CB4660B9 CC A0 71 81 F4 A0 63 AC  C0 4B 81 1D 8C 15 C8 E5
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Apr 07, 2004 at 09:25:17AM +0200, Ingo Molnar wrote:
> but please be extremely careful with this testcase. It needs static
> linking & init= booting to produce stable, comparable numbers. I did
> this for a couple of key kernels and made sure the effect is the same as
> in the simple loop_print.c case, but it's a real PITA to ensure stable
> numbers.

you're basically testing the associativity of the TLB with your dTLB, no
surprise it gives very different results. the biggest noise generated by
page coloring is when the working set is equal the size of the cache,
for the tlb cache that's 64 pages on the prescott, but note I'm not
using a prescott, this is the first HT enabeld (P4 based) xeon I doubt
it has 64 dTLB entries, infact the biggest noise happens way below
256kbyte, I guess it has between 8 and 32 entries in the tlb (not sure
exactly, I've too old and too recent specifications none covering this
specific box, I didn't need to know this detail to benchmark accurately
and rule out page coloring by running multiple passes and verifiying
they're all the same).
