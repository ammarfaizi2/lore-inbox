Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1750895AbWEVOzS@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1750895AbWEVOzS (ORCPT <rfc822;willy@w.ods.org>);
	Mon, 22 May 2006 10:55:18 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1750900AbWEVOzS
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Mon, 22 May 2006 10:55:18 -0400
Received: from lmcgw.cs.sunysb.edu ([130.245.128.4]:37867 "EHLO
	smtp.lmc.cs.sunysb.edu") by vger.kernel.org with ESMTP
	id S1750895AbWEVOzR (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Mon, 22 May 2006 10:55:17 -0400
Date: Mon, 22 May 2006 10:55:16 -0400
From: Giridhar Pemmasani <giri@lmc.cs.sunysb.edu>
To: Nick Piggin <nickpiggin@yahoo.com.au>
Cc: linux-kernel@vger.kernel.org
Subject: Re: __vmalloc with GFP_ATOMIC causes 'sleeping from invalid context'
In-Reply-To: <44716988.5010902@yahoo.com.au>
References: <20060522013648.6FCEAEE9EE@wolfe.lmc.cs.sunysb.edu>
	<447119B3.7000506@yahoo.com.au>
	<20060522055852.63940EE9EE@wolfe.lmc.cs.sunysb.edu>
	<4471551B.1070701@yahoo.com.au>
	<447155E5.8060406@yahoo.com.au>
	<447156AB.30909@yahoo.com.au>
	<20060522070819.23CC5EE9EE@wolfe.lmc.cs.sunysb.edu>
	<44716988.5010902@yahoo.com.au>
User-Agent: Wanderlust/2.14.0 (Africa) SEMI/1.14.6 (Maruoka) FLIM/1.14.8
 (=?ISO-8859-4?Q?Shij=F2?=) APEL/10.6 MULE XEmacs/21.4 (patch 19) (Constant
 Variable) (i386-debian-linux)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Message-Id: <20060522145516.92A84EE9EE@wolfe.lmc.cs.sunysb.edu>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 22 May 2006 17:34:32 +1000, Nick Piggin <nickpiggin@yahoo.com.au> said:

  >> > Oh, and __get_vm_area_node{_mask} should
  >> BUG_ON(in_interrupt());
  >> 
  >> With the patch I sent earlier, this may not be required: Since
  >> __get_vm_area_node calls kmalloc, it should be taken care of in
  >> kmalloc and friends. Currently cache_alloc_debugcheck_before
  >> doesn't check for in_interrupt(); perhaps that is the right place
  >> to add

   > vmlist_lock is not irq safe. If you call it from interrupt, you
   > can deadlock.

Aha. I will add BUG_ON(in_interrupt()) to __get_vm_area_node in the
next round (if there is interest in the patch).

Thanks,
Giri
