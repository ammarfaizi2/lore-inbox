Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S262213AbSJEIRn>; Sat, 5 Oct 2002 04:17:43 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S262231AbSJEIRn>; Sat, 5 Oct 2002 04:17:43 -0400
Received: from point41.gts.donpac.ru ([213.59.116.41]:55558 "EHLO orbita1.ru")
	by vger.kernel.org with ESMTP id <S262213AbSJEIRl>;
	Sat, 5 Oct 2002 04:17:41 -0400
Message-ID: <43341.172.173.28.251.1033807005.squirrel@mail.orbita1.ru>
Date: Sat, 5 Oct 2002 12:36:45 +0400 (MSD)
Subject: [IDE] sleeping function called from illegal context at slab.c:1347
From: "Andrey Panin" <pazke@orbita1.ru>
To: linux-kernel@vger.kernel.org
X-Mailer: SquirrelMail (version 1.0)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="fhg2IhuN_(u2G_lmj:VuC:OyPBKjGaqz7hYj4(,BPx9MQbs5eM0INP58Shk1O(Bk'0IKGa"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

--fhg2IhuN_(u2G_lmj:VuC:OyPBKjGaqz7hYj4(,BPx9MQbs5eM0INP58Shk1O(Bk'0IKGa
Content-Type: text/plain; charset=koi8-r
Content-Transfer-Encoding: 8bit

Hello all,

looks like i tracked down yet another instance of this already famous 
message, :)
but i don't know how to fix it.

This message produced by IDE driver is IMHO 
caused by ide_init_queue() function called while holding
ide_lock spinlock in the 
init_irq() function (ide-probe.c).

Then ide_init_queue() calls blk_init_queue() 
and we have a this call chain:
    ide_init_queue() -> blk_init_queue() -> 
blk_init_free_list() -> kmem_cache_alloc()

What can we do to fix this ?

Best 
regards,
        Andrey

--fhg2IhuN_(u2G_lmj:VuC:OyPBKjGaqz7hYj4(,BPx9MQbs5eM0INP58Shk1O(Bk'0IKGa
Content-Type: application/octet-stream; name=\"dmesg\";name="dmesg"
Content-Disposition: attachment; filename="dmesg"
Content-Transfer-Encoding: base64

TGludXggdmVyc2lvbiAyLjUuNDAgKHJvb3RAcHJvdG9jb2wpIChnY2MgdmVyc2lvbiAzLjAuNCkg
IzI1IEZyaSBPY3QgNCAyMzoxMDoyNCBQRFQgMjAwMgpWaWRlbyBtb2RlIHRvIGJlIHVzZWQgZm9y
IHJlc3RvcmUgaXMgZmZmZgpCSU9TLXByb3ZpZGVkIHBoeXNpY2FsIFJBTSBtYXA6CiBCSU9TLWU4
MjA6IDAwMDAwMDAwMDAwMDAwMDAgLSAwMDAwMDAwMDAwMDlmYzAwICh1c2FibGUpCiBCSU9TLWU4
MjA6IDAwMDAwMDAwMDAwOWZjMDAgLSAwMDAwMDAwMDAwMGEwMDAwIChyZXNlcnZlZCkKIEJJT1Mt
ZTgyMDogMDAwMDAwMDAwMDBlMDAwMCAtIDAwMDAwMDAwMDAxMDAwMDAgKHJlc2VydmVkKQogQklP
Uy1lODIwOiAwMDAwMDAwMDAwMTAwMDAwIC0gMDAwMDAwMDAwZmZjMDAwMCAodXNhYmxlKQogQklP
Uy1lODIwOiAwMDAwMDAwMDBmZmMwMDAwIC0gMDAwMDAwMDAwZmZmODAwMCAoQUNQSSBkYXRhKQog
QklPUy1lODIwOiAwMDAwMDAwMDBmZmY4MDAwIC0gMDAwMDAwMDAxMDAwMDAwMCAoQUNQSSBOVlMp
CiBCSU9TLWU4MjA6IDAwMDAwMDAwZmZiODAwMDAgLSAwMDAwMDAwMGZmYzAwMDAwIChyZXNlcnZl
ZCkKIEJJT1MtZTgyMDogMDAwMDAwMDBmZmYwMDAwMCAtIDAwMDAwMDAxMDAwMDAwMDAgKHJlc2Vy
dmVkKQoyNTVNQiBMT1dNRU0gYXZhaWxhYmxlLgpPbiBub2RlIDAgdG90YWxwYWdlczogNjU0NzIK
ICBETUEgem9uZTogNDA5NiBwYWdlcwogIE5vcm1hbCB6b25lOiA2MTM3NiBwYWdlcwogIEhpZ2hN
ZW0gem9uZTogMCBwYWdlcwpCdWlsZGluZyB6b25lbGlzdCBmb3Igbm9kZSA6IDAKS2VybmVsIGNv
bW1hbmQgbGluZTogQk9PVF9JTUFHRT1sIHJvIHJvb3Q9MzAzCkxvY2FsIEFQSUMgZGlzYWJsZWQg
YnkgQklPUyAtLSByZWVuYWJsaW5nLgpGb3VuZCBhbmQgZW5hYmxlZCBsb2NhbCBBUElDIQpJbml0
aWFsaXppbmcgQ1BVIzAKRGV0ZWN0ZWQgNzk3LjUzOCBNSHogcHJvY2Vzc29yLgpDb25zb2xlOiBj
b2xvdXIgVkdBKyA4MHgyNQpDYWxpYnJhdGluZyBkZWxheSBsb29wLi4uIDE1NzYuOTYgQm9nb01J
UFMKTWVtb3J5OiAyNTU4MTZrLzI2MTg4OGsgYXZhaWxhYmxlICgxNTQ3ayBrZXJuZWwgY29kZSwg
NTY4NGsgcmVzZXJ2ZWQsIDM1MmsgZGF0YSwgMjY0ayBpbml0LCAwayBoaWdobWVtKQpTZWN1cml0
eSBTY2FmZm9sZCB2MS4wLjAgaW5pdGlhbGl6ZWQKRGVudHJ5LWNhY2hlIGhhc2ggdGFibGUgZW50
cmllczogMzI3NjggKG9yZGVyOiA2LCAyNjIxNDQgYnl0ZXMpCklub2RlLWNhY2hlIGhhc2ggdGFi
bGUgZW50cmllczogMTYzODQgKG9yZGVyOiA1LCAxMzEwNzIgYnl0ZXMpCk1vdW50LWNhY2hlIGhh
c2ggdGFibGUgZW50cmllczogNTEyIChvcmRlcjogMCwgNDA5NiBieXRlcykKQ1BVOiBCZWZvcmUg
dmVuZG9yIGluaXQsIGNhcHM6IDAzODNmYmZmIDAwMDAwMDAwIDAwMDAwMDAwLCB2ZW5kb3IgPSAw
CkNQVTogTDEgSSBjYWNoZTogMTZLLCBMMSBEIGNhY2hlOiAxNksKQ1BVOiBMMiBjYWNoZTogMjU2
SwpDUFU6IEFmdGVyIHZlbmRvciBpbml0LCBjYXBzOiAwMzgzZmJmZiAwMDAwMDAwMCAwMDAwMDAw
MCAwMDAwMDAwMApJbnRlbCBtYWNoaW5lIGNoZWNrIGFyY2hpdGVjdHVyZSBzdXBwb3J0ZWQuCklu
dGVsIG1hY2hpbmUgY2hlY2sgcmVwb3J0aW5nIGVuYWJsZWQgb24gQ1BVIzAuCkNQVTogICAgIEFm
dGVyIGdlbmVyaWMsIGNhcHM6IDAzODNmYmZmIDAwMDAwMDAwIDAwMDAwMDAwIDAwMDAwMDAwCkNQ
VTogICAgICAgICAgICAgQ29tbW9uIGNhcHM6IDAzODNmYmZmIDAwMDAwMDAwIDAwMDAwMDAwIDAw
MDAwMDAwCkNQVTogSW50ZWwgUGVudGl1bSBJSUkgKENvcHBlcm1pbmUpIHN0ZXBwaW5nIDAzCkVu
YWJsaW5nIGZhc3QgRlBVIHNhdmUgYW5kIHJlc3RvcmUuLi4gZG9uZS4KRW5hYmxpbmcgdW5tYXNr
ZWQgU0lNRCBGUFUgZXhjZXB0aW9uIHN1cHBvcnQuLi4gZG9uZS4KQ2hlY2tpbmcgJ2hsdCcgaW5z
dHJ1Y3Rpb24uLi4gT0suClBPU0lYIGNvbmZvcm1hbmNlIHRlc3RpbmcgYnkgVU5JRklYCmVuYWJs
ZWQgRXh0SU5UIG9uIENQVSMwCkVTUiB2YWx1ZSBiZWZvcmUgZW5hYmxpbmcgdmVjdG9yOiAwMDAw
MDAwMApFU1IgdmFsdWUgYWZ0ZXIgZW5hYmxpbmcgdmVjdG9yOiAwMDAwMDAwMApVc2luZyBsb2Nh
bCBBUElDIHRpbWVyIGludGVycnVwdHMuCmNhbGlicmF0aW5nIEFQSUMgdGltZXIgLi4uCi4uLi4u
IENQVSBjbG9jayBzcGVlZCBpcyA3OTcuMDMwNyBNSHouCi4uLi4uIGhvc3QgYnVzIGNsb2NrIHNw
ZWVkIGlzIDEzMi4wODg0IE1Iei4KY3B1OiAwLCBjbG9ja3M6IDEzMjg4NCwgc2xpY2U6IDY2NDQy
CkNQVTA8VDA6MTMyODgwLFQxOjY2NDMyLEQ6NixTOjY2NDQyLEM6MTMyODg0PgpMaW51eCBORVQ0
LjAgZm9yIExpbnV4IDIuNApCYXNlZCB1cG9uIFN3YW5zZWEgVW5pdmVyc2l0eSBDb21wdXRlciBT
b2NpZXR5IE5FVDMuMDM5CkluaXRpYWxpemluZyBSVCBuZXRsaW5rIHNvY2tldAptdHJyOiB2Mi4w
ICgyMDAyMDUxOSkKUENJOiBQQ0kgQklPUyByZXZpc2lvbiAyLjEwIGVudHJ5IGF0IDB4ZmRhOTUs
IGxhc3QgYnVzPTIKUENJOiBVc2luZyBjb25maWd1cmF0aW9uIHR5cGUgMQphZGRpbmcgJycgdG8g
Y3B1IGNsYXNzIGludGVyZmFjZXMKUG5QQklPUzogRm91bmQgUG5QIEJJT1MgaW5zdGFsbGF0aW9u
IHN0cnVjdHVyZSBhdCAweGMwMGYyNzcwClBuUEJJT1M6IFBuUCBCSU9TIHZlcnNpb24gMS4wLCBl
bnRyeSAweGYwMDAwOjB4MjAyYSwgZHNlZyAweGYwMDAwClBuUEJJT1M6IDIwIG5vZGVzIHJlcG9y
dGVkIGJ5IFBuUCBCSU9TOyAyMCByZWNvcmRlZCBieSBkcml2ZXIKUG5QQklPUzogUE5QMGMwMjog
aW9wb3J0IHJhbmdlIDB4NGQwLTB4NGQxIGhhcyBiZWVuIHJlc2VydmVkClBuUEJJT1M6IFBOUDBj
MDI6IGlvcG9ydCByYW5nZSAweGNmOC0weGNmZiBjb3VsZCBub3QgYmUgcmVzZXJ2ZWQKUG5QQklP
UzogUE5QMGMwMjogaW9wb3J0IHJhbmdlIDB4NDAwLTB4NDdmIGhhcyBiZWVuIHJlc2VydmVkClBu
UEJJT1M6IFBOUDBjMDI6IGlvcG9ydCByYW5nZSAweDU0MC0weDU0ZiBoYXMgYmVlbiByZXNlcnZl
ZApQblBCSU9TOiBQTlAwYzAyOiBpb3BvcnQgcmFuZ2UgMHg1MDAtMHg1M2YgaGFzIGJlZW4gcmVz
ZXJ2ZWQKUG5QQklPUzogUE5QMGMwMjogaW9wb3J0IHJhbmdlIDB4ODAwLTB4ODdmIGhhcyBiZWVu
IHJlc2VydmVkClBDSTogUHJvYmluZyBQQ0kgaGFyZHdhcmUKUENJOiBQcm9iaW5nIFBDSSBoYXJk
d2FyZSAoYnVzIDAwKQpUcmFuc3BhcmVudCBicmlkZ2UgLSBJbnRlbCBDb3JwLiA4MjgwMUJBL0NB
L0RCIFBDSSBCcmlkZ2UKUENJOiBVc2luZyBJUlEgcm91dGVyIFBJSVggWzgwODYvMjQ0MF0gYXQg
MDA6MWYuMAphcG06IEJJT1MgdmVyc2lvbiAxLjIgRmxhZ3MgMHgwMyAoRHJpdmVyIHZlcnNpb24g
MS4xNikKU3RhcnRpbmcga3N3YXBkCkJJTzogcG9vbCBvZiAyNTYgc2V0dXAsIDE0S2IgKDU2IGJ5
dGVzL2JpbykKYmlvdmVjIHBvb2xbMF06ICAgMSBidmVjczogMjU2IGVudHJpZXMgKDEyIGJ5dGVz
KQpiaW92ZWMgcG9vbFsxXTogICA0IGJ2ZWNzOiAyNTYgZW50cmllcyAoNDggYnl0ZXMpCmJpb3Zl
YyBwb29sWzJdOiAgMTYgYnZlY3M6IDI1NiBlbnRyaWVzICgxOTIgYnl0ZXMpCmJpb3ZlYyBwb29s
WzNdOiAgNjQgYnZlY3M6IDI1NiBlbnRyaWVzICg3NjggYnl0ZXMpCmJpb3ZlYyBwb29sWzRdOiAx
MjggYnZlY3M6IDI1NiBlbnRyaWVzICgxNTM2IGJ5dGVzKQpiaW92ZWMgcG9vbFs1XTogMjU2IGJ2
ZWNzOiAyNTYgZW50cmllcyAoMzA3MiBieXRlcykKYWlvX3NldHVwOiBzaXplb2Yoc3RydWN0IHBh
Z2UpID0gNDAKSm91cm5hbGxlZCBCbG9jayBEZXZpY2UgZHJpdmVyIGxvYWRlZAp1ZGY6IHJlZ2lz
dGVyaW5nIGZpbGVzeXN0ZW0KQ2FwYWJpbGl0eSBMU00gaW5pdGlhbGl6ZWQKU2VyaWFsOiA4MjUw
LzE2NTUwIGRyaXZlciAkUmV2aXNpb246IDEuOTAgJCBJUlEgc2hhcmluZyBkaXNhYmxlZAp0dHlT
MCBhdCBJL08gMHgzZjggKGlycSA9IDQpIGlzIGEgMTY1NTBBCnBhcnBvcnQwOiBQQy1zdHlsZSBh
dCAweDM3OCBbUENTUFAsVFJJU1RBVEUsRVBQXQpwYXJwb3J0MDogY3BwX2RhaXN5OiBhYTU1MDBm
Zig5OCkKcGFycG9ydDA6IGFzc2lnbl9hZGRyczogYWE1NTAwZmYoOTgpCnBhcnBvcnQwOiBmYWtp
bmcgc2VtaS1jb2xvbgpwYXJwb3J0MDogUHJpbnRlciwgSGV3bGV0dC1QYWNrYXJkIEhQIExhc2Vy
SmV0IDExMDAKcHR5OiAyNTYgVW5peDk4IHB0eXMgY29uZmlndXJlZApscDA6IHVzaW5nIHBhcnBv
cnQwIChwb2xsaW5nKS4KaTgxMF9ybmcgaGFyZHdhcmUgZHJpdmVyIDAuOS44IGxvYWRlZApibG9j
ayByZXF1ZXN0IHF1ZXVlczoKIDEyOCByZXF1ZXN0cyBwZXIgcmVhZCBxdWV1ZQogMTI4IHJlcXVl
c3RzIHBlciB3cml0ZSBxdWV1ZQogOCByZXF1ZXN0cyBwZXIgYmF0Y2gKIGVudGVyIGNvbmdlc3Rp
b24gYXQgMzEKIGV4aXQgY29uZ2VzdGlvbiBhdCAzMwpGbG9wcHkgZHJpdmUocyk6IGZkMCBpcyAx
LjQ0TQpGREMgMCBpcyBhIHBvc3QtMTk5MSA4MjA3NwpuZTJrLXBjaS5jOnYxLjAyIDEwLzE5LzIw
MDAgRC4gQmVja2VyL1AuIEdvcnRtYWtlcgogIGh0dHA6Ly93d3cuc2N5bGQuY29tL25ldHdvcmsv
bmUyay1wY2kuaHRtbApQQ0k6IEZvdW5kIElSUSAzIGZvciBkZXZpY2UgMDE6MDkuMApQQ0k6IFNo
YXJpbmcgSVJRIDMgd2l0aCAwMTowZC4wCmV0aDA6IFJlYWxUZWsgUlRMLTgwMjkgZm91bmQgYXQg
MHhkZjgwLCBJUlEgMywgMDA6QTA6NEI6MDc6NzI6RjguClVuaWZvcm0gTXVsdGktUGxhdGZvcm0g
RS1JREUgZHJpdmVyIFJldmlzaW9uOiA3LjAwYWxwaGEyCmlkZTogQXNzdW1pbmcgMzNNSHogc3lz
dGVtIGJ1cyBzcGVlZCBmb3IgUElPIG1vZGVzOyBvdmVycmlkZSB3aXRoIGlkZWJ1cz14eApJQ0gy
OiBJREUgY29udHJvbGxlciBhdCBQQ0kgc2xvdCAwMDoxZi4xCklDSDI6IGNoaXBzZXQgcmV2aXNp
b24gMQpJQ0gyOiBub3QgMTAwJSBuYXRpdmUgbW9kZTogd2lsbCBwcm9iZSBpcnFzIGxhdGVyCiAg
ICBpZGUwOiBCTS1ETUEgYXQgMHhmZmEwLTB4ZmZhNywgQklPUyBzZXR0aW5nczogaGRhOkRNQSwg
aGRiOnBpbwogICAgaWRlMTogQk0tRE1BIGF0IDB4ZmZhOC0weGZmYWYsIEJJT1Mgc2V0dGluZ3M6
IGhkYzpETUEsIGhkZDpwaW8KaGRhOiBNYXh0b3IgNTIwNDlINCwgQVRBIERJU0sgZHJpdmUKaWRl
MCBhdCAweDFmMC0weDFmNywweDNmNiBvbiBpcnEgMTQKaGRjOiBDUkQtODQ4MkIsIEFUQVBJIENE
L0RWRC1ST00gZHJpdmUKaGRkOiBJT01FR0EgWklQIDEwMCBBVEFQSSwgQVRBUEkgRkxPUFBZIGRy
aXZlCkRlYnVnOiBzbGVlcGluZyBmdW5jdGlvbiBjYWxsZWQgZnJvbSBpbGxlZ2FsIGNvbnRleHQg
YXQgc2xhYi5jOjEzNDYKYzEyZDVlYTggYzAxMTUyNDYgYzAyODhhZTAgYzAyOGE3NjcgMDAwMDA1
NDIgMDAwMDAxZDAgYzAxMzBlNzYgYzAyOGE3NjcgCiAgICAgICAwMDAwMDU0MiAwMDAwMDI5MiBj
MDFiMzRlZCAwMDAwMDBmOSBjZmY2ZTQwMCBjMDM2YzczOCBjMDM2Yzc3MCBjMDM2YzY3YyAKICAg
ICAgIGMwMzZjNzM4IGMwMWRhZjAxIGMxMjhiZDM4IDAwMDAwMWQwIDAwMDAwMDAwIGMwMzZjNzM4
IGMwMzZjNzI4IGMwMzZjNjdjIApDYWxsIFRyYWNlOgogWzxjMDExNTI0Nj5dX19taWdodF9zbGVl
cCsweDU2LzB4NjAKIFs8YzAxMzBlNzY+XWttZW1fY2FjaGVfYWxsb2MrMHgyNi8weDEzMAogWzxj
MDFiMzRlZD5dcGNpX2J1c193cml0ZV9jb25maWdfYnl0ZSsweDRkLzB4NTAKIFs8YzAxZGFmMDE+
XWJsa19pbml0X2ZyZWVfbGlzdCsweDUxLzB4ZDAKIFs8YzAxZGFmOGQ+XWJsa19pbml0X3F1ZXVl
KzB4ZC8weGYwCiBbPGMwMWU4ODU4Pl1pZGVfaW5pdF9xdWV1ZSsweDI4LzB4NzAKIFs8YzAxZWYx
NjA+XWRvX2lkZV9yZXF1ZXN0KzB4MC8weDIwCiBbPGMwMWU4YTg1Pl1pbml0X2lycSsweDFlNS8w
eDM4MAogWzxjMDFlOGUzNj5daHdpZl9pbml0KzB4NzYvMHgyNzAKIFs8YzAxZTg3N2Q+XXByb2Jl
X2h3aWZfaW5pdCsweDFkLzB4NzAKIFs8YzAxZmI2OTk+XWlkZV9zZXR1cF9wY2lfZGV2aWNlKzB4
NTkvMHg2MAogWzxjMDEwNTBhNz5daW5pdCsweDM3LzB4MWMwCiBbPGMwMTA1MDcwPl1pbml0KzB4
MC8weDFjMAogWzxjMDEwNTUwNT5da2VybmVsX3RocmVhZF9oZWxwZXIrMHg1LzB4MTAKCmlkZTEg
YXQgMHgxNzAtMHgxNzcsMHgzNzYgb24gaXJxIDE1CmhkYTogaG9zdCBwcm90ZWN0ZWQgYXJlYSA9
PiAxCmhkYTogMzk4ODI1Mjggc2VjdG9ycyAoMjA0MjAgTUIpIHcvMjA0OEtpQiBDYWNoZSwgQ0hT
PTI0ODIvMjU1LzYzLCBVRE1BKDEwMCkKIGhkYTogaGRhMSBoZGEyIGhkYTMKaGRjOiBBVEFQSSA0
OFggQ0QtUk9NIGRyaXZlLCAxMjhrQiBDYWNoZSwgVURNQSgzMykKVW5pZm9ybSBDRC1ST00gZHJp
dmVyIFJldmlzaW9uOiAzLjEyCmlkZS1mbG9wcHkgZHJpdmVyIDAuOTkubmV3aWRlCmhkZDogTm8g
ZGlzayBpbiBkcml2ZQpoZGQ6IDk4MzA0a0IsIDk2LzY0LzMyIENIUywgNDA5NiBrQnBzLCA1MTIg
c2VjdG9yIHNpemUsIDI5NDEgcnBtCmlucHV0OiBQQyBTcGVha2VyCmlucHV0OiBQUzIrKyBMb2dp
dGVjaCBXaGVlbCBNb3VzZSBvbiBpc2EwMDYwL3NlcmlvMQpzZXJpbzogaTgwNDIgQVVYIHBvcnQg
YXQgMHg2MCwweDY0IGlycSAxMgppbnB1dDogQVQgU2V0IDIga2V5Ym9hcmQgb24gaXNhMDA2MC9z
ZXJpbzAKc2VyaW86IGk4MDQyIEtCRCBwb3J0IGF0IDB4NjAsMHg2NCBpcnEgMQpBZHZhbmNlZCBM
aW51eCBTb3VuZCBBcmNoaXRlY3R1cmUgRHJpdmVyIFZlcnNpb24gMC45LjByYzIgKE1vbiBBdWcg
MDUgMTQ6MjQ6MDUgMjAwMiBVVEMpLgpyZXF1ZXN0X21vZHVsZVtzbmQtY2FyZC0wXTogbm90IHJl
YWR5CnJlcXVlc3RfbW9kdWxlW3NuZC1jYXJkLTFdOiBub3QgcmVhZHkKcmVxdWVzdF9tb2R1bGVb
c25kLWNhcmQtMl06IG5vdCByZWFkeQpyZXF1ZXN0X21vZHVsZVtzbmQtY2FyZC0zXTogbm90IHJl
YWR5CnJlcXVlc3RfbW9kdWxlW3NuZC1jYXJkLTRdOiBub3QgcmVhZHkKcmVxdWVzdF9tb2R1bGVb
c25kLWNhcmQtNV06IG5vdCByZWFkeQpyZXF1ZXN0X21vZHVsZVtzbmQtY2FyZC02XTogbm90IHJl
YWR5CnJlcXVlc3RfbW9kdWxlW3NuZC1jYXJkLTddOiBub3QgcmVhZHkKUENJOiBGb3VuZCBJUlEg
OSBmb3IgZGV2aWNlIDAxOjBjLjAKUENJOiBTaGFyaW5nIElSUSA5IHdpdGggMDA6MWYuMwpBTFNB
IGRldmljZSBsaXN0OgogICMwOiBFbnNvbmlxIEF1ZGlvUENJIEVTMTM3MSBhdCAweGRmMDAsIGly
cSA5Ck5FVDQ6IExpbnV4IFRDUC9JUCAxLjAgZm9yIE5FVDQuMApJUCBQcm90b2NvbHM6IElDTVAs
IFVEUCwgVENQLCBJR01QCklQOiByb3V0aW5nIGNhY2hlIGhhc2ggdGFibGUgb2YgMjA0OCBidWNr
ZXRzLCAxNktieXRlcwpUQ1A6IEhhc2ggdGFibGVzIGNvbmZpZ3VyZWQgKGVzdGFibGlzaGVkIDE2
Mzg0IGJpbmQgMzI3NjgpCk5FVDQ6IFVuaXggZG9tYWluIHNvY2tldHMgMS4wL1NNUCBmb3IgTGlu
dXggTkVUNC4wLgpWRlM6IE1vdW50ZWQgcm9vdCAoZXh0MiBmaWxlc3lzdGVtKSByZWFkb25seS4K
RnJlZWluZyB1bnVzZWQga2VybmVsIG1lbW9yeTogMjY0ayBmcmVlZApBZGRpbmcgMzIxMjBrIHN3
YXAgb24gL2Rldi9oZGEyLiAgUHJpb3JpdHk6LTEgZXh0ZW50czoxCkZBVDogVXNpbmcgY29kZXBh
Z2UgY3A4NjYKRkFUOiBVc2luZyBJTyBjaGFyc2V0IGtvaTgtcgppZGUtZmxvcHB5OiBoZGQ6IEkv
TyBlcnJvciwgcGMgPSAgMCwga2V5ID0gIDIsIGFzYyA9IDNhLCBhc2NxID0gIDAKaWRlLWZsb3Bw
eTogaGRkOiBJL08gZXJyb3IsIHBjID0gMWIsIGtleSA9ICAyLCBhc2MgPSAzYSwgYXNjcSA9ICAw
CmhkZDogTm8gZGlzayBpbiBkcml2ZQo=

--fhg2IhuN_(u2G_lmj:VuC:OyPBKjGaqz7hYj4(,BPx9MQbs5eM0INP58Shk1O(Bk'0IKGa--

