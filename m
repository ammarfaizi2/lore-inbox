Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1750798AbWA0PTb@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1750798AbWA0PTb (ORCPT <rfc822;willy@w.ods.org>);
	Fri, 27 Jan 2006 10:19:31 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751232AbWA0PTb
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Fri, 27 Jan 2006 10:19:31 -0500
Received: from lirs02.phys.au.dk ([130.225.28.43]:45465 "EHLO
	lirs02.phys.au.dk") by vger.kernel.org with ESMTP id S1750798AbWA0PT3
	(ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Fri, 27 Jan 2006 10:19:29 -0500
Date: Fri, 27 Jan 2006 16:18:21 +0100 (MET)
From: Esben Nielsen <simlo@phys.au.dk>
To: Steven Rostedt <rostedt@goodmis.org>
cc: Bill Huey <billh@gnuppy.monkey.org>, Ingo Molnar <mingo@elte.hu>,
       david singleton <dsingleton@mvista.com>, <linux-kernel@vger.kernel.org>
Subject: Re: RT Mutex patch and tester [PREEMPT_RT]
In-Reply-To: <Pine.LNX.4.44L0.0601231608001.8284-100000@lifa01.phys.au.dk>
Message-ID: <Pine.LNX.4.44L0.0601271617030.30636-200000@lifa02.phys.au.dk>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="202006529-1967741563-1138375101=:30636"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--202006529-1967741563-1138375101=:30636
Content-Type: TEXT/PLAIN; charset=US-ASCII

I have patched against 2.6.15-rt15 and I have found a hyperthreaded P4
machine. It works fine on that one.

Esben

On Mon, 23 Jan 2006, Esben Nielsen wrote:

> On Mon, 23 Jan 2006, Steven Rostedt wrote:
>
> > On Mon, 2006-01-23 at 10:33 +0100, Esben Nielsen wrote:
> > > On Sun, 22 Jan 2006, Bill Huey wrote:
> > >
> > > > On Mon, Jan 23, 2006 at 01:20:12AM +0100, Esben Nielsen wrote:
> > > > > Here is the problem:
> > > > >
> > > > > Task B (non-RT) takes BKL. It then takes mutex 1. Then B
> > > > > tries to lock mutex 2, which is owned by task C. B goes blocks and releases the
> > > > > BKL. Our RT task A comes along and tries to get 1. It boosts task B
> > > > > which boosts task C which releases mutex 2. Now B can continue? No, it has
> > > > > to reaquire BKL! The netto effect is that our RT task A waits for BKL to
> > > > > be released without ever calling into a module using BKL. But just because
> > > > > somebody in some non-RT code called into a module otherwise considered
> > > > > safe for RT usage with BKL held, A must wait on BKL!
> > > >
> > > > True, that's major suckage, but I can't name a single place in the kernel that
> > > > does that.
> > >
> > > Sounds good. But someone might put it in...
> >
> > Hmm, I wouldn't be surprised if this is done somewhere in the VFS layer.
> >
> > >
> > > > Remember, BKL is now preemptible so the place that it might sleep
> > > > similar
> > > > to the above would be in spinlock_t definitions.
> > > I can't see that from how it works. It is explicitly made such that you
> > > are allowed to use semaphores with BKL held - and such that the BKL is
> > > released if you do.
> >
> > Correct.  I hope you didn't remove my comment in the rt.c about BKL
> > being a PITA :) (Ingo was nice enough to change my original patch to use
> > the acronym.)
>
> I left it there it seems :-)
>
> >
> > >
> > > > But BKL is held across schedules()s
> > > > so that the BKL semantics are preserved.
> > > Only for spinlock_t now rt_mutex operation, not for semaphore/mutex
> > > operations.
> > > > Contending under a priority inheritance
> > > > operation isn't too much of a problem anyways since the use of it already
> > > > makes that
> > > > path indeterminant.
> > > The problem is that you might hit BKL because of what some other low
> > > priority  task does, thus making your RT code indeterministic.
> >
> > I disagree here.  The fact that you grab a semaphore that may also be
> > grabbed by a path while holding the BKL means that grabbing that
> > semaphore may be blocked on the BKL too.  So the length of grabbing a
> > semaphore that can be grabbed while also holding the BKL is the length
> > of the critical section of the semaphore + the length of the longest BKL
> > hold.
> Exactly. What is "the length of the longest BKL hold" ? (see below).
>
> >
> > Just don't let your RT tasks grab semaphores that can be grabbed while
> > also holding the BKL :)
>
> How are you to _know_ that. Even though your code or any code you
> call or any code called from code you call haven't changed, this situation
> can arise!
>
> >
> > But the main point is that it is still deterministic.  Just that it may
> > be longer than one thinks.
> >
> I don't consider "the length of the longest BKL hold" deterministic.
> People might traverse all kinds of weird lists and datastructures while
> holding BKL.
>
> > >
> > > > Even under contention, a higher priority task above A can still
> > > > run since the kernel is preemptive now even when manipulating BKL.
> > >
> > > No, A waits for BKL because it waits for B which waits for the BKL.
> >
> > Right.
> >
> > -- Steve
> >
> > PS. I might actually get around to testing your patch today :)  That is,
> > if -rt12 passes all my tests.
> >
>
> Sounds nice :-) I cross my fingers...
>
> Esben
>
>
> >
> > -
> > To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
> > the body of a message to majordomo@vger.kernel.org
> > More majordomo info at  http://vger.kernel.org/majordomo-info.html
> > Please read the FAQ at  http://www.tux.org/lkml/
> >
>
>

--202006529-1967741563-1138375101=:30636
Content-Type: TEXT/PLAIN; charset=US-ASCII; name="pi_lock.patch-rt15"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.LNX.4.44L0.0601271618210.30636@lifa02.phys.au.dk>
Content-Description: 
Content-Disposition: attachment; filename="pi_lock.patch-rt15"

ZGlmZiAtdXByIGxpbnV4LTIuNi4xNS1ydDE1LW9yaWcvZnMvcHJvYy9hcnJh
eS5jIGxpbnV4LTIuNi4xNS1ydDE1LXBpcGF0Y2gvZnMvcHJvYy9hcnJheS5j
DQotLS0gbGludXgtMi42LjE1LXJ0MTUtb3JpZy9mcy9wcm9jL2FycmF5LmMJ
MjAwNi0wMS0yNCAxODo1MDozNy4wMDAwMDAwMDAgKzAxMDANCisrKyBsaW51
eC0yLjYuMTUtcnQxNS1waXBhdGNoL2ZzL3Byb2MvYXJyYXkuYwkyMDA2LTAx
LTI0IDE4OjU2OjA3LjAwMDAwMDAwMCArMDEwMA0KQEAgLTI5NSw2ICsyOTUs
MTQgQEAgc3RhdGljIGlubGluZSBjaGFyICp0YXNrX2NhcChzdHJ1Y3QgdGFz
aw0KIAkJCSAgICBjYXBfdChwLT5jYXBfZWZmZWN0aXZlKSk7DQogfQ0KIA0K
Kw0KK3N0YXRpYyBjaGFyICpzaG93X2Jsb2NrZWRfb24odGFza190ICp0YXNr
LCBjaGFyICpidWZmZXIpDQorew0KKyAgcGlkX3QgcGlkID0gZ2V0X2Jsb2Nr
ZWRfb24odGFzayk7DQorICByZXR1cm4gYnVmZmVyICsgc3ByaW50ZihidWZm
ZXIsIkJsY2tPbjogJWRcbiIscGlkKTsNCit9DQorDQorDQogaW50IHByb2Nf
cGlkX3N0YXR1cyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2ssIGNoYXIgKiBi
dWZmZXIpDQogew0KIAljaGFyICogb3JpZyA9IGJ1ZmZlcjsNCkBAIC0zMTMs
NiArMzIxLDcgQEAgaW50IHByb2NfcGlkX3N0YXR1cyhzdHJ1Y3QgdGFza19z
dHJ1Y3QgKg0KICNpZiBkZWZpbmVkKENPTkZJR19BUkNIX1MzOTApDQogCWJ1
ZmZlciA9IHRhc2tfc2hvd19yZWdzKHRhc2ssIGJ1ZmZlcik7DQogI2VuZGlm
DQorCWJ1ZmZlciA9IHNob3dfYmxvY2tlZF9vbih0YXNrLGJ1ZmZlcik7DQog
CXJldHVybiBidWZmZXIgLSBvcmlnOw0KIH0NCiANCmRpZmYgLXVwciBsaW51
eC0yLjYuMTUtcnQxNS1vcmlnL2luY2x1ZGUvbGludXgvcnRfbG9jay5oIGxp
bnV4LTIuNi4xNS1ydDE1LXBpcGF0Y2gvaW5jbHVkZS9saW51eC9ydF9sb2Nr
LmgNCi0tLSBsaW51eC0yLjYuMTUtcnQxNS1vcmlnL2luY2x1ZGUvbGludXgv
cnRfbG9jay5oCTIwMDYtMDEtMjQgMTg6NTA6MzcuMDAwMDAwMDAwICswMTAw
DQorKysgbGludXgtMi42LjE1LXJ0MTUtcGlwYXRjaC9pbmNsdWRlL2xpbnV4
L3J0X2xvY2suaAkyMDA2LTAxLTI0IDE4OjU2OjA3LjAwMDAwMDAwMCArMDEw
MA0KQEAgLTM2LDYgKzM2LDcgQEAgc3RydWN0IHJ0X211dGV4IHsNCiAJdW5z
aWduZWQgbG9uZwkJYWNxdWlyZV9laXA7DQogCWNoYXIgCQkJKm5hbWUsICpm
aWxlOw0KIAlpbnQJCQlsaW5lOw0KKwlpbnQgICAgICAgICAgICAgICAgICAg
ICB2ZXJib3NlOw0KICMgZW5kaWYNCiAjIGlmZGVmIENPTkZJR19ERUJVR19Q
UkVFTVBUDQogCWludAkJCXdhc19wcmVlbXB0X29mZjsNCkBAIC02Nyw3ICs2
OCw3IEBAIHN0cnVjdCBydF9tdXRleF93YWl0ZXIgew0KIA0KICNpZmRlZiBD
T05GSUdfREVCVUdfREVBRExPQ0tTDQogIyBkZWZpbmUgX19SVF9NVVRFWF9E
RUFETE9DS19ERVRFQ1RfSU5JVElBTElaRVIobG9ja25hbWUpIFwNCi0JLCAu
bmFtZSA9ICNsb2NrbmFtZSwgLmZpbGUgPSBfX0ZJTEVfXywgLmxpbmUgPSBf
X0xJTkVfXw0KKwksIC5uYW1lID0gI2xvY2tuYW1lLCAuZmlsZSA9IF9fRklM
RV9fLCAubGluZSA9IF9fTElORV9fLCAudmVyYm9zZSA9MA0KICNlbHNlDQog
IyBkZWZpbmUgX19SVF9NVVRFWF9ERUFETE9DS19ERVRFQ1RfSU5JVElBTEla
RVIobG9ja25hbWUpDQogI2VuZGlmDQpkaWZmIC11cHIgbGludXgtMi42LjE1
LXJ0MTUtb3JpZy9pbmNsdWRlL2xpbnV4L3NjaGVkLmggbGludXgtMi42LjE1
LXJ0MTUtcGlwYXRjaC9pbmNsdWRlL2xpbnV4L3NjaGVkLmgNCi0tLSBsaW51
eC0yLjYuMTUtcnQxNS1vcmlnL2luY2x1ZGUvbGludXgvc2NoZWQuaAkyMDA2
LTAxLTI0IDE4OjUwOjM3LjAwMDAwMDAwMCArMDEwMA0KKysrIGxpbnV4LTIu
Ni4xNS1ydDE1LXBpcGF0Y2gvaW5jbHVkZS9saW51eC9zY2hlZC5oCTIwMDYt
MDEtMjQgMTg6NTY6MDcuMDAwMDAwMDAwICswMTAwDQpAQCAtMTY1Miw2ICsx
NjUyLDggQEAgZXh0ZXJuIHZvaWQgcmVjYWxjX3NpZ3BlbmRpbmcodm9pZCk7
DQogDQogZXh0ZXJuIHZvaWQgc2lnbmFsX3dha2VfdXAoc3RydWN0IHRhc2tf
c3RydWN0ICp0LCBpbnQgcmVzdW1lX3N0b3BwZWQpOw0KIA0KK2V4dGVybiBw
aWRfdCBnZXRfYmxvY2tlZF9vbih0YXNrX3QgKnRhc2spOw0KKw0KIC8qDQog
ICogV3JhcHBlcnMgZm9yIHAtPnRocmVhZF9pbmZvLT5jcHUgYWNjZXNzLiBO
by1vcCBvbiBVUC4NCiAgKi8NCmRpZmYgLXVwciBsaW51eC0yLjYuMTUtcnQx
NS1vcmlnL2luaXQvbWFpbi5jIGxpbnV4LTIuNi4xNS1ydDE1LXBpcGF0Y2gv
aW5pdC9tYWluLmMNCi0tLSBsaW51eC0yLjYuMTUtcnQxNS1vcmlnL2luaXQv
bWFpbi5jCTIwMDYtMDEtMjQgMTg6NTA6MzcuMDAwMDAwMDAwICswMTAwDQor
KysgbGludXgtMi42LjE1LXJ0MTUtcGlwYXRjaC9pbml0L21haW4uYwkyMDA2
LTAxLTI0IDE4OjU2OjA3LjAwMDAwMDAwMCArMDEwMA0KQEAgLTYxNiw2ICs2
MTYsMTIgQEAgc3RhdGljIHZvaWQgX19pbml0IGRvX2luaXRjYWxscyh2b2lk
KQ0KIAkJCXByaW50ayhLRVJOX1dBUk5JTkcgImVycm9yIGluIGluaXRjYWxs
IGF0IDB4JXA6ICINCiAJCQkJInJldHVybmVkIHdpdGggJXNcbiIsICpjYWxs
LCBtc2cpOw0KIAkJfQ0KKwkJaWYgKGluaXRjYWxsX2RlYnVnKSB7DQorCQkJ
cHJpbnRrKEtFUk5fREVCVUcgIlJldHVybmVkIGZyb20gaW5pdGNhbGwgMHgl
cCIsICpjYWxsKTsNCisJCQlwcmludF9mbl9kZXNjcmlwdG9yX3N5bWJvbCgi
OiAlcygpIiwgKHVuc2lnbmVkIGxvbmcpICpjYWxsKTsNCisJCQlwcmludGso
IlxuIik7DQorCQl9DQorDQogCX0NCiANCiAJLyogTWFrZSBzdXJlIHRoZXJl
IGlzIG5vIHBlbmRpbmcgc3R1ZmYgZnJvbSB0aGUgaW5pdGNhbGwgc2VxdWVu
Y2UgKi8NCmRpZmYgLXVwciBsaW51eC0yLjYuMTUtcnQxNS1vcmlnL2tlcm5l
bC9ydC5jIGxpbnV4LTIuNi4xNS1ydDE1LXBpcGF0Y2gva2VybmVsL3J0LmMN
Ci0tLSBsaW51eC0yLjYuMTUtcnQxNS1vcmlnL2tlcm5lbC9ydC5jCTIwMDYt
MDEtMjQgMTg6NTA6MzcuMDAwMDAwMDAwICswMTAwDQorKysgbGludXgtMi42
LjE1LXJ0MTUtcGlwYXRjaC9rZXJuZWwvcnQuYwkyMDA2LTAxLTI0IDE4OjU2
OjA3LjAwMDAwMDAwMCArMDEwMA0KQEAgLTM2LDcgKzM2LDEwIEBADQogICog
ICAoYWxzbyBieSBTdGV2ZW4gUm9zdGVkdCkNCiAgKiAgICAtIENvbnZlcnRl
ZCBzaW5nbGUgcGlfbG9jayB0byBpbmRpdmlkdWFsIHRhc2sgbG9ja3MuDQog
ICoNCisgKiBCeSBFc2JlbiBOaWVsc2VuOg0KKyAqICAgIERvaW5nIHByaW9y
aXR5IGluaGVyaXRhbmNlIHdpdGggaGVscCBvZiB0aGUgc2NoZWR1bGVyLg0K
ICAqLw0KKw0KICNpbmNsdWRlIDxsaW51eC9jb25maWcuaD4NCiAjaW5jbHVk
ZSA8bGludXgvcnRfbG9jay5oPg0KICNpbmNsdWRlIDxsaW51eC9zY2hlZC5o
Pg0KQEAgLTU4LDE4ICs2MSwyNiBAQA0KICAqICBUbyBrZWVwIGZyb20gaGF2
aW5nIGEgc2luZ2xlIGxvY2sgZm9yIFBJLCBlYWNoIHRhc2sgYW5kIGxvY2sN
CiAgKiAgaGFzIHRoZWlyIG93biBsb2NraW5nLiBUaGUgb3JkZXIgaXMgYXMg
Zm9sbG93czoNCiAgKg0KKyAqICAgICBsb2NrLT53YWl0X2xvY2sgICAtPiBz
b21ldGFzay0+cGlfbG9jaw0KKyAqIFlvdSBzaG91bGQgb25seSBob2xkIG9u
ZSB3YWl0X2xvY2sgYW5kIG9uZSBwaV9sb2NrDQogICogYmxvY2tlZCB0YXNr
LT5waV9sb2NrIC0+IGxvY2stPndhaXRfbG9jayAtPiBvd25lciB0YXNrLT5w
aV9sb2NrLg0KICAqDQotICogVGhpcyBpcyBzYWZlIHNpbmNlIGEgb3duZXIg
dGFzayBzaG91bGQgbmV2ZXIgYmxvY2sgb24gYSBsb2NrIHRoYXQNCi0gKiBp
cyBvd25lZCBieSBhIGJsb2NraW5nIHRhc2suICBPdGhlcndpc2UgeW91IHdv
dWxkIGhhdmUgYSBkZWFkbG9jaw0KLSAqIGluIHRoZSBub3JtYWwgc3lzdGVt
Lg0KLSAqIFRoZSBzYW1lIGdvZXMgZm9yIHRoZSBsb2Nrcy4gQSBsb2NrIGhl
bGQgYnkgb25lIHRhc2ssIHNob3VsZCBub3QgYmUNCi0gKiB0YWtlbiBieSB0
YXNrIHRoYXQgaG9sZHMgYSBsb2NrIHRoYXQgaXMgYmxvY2tpbmcgdGhpcyBs
b2NrJ3Mgb3duZXIuDQorICogbG9jay0+d2FpdF9sb2NrIHByb3RlY3RzIGV2
ZXJ5dGhpbmcgaW5zaWRlIHRoZSBsb2NrIGFuZCBhbGwgdGhlIHdhaXRlcnMN
CisgKiBvbiBsb2NrLT53YWl0X2xpc3QuDQorICogc29tZXRhc2stPnBpX2xv
Y2sgcHJvdGVjdHMgZXZlcnl0aGluZyBvbiB0YXNrLT4gcmVsYXRlZCB0byB0
aGUgcnRfbXV0ZXguDQorICoNCisgKiBJbnZhcmlhbnRzICAtIG11c3QgYmUg
dHJ1ZSB3aGVuIHVubG9jayBsb2NrLT53YWl0X2xvY2s6DQorICogICBJZiBs
b2NrLT53YWl0X2xpc3QgaXMgbm9uLWVtcHR5IA0KKyAqICAgICAxKSBsb2Nr
X293bmVyKGxvY2spIHBvaW50cyB0byBhIHZhbGlkIHRocmVhZC4NCisgKiAg
ICAgMikgVGhlIGZpcnN0IGFuZCBvbmx5IHRoZSBmaXJzdCB3YWl0ZXIgb24g
dGhlIGxpc3QgbXVzdCBiZSBvbg0KKyAqICAgICAgICBsb2NrX293bmVyKGxv
Y2spLT50YXNrLT5waV93YWl0ZXJzLg0KKyAqIA0KKyAqICBBIHdhaXRlciBz
dHJ1Y3QgaXMgb24gdGhlIGxvY2stPndhaXRfbGlzdCBpZmYgd2FpdGVyLT50
aSE9TlVMTC4NCiAgKg0KLSAqIEEgdGFzayB0aGF0IGlzIGFib3V0IHRvIGdy
YWIgYSBsb2NrIGlzIGZpcnN0IGNvbnNpZGVyZWQgdG8gYmUgYQ0KLSAqIGJs
b2NraW5nIHRhc2ssIGV2ZW4gaWYgdGhlIHRhc2sgc3VjY2Vzc2Z1bGx5IGFj
cXVpcmVzIHRoZSBsb2NrLg0KLSAqIFRoaXMgaXMgYmVjYXVzZSB0aGUgdGFr
aW5nIG9mIHRoZSBsb2NrcyBoYXBwZW4gYmVmb3JlIHRoZQ0KLSAqIHRhc2sg
YmVjb21lcyB0aGUgb3duZXIuDQorICogIFN0cmF0ZWd5IGZvciBib29zdGlu
ZyBsb2NrIGNoYWluOg0KKyAqICAgdGFzayBBIGJsb2NrZWQgb24gbG9jayAx
IG93bmVkIGJ5IHRhc2sgQiBibG9ja2VkIG9uIGxvY2sgMiBldGMuLg0KKyAq
ICBBIHNldHMgQidzIHByaW8gdXAgYW5kIHdha2VzIEIuIEIgdHJ5IHRvIGdl
dCBsb2NrIDIgYWdhaW4gYW5kIGZhaWxzLg0KKyAqICBCIHRoZXJlZm9yZSBi
b29zdCBDLg0KICAqLw0KIA0KIC8qDQpAQCAtMTE3LDYgKzEyOCw3IEBADQog
ICogVGhpcyBmbGFnIGlzIGdvb2QgZm9yIGRlYnVnZ2luZyB0aGUgUEkgY29k
ZSAtIGl0IG1ha2VzIGFsbCB0YXNrcw0KICAqIGluIHRoZSBzeXN0ZW0gZmFs
bCB1bmRlciBQSSBoYW5kbGluZy4gTm9ybWFsbHkgb25seSBTQ0hFRF9GSUZP
L1JSDQogICogdGFza3MgYXJlIFBJLWhhbmRsZWQ6DQorICoNCiAgKi8NCiAj
ZGVmaW5lIEFMTF9UQVNLU19QSSAwDQogDQpAQCAtMTMyLDYgKzE0NCwxOSBA
QA0KICMgZGVmaW5lIF9fQ0FMTEVSMF9fDQogI2VuZGlmDQogDQoraW50IHJ0
X211dGV4X2RlYnVnID0gMDsNCisNCisjaWZkZWYgQ09ORklHX1BSRUVNUFRf
UlQNCitzdGF0aWMgaW50IGlzX2tlcm5lbF9sb2NrKHN0cnVjdCBydF9tdXRl
eCAqbG9jaykNCit7DQorCXJldHVybiAobG9jayA9PSAma2VybmVsX3NlbS5s
b2NrKTsNCisNCit9DQorI2Vsc2UNCisjZGVmaW5lIGlzX2tlcm5lbF9sb2Nr
KGxvY2spICgwKQ0KKyNlbmRpZg0KKw0KKw0KICNpZmRlZiBDT05GSUdfREVC
VUdfREVBRExPQ0tTDQogLyoNCiAgKiBXZSBuZWVkIGEgZ2xvYmFsIGxvY2sg
d2hlbiB3ZSB3YWxrIHRocm91Z2ggdGhlIG11bHRpLXByb2Nlc3MNCkBAIC0z
MTEsNyArMzM2LDcgQEAgdm9pZCBjaGVja19wcmVlbXB0X3dha2V1cChzdHJ1
Y3QgdGFza19zdA0KIAkJfQ0KIH0NCiANCi1zdGF0aWMgaW5saW5lIHZvaWQN
CitzdGF0aWMgdm9pZA0KIGFjY291bnRfbXV0ZXhfb3duZXJfZG93bihzdHJ1
Y3QgdGFza19zdHJ1Y3QgKnRhc2ssIHN0cnVjdCBydF9tdXRleCAqbG9jaykN
CiB7DQogCWlmICh0YXNrLT5sb2NrX2NvdW50ID49IE1BWF9MT0NLX1NUQUNL
KSB7DQpAQCAtMzI1LDcgKzM1MCw3IEBAIGFjY291bnRfbXV0ZXhfb3duZXJf
ZG93bihzdHJ1Y3QgdGFza19zdHINCiAJdGFzay0+bG9ja19jb3VudCsrOw0K
IH0NCiANCi1zdGF0aWMgaW5saW5lIHZvaWQNCitzdGF0aWMgdm9pZA0KIGFj
Y291bnRfbXV0ZXhfb3duZXJfdXAoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNr
KQ0KIHsNCiAJaWYgKCF0YXNrLT5sb2NrX2NvdW50KSB7DQpAQCAtMzkwLDYg
KzQxNSwyMSBAQCBzdGF0aWMgdm9pZCBwcmludGtfbG9jayhzdHJ1Y3QgcnRf
bXV0ZXggDQogCX0NCiB9DQogDQorc3RhdGljIHZvaWQgZGVidWdfbG9jayhz
dHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIA0KKwkJICAgICAgIGNvbnN0IGNoYXIg
KmZtdCwuLi4pDQoreyANCisJaWYocnRfbXV0ZXhfZGVidWcgJiYgbG9jay0+
dmVyYm9zZSkgeyANCisJCXZhX2xpc3QgYXJnczsNCisJCXByaW50a190YXNr
KGN1cnJlbnQpOw0KKw0KKwkJdmFfc3RhcnQoYXJncywgZm10KTsNCisJCXZw
cmludGsoZm10LCBhcmdzKTsNCisJCXZhX2VuZChhcmdzKTsNCisJCXByaW50
a19sb2NrKGxvY2ssIDEpOw0KKwl9IA0KK30NCisNCisNCiBzdGF0aWMgdm9p
ZCBwcmludGtfd2FpdGVyKHN0cnVjdCBydF9tdXRleF93YWl0ZXIgKncpDQog
ew0KIAlwcmludGsoIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiIpOw0K
QEAgLTUzNCwxMCArNTc0LDkgQEAgc3RhdGljIGludCBjaGVja19kZWFkbG9j
ayhzdHJ1Y3QgcnRfbXV0ZQ0KIAkgKiBTcGVjaWFsLWNhc2U6IHRoZSBCS0wg
c2VsZi1yZWxlYXNlcyBhdCBzY2hlZHVsZSgpDQogCSAqIHRpbWUgc28gaXQg
Y2FuIG5ldmVyIGRlYWRsb2NrOg0KIAkgKi8NCi0jaWZkZWYgQ09ORklHX1BS
RUVNUFRfUlQNCi0JaWYgKGxvY2sgPT0gJmtlcm5lbF9zZW0ubG9jaykNCisJ
aWYgKGlzX2tlcm5lbF9sb2NrKGxvY2spKQ0KIAkJcmV0dXJuIDA7DQotI2Vu
ZGlmDQorDQogCXRpID0gbG9ja19vd25lcihsb2NrKTsNCiAJaWYgKCF0aSkN
CiAJCXJldHVybiAwOw0KQEAgLTU2MiwxMyArNjAxLDggQEAgc3RhdGljIGlu
dCBjaGVja19kZWFkbG9jayhzdHJ1Y3QgcnRfbXV0ZQ0KIAkJdHJhY2VfbG9j
YWxfaXJxX2Rpc2FibGUodGkpOw0KIAkJcmV0dXJuIDA7DQogCX0NCi0jaWZk
ZWYgQ09ORklHX1BSRUVNUFRfUlQNCi0JLyoNCi0JICogU2tpcCB0aGUgQktM
Og0KLQkgKi8NCi0JaWYgKGxvY2tibGsgPT0gJmtlcm5lbF9zZW0ubG9jaykN
CisJaWYoaXNfa2VybmVsX2xvY2sobG9ja2JsaykpDQogCQlyZXR1cm4gMDsN
Ci0jZW5kaWYNCiAJLyoNCiAJICogVWdoLCBzb21ldGhpbmcgY29ycnVwdGVk
IHRoZSBsb2NrIGRhdGEgc3RydWN0dXJlPw0KIAkgKi8NCkBAIC02NTYsNyAr
NjkwLDcgQEAgcmVzdGFydDoNCiAJCWxpc3RfZGVsX2luaXQoY3Vycik7DQog
CQl0cmFjZV91bmxvY2tfaXJxcmVzdG9yZSgmdHJhY2VfbG9jaywgZmxhZ3Ms
IHRpKTsNCiANCi0JCWlmIChsb2NrID09ICZrZXJuZWxfc2VtLmxvY2spIHsN
CisJCWlmIChpc19rZXJuZWxfbG9jayhsb2NrKSkgew0KIAkJCXByaW50aygi
QlVHOiAlcy8lZCwgQktMIGhlbGQgYXQgdGFzayBleGl0IHRpbWUhXG4iLA0K
IAkJCQl0YXNrLT5jb21tLCB0YXNrLT5waWQpOw0KIAkJCXByaW50aygiQktM
IGFjcXVpcmVkIGF0OiAiKTsNCkBAIC03MjQsMjggKzc1OCwxNCBAQCByZXN0
YXJ0Og0KIAlyZXR1cm4gZXJyOw0KIH0NCiANCi0jZW5kaWYNCi0NCi0jaWYg
QUxMX1RBU0tTX1BJICYmIGRlZmluZWQoQ09ORklHX0RFQlVHX0RFQURMT0NL
UykNCi0NCi1zdGF0aWMgdm9pZA0KLWNoZWNrX3BpX2xpc3RfcHJlc2VudChz
dHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIHN0cnVjdCBydF9tdXRleF93YWl0ZXIg
KndhaXRlciwNCi0JCSAgICAgIHN0cnVjdCB0aHJlYWRfaW5mbyAqb2xkX293
bmVyKQ0KKyNlbHNlIC8qIGlmZGVmIENPTkZJR19ERUJVR19ERUFETE9DS1Mg
Ki8NCitzdGF0aWMgaW5saW5lIHZvaWQgZGVidWdfbG9jayhzdHJ1Y3QgcnRf
bXV0ZXggKmxvY2ssIA0KKwkJCSAgICAgIGNvbnN0IGNoYXIgKmZtdCwuLi4p
DQogew0KLQlzdHJ1Y3QgcnRfbXV0ZXhfd2FpdGVyICp3Ow0KLQ0KLQlfcmF3
X3NwaW5fbG9jaygmb2xkX293bmVyLT50YXNrLT5waV9sb2NrKTsNCi0JVFJB
Q0VfV0FSTl9PTl9MT0NLRUQocGxpc3Rfbm9kZV9lbXB0eSgmd2FpdGVyLT5w
aV9saXN0KSk7DQotDQotCXBsaXN0X2Zvcl9lYWNoX2VudHJ5KHcsICZvbGRf
b3duZXItPnRhc2stPnBpX3dhaXRlcnMsIHBpX2xpc3QpIHsNCi0JCWlmICh3
ID09IHdhaXRlcikNCi0JCQlnb3RvIG9rOw0KLQl9DQotCVRSQUNFX1dBUk5f
T05fTE9DS0VEKDEpOw0KLW9rOg0KLQlfcmF3X3NwaW5fdW5sb2NrKCZvbGRf
b3duZXItPnRhc2stPnBpX2xvY2spOw0KLQlyZXR1cm47DQogfQ0KKyNlbmRp
ZiAvKiBlbHNlIENPTkZJR19ERUJVR19ERUFETE9DS1MgKi8NCisNCisjaWYg
QUxMX1RBU0tTX1BJICYmIGRlZmluZWQoQ09ORklHX0RFQlVHX0RFQURMT0NL
UykNCiANCiBzdGF0aWMgdm9pZA0KIGNoZWNrX3BpX2xpc3RfZW1wdHkoc3Ry
dWN0IHJ0X211dGV4ICpsb2NrLCBzdHJ1Y3QgdGhyZWFkX2luZm8gKm9sZF9v
d25lcikNCkBAIC03ODEsMjc0ICs4MDEsMTE1IEBAIGNoZWNrX3BpX2xpc3Rf
ZW1wdHkoc3RydWN0IHJ0X211dGV4ICpsb2MNCiANCiAjZW5kaWYNCiANCi0v
Kg0KLSAqIE1vdmUgUEkgd2FpdGVycyBvZiB0aGlzIGxvY2sgdG8gdGhlIG5l
dyBvd25lcjoNCi0gKi8NCi1zdGF0aWMgdm9pZA0KLWNoYW5nZV9vd25lcihz
dHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIHN0cnVjdCB0aHJlYWRfaW5mbyAqb2xk
X293bmVyLA0KLQkgICAgIHN0cnVjdCB0aHJlYWRfaW5mbyAqbmV3X293bmVy
KQ0KK3N0YXRpYyBpbmxpbmUgaW50IGJvb3N0aW5nX3dhaXRlcihzdHJ1Y3Qg
IHJ0X211dGV4X3dhaXRlciAqd2FpdGVyKQ0KIHsNCi0Jc3RydWN0IHJ0X211
dGV4X3dhaXRlciAqdywgKnRtcDsNCi0JaW50IHJlcXVldWVkID0gMCwgc3Vt
ID0gMDsNCi0NCi0JaWYgKG9sZF9vd25lciA9PSBuZXdfb3duZXIpDQotCQly
ZXR1cm47DQotDQotCVNNUF9UUkFDRV9CVUdfT05fTE9DS0VEKCFzcGluX2lz
X2xvY2tlZCgmb2xkX293bmVyLT50YXNrLT5waV9sb2NrKSk7DQotCVNNUF9U
UkFDRV9CVUdfT05fTE9DS0VEKCFzcGluX2lzX2xvY2tlZCgmbmV3X293bmVy
LT50YXNrLT5waV9sb2NrKSk7DQotCXBsaXN0X2Zvcl9lYWNoX2VudHJ5X3Nh
ZmUodywgdG1wLCAmb2xkX293bmVyLT50YXNrLT5waV93YWl0ZXJzLCBwaV9s
aXN0KSB7DQotCQlpZiAody0+bG9jayA9PSBsb2NrKSB7DQotCQkJdHJhY2Vf
c3BlY2lhbF9waWQody0+dGktPnRhc2stPnBpZCwgdy0+dGktPnRhc2stPnBy
aW8sIHctPnRpLT50YXNrLT5ub3JtYWxfcHJpbyk7DQotCQkJcGxpc3RfZGVs
KCZ3LT5waV9saXN0KTsNCi0JCQl3LT5waV9saXN0LnByaW8gPSB3LT50aS0+
dGFzay0+cHJpbzsNCi0JCQlwbGlzdF9hZGQoJnctPnBpX2xpc3QsICZuZXdf
b3duZXItPnRhc2stPnBpX3dhaXRlcnMpOw0KLQkJCXJlcXVldWVkKys7DQot
CQl9DQotCQlzdW0rKzsNCi0JfQ0KLQl0cmFjZV9zcGVjaWFsKHN1bSwgcmVx
dWV1ZWQsIDApOw0KKyAgcmV0dXJuIEFMTF9UQVNLU19QSSB8fCBydF9wcmlv
KHdhaXRlci0+bGlzdC5wcmlvKTsNCiB9DQogDQotaW50IHBpX3dhbGssIHBp
X251bGwsIHBpX3ByaW8sIHBpX2luaXRpYWxpemVkOw0KLQ0KLS8qDQotICog
VGhlIGxvY2stPndhaXRfbG9jayBhbmQgcC0+cGlfbG9jayBtdXN0IGJlIGhl
bGQuDQotICovDQotc3RhdGljIHZvaWQgcGlfc2V0cHJpbyhzdHJ1Y3QgcnRf
bXV0ZXggKmxvY2ssIHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywgaW50IHBy
aW8pDQorc3RhdGljIGludCBjYWxjX3BpX3ByaW8odGFza190ICp0YXNrKQ0K
IHsNCi0Jc3RydWN0IHJ0X211dGV4ICpsID0gbG9jazsNCi0Jc3RydWN0IHRh
c2tfc3RydWN0ICpwID0gdGFzazsNCi0JLyoNCi0JICogV2UgZG9uJ3Qgd2Fu
dCB0byByZWxlYXNlIHRoZSBwYXJhbWV0ZXJzIGxvY2tzLg0KLQkgKi8NCi0N
Ci0JaWYgKHVubGlrZWx5KCFwLT5waWQpKSB7DQotCQlwaV9udWxsKys7DQot
CQlyZXR1cm47DQorCWludCBwcmlvID0gdGFzay0+bm9ybWFsX3ByaW87DQor
CWlmKCFwbGlzdF9oZWFkX2VtcHR5KCZ0YXNrLT5waV93YWl0ZXJzKSkgew0K
KwkJc3RydWN0ICBydF9tdXRleF93YWl0ZXIgKndhaXRlciA9IA0KKwkJCXBs
aXN0X2ZpcnN0X2VudHJ5KCZ0YXNrLT5waV93YWl0ZXJzLCBzdHJ1Y3QgcnRf
bXV0ZXhfd2FpdGVyLCBwaV9saXN0KTsNCisJCXByaW8gPSBtaW4od2FpdGVy
LT5waV9saXN0LnByaW8scHJpbyk7DQogCX0NCiANCi0JU01QX1RSQUNFX0JV
R19PTl9MT0NLRUQoIXNwaW5faXNfbG9ja2VkKCZsb2NrLT53YWl0X2xvY2sp
KTsNCi0JU01QX1RSQUNFX0JVR19PTl9MT0NLRUQoIXNwaW5faXNfbG9ja2Vk
KCZwLT5waV9sb2NrKSk7DQotI2lmZGVmIENPTkZJR19ERUJVR19ERUFETE9D
S1MNCi0JcGlfcHJpbysrOw0KLQlpZiAocC0+cG9saWN5ICE9IFNDSEVEX05P
Uk1BTCAmJiBwcmlvID4gbm9ybWFsX3ByaW8ocCkpIHsNCi0JCVRSQUNFX09G
RigpOw0KLQ0KLQkJcHJpbnRrKCJodWg/ICglZC0+JWQ/PylcbiIsIHAtPnBy
aW8sIHByaW8pOw0KLQkJcHJpbnRrKCJvd25lcjpcbiIpOw0KLQkJcHJpbnRr
X3Rhc2socCk7DQotCQlwcmludGsoIlxuY3VycmVudDpcbiIpOw0KLQkJcHJp
bnRrX3Rhc2soY3VycmVudCk7DQotCQlwcmludGsoIlxubG9jazpcbiIpOw0K
LQkJcHJpbnRrX2xvY2sobG9jaywgMSk7DQotCQlkdW1wX3N0YWNrKCk7DQot
CQl0cmFjZV9sb2NhbF9pcnFfZGlzYWJsZSh0aSk7DQotCX0NCi0jZW5kaWYN
Ci0JLyoNCi0JICogSWYgdGhlIHRhc2sgaXMgYmxvY2tlZCBvbiBzb21lIG90
aGVyIHRhc2sgdGhlbiBib29zdCB0aGF0DQotCSAqIG90aGVyIHRhc2sgKG9y
IHRhc2tzKSB0b286DQotCSAqLw0KLQlmb3IgKDs7KSB7DQotCQlzdHJ1Y3Qg
cnRfbXV0ZXhfd2FpdGVyICp3ID0gcC0+YmxvY2tlZF9vbjsNCi0jaWZkZWYg
Q09ORklHX0RFQlVHX0RFQURMT0NLUw0KLQkJaW50IHdhc19ydCA9IHJ0X3Rh
c2socCk7DQotI2VuZGlmDQotDQotCQltdXRleF9zZXRwcmlvKHAsIHByaW8p
Ow0KLQ0KLQkJLyoNCi0JCSAqIFRoZSBCS0wgY2FuIHJlYWxseSBiZSBhIHBh
aW4uIEl0IGNhbiBoYXBwZW4gd2hlcmUgdGhlDQotCQkgKiBCS0wgaXMgYmVp
bmcgaGVsZCBieSBvbmUgdGFzayB0aGF0IGlzIGp1c3QgYWJvdXQgdG8NCi0J
CSAqIGJsb2NrIG9uIGFub3RoZXIgdGFzayB0aGF0IGlzIHdhaXRpbmcgZm9y
IHRoZSBCS0wuDQotCQkgKiBUaGlzIGlzbid0IGEgZGVhZGxvY2ssIHNpbmNl
IHRoZSBCS0wgaXMgcmVsZWFzZWQNCi0JCSAqIHdoZW4gdGhlIHRhc2sgZ29l
cyB0byBzbGVlcC4gIFRoaXMgYWxzbyBtZWFucyB0aGF0DQotCQkgKiBhbGwg
aG9sZGVycyBvZiB0aGUgQktMIGFyZSBub3QgYmxvY2tlZCwgb3IgYXJlIGp1
c3QNCi0JCSAqIGFib3V0IHRvIGJlIGJsb2NrZWQuDQotCQkgKg0KLQkJICog
QW5vdGhlciBzaWRlLWVmZmVjdCBvZiB0aGlzIGlzIHRoYXQgdGhlcmUncyBh
IHNtYWxsDQotCQkgKiB3aW5kb3cgd2hlcmUgdGhlIHNwaW5sb2NrcyBhcmUg
bm90IGhlbGQsIGFuZCB0aGUgYmxvY2tlZA0KLQkJICogcHJvY2VzcyBoYXNu
J3QgcmVsZWFzZWQgdGhlIEJLTC4gIFNvIGlmIHdlIGFyZSBnb2luZw0KLQkJ
ICogdG8gYm9vc3QgdGhlIG93bmVyIG9mIHRoZSBCS0wsIHN0b3AgYWZ0ZXIg
dGhhdCwNCi0JCSAqIHNpbmNlIHRoYXQgb3duZXIgaXMgZWl0aGVyIHJ1bm5p
bmcsIG9yIGFib3V0IHRvIHNsZWVwDQotCQkgKiBidXQgZG9uJ3QgZ28gYW55
IGZ1cnRoZXIgb3Igd2UgYXJlIGluIGEgbG9vcC4NCi0JCSAqLw0KLQkJaWYg
KCF3IHx8IHVubGlrZWx5KHAtPmxvY2tfZGVwdGggPj0gMCkpDQotCQkJYnJl
YWs7DQotCQkvKg0KLQkJICogSWYgdGhlIHRhc2sgaXMgYmxvY2tlZCBvbiBh
IGxvY2ssIGFuZCB3ZSBqdXN0IG1hZGUNCi0JCSAqIGl0IFJULCB0aGVuIHJl
Z2lzdGVyIHRoZSB0YXNrIGluIHRoZSBQSSBsaXN0IGFuZA0KLQkJICogcmVx
dWV1ZSBpdCB0byB0aGUgd2FpdCBsaXN0Og0KLQkJICovDQotDQotCQkvKg0K
LQkJICogRG9uJ3QgdW5sb2NrIHRoZSBvcmlnaW5hbCBsb2NrLT53YWl0X2xv
Y2sNCi0JCSAqLw0KLQkJaWYgKGwgIT0gbG9jaykNCi0JCQlfcmF3X3NwaW5f
dW5sb2NrKCZsLT53YWl0X2xvY2spOw0KLQkJbCA9IHctPmxvY2s7DQotCQlU
UkFDRV9CVUdfT05fTE9DS0VEKCFsb2NrKTsNCisJcmV0dXJuIHByaW87DQog
DQotI2lmZGVmIENPTkZJR19QUkVFTVBUX1JUDQotCQkvKg0KLQkJICogVGhl
IGN1cnJlbnQgdGFzayB0aGF0IGlzIGJsb2NraW5nIGNhbiBhbHNvIHRoZSBv
bmUNCi0JCSAqIGhvbGRpbmcgdGhlIEJLTCwgYW5kIGJsb2NraW5nIG9uIGEg
dGFzayB0aGF0IHdhbnRzDQotCQkgKiBpdC4gIFNvIGlmIGl0IHdlcmUgdG8g
Z2V0IHRoaXMgZmFyLCB3ZSB3b3VsZCBkZWFkbG9jay4NCi0JCSAqLw0KLQkJ
aWYgKHVubGlrZWx5KGwgPT0gJmtlcm5lbF9zZW0ubG9jaykgJiYgbG9ja19v
d25lcihsKSA9PSBjdXJyZW50X3RocmVhZF9pbmZvKCkpIHsNCi0JCQkvKg0K
LQkJCSAqIE5vIGxvY2tzIGFyZSBoZWxkIGZvciBsb2Nrcywgc28gZm9vbCB0
aGUgdW5sb2NraW5nIGNvZGUNCi0JCQkgKiBieSB0aGlua2luZyB0aGUgbGFz
dCBsb2NrIHdhcyB0aGUgb3JpZ2luYWwuDQotCQkJICovDQotCQkJbCA9IGxv
Y2s7DQotCQkJYnJlYWs7DQotCQl9DQotI2VuZGlmDQotDQotCQlpZiAobCAh
PSBsb2NrKQ0KLQkJCV9yYXdfc3Bpbl9sb2NrKCZsLT53YWl0X2xvY2spOw0K
LQ0KLQkJVFJBQ0VfQlVHX09OX0xPQ0tFRCghbG9ja19vd25lcihsKSk7DQot
DQotCQlpZiAoIXBsaXN0X25vZGVfZW1wdHkoJnctPnBpX2xpc3QpKSB7DQot
CQkJVFJBQ0VfQlVHX09OX0xPQ0tFRCghd2FzX3J0ICYmICFBTExfVEFTS1Nf
UEkgJiYgIXJ0X3Rhc2socCkpOw0KLQkJCS8qDQotCQkJICogSWYgdGhlIHRh
c2sgaXMgYmxvY2tlZCBvbiBhIGxvY2ssIGFuZCB3ZSBqdXN0IHJlc3RvcmVk
DQotCQkJICogaXQgZnJvbSBSVCB0byBub24tUlQgdGhlbiB1bnJlZ2lzdGVy
IHRoZSB0YXNrIGZyb20NCi0JCQkgKiB0aGUgUEkgbGlzdCBhbmQgcmVxdWV1
ZSBpdCB0byB0aGUgd2FpdCBsaXN0Lg0KLQkJCSAqDQotCQkJICogKFRPRE86
IHRoaXMgY2FuIGJlIHVuZmFpciB0byBTQ0hFRF9OT1JNQUwgdGFza3MgaWYg
dGhleQ0KLQkJCSAqICAgICAgICBnZXQgUEkgaGFuZGxlZC4pDQotCQkJICov
DQotCQkJcGxpc3RfZGVsKCZ3LT5waV9saXN0KTsNCi0JCX0gZWxzZQ0KLQkJ
CVRSQUNFX0JVR19PTl9MT0NLRUQoKEFMTF9UQVNLU19QSSB8fCBydF90YXNr
KHApKSAmJiB3YXNfcnQpOw0KLQ0KLQkJaWYgKEFMTF9UQVNLU19QSSB8fCBy
dF90YXNrKHApKSB7DQotCQkJdy0+cGlfbGlzdC5wcmlvID0gcHJpbzsNCi0J
CQlwbGlzdF9hZGQoJnctPnBpX2xpc3QsICZsb2NrX293bmVyKGwpLT50YXNr
LT5waV93YWl0ZXJzKTsNCi0JCX0NCi0NCi0JCXBsaXN0X2RlbCgmdy0+bGlz
dCk7DQotCQl3LT5saXN0LnByaW8gPSBwcmlvOw0KLQkJcGxpc3RfYWRkKCZ3
LT5saXN0LCAmbC0+d2FpdF9saXN0KTsNCi0NCi0JCXBpX3dhbGsrKzsNCi0N
Ci0JCWlmIChwICE9IHRhc2spDQotCQkJX3Jhd19zcGluX3VubG9jaygmcC0+
cGlfbG9jayk7DQotDQotCQlwID0gbG9ja19vd25lcihsKS0+dGFzazsNCi0J
CVRSQUNFX0JVR19PTl9MT0NLRUQoIXApOw0KLQkJX3Jhd19zcGluX2xvY2so
JnAtPnBpX2xvY2spOw0KLQkJLyoNCi0JCSAqIElmIHRoZSBkZXBlbmRlZSBp
cyBhbHJlYWR5IGhpZ2hlci1wcmlvIHRoZW4NCi0JCSAqIG5vIG5lZWQgdG8g
Ym9vc3QgaXQsIGFuZCBhbGwgZnVydGhlciB0YXNrcyBkb3duDQotCQkgKiB0
aGUgZGVwZW5kZW5jeSBjaGFpbiBhcmUgYWxyZWFkeSBib29zdGVkOg0KLQkJ
ICovDQotCQlpZiAocC0+cHJpbyA8PSBwcmlvKQ0KLQkJCWJyZWFrOw0KLQl9
DQotCWlmIChsICE9IGxvY2spDQotCQlfcmF3X3NwaW5fdW5sb2NrKCZsLT53
YWl0X2xvY2spOw0KLQlpZiAocCAhPSB0YXNrKQ0KLQkJX3Jhd19zcGluX3Vu
bG9jaygmcC0+cGlfbG9jayk7DQogfQ0KIA0KLS8qDQotICogQ2hhbmdlIHBy
aW9yaXR5IG9mIGEgdGFzayBwaSBhd2FyZQ0KLSAqDQotICogVGhlcmUgYXJl
IHNldmVyYWwgYXNwZWN0cyB0byBjb25zaWRlcjoNCi0gKiAtIHRhc2sgaXMg
cHJpb3JpdHkgYm9vc3RlZA0KLSAqIC0gdGFzayBpcyBibG9ja2VkIG9uIGEg
bXV0ZXgNCi0gKg0KLSAqLw0KLXZvaWQgcGlfY2hhbmdlcHJpbyhzdHJ1Y3Qg
dGFza19zdHJ1Y3QgKnAsIGludCBwcmlvKQ0KK3N0YXRpYyB2b2lkIGZpeF9w
cmlvKHRhc2tfdCAqdGFzaykNCiB7DQotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7
DQotCWludCBvbGRwcmlvOw0KLQ0KLQlzcGluX2xvY2tfaXJxc2F2ZSgmcC0+
cGlfbG9jayxmbGFncyk7DQotCWlmIChwLT5ibG9ja2VkX29uKQ0KLQkJc3Bp
bl9sb2NrKCZwLT5ibG9ja2VkX29uLT5sb2NrLT53YWl0X2xvY2spOw0KLQ0K
LQlvbGRwcmlvID0gcC0+bm9ybWFsX3ByaW87DQotCWlmIChvbGRwcmlvID09
IHByaW8pDQotCQlnb3RvIG91dDsNCi0NCi0JLyogU2V0IG5vcm1hbCBwcmlv
IGluIGFueSBjYXNlICovDQotCXAtPm5vcm1hbF9wcmlvID0gcHJpbzsNCi0N
Ci0JLyogQ2hlY2ssIGlmIHdlIGNhbiBzYWZlbHkgbG93ZXIgdGhlIHByaW9y
aXR5ICovDQotCWlmIChwcmlvID4gcC0+cHJpbyAmJiAhcGxpc3RfaGVhZF9l
bXB0eSgmcC0+cGlfd2FpdGVycykpIHsNCi0JCXN0cnVjdCBydF9tdXRleF93
YWl0ZXIgKnc7DQotCQl3ID0gcGxpc3RfZmlyc3RfZW50cnkoJnAtPnBpX3dh
aXRlcnMsDQotCQkJCSAgICAgIHN0cnVjdCBydF9tdXRleF93YWl0ZXIsIHBp
X2xpc3QpOw0KLQkJaWYgKHctPnRpLT50YXNrLT5wcmlvIDwgcHJpbykNCi0J
CQlwcmlvID0gdy0+dGktPnRhc2stPnByaW87DQorCWludCBwcmlvID0gY2Fs
Y19waV9wcmlvKHRhc2spOw0KKwlpZih0YXNrLT5wcmlvID4gcHJpbykgew0K
KwkJLyogQm9vc3QgaGltICovDQorCQltdXRleF9zZXRwcmlvKHRhc2sscHJp
byk7DQorCQlpZih0YXNrLT5ibG9ja2VkX29uKSB7DQorCQkJLyogTGV0IGl0
IHJ1biB0byBib29zdCBpdCdzIGxvY2sgKi8NCisJCQl3YWtlX3VwX3Byb2Nl
c3NfbXV0ZXgodGFzayk7DQorCQl9DQorCX0NCisJZWxzZSBpZih0YXNrLT5w
cmlvIDwgcHJpbykgew0KKwkJLyogUHJpb3JpdHkgdG9vIGhpZ2ggKi8NCisJ
CWlmKHRhc2stPmJsb2NrZWRfb24pIHsNCisJCQkvKiBMZXQgaXQgcnVuIHRv
IHVuYm9vc3QgaXQncyBsb2NrICovDQorCQkJd2FrZV91cF9wcm9jZXNzX211
dGV4KHRhc2spOw0KKwkJfQ0KKwkJZWxzZSB7DQorCQkJbXV0ZXhfc2V0cHJp
byh0YXNrLHByaW8pOw0KKwkJfQ0KIAl9DQotDQotCWlmIChwcmlvID09IHAt
PnByaW8pDQotCQlnb3RvIG91dDsNCi0NCi0JLyogSXMgdGFzayBibG9ja2Vk
IG9uIGEgbXV0ZXggPyAqLw0KLQlpZiAocC0+YmxvY2tlZF9vbikNCi0JCXBp
X3NldHByaW8ocC0+YmxvY2tlZF9vbi0+bG9jaywgcCwgcHJpbyk7DQotCWVs
c2UNCi0JCW11dGV4X3NldHByaW8ocCwgcHJpbyk7DQotIG91dDoNCi0JaWYg
KHAtPmJsb2NrZWRfb24pDQotCQlzcGluX3VubG9jaygmcC0+YmxvY2tlZF9v
bi0+bG9jay0+d2FpdF9sb2NrKTsNCi0NCi0Jc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmcC0+cGlfbG9jaywgZmxhZ3MpOw0KLQ0KIH0NCiANCitpbnQgcGlf
d2FsaywgcGlfbnVsbCwgcGlfcHJpbywgcGlfaW5pdGlhbGl6ZWQ7DQorDQog
LyoNCiAgKiBUaGlzIGlzIGNhbGxlZCB3aXRoIGJvdGggdGhlIHdhaXRlci0+
dGFzay0+cGlfbG9jayBhbmQNCiAgKiBsb2NrLT53YWl0X2xvY2sgaGVsZC4N
CiAgKi8NCiBzdGF0aWMgdm9pZA0KIHRhc2tfYmxvY2tzX29uX2xvY2soc3Ry
dWN0IHJ0X211dGV4X3dhaXRlciAqd2FpdGVyLCBzdHJ1Y3QgdGhyZWFkX2lu
Zm8gKnRpLA0KLQkJICAgIHN0cnVjdCBydF9tdXRleCAqbG9jayBfX0VJUF9E
RUNMX18pDQorICAgICAgICAgICAgICAgICAgICBzdHJ1Y3QgcnRfbXV0ZXgg
KmxvY2ssIGludCBzdGF0ZSBfX0VJUF9ERUNMX18pDQogew0KKwlzdHJ1Y3Qg
cnRfbXV0ZXhfd2FpdGVyICpvbGRfZmlyc3Q7DQogCXN0cnVjdCB0YXNrX3N0
cnVjdCAqdGFzayA9IHRpLT50YXNrOw0KICNpZmRlZiBDT05GSUdfREVCVUdf
REVBRExPQ0tTDQogCWNoZWNrX2RlYWRsb2NrKGxvY2ssIDAsIHRpLCBlaXAp
Ow0KIAkvKiBtYXJrIHRoZSBjdXJyZW50IHRocmVhZCBhcyBibG9ja2VkIG9u
IHRoZSBsb2NrICovDQogCXdhaXRlci0+ZWlwID0gZWlwOw0KICNlbmRpZg0K
KwlTTVBfVFJBQ0VfQlVHX09OX0xPQ0tFRCghc3Bpbl9pc19sb2NrZWQoJmxv
Y2stPndhaXRfbG9jaykpOw0KKwlTTVBfVFJBQ0VfQlVHX09OX0xPQ0tFRChz
cGluX2lzX2xvY2tlZCgmdGFzay0+cGlfbG9jaykpOw0KKw0KKwlpZihwbGlz
dF9oZWFkX2VtcHR5KCZsb2NrLT53YWl0X2xpc3QpKSB7DQorCQlvbGRfZmly
c3QgPSBOVUxMOw0KKwl9DQorCWVsc2Ugew0KKwkJb2xkX2ZpcnN0ID0gcGxp
c3RfZmlyc3RfZW50cnkoJmxvY2stPndhaXRfbGlzdCwgc3RydWN0IHJ0X211
dGV4X3dhaXRlciwgbGlzdCk7DQorCQlpZighYm9vc3Rpbmdfd2FpdGVyKG9s
ZF9maXJzdCkpIHsNCisJCQlvbGRfZmlyc3QgPSBOVUxMOw0KKwkJfQ0KKwl9
DQorDQorDQorCV9yYXdfc3Bpbl9sb2NrKCZ0YXNrLT5waV9sb2NrKTsNCiAJ
dGFzay0+YmxvY2tlZF9vbiA9IHdhaXRlcjsNCiAJd2FpdGVyLT5sb2NrID0g
bG9jazsNCiAJd2FpdGVyLT50aSA9IHRpOw0KLQlwbGlzdF9ub2RlX2luaXQo
JndhaXRlci0+cGlfbGlzdCwgdGFzay0+cHJpbyk7DQotCS8qDQotCSAqIEFk
ZCBTQ0hFRF9OT1JNQUwgdGFza3MgdG8gdGhlIGVuZCBvZiB0aGUgd2FpdHF1
ZXVlIChGSUZPKToNCi0JICovDQotCVNNUF9UUkFDRV9CVUdfT05fTE9DS0VE
KCFzcGluX2lzX2xvY2tlZCgmdGFzay0+cGlfbG9jaykpOw0KLQlTTVBfVFJB
Q0VfQlVHX09OX0xPQ0tFRCghc3Bpbl9pc19sb2NrZWQoJmxvY2stPndhaXRf
bG9jaykpOw0KLSNpZiAhQUxMX1RBU0tTX1BJDQotCWlmICgoIXJ0X3Rhc2so
dGFzaykgJiYNCi0JCSEobG9jay0+bXV0ZXhfYXR0ciAmIEZVVEVYX0FUVFJf
UFJJT1JJVFlfSU5IRVJJVEFOQ0UpKSkgew0KLQkJcGxpc3RfYWRkKCZ3YWl0
ZXItPmxpc3QsICZsb2NrLT53YWl0X2xpc3QpOw0KLQkJc2V0X2xvY2tfb3du
ZXJfcGVuZGluZyhsb2NrKTsNCi0JCXJldHVybjsNCisgICAgICAgIA0KKwl7
DQorCQkvKiBGaXh1cCB0aGUgcHJpbyBvZiB0aGUgKGN1cnJlbnQpIHRhc2sg
aGVyZSB3aGlsZSB3ZSBoYXZlIHRoZQ0KKwkJICAgcGlfbG9jayAqLw0KKwkJ
aW50IHByaW8gPSBjYWxjX3BpX3ByaW8odGFzayk7DQorCQlpZihwcmlvIT10
YXNrLT5wcmlvKSB7DQorCQkJbXV0ZXhfc2V0cHJpbyh0YXNrLHByaW8pOw0K
KwkJfQ0KIAl9DQotI2VuZGlmDQotCV9yYXdfc3Bpbl9sb2NrKCZsb2NrX293
bmVyKGxvY2spLT50YXNrLT5waV9sb2NrKTsNCi0JcGxpc3RfYWRkKCZ3YWl0
ZXItPnBpX2xpc3QsICZsb2NrX293bmVyKGxvY2spLT50YXNrLT5waV93YWl0
ZXJzKTsNCi0JLyoNCi0JICogQWRkIFJUIHRhc2tzIHRvIHRoZSBoZWFkOg0K
LQkgKi8NCisNCisJcGxpc3Rfbm9kZV9pbml0KCZ3YWl0ZXItPmxpc3QsIHRh
c2stPnByaW8pOw0KIAlwbGlzdF9hZGQoJndhaXRlci0+bGlzdCwgJmxvY2st
PndhaXRfbGlzdCk7DQotCXNldF9sb2NrX293bmVyX3BlbmRpbmcobG9jayk7
DQotCS8qDQotCSAqIElmIHRoZSB3YWl0ZXIgaGFzIGhpZ2hlciBwcmlvcml0
eSB0aGFuIHRoZSBvd25lcg0KLQkgKiB0aGVuIHRlbXBvcmFyaWx5IGJvb3N0
IHRoZSBvd25lcjoNCi0JICovDQotCWlmICh0YXNrLT5wcmlvIDwgbG9ja19v
d25lcihsb2NrKS0+dGFzay0+cHJpbykNCi0JCXBpX3NldHByaW8obG9jaywg
bG9ja19vd25lcihsb2NrKS0+dGFzaywgdGFzay0+cHJpbyk7DQotCV9yYXdf
c3Bpbl91bmxvY2soJmxvY2tfb3duZXIobG9jayktPnRhc2stPnBpX2xvY2sp
Ow0KKwlzZXRfdGFza19zdGF0ZSh0YXNrLCBzdGF0ZSk7DQorCV9yYXdfc3Bp
bl91bmxvY2soJnRhc2stPnBpX2xvY2spOw0KKw0KKwlzZXRfbG9ja19vd25l
cl9wZW5kaW5nKGxvY2spOyAgIA0KKw0KKwlpZih3YWl0ZXIgPT0NCisJICAg
cGxpc3RfZmlyc3RfZW50cnkoJmxvY2stPndhaXRfbGlzdCwgc3RydWN0IHJ0
X211dGV4X3dhaXRlciwgbGlzdCkNCisJICAgICYmIGJvb3N0aW5nX3dhaXRl
cih3YWl0ZXIpKSB7DQorCQl0YXNrX3QgKm93bmVyID0gbG9ja19vd25lcihs
b2NrKS0+dGFzazsNCisNCisJCXBsaXN0X25vZGVfaW5pdCgmd2FpdGVyLT5w
aV9saXN0LCB0YXNrLT5wcmlvKTsNCisNCisJCV9yYXdfc3Bpbl9sb2NrKCZv
d25lci0+cGlfbG9jayk7DQorCQlpZihvbGRfZmlyc3QpIHsNCisJCQlwbGlz
dF9kZWwoJm9sZF9maXJzdC0+cGlfbGlzdCk7DQorCQl9DQorCQlwbGlzdF9h
ZGQoJndhaXRlci0+cGlfbGlzdCwgJm93bmVyLT5waV93YWl0ZXJzKTsNCisJ
CWZpeF9wcmlvKG93bmVyKTsNCisNCisJCV9yYXdfc3Bpbl91bmxvY2soJm93
bmVyLT5waV9sb2NrKTsNCisJfQ0KIH0NCiANCiAvKg0KQEAgLTEwNjgsNiAr
OTI5LDcgQEAgc3RhdGljIHZvaWQgX19pbml0X3J0X211dGV4KHN0cnVjdCBy
dF9tdQ0KIAlsb2NrLT5uYW1lID0gbmFtZTsNCiAJbG9jay0+ZmlsZSA9IGZp
bGU7DQogCWxvY2stPmxpbmUgPSBsaW5lOw0KKwlsb2NrLT52ZXJib3NlID0g
MDsNCiAjZW5kaWYNCiAjaWZkZWYgQ09ORklHX0RFQlVHX1BSRUVNUFQNCiAJ
bG9jay0+d2FzX3ByZWVtcHRfb2ZmID0gMDsNCkBAIC0xMDg1LDIwICs5NDcs
NDggQEAgRVhQT1JUX1NZTUJPTChfX2luaXRfcndzZW0pOw0KICNlbmRpZg0K
IA0KIC8qDQotICogVGhpcyBtdXN0IGJlIGNhbGxlZCB3aXRoIGJvdGggdGhl
IG9sZF9vd25lciBhbmQgbmV3X293bmVyIHBpX2xvY2tzIGhlbGQuDQotICog
QXMgd2VsbCBhcyB0aGUgbG9jay0+d2FpdF9sb2NrLg0KKyAqIFRoaXMgbXVz
dCBiZSBjYWxsZWQgd2l0aCB0aGUgbG9jay0+d2FpdF9sb2NrIGhlbGQuDQor
ICogTXVzdDogbmV3X293bmVyIT1OVUxMDQorICogTGlrZWx5OiBvbGRfb3du
ZXI9PU5VTEwNCiAgKi8NCi1zdGF0aWMgaW5saW5lDQorc3RhdGljIA0KIHZv
aWQgc2V0X25ld19vd25lcihzdHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIHN0cnVj
dCB0aHJlYWRfaW5mbyAqb2xkX293bmVyLA0KIAkJCXN0cnVjdCB0aHJlYWRf
aW5mbyAqbmV3X293bmVyIF9fRUlQX0RFQ0xfXykNCiB7DQorCVNNUF9UUkFD
RV9CVUdfT05fTE9DS0VEKHNwaW5faXNfbG9ja2VkKCZvbGRfb3duZXItPnRh
c2stPnBpX2xvY2spKTsNCisJU01QX1RSQUNFX0JVR19PTl9MT0NLRUQoc3Bp
bl9pc19sb2NrZWQoJm5ld19vd25lci0+dGFzay0+cGlfbG9jaykpOw0KKwlT
TVBfVFJBQ0VfQlVHX09OX0xPQ0tFRCghc3Bpbl9pc19sb2NrZWQoJmxvY2st
PndhaXRfbG9jaykpOw0KKw0KIAlpZiAobmV3X293bmVyKQ0KIAkJdHJhY2Vf
c3BlY2lhbF9waWQobmV3X293bmVyLT50YXNrLT5waWQsIG5ld19vd25lci0+
dGFzay0+cHJpbywgMCk7DQotCWlmICh1bmxpa2VseShvbGRfb3duZXIpKQ0K
LQkJY2hhbmdlX293bmVyKGxvY2ssIG9sZF9vd25lciwgbmV3X293bmVyKTsN
CisJaWYob2xkX293bmVyKSB7DQorCQlhY2NvdW50X211dGV4X293bmVyX3Vw
KG9sZF9vd25lci0+dGFzayk7DQorCX0NCisjaWZkZWYgQ09ORklHX0RFQlVH
X0RFQURMT0NLUw0KKwlpZiAodHJhY2Vfb24gJiYgdW5saWtlbHkob2xkX293
bmVyKSkgew0KKwkJVFJBQ0VfV0FSTl9PTl9MT0NLRUQobGlzdF9lbXB0eSgm
bG9jay0+aGVsZF9saXN0KSk7DQorCQlsaXN0X2RlbF9pbml0KCZsb2NrLT5o
ZWxkX2xpc3QpOw0KKwl9DQorI2VuZGlmDQogCWxvY2stPm93bmVyID0gbmV3
X293bmVyOw0KLQlpZiAoIXBsaXN0X2hlYWRfZW1wdHkoJmxvY2stPndhaXRf
bGlzdCkpDQotCQlzZXRfbG9ja19vd25lcl9wZW5kaW5nKGxvY2spOw0KKwlp
ZiAoIXBsaXN0X2hlYWRfZW1wdHkoJmxvY2stPndhaXRfbGlzdCkpIHsNCisJ
CXN0cnVjdCBydF9tdXRleF93YWl0ZXIgKm5leHQgPQ0KKwkJCXBsaXN0X2Zp
cnN0X2VudHJ5KCZsb2NrLT53YWl0X2xpc3QsIA0KKwkJCQkJICBzdHJ1Y3Qg
cnRfbXV0ZXhfd2FpdGVyLCBsaXN0KTsNCisJCWlmKGJvb3N0aW5nX3dhaXRl
cihuZXh0KSkgew0KKwkJCWlmKG9sZF9vd25lcikgew0KKwkJCQlfcmF3X3Nw
aW5fbG9jaygmb2xkX293bmVyLT50YXNrLT5waV9sb2NrKTsNCisJCQkJcGxp
c3RfZGVsKCZuZXh0LT5waV9saXN0KTsNCisJCQkJX3Jhd19zcGluX3VubG9j
aygmb2xkX293bmVyLT50YXNrLT5waV9sb2NrKTsNCisJCQl9DQorCQkJX3Jh
d19zcGluX2xvY2soJm5ld19vd25lci0+dGFzay0+cGlfbG9jayk7DQorCQkJ
cGxpc3RfYWRkKCZuZXh0LT5waV9saXN0LCANCisJCQkJICAmbmV3X293bmVy
LT50YXNrLT5waV93YWl0ZXJzKTsNCisJCQlzZXRfbG9ja19vd25lcl9wZW5k
aW5nKGxvY2spOw0KKwkJCV9yYXdfc3Bpbl91bmxvY2soJm5ld19vd25lci0+
dGFzay0+cGlfbG9jayk7DQorCQl9DQorCX0NCisgICAgICAgIA0KICNpZmRl
ZiBDT05GSUdfREVCVUdfREVBRExPQ0tTDQogCWlmICh0cmFjZV9vbikgew0K
IAkJVFJBQ0VfV0FSTl9PTl9MT0NLRUQoIWxpc3RfZW1wdHkoJmxvY2stPmhl
bGRfbGlzdCkpOw0KQEAgLTExMDksNiArOTk5LDM2IEBAIHZvaWQgc2V0X25l
d19vd25lcihzdHJ1Y3QgcnRfbXV0ZXggKmxvY2sNCiAJYWNjb3VudF9tdXRl
eF9vd25lcl9kb3duKG5ld19vd25lci0+dGFzaywgbG9jayk7DQogfQ0KIA0K
Kw0KK3N0YXRpYyB2b2lkIHJlbW92ZV93YWl0ZXIoc3RydWN0IHJ0X211dGV4
ICpsb2NrLCANCisJCQkgIHN0cnVjdCBydF9tdXRleF93YWl0ZXIgKndhaXRl
ciwgDQorCQkJICBpbnQgZml4cHJpbykNCit7DQorCXRhc2tfdCAqb3duZXIg
PSBsb2NrX293bmVyKGxvY2spID8gbG9ja19vd25lcihsb2NrKS0+dGFzayA6
IE5VTEw7DQorCWludCBmaXJzdCA9ICh3YWl0ZXI9PXBsaXN0X2ZpcnN0X2Vu
dHJ5KCZsb2NrLT53YWl0X2xpc3QsIA0KKwkJCQkJICAgICAgIHN0cnVjdCBy
dF9tdXRleF93YWl0ZXIsIGxpc3QpKTsNCisgICAgICAgIA0KKwlwbGlzdF9k
ZWwoJndhaXRlci0+bGlzdCk7DQorCWlmKGZpcnN0ICYmIG93bmVyKSB7DQor
CQlfcmF3X3NwaW5fbG9jaygmb3duZXItPnBpX2xvY2spOw0KKwkJaWYoYm9v
c3Rpbmdfd2FpdGVyKHdhaXRlcikpIHsNCisJCQlwbGlzdF9kZWwoJndhaXRl
ci0+cGlfbGlzdCk7DQorCQl9DQorCQlpZighcGxpc3RfaGVhZF9lbXB0eSgm
bG9jay0+d2FpdF9saXN0KSkgew0KKwkJCXN0cnVjdCBydF9tdXRleF93YWl0
ZXIgKm5leHQgPQ0KKwkJCQlwbGlzdF9maXJzdF9lbnRyeSgmbG9jay0+d2Fp
dF9saXN0LCANCisJCQkJCQkgIHN0cnVjdCBydF9tdXRleF93YWl0ZXIsIGxp
c3QpOw0KKwkJCWlmKGJvb3N0aW5nX3dhaXRlcihuZXh0KSkgew0KKwkJCQlw
bGlzdF9hZGQoJm5leHQtPnBpX2xpc3QsICZvd25lci0+cGlfd2FpdGVycyk7
DQorCQkJfQ0KKwkJfQ0KKwkJaWYoZml4cHJpbykgew0KKwkJCWZpeF9wcmlv
KG93bmVyKTsNCisJCX0NCisJCV9yYXdfc3Bpbl91bmxvY2soJm93bmVyLT5w
aV9sb2NrKTsNCisJfQ0KK30NCisNCiAvKg0KICAqIGhhbmRsZSB0aGUgbG9j
ayByZWxlYXNlIHdoZW4gcHJvY2Vzc2VzIGJsb2NrZWQgb24gaXQgdGhhdCBj
YW4gbm93IHJ1bg0KICAqIC0gdGhlIHNwaW5sb2NrIG11c3QgYmUgaGVsZCBi
eSB0aGUgY2FsbGVyDQpAQCAtMTEyMyw3MCArMTA0MywzNiBAQCBwaWNrX25l
d19vd25lcihzdHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIHN0DQogCXN0cnVjdCB0
aHJlYWRfaW5mbyAqbmV3X293bmVyOw0KIA0KIAlTTVBfVFJBQ0VfQlVHX09O
X0xPQ0tFRCghc3Bpbl9pc19sb2NrZWQoJmxvY2stPndhaXRfbG9jaykpOw0K
KwlTTVBfVFJBQ0VfQlVHX09OX0xPQ0tFRChzcGluX2lzX2xvY2tlZCgmb2xk
X293bmVyLT50YXNrLT5waV9sb2NrKSk7DQorDQogCS8qDQogCSAqIEdldCB0
aGUgaGlnaGVzdCBwcmlvIG9uZToNCiAJICoNCiAJICogKHNhbWUtcHJpbyBS
VCB0YXNrcyBnbyBGSUZPKQ0KIAkgKi8NCiAJd2FpdGVyID0gcGxpc3RfZmly
c3RfZW50cnkoJmxvY2stPndhaXRfbGlzdCwgc3RydWN0IHJ0X211dGV4X3dh
aXRlciwgbGlzdCk7DQotDQotI2lmZGVmIENPTkZJR19TTVANCi0gdHJ5X2Fn
YWluOg0KLSNlbmRpZg0KKwlyZW1vdmVfd2FpdGVyKGxvY2ssd2FpdGVyLDAp
Ow0KIAl0cmFjZV9zcGVjaWFsX3BpZCh3YWl0ZXItPnRpLT50YXNrLT5waWQs
IHdhaXRlci0+dGktPnRhc2stPnByaW8sIDApOw0KIA0KLSNpZiBBTExfVEFT
S1NfUEkNCi0JY2hlY2tfcGlfbGlzdF9wcmVzZW50KGxvY2ssIHdhaXRlciwg
b2xkX293bmVyKTsNCi0jZW5kaWYNCiAJbmV3X293bmVyID0gd2FpdGVyLT50
aTsNCi0JLyoNCi0JICogVGhlIG5ldyBvd25lciBpcyBzdGlsbCBibG9ja2Vk
IG9uIHRoaXMgbG9jaywgc28gd2UNCi0JICogbXVzdCByZWxlYXNlIHRoZSBs
b2NrLT53YWl0X2xvY2sgYmVmb3JlIGdyYWJpbmcNCi0JICogdGhlIG5ld19v
d25lciBsb2NrLg0KLQkgKi8NCi0JX3Jhd19zcGluX3VubG9jaygmbG9jay0+
d2FpdF9sb2NrKTsNCi0JX3Jhd19zcGluX2xvY2soJm5ld19vd25lci0+dGFz
ay0+cGlfbG9jayk7DQotCV9yYXdfc3Bpbl9sb2NrKCZsb2NrLT53YWl0X2xv
Y2spOw0KLQkvKg0KLQkgKiBJbiB0aGlzIHNwbGl0IHNlY29uZCBvZiByZWxl
YXNpbmcgdGhlIGxvY2ssIGEgaGlnaCBwcmlvcml0eQ0KLQkgKiBwcm9jZXNz
IGNvdWxkIGhhdmUgY29tZSBhbG9uZyBhbmQgYmxvY2tlZCBhcyB3ZWxsLg0K
LQkgKi8NCi0jaWZkZWYgQ09ORklHX1NNUA0KLQl3YWl0ZXIgPSBwbGlzdF9m
aXJzdF9lbnRyeSgmbG9jay0+d2FpdF9saXN0LCBzdHJ1Y3QgcnRfbXV0ZXhf
d2FpdGVyLCBsaXN0KTsNCi0JaWYgKHVubGlrZWx5KHdhaXRlci0+dGkgIT0g
bmV3X293bmVyKSkgew0KLQkJX3Jhd19zcGluX3VubG9jaygmbmV3X293bmVy
LT50YXNrLT5waV9sb2NrKTsNCi0JCWdvdG8gdHJ5X2FnYWluOw0KLQl9DQot
I2lmZGVmIENPTkZJR19QUkVFTVBUX1JUDQotCS8qDQotCSAqIE9uY2UgYWdh
aW4gdGhlIEJLTCBjb21lcyB0byBwbGF5LiAgU2luY2UgdGhlIEJLTCBjYW4g
YmUgZ3JhYmJlZCBhbmQgcmVsZWFzZWQNCi0JICogb3V0IG9mIHRoZSBub3Jt
YWwgUDEtPkwxLT5QMiBvcmRlciwgdGhlcmUncyBhIGNoYW5jZSB0aGF0IHNv
bWVvbmUgaGFzIHRoZQ0KLQkgKiBCS0wgb3duZXIncyBsb2NrIGFuZCBpcyB3
YWl0aW5nIG9uIHRoZSBuZXcgb3duZXIgbG9jay4NCi0JICovDQotCWlmICh1
bmxpa2VseShsb2NrID09ICZrZXJuZWxfc2VtLmxvY2spKSB7DQotCQlpZiAo
IV9yYXdfc3Bpbl90cnlsb2NrKCZvbGRfb3duZXItPnRhc2stPnBpX2xvY2sp
KSB7DQotCQkJX3Jhd19zcGluX3VubG9jaygmbmV3X293bmVyLT50YXNrLT5w
aV9sb2NrKTsNCi0JCQlnb3RvIHRyeV9hZ2FpbjsNCi0JCX0NCi0JfSBlbHNl
DQotI2VuZGlmDQotI2VuZGlmDQotCQlfcmF3X3NwaW5fbG9jaygmb2xkX293
bmVyLT50YXNrLT5waV9sb2NrKTsNCi0NCi0JcGxpc3RfZGVsKCZ3YWl0ZXIt
Pmxpc3QpOw0KLQlwbGlzdF9kZWwoJndhaXRlci0+cGlfbGlzdCk7DQotCXdh
aXRlci0+cGlfbGlzdC5wcmlvID0gd2FpdGVyLT50aS0+dGFzay0+cHJpbzsN
CiANCiAJc2V0X25ld19vd25lcihsb2NrLCBvbGRfb3duZXIsIG5ld19vd25l
ciBfX1dfRUlQX18od2FpdGVyKSk7DQorDQorCV9yYXdfc3Bpbl9sb2NrKCZu
ZXdfb3duZXItPnRhc2stPnBpX2xvY2spOw0KIAkvKiBEb24ndCB0b3VjaCB3
YWl0ZXIgYWZ0ZXIgLT50YXNrIGhhcyBiZWVuIE5VTExlZCAqLw0KIAltYigp
Ow0KIAl3YWl0ZXItPnRpID0gTlVMTDsNCiAJbmV3X293bmVyLT50YXNrLT5i
bG9ja2VkX29uID0gTlVMTDsNCi0JVFJBQ0VfV0FSTl9PTihzYXZlX3N0YXRl
ICE9IGxvY2stPnNhdmVfc3RhdGUpOw0KLQ0KLQlfcmF3X3NwaW5fdW5sb2Nr
KCZvbGRfb3duZXItPnRhc2stPnBpX2xvY2spOw0KKyNpZmRlZiBDQVBUVVJF
X0xPQ0sNCisJaWYgKCFpc19rZXJuZWxfbG9jayhsb2NrKSkgew0KKwkJbmV3
X293bmVyLT50YXNrLT5ydF9mbGFncyB8PSBSVF9QRU5ET1dORVI7DQorCQlu
ZXdfb3duZXItPnRhc2stPnBlbmRpbmdfb3duZXIgPSBsb2NrOw0KKwl9DQor
I2VuZGlmDQogCV9yYXdfc3Bpbl91bmxvY2soJm5ld19vd25lci0+dGFzay0+
cGlfbG9jayk7DQogDQorCVRSQUNFX1dBUk5fT04oc2F2ZV9zdGF0ZSAhPSBs
b2NrLT5zYXZlX3N0YXRlKTsNCisNCiAJcmV0dXJuIG5ld19vd25lcjsNCiB9
DQogDQpAQCAtMTIxNywxMSArMTEwMyw0MSBAQCBzdGF0aWMgaW5saW5lIHZv
aWQgaW5pdF9saXN0cyhzdHJ1Y3QgcnRfDQogCX0NCiAjZW5kaWYNCiAjaWZk
ZWYgQ09ORklHX0RFQlVHX0RFQURMT0NLUw0KLQlpZiAoIWxvY2stPmhlbGRf
bGlzdC5wcmV2ICYmICFsb2NrLT5oZWxkX2xpc3QubmV4dCkNCisJaWYgKCFs
b2NrLT5oZWxkX2xpc3QucHJldiAmJiAhbG9jay0+aGVsZF9saXN0Lm5leHQp
IHsNCiAJCUlOSVRfTElTVF9IRUFEKCZsb2NrLT5oZWxkX2xpc3QpOw0KKwkJ
bG9jay0+dmVyYm9zZSA9IDA7DQorCX0NCiAjZW5kaWYNCiB9DQogDQorDQor
c3RhdGljIHZvaWQgcmVtb3ZlX3BlbmRpbmdfb3duZXJfbm9sb2NrKHRhc2tf
dCAqb3duZXIpDQorew0KKwlvd25lci0+cnRfZmxhZ3MgJj0gflJUX1BFTkRP
V05FUjsNCisJb3duZXItPnBlbmRpbmdfb3duZXIgPSBOVUxMOw0KK30NCisN
CitzdGF0aWMgdm9pZCByZW1vdmVfcGVuZGluZ19vd25lcih0YXNrX3QgKm93
bmVyKQ0KK3sNCisJX3Jhd19zcGluX2xvY2soJm93bmVyLT5waV9sb2NrKTsN
CisJcmVtb3ZlX3BlbmRpbmdfb3duZXJfbm9sb2NrKG93bmVyKTsNCisJX3Jh
d19zcGluX3VubG9jaygmb3duZXItPnBpX2xvY2spOw0KK30NCisNCitpbnQg
dGFza19pc19wZW5kaW5nX293bmVyX25vbG9jayhzdHJ1Y3QgdGhyZWFkX2lu
Zm8gICpvd25lciwgDQorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgc3RydWN0IHJ0X211dGV4ICpsb2NrKQ0KK3sNCisJcmV0dXJuIChsb2Nr
X293bmVyKGxvY2spID09IG93bmVyKSAmJg0KKwkJKG93bmVyLT50YXNrLT5w
ZW5kaW5nX293bmVyID09IGxvY2spOw0KK30NCitpbnQgdGFza19pc19wZW5k
aW5nX293bmVyKHN0cnVjdCB0aHJlYWRfaW5mbyAgKm93bmVyLCBzdHJ1Y3Qg
cnRfbXV0ZXggKmxvY2spDQorew0KKwlpbnQgcmVzOw0KKwlfcmF3X3NwaW5f
bG9jaygmb3duZXItPnRhc2stPnBpX2xvY2spOw0KKwlyZXMgPSB0YXNrX2lz
X3BlbmRpbmdfb3duZXJfbm9sb2NrKG93bmVyLGxvY2spOw0KKwlfcmF3X3Nw
aW5fdW5sb2NrKCZvd25lci0+dGFzay0+cGlfbG9jayk7DQorCXJldHVybiBy
ZXM7DQorfQ0KIC8qDQogICogVHJ5IHRvIGdyYWIgYSBsb2NrLCBhbmQgaWYg
aXQgaXMgb3duZWQgYnV0IHRoZSBvd25lcg0KICAqIGhhc24ndCB3b2tlbiB1
cCB5ZXQsIHNlZSBpZiB3ZSBjYW4gc3RlYWwgaXQuDQpAQCAtMTIzMyw2ICsx
MTQ5LDggQEAgc3RhdGljIGludCBfX2dyYWJfbG9jayhzdHJ1Y3QgcnRfbXV0
ZXggKg0KIHsNCiAjaWZuZGVmIENBUFRVUkVfTE9DSw0KIAlyZXR1cm4gMDsN
CisjZWxzZQ0KKwlpbnQgcmVzID0gMDsNCiAjZW5kaWYNCiAJLyoNCiAJICog
VGhlIGxvY2sgaXMgb3duZWQsIGJ1dCBub3cgdGVzdCB0byBzZWUgaWYgdGhl
IG93bmVyDQpAQCAtMTI0MSwxMTEgKzExNTksMzYgQEAgc3RhdGljIGludCBf
X2dyYWJfbG9jayhzdHJ1Y3QgcnRfbXV0ZXggKg0KIA0KIAlUUkFDRV9CVUdf
T05fTE9DS0VEKCFvd25lcik7DQogDQorCV9yYXdfc3Bpbl9sb2NrKCZvd25l
ci0+cGlfbG9jayk7DQorDQogCS8qIFRoZSBvd25lciBpcyBwZW5kaW5nIG9u
IGEgbG9jaywgYnV0IGlzIGl0IHRoaXMgbG9jaz8gKi8NCiAJaWYgKG93bmVy
LT5wZW5kaW5nX293bmVyICE9IGxvY2spDQotCQlyZXR1cm4gMDsNCisJCWdv
dG8gb3V0X3VubG9jazsNCiANCiAJLyoNCiAJICogVGhlcmUncyBhbiBvd25l
ciwgYnV0IGl0IGhhc24ndCB3b2tlbiB1cCB0byB0YWtlIHRoZSBsb2NrIHll
dC4NCiAJICogU2VlIGlmIHdlIHNob3VsZCBzdGVhbCBpdCBmcm9tIGhpbS4N
CiAJICovDQogCWlmICh0YXNrLT5wcmlvID4gb3duZXItPnByaW8pDQotCQly
ZXR1cm4gMDsNCi0jaWZkZWYgQ09ORklHX1BSRUVNUFRfUlQNCisJCWdvdG8g
b3V0X3VubG9jazsNCisNCiAJLyoNCiAJICogVGhlIEJLTCBpcyBhIFBJVEEu
IERvbid0IGV2ZXIgc3RlYWwgaXQNCiAJICovDQotCWlmIChsb2NrID09ICZr
ZXJuZWxfc2VtLmxvY2spDQotCQlyZXR1cm4gMDsNCi0jZW5kaWYNCisJaWYg
KGlzX2tlcm5lbF9sb2NrKGxvY2spKQ0KKwkJZ290byBvdXRfdW5sb2NrOw0K
Kw0KIAkvKg0KIAkgKiBUaGlzIHRhc2sgaXMgb2YgaGlnaGVyIHByaW9yaXR5
IHRoYW4gdGhlIGN1cnJlbnQgcGVuZGluZw0KIAkgKiBvd25lciwgc28gd2Ug
bWF5IHN0ZWFsIGl0Lg0KIAkgKi8NCi0Jb3duZXItPnJ0X2ZsYWdzICY9IH5S
VF9QRU5ET1dORVI7DQotCW93bmVyLT5wZW5kaW5nX293bmVyID0gTlVMTDsN
Ci0NCi0jaWZkZWYgQ09ORklHX0RFQlVHX0RFQURMT0NLUw0KLQkvKg0KLQkg
KiBUaGlzIHRhc2sgd2lsbCBiZSB0YWtpbmcgdGhlIG93bmVyc2hpcCBhd2F5
LCBhbmQNCi0JICogd2hlbiBpdCBkb2VzLCB0aGUgbG9jayBjYW4ndCBiZSBv
biB0aGUgaGVsZCBsaXN0Lg0KLQkgKi8NCi0JaWYgKHRyYWNlX29uKSB7DQot
CQlUUkFDRV9XQVJOX09OX0xPQ0tFRChsaXN0X2VtcHR5KCZsb2NrLT5oZWxk
X2xpc3QpKTsNCi0JCWxpc3RfZGVsX2luaXQoJmxvY2stPmhlbGRfbGlzdCk7
DQotCX0NCi0jZW5kaWYNCi0JYWNjb3VudF9tdXRleF9vd25lcl91cChvd25l
cik7DQotDQotCXJldHVybiAxOw0KLX0NCi0NCi0vKg0KLSAqIEJyaW5nIGEg
dGFzayBmcm9tIHBlbmRpbmcgb3duZXJzaGlwIHRvIG93bmluZyBhIGxvY2su
DQotICoNCi0gKiBSZXR1cm4gMCBpZiB3ZSBzZWN1cmVkIGl0LCBvdGhlcndp
c2Ugbm9uLXplcm8gaWYgaXQgd2FzDQotICogc3RvbGVuLg0KLSAqLw0KLXN0
YXRpYyBpbnQNCi1jYXB0dXJlX2xvY2soc3RydWN0IHJ0X211dGV4X3dhaXRl
ciAqd2FpdGVyLCBzdHJ1Y3QgdGhyZWFkX2luZm8gKnRpLA0KLQkgICAgIHN0
cnVjdCB0YXNrX3N0cnVjdCAqdGFzaykNCi17DQotCXN0cnVjdCBydF9tdXRl
eCAqbG9jayA9IHdhaXRlci0+bG9jazsNCi0Jc3RydWN0IHRocmVhZF9pbmZv
ICpvbGRfb3duZXI7DQotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7DQotCWludCBy
ZXQgPSAwOw0KLQ0KLSNpZm5kZWYgQ0FQVFVSRV9MT0NLDQotCXJldHVybiAw
Ow0KLSNlbmRpZg0KLSNpZmRlZiBDT05GSUdfUFJFRU1QVF9SVA0KLQkvKg0K
LQkgKiBUaGUgQktMIGlzIHNwZWNpYWwsIHdlIGFsd2F5cyBnZXQgaXQuDQot
CSAqLw0KLQlpZiAobG9jayA9PSAma2VybmVsX3NlbS5sb2NrKQ0KLQkJcmV0
dXJuIDA7DQotI2VuZGlmDQotDQotCXRyYWNlX2xvY2tfaXJxc2F2ZSgmdHJh
Y2VfbG9jaywgZmxhZ3MsIHRpKTsNCi0JLyoNCi0JICogV2UgYXJlIG5vIGxv
bmdlciBibG9ja2VkIG9uIHRoZSBsb2NrLCBzbyB3ZSBhcmUgY29uc2lkZXJl
ZCBhDQotCSAqIG93bmVyLiBTbyB3ZSBtdXN0IGdyYWIgdGhlIGxvY2stPndh
aXRfbG9jayBmaXJzdC4NCi0JICovDQotCV9yYXdfc3Bpbl9sb2NrKCZsb2Nr
LT53YWl0X2xvY2spOw0KLQlfcmF3X3NwaW5fbG9jaygmdGFzay0+cGlfbG9j
ayk7DQotDQotCWlmICghKHRhc2stPnJ0X2ZsYWdzICYgUlRfUEVORE9XTkVS
KSkgew0KLQkJLyoNCi0JCSAqIFNvbWVvbmUgZWxzZSBzdG9sZSBpdC4NCi0J
CSAqLw0KLQkJb2xkX293bmVyID0gbG9ja19vd25lcihsb2NrKTsNCi0JCVRS
QUNFX0JVR19PTl9MT0NLRUQob2xkX293bmVyID09IHRpKTsNCi0JCWlmIChs
aWtlbHkoIW9sZF9vd25lcikgfHwgX19ncmFiX2xvY2sobG9jaywgdGFzaywg
b2xkX293bmVyLT50YXNrKSkgew0KLQkJCS8qIHdlIGdvdCBpdCBiYWNrISAq
Lw0KLQkJCWlmIChvbGRfb3duZXIpIHsNCi0JCQkJX3Jhd19zcGluX2xvY2so
Jm9sZF9vd25lci0+dGFzay0+cGlfbG9jayk7DQotCQkJCXNldF9uZXdfb3du
ZXIobG9jaywgb2xkX293bmVyLCB0aSBfX1dfRUlQX18od2FpdGVyKSk7DQot
CQkJCV9yYXdfc3Bpbl91bmxvY2soJm9sZF9vd25lci0+dGFzay0+cGlfbG9j
ayk7DQotCQkJfSBlbHNlDQotCQkJCXNldF9uZXdfb3duZXIobG9jaywgb2xk
X293bmVyLCB0aSBfX1dfRUlQX18od2FpdGVyKSk7DQotCQkJcmV0ID0gMDsN
Ci0JCX0gZWxzZSB7DQotCQkJLyogQWRkIG91cnNlbHZlcyBiYWNrIHRvIHRo
ZSBsaXN0ICovDQotCQkJVFJBQ0VfQlVHX09OX0xPQ0tFRCghcGxpc3Rfbm9k
ZV9lbXB0eSgmd2FpdGVyLT5saXN0KSk7DQotCQkJcGxpc3Rfbm9kZV9pbml0
KCZ3YWl0ZXItPmxpc3QsIHRhc2stPnByaW8pOw0KLQkJCXRhc2tfYmxvY2tz
X29uX2xvY2sod2FpdGVyLCB0aSwgbG9jayBfX1dfRUlQX18od2FpdGVyKSk7
DQotCQkJcmV0ID0gMTsNCi0JCX0NCi0JfSBlbHNlIHsNCi0JCXRhc2stPnJ0
X2ZsYWdzICY9IH5SVF9QRU5ET1dORVI7DQotCQl0YXNrLT5wZW5kaW5nX293
bmVyID0gTlVMTDsNCi0JfQ0KKwlyZW1vdmVfcGVuZGluZ19vd25lcl9ub2xv
Y2sob3duZXIpOw0KIA0KLQlfcmF3X3NwaW5fdW5sb2NrKCZsb2NrLT53YWl0
X2xvY2spOw0KLQlfcmF3X3NwaW5fdW5sb2NrKCZ0YXNrLT5waV9sb2NrKTsN
Ci0JdHJhY2VfdW5sb2NrX2lycXJlc3RvcmUoJnRyYWNlX2xvY2ssIGZsYWdz
LCB0aSk7DQorCXJlcyA9IDE7DQogDQotCXJldHVybiByZXQ7DQorIG91dF91
bmxvY2s6DQorCV9yYXdfc3Bpbl91bmxvY2soJm93bmVyLT5waV9sb2NrKTsN
CisJcmV0dXJuIHJlczsNCiB9DQogDQogc3RhdGljIGlubGluZSB2b2lkIElO
SVRfV0FJVEVSKHN0cnVjdCBydF9tdXRleF93YWl0ZXIgKndhaXRlcikNCkBA
IC0xMzY2LDEwICsxMjA5LDI1IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBGUkVF
X1dBSVRFUihzdHJ1Y3QgcnQNCiAjZW5kaWYNCiB9DQogDQorc3RhdGljIGlu
dCBhbGxvd2VkX3RvX3Rha2VfbG9jayhzdHJ1Y3QgdGhyZWFkX2luZm8gKnRp
LA0KKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFza190ICp0
YXNrLA0KKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RydWN0
IHRocmVhZF9pbmZvICpvbGRfb3duZXIsDQorICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBzdHJ1Y3QgcnRfbXV0ZXggKmxvY2spDQorew0KKwlT
TVBfVFJBQ0VfQlVHX09OX0xPQ0tFRCghc3Bpbl9pc19sb2NrZWQoJmxvY2st
PndhaXRfbG9jaykpOw0KKwlTTVBfVFJBQ0VfQlVHX09OX0xPQ0tFRChzcGlu
X2lzX2xvY2tlZCgmb2xkX293bmVyLT50YXNrLT5waV9sb2NrKSk7DQorCVNN
UF9UUkFDRV9CVUdfT05fTE9DS0VEKHNwaW5faXNfbG9ja2VkKCZ0YXNrLT5w
aV9sb2NrKSk7DQorDQorCXJldHVybiAhb2xkX293bmVyIHx8DQorCQkoaXNf
a2VybmVsX2xvY2sobG9jaykgICYmIGxvY2tfb3duZXIobG9jaykgPT0gdGkp
IHx8DQorCQl0YXNrX2lzX3BlbmRpbmdfb3duZXIodGksbG9jaykgfHwgDQor
CQlfX2dyYWJfbG9jayhsb2NrLCB0YXNrLCBvbGRfb3duZXItPnRhc2spOw0K
K30NCisNCiAvKg0KICAqIGxvY2sgaXQgc2VtYXBob3JlLXN0eWxlOiBubyB3
b3JyaWVzIGFib3V0IG1pc3NlZCB3YWtldXBzLg0KICAqLw0KLXN0YXRpYyBp
bmxpbmUgdm9pZA0KK3N0YXRpYyB2b2lkDQogX19fX2Rvd24oc3RydWN0IHJ0
X211dGV4ICpsb2NrIF9fRUlQX0RFQ0xfXykNCiB7DQogCXN0cnVjdCB0aHJl
YWRfaW5mbyAqdGkgPSBjdXJyZW50X3RocmVhZF9pbmZvKCksICpvbGRfb3du
ZXI7DQpAQCAtMTM3OSw2NSArMTIzNyw2NiBAQCBfX19fZG93bihzdHJ1Y3Qg
cnRfbXV0ZXggKmxvY2sgX19FSVBfREVDDQogDQogCXRyYWNlX2xvY2tfaXJx
c2F2ZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsNCiAJVFJBQ0VfQlVHX09O
X0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQotCV9yYXdfc3Bpbl9s
b2NrKCZ0YXNrLT5waV9sb2NrKTsNCiAJX3Jhd19zcGluX2xvY2soJmxvY2st
PndhaXRfbG9jayk7DQogCUlOSVRfV0FJVEVSKCZ3YWl0ZXIpOw0KIA0KLQlv
bGRfb3duZXIgPSBsb2NrX293bmVyKGxvY2spOw0KIAlpbml0X2xpc3RzKGxv
Y2spOw0KIA0KLQlpZiAobGlrZWx5KCFvbGRfb3duZXIpIHx8IF9fZ3JhYl9s
b2NrKGxvY2ssIHRhc2ssIG9sZF9vd25lci0+dGFzaykpIHsNCisJZGVidWdf
bG9jayhsb2NrLCJkb3duIik7DQorCS8qIHdhaXQgdG8gYmUgZ2l2ZW4gdGhl
IGxvY2sgKi8NCisJZm9yICg7Oykgew0KKwkJb2xkX293bmVyID0gbG9ja19v
d25lcihsb2NrKTsNCisNCisJCWlmKGFsbG93ZWRfdG9fdGFrZV9sb2NrKHRp
LCB0YXNrLCBvbGRfb3duZXIsbG9jaykpIHsNCiAJCS8qIGdyYW50ZWQgKi8N
Ci0JCVRSQUNFX1dBUk5fT05fTE9DS0VEKCFwbGlzdF9oZWFkX2VtcHR5KCZs
b2NrLT53YWl0X2xpc3QpICYmICFvbGRfb3duZXIpOw0KLQkJaWYgKG9sZF9v
d25lcikgew0KLQkJCV9yYXdfc3Bpbl9sb2NrKCZvbGRfb3duZXItPnRhc2st
PnBpX2xvY2spOw0KLQkJCXNldF9uZXdfb3duZXIobG9jaywgb2xkX293bmVy
LCB0aSBfX0VJUF9fKTsNCi0JCQlfcmF3X3NwaW5fdW5sb2NrKCZvbGRfb3du
ZXItPnRhc2stPnBpX2xvY2spOw0KLQkJfSBlbHNlDQorCQkJVFJBQ0VfV0FS
Tl9PTl9MT0NLRUQoIXBsaXN0X2hlYWRfZW1wdHkoJmxvY2stPndhaXRfbGlz
dCkgJiYgIW9sZF9vd25lcik7DQogCQkJc2V0X25ld19vd25lcihsb2NrLCBv
bGRfb3duZXIsIHRpIF9fRUlQX18pOw0KLQkJX3Jhd19zcGluX3VubG9jaygm
bG9jay0+d2FpdF9sb2NrKTsNCi0JCV9yYXdfc3Bpbl91bmxvY2soJnRhc2st
PnBpX2xvY2spOw0KLQkJdHJhY2VfdW5sb2NrX2lycXJlc3RvcmUoJnRyYWNl
X2xvY2ssIGZsYWdzLCB0aSk7DQotDQotCQlGUkVFX1dBSVRFUigmd2FpdGVy
KTsNCi0JCXJldHVybjsNCi0JfQ0KLQ0KLQlzZXRfdGFza19zdGF0ZSh0YXNr
LCBUQVNLX1VOSU5URVJSVVBUSUJMRSk7DQorCQkJaWYgKCFpc19rZXJuZWxf
bG9jayhsb2NrKSkgew0KKwkJCQlyZW1vdmVfcGVuZGluZ19vd25lcih0YXNr
KTsNCisJCQl9DQorCQkgIAlkZWJ1Z19sb2NrKGxvY2ssImdvdCBsb2NrIik7
DQogDQotCXBsaXN0X25vZGVfaW5pdCgmd2FpdGVyLmxpc3QsIHRhc2stPnBy
aW8pOw0KLQl0YXNrX2Jsb2Nrc19vbl9sb2NrKCZ3YWl0ZXIsIHRpLCBsb2Nr
IF9fRUlQX18pOw0KKwkJCV9yYXdfc3Bpbl91bmxvY2soJmxvY2stPndhaXRf
bG9jayk7DQorCQkJdHJhY2VfdW5sb2NrX2lycXJlc3RvcmUoJnRyYWNlX2xv
Y2ssIGZsYWdzLCB0aSk7DQogDQotCVRSQUNFX0JVR19PTl9MT0NLRUQoIXJh
d19pcnFzX2Rpc2FibGVkKCkpOw0KLQkvKiB3ZSBkb24ndCBuZWVkIHRvIHRv
dWNoIHRoZSBsb2NrIHN0cnVjdCBhbnltb3JlICovDQotCV9yYXdfc3Bpbl91
bmxvY2soJmxvY2stPndhaXRfbG9jayk7DQotCV9yYXdfc3Bpbl91bmxvY2so
JnRhc2stPnBpX2xvY2spOw0KLQl0cmFjZV91bmxvY2tfaXJxcmVzdG9yZSgm
dHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsNCisJCQlGUkVFX1dBSVRFUigmd2Fp
dGVyKTsNCisJCQlyZXR1cm47DQorCQl9DQorCQkNCisJCXRhc2tfYmxvY2tz
X29uX2xvY2soJndhaXRlciwgdGksIGxvY2ssIFRBU0tfVU5JTlRFUlJVUFRJ
QkxFIF9fRUlQX18pOw0KIA0KLQltaWdodF9zbGVlcCgpOw0KKwkJVFJBQ0Vf
QlVHX09OX0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQorCQkvKiB3
ZSBkb24ndCBuZWVkIHRvIHRvdWNoIHRoZSBsb2NrIHN0cnVjdCBhbnltb3Jl
ICovDQorCQlkZWJ1Z19sb2NrKGxvY2ssInNsZWVwaW5nIG9uIik7DQorCQlf
cmF3X3NwaW5fdW5sb2NrKCZsb2NrLT53YWl0X2xvY2spOw0KKwkJdHJhY2Vf
dW5sb2NrX2lycXJlc3RvcmUoJnRyYWNlX2xvY2ssIGZsYWdzLCB0aSk7DQor
CQkNCisJCW1pZ2h0X3NsZWVwKCk7DQorCQkNCisJCW5vc2NoZWRfZmxhZyA9
IGN1cnJlbnQtPmZsYWdzICYgUEZfTk9TQ0hFRDsNCisJCWN1cnJlbnQtPmZs
YWdzICY9IH5QRl9OT1NDSEVEOw0KIA0KLQlub3NjaGVkX2ZsYWcgPSBjdXJy
ZW50LT5mbGFncyAmIFBGX05PU0NIRUQ7DQotCWN1cnJlbnQtPmZsYWdzICY9
IH5QRl9OT1NDSEVEOw0KKwkJaWYgKHdhaXRlci50aSkNCisJCXsNCisJCQlz
Y2hlZHVsZSgpOw0KKwkJfQ0KKwkJDQorCQljdXJyZW50LT5mbGFncyB8PSBu
b3NjaGVkX2ZsYWc7DQorCQl0YXNrLT5zdGF0ZSA9IFRBU0tfUlVOTklORzsN
CiANCi13YWl0X2FnYWluOg0KLQkvKiB3YWl0IHRvIGJlIGdpdmVuIHRoZSBs
b2NrICovDQotCWZvciAoOzspIHsNCi0JCWlmICghd2FpdGVyLnRpKQ0KLQkJ
CWJyZWFrOw0KLQkJc2NoZWR1bGUoKTsNCi0JCXNldF90YXNrX3N0YXRlKHRh
c2ssIFRBU0tfVU5JTlRFUlJVUFRJQkxFKTsNCi0JfQ0KLQkvKg0KLQkgKiBD
aGVjayB0byBzZWUgaWYgd2UgZGlkbid0IGhhdmUgb3duZXJzaGlwIHN0b2xl
bi4NCi0JICovDQotCWlmIChjYXB0dXJlX2xvY2soJndhaXRlciwgdGksIHRh
c2spKSB7DQotCQlzZXRfdGFza19zdGF0ZSh0YXNrLCBUQVNLX1VOSU5URVJS
VVBUSUJMRSk7DQotCQlnb3RvIHdhaXRfYWdhaW47DQorCQl0cmFjZV9sb2Nr
X2lycXNhdmUoJnRyYWNlX2xvY2ssIGZsYWdzLCB0aSk7DQorCQlfcmF3X3Nw
aW5fbG9jaygmbG9jay0+d2FpdF9sb2NrKTsNCisJCWRlYnVnX2xvY2sobG9j
aywid2FraW5nIHVwIG9uIik7DQorCQlpZih3YWl0ZXIudGkpIHsNCisJCQly
ZW1vdmVfd2FpdGVyKGxvY2ssJndhaXRlciwxKTsNCisJCX0NCisJCV9yYXdf
c3Bpbl9sb2NrKCZ0YXNrLT5waV9sb2NrKTsNCisJCXRhc2stPmJsb2NrZWRf
b24gPSBOVUxMOw0KKwkJX3Jhd19zcGluX3VubG9jaygmdGFzay0+cGlfbG9j
ayk7DQogCX0NCiANCi0JY3VycmVudC0+ZmxhZ3MgfD0gbm9zY2hlZF9mbGFn
Ow0KLQl0YXNrLT5zdGF0ZSA9IFRBU0tfUlVOTklORzsNCi0JRlJFRV9XQUlU
RVIoJndhaXRlcik7DQorCS8qIFNob3VsZCBub3QgZ2V0IGhlcmUhICovDQor
CUJVR19PTigxKTsNCiB9DQogDQogLyoNCkBAIC0xNDUwLDEzMSArMTMwOSwx
MTYgQEAgd2FpdF9hZ2FpbjoNCiAgKiBlbmFibGVzIHRoZSBzZWVtbGVzcyB1
c2Ugb2YgYXJiaXRyYXJ5IChibG9ja2luZykgc3BpbmxvY2tzIHdpdGhpbg0K
ICAqIHNsZWVwL3dha2V1cCBldmVudCBsb29wcy4NCiAgKi8NCi1zdGF0aWMg
aW5saW5lIHZvaWQNCitzdGF0aWMgdm9pZA0KIF9fX19kb3duX211dGV4KHN0
cnVjdCBydF9tdXRleCAqbG9jayBfX0VJUF9ERUNMX18pDQogew0KIAlzdHJ1
Y3QgdGhyZWFkX2luZm8gKnRpID0gY3VycmVudF90aHJlYWRfaW5mbygpLCAq
b2xkX293bmVyOw0KLQl1bnNpZ25lZCBsb25nIHN0YXRlLCBzYXZlZF9zdGF0
ZSwgbm9zY2hlZF9mbGFnOw0KKwl1bnNpZ25lZCBsb25nIHN0YXRlLCBzYXZl
ZF9zdGF0ZTsNCiAJc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrID0gdGktPnRh
c2s7DQogCXN0cnVjdCBydF9tdXRleF93YWl0ZXIgd2FpdGVyOw0KIAl1bnNp
Z25lZCBsb25nIGZsYWdzOw0KLQlpbnQgZ290X3dha2V1cCA9IDAsIHNhdmVk
X2xvY2tfZGVwdGg7DQorCWludCBnb3Rfd2FrZXVwID0gMDsNCisJDQorCSAg
ICAgICAgDQogDQogCXRyYWNlX2xvY2tfaXJxc2F2ZSgmdHJhY2VfbG9jaywg
ZmxhZ3MsIHRpKTsNCiAJVFJBQ0VfQlVHX09OX0xPQ0tFRCghcmF3X2lycXNf
ZGlzYWJsZWQoKSk7DQotCV9yYXdfc3Bpbl9sb2NrKCZ0YXNrLT5waV9sb2Nr
KTsNCiAJX3Jhd19zcGluX2xvY2soJmxvY2stPndhaXRfbG9jayk7DQotCUlO
SVRfV0FJVEVSKCZ3YWl0ZXIpOw0KLQ0KLQlvbGRfb3duZXIgPSBsb2NrX293
bmVyKGxvY2spOw0KLQlpbml0X2xpc3RzKGxvY2spOw0KLQ0KLQlpZiAobGlr
ZWx5KCFvbGRfb3duZXIpIHx8IF9fZ3JhYl9sb2NrKGxvY2ssIHRhc2ssIG9s
ZF9vd25lci0+dGFzaykpIHsNCi0JCS8qIGdyYW50ZWQgKi8NCi0JCVRSQUNF
X1dBUk5fT05fTE9DS0VEKCFwbGlzdF9oZWFkX2VtcHR5KCZsb2NrLT53YWl0
X2xpc3QpICYmICFvbGRfb3duZXIpOw0KLQkJaWYgKG9sZF9vd25lcikgew0K
LQkJCV9yYXdfc3Bpbl9sb2NrKCZvbGRfb3duZXItPnRhc2stPnBpX2xvY2sp
Ow0KLQkJCXNldF9uZXdfb3duZXIobG9jaywgb2xkX293bmVyLCB0aSBfX0VJ
UF9fKTsNCi0JCQlfcmF3X3NwaW5fdW5sb2NrKCZvbGRfb3duZXItPnRhc2st
PnBpX2xvY2spOw0KLQkJfSBlbHNlDQotCQkJc2V0X25ld19vd25lcihsb2Nr
LCBvbGRfb3duZXIsIHRpIF9fRUlQX18pOw0KLQkJX3Jhd19zcGluX3VubG9j
aygmbG9jay0+d2FpdF9sb2NrKTsNCi0JCV9yYXdfc3Bpbl91bmxvY2soJnRh
c2stPnBpX2xvY2spOw0KLQkJdHJhY2VfdW5sb2NrX2lycXJlc3RvcmUoJnRy
YWNlX2xvY2ssIGZsYWdzLCB0aSk7DQotDQotCQlGUkVFX1dBSVRFUigmd2Fp
dGVyKTsNCi0JCXJldHVybjsNCi0JfQ0KLQ0KLQlwbGlzdF9ub2RlX2luaXQo
JndhaXRlci5saXN0LCB0YXNrLT5wcmlvKTsNCi0JdGFza19ibG9ja3Nfb25f
bG9jaygmd2FpdGVyLCB0aSwgbG9jayBfX0VJUF9fKTsNCi0NCi0JVFJBQ0Vf
QlVHX09OX0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQotCS8qDQor
LyoNCiAJICogSGVyZSB3ZSBzYXZlIHdoYXRldmVyIHN0YXRlIHRoZSB0YXNr
IHdhcyBpbiBvcmlnaW5hbGx5LA0KIAkgKiB3ZSdsbCByZXN0b3JlIGl0IGF0
IHRoZSBlbmQgb2YgdGhlIGZ1bmN0aW9uIGFuZCB3ZSdsbA0KIAkgKiB0YWtl
IGFueSBpbnRlcm1lZGlhdGUgd2FrZXVwIGludG8gYWNjb3VudCBhcyB3ZWxs
LA0KIAkgKiBpbmRlcGVuZGVudGx5IG9mIHRoZSBtdXRleCBzbGVlcC93YWtl
dXAgbWVjaGFuaXNtOg0KIAkgKi8NCiAJc2F2ZWRfc3RhdGUgPSB4Y2hnKCZ0
YXNrLT5zdGF0ZSwgVEFTS19VTklOVEVSUlVQVElCTEUpOw0KKyAgICAgICAg
DQorCUlOSVRfV0FJVEVSKCZ3YWl0ZXIpOw0KIA0KLQkvKiB3ZSBkb24ndCBu
ZWVkIHRvIHRvdWNoIHRoZSBsb2NrIHN0cnVjdCBhbnltb3JlICovDQotCV9y
YXdfc3Bpbl91bmxvY2soJmxvY2stPndhaXRfbG9jayk7DQotCV9yYXdfc3Bp
bl91bmxvY2soJnRhc2stPnBpX2xvY2spOw0KLQl0cmFjZV91bmxvY2soJnRy
YWNlX2xvY2ssIHRpKTsNCi0NCi0JLyoNCi0JICogVE9ETzogY2hlY2sgJ2Zs
YWdzJyBmb3IgdGhlIElSUSBiaXQgaGVyZSAtIGl0IGlzIGlsbGVnYWwgdG8N
Ci0JICogY2FsbCBkb3duKCkgZnJvbSBhbiBJUlFzLW9mZiBzZWN0aW9uIHRo
YXQgcmVzdWx0cyBpbg0KLQkgKiBhbiBhY3R1YWwgcmVzY2hlZHVsZS4NCi0J
ICovDQotDQotCW5vc2NoZWRfZmxhZyA9IGN1cnJlbnQtPmZsYWdzICYgUEZf
Tk9TQ0hFRDsNCi0JY3VycmVudC0+ZmxhZ3MgJj0gflBGX05PU0NIRUQ7DQot
DQotCS8qDQotCSAqIEJLTCB1c2VycyBleHBlY3QgdGhlIEJLTCB0byBiZSBo
ZWxkIGFjcm9zcyBzcGlubG9jay9yd2xvY2stYWNxdWlyZS4NCi0JICogU2F2
ZSBhbmQgY2xlYXIgaXQsIHRoaXMgd2lsbCBjYXVzZSB0aGUgc2NoZWR1bGVy
IHRvIG5vdCBkcm9wIHRoZQ0KLQkgKiBCS0wgc2VtYXBob3JlIGlmIHdlIGVu
ZCB1cCBzY2hlZHVsaW5nOg0KLQkgKi8NCi0Jc2F2ZWRfbG9ja19kZXB0aCA9
IHRhc2stPmxvY2tfZGVwdGg7DQotCXRhc2stPmxvY2tfZGVwdGggPSAtMTsN
CisJaW5pdF9saXN0cyhsb2NrKTsNCiANCi13YWl0X2FnYWluOg0KIAkvKiB3
YWl0IHRvIGJlIGdpdmVuIHRoZSBsb2NrICovDQogCWZvciAoOzspIHsNCi0J
CXVuc2lnbmVkIGxvbmcgc2F2ZWRfZmxhZ3MgPSBjdXJyZW50LT5mbGFncyAm
IFBGX05PU0NIRUQ7DQotDQotCQlpZiAoIXdhaXRlci50aSkNCi0JCQlicmVh
azsNCi0JCXRyYWNlX2xvY2FsX2lycV9lbmFibGUodGkpOw0KLQkJLy8gbm8g
bmVlZCB0byBjaGVjayBmb3IgcHJlZW1wdGlvbiBoZXJlLCB3ZSBzY2hlZHVs
ZSgpLg0KLQkJY3VycmVudC0+ZmxhZ3MgJj0gflBGX05PU0NIRUQ7DQorCQlv
bGRfb3duZXIgPSBsb2NrX293bmVyKGxvY2spOw0KKyAgICAgICAgDQorCQlp
ZiAoYWxsb3dlZF90b190YWtlX2xvY2sodGksdGFzayxvbGRfb3duZXIsbG9j
aykpIHsNCisJCS8qIGdyYW50ZWQgKi8NCisJCQlUUkFDRV9XQVJOX09OX0xP
Q0tFRCghcGxpc3RfaGVhZF9lbXB0eSgmbG9jay0+d2FpdF9saXN0KSAmJiAh
b2xkX293bmVyKTsNCisJCQlzZXRfbmV3X293bmVyKGxvY2ssIG9sZF9vd25l
ciwgdGkgX19FSVBfXyk7DQorCQkJcmVtb3ZlX3BlbmRpbmdfb3duZXIodGFz
ayk7DQorCQkJX3Jhd19zcGluX3VubG9jaygmbG9jay0+d2FpdF9sb2NrKTsN
CisgICAgICAgICAgICAgICAgICAgICAgICANCisJCQkvKg0KKwkJCSAqIE9u
bHkgc2V0IHRoZSB0YXNrJ3Mgc3RhdGUgdG8gVEFTS19SVU5OSU5HIGlmIGl0
IGdvdA0KKwkJCSAqIGEgbm9uLW11dGV4IHdha2V1cC4gV2Uga2VlcCB0aGUg
b3JpZ2luYWwgc3RhdGUgb3RoZXJ3aXNlLg0KKwkJCSAqIEEgbXV0ZXggd2Fr
ZXVwIGNoYW5nZXMgdGhlIHRhc2sncyBzdGF0ZSB0byBUQVNLX1JVTk5JTkdf
TVVURVgsDQorCQkJICogbm90IFRBU0tfUlVOTklORyAtIGhlbmNlIHdlIGNh
biBkaWZmZXJlbmNpYXRlIGJldHdlZTV+biB0aGUgdHdvDQorCQkJICogY2Fz
ZXM6DQorCQkJICovDQorCQkJc3RhdGUgPSB4Y2hnKCZ0YXNrLT5zdGF0ZSwg
c2F2ZWRfc3RhdGUpOw0KKwkJCWlmIChzdGF0ZSA9PSBUQVNLX1JVTk5JTkcp
DQorCQkJCWdvdF93YWtldXAgPSAxOw0KKwkJCWlmIChnb3Rfd2FrZXVwKQ0K
KwkJCQl0YXNrLT5zdGF0ZSA9IFRBU0tfUlVOTklORzsNCisJCQl0cmFjZV91
bmxvY2tfaXJxcmVzdG9yZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsNCisJ
CQlwcmVlbXB0X2NoZWNrX3Jlc2NoZWQoKTsNCiANCi0JCXNjaGVkdWxlKCk7
DQorCQkJRlJFRV9XQUlURVIoJndhaXRlcik7DQorCQkJcmV0dXJuOw0KKwkJ
fQ0KKwkJDQorCQl0YXNrX2Jsb2Nrc19vbl9sb2NrKCZ3YWl0ZXIsIHRpLCBs
b2NrLA0KKwkJCQkgICAgVEFTS19VTklOVEVSUlVQVElCTEUgX19FSVBfXyk7
DQogDQotCQljdXJyZW50LT5mbGFncyB8PSBzYXZlZF9mbGFnczsNCi0JCXRy
YWNlX2xvY2FsX2lycV9kaXNhYmxlKHRpKTsNCi0JCXN0YXRlID0geGNoZygm
dGFzay0+c3RhdGUsIFRBU0tfVU5JTlRFUlJVUFRJQkxFKTsNCi0JCWlmIChz
dGF0ZSA9PSBUQVNLX1JVTk5JTkcpDQotCQkJZ290X3dha2V1cCA9IDE7DQot
CX0NCi0JLyoNCi0JICogQ2hlY2sgdG8gc2VlIGlmIHdlIGRpZG4ndCBoYXZl
IG93bmVyc2hpcCBzdG9sZW4uDQotCSAqLw0KLQlpZiAoY2FwdHVyZV9sb2Nr
KCZ3YWl0ZXIsIHRpLCB0YXNrKSkgew0KLQkJc3RhdGUgPSB4Y2hnKCZ0YXNr
LT5zdGF0ZSwgVEFTS19VTklOVEVSUlVQVElCTEUpOw0KLQkJaWYgKHN0YXRl
ID09IFRBU0tfUlVOTklORykNCi0JCQlnb3Rfd2FrZXVwID0gMTsNCi0JCWdv
dG8gd2FpdF9hZ2FpbjsNCi0JfQ0KLQkvKg0KLQkgKiBPbmx5IHNldCB0aGUg
dGFzaydzIHN0YXRlIHRvIFRBU0tfUlVOTklORyBpZiBpdCBnb3QNCi0JICog
YSBub24tbXV0ZXggd2FrZXVwLiBXZSBrZWVwIHRoZSBvcmlnaW5hbCBzdGF0
ZSBvdGhlcndpc2UuDQotCSAqIEEgbXV0ZXggd2FrZXVwIGNoYW5nZXMgdGhl
IHRhc2sncyBzdGF0ZSB0byBUQVNLX1JVTk5JTkdfTVVURVgsDQotCSAqIG5v
dCBUQVNLX1JVTk5JTkcgLSBoZW5jZSB3ZSBjYW4gZGlmZmVyZW5jaWF0ZSBi
ZXR3ZWVuIHRoZSB0d28NCi0JICogY2FzZXM6DQotCSAqLw0KLQlzdGF0ZSA9
IHhjaGcoJnRhc2stPnN0YXRlLCBzYXZlZF9zdGF0ZSk7DQotCWlmIChzdGF0
ZSA9PSBUQVNLX1JVTk5JTkcpDQotCQlnb3Rfd2FrZXVwID0gMTsNCi0JaWYg
KGdvdF93YWtldXApDQotCQl0YXNrLT5zdGF0ZSA9IFRBU0tfUlVOTklORzsN
Ci0JdHJhY2VfbG9jYWxfaXJxX2VuYWJsZSh0aSk7DQotCXByZWVtcHRfY2hl
Y2tfcmVzY2hlZCgpOw0KKwkJVFJBQ0VfQlVHX09OX0xPQ0tFRCghcmF3X2ly
cXNfZGlzYWJsZWQoKSk7DQorCQkvKiB3ZSBkb24ndCBuZWVkIHRvIHRvdWNo
IHRoZSBsb2NrIHN0cnVjdCBhbnltb3JlICovDQorCQlfcmF3X3NwaW5fdW5s
b2NrKCZsb2NrLT53YWl0X2xvY2spOw0KKwkJdHJhY2VfdW5sb2NrKCZ0cmFj
ZV9sb2NrLCB0aSk7DQorICAgICAgICAgICAgICAgIA0KKwkJaWYgKHdhaXRl
ci50aSkgew0KKwkJCXVuc2lnbmVkIGxvbmcgc2F2ZWRfZmxhZ3MgPSANCisJ
CQkJY3VycmVudC0+ZmxhZ3MgJiBQRl9OT1NDSEVEOw0KKwkJCS8qDQorCQkJ
ICogQktMIHVzZXJzIGV4cGVjdCB0aGUgQktMIHRvIGJlIGhlbGQgYWNyb3Nz
IHNwaW5sb2NrL3J3bG9jay1hY3F1aXJlLg0KKwkJCSAqIFNhdmUgYW5kIGNs
ZWFyIGl0LCB0aGlzIHdpbGwgY2F1c2UgdGhlIHNjaGVkdWxlciB0byBub3Qg
ZHJvcCB0aGUNCisJCQkgKiBCS0wgc2VtYXBob3JlIGlmIHdlIGVuZCB1cCBz
Y2hlZHVsaW5nOg0KKwkJCSAqLw0KIA0KLQl0YXNrLT5sb2NrX2RlcHRoID0g
c2F2ZWRfbG9ja19kZXB0aDsNCi0JY3VycmVudC0+ZmxhZ3MgfD0gbm9zY2hl
ZF9mbGFnOw0KLQlGUkVFX1dBSVRFUigmd2FpdGVyKTsNCisJCQlpbnQgc2F2
ZWRfbG9ja19kZXB0aCA9IHRhc2stPmxvY2tfZGVwdGg7DQorCQkJdGFzay0+
bG9ja19kZXB0aCA9IC0xOw0KKwkJCQ0KKw0KKwkJCXRyYWNlX2xvY2FsX2ly
cV9lbmFibGUodGkpOw0KKwkJCS8vIG5vIG5lZWQgdG8gY2hlY2sgZm9yIHBy
ZWVtcHRpb24gaGVyZSwgd2Ugc2NoZWR1bGUoKS4NCisgICAgICAgICAgICAg
ICAgICAgICAgICANCisJCQljdXJyZW50LT5mbGFncyAmPSB+UEZfTk9TQ0hF
RDsNCisJCQkNCisJCQlzY2hlZHVsZSgpOw0KKwkJCQ0KKwkJCXRyYWNlX2xv
Y2FsX2lycV9kaXNhYmxlKHRpKTsNCisJCQl0YXNrLT5mbGFncyB8PSBzYXZl
ZF9mbGFnczsNCisJCQl0YXNrLT5sb2NrX2RlcHRoID0gc2F2ZWRfbG9ja19k
ZXB0aDsNCisJCQlzdGF0ZSA9IHhjaGcoJnRhc2stPnN0YXRlLCBUQVNLX1JV
Tk5JTkdfTVVURVgpOw0KKwkJCWlmIChzdGF0ZSA9PSBUQVNLX1JVTk5JTkcp
DQorCQkJCWdvdF93YWtldXAgPSAxOw0KKwkJfQ0KKwkJDQorCQl0cmFjZV9s
b2NrX2lycSgmdHJhY2VfbG9jaywgdGkpOw0KKwkJX3Jhd19zcGluX2xvY2so
JmxvY2stPndhaXRfbG9jayk7DQorCQlpZih3YWl0ZXIudGkpIHsNCisJCQly
ZW1vdmVfd2FpdGVyKGxvY2ssJndhaXRlciwxKTsNCisJCX0NCisJCV9yYXdf
c3Bpbl9sb2NrKCZ0YXNrLT5waV9sb2NrKTsNCisJCXRhc2stPmJsb2NrZWRf
b24gPSBOVUxMOw0KKwkJX3Jhd19zcGluX3VubG9jaygmdGFzay0+cGlfbG9j
ayk7DQorCX0NCiB9DQogDQotc3RhdGljIHZvaWQgX191cF9tdXRleF93YWl0
ZXJfc2F2ZXN0YXRlKHN0cnVjdCBydF9tdXRleCAqbG9jayBfX0VJUF9ERUNM
X18pOw0KLXN0YXRpYyB2b2lkIF9fdXBfbXV0ZXhfd2FpdGVyX25vc2F2ZXN0
YXRlKHN0cnVjdCBydF9tdXRleCAqbG9jayBfX0VJUF9ERUNMX18pOw0KLQ0K
K3N0YXRpYyB2b2lkIF9fdXBfbXV0ZXhfd2FpdGVyKHN0cnVjdCBydF9tdXRl
eCAqbG9jaywgDQorCQkJICAgICAgaW50IHNhdmVzdGF0ZSBfX0VJUF9ERUNM
X18pOw0KIC8qDQogICogcmVsZWFzZSB0aGUgbG9jazoNCiAgKi8NCi1zdGF0
aWMgaW5saW5lIHZvaWQNCitzdGF0aWMgdm9pZA0KIF9fX191cF9tdXRleChz
dHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIGludCBzYXZlX3N0YXRlIF9fRUlQX0RF
Q0xfXykNCiB7DQogCXN0cnVjdCB0aHJlYWRfaW5mbyAqdGkgPSBjdXJyZW50
X3RocmVhZF9pbmZvKCk7DQpAQCAtMTU4NSwzMCArMTQyOSwzMSBAQCBfX19f
dXBfbXV0ZXgoc3RydWN0IHJ0X211dGV4ICpsb2NrLCBpbnQgDQogCXRyYWNl
X2xvY2tfaXJxc2F2ZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsNCiAJVFJB
Q0VfQlVHX09OX0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQogCV9y
YXdfc3Bpbl9sb2NrKCZsb2NrLT53YWl0X2xvY2spOw0KKwlkZWJ1Z19sb2Nr
KGxvY2ssInVwcGluZyIpOw0KIAlUUkFDRV9CVUdfT05fTE9DS0VEKCFsb2Nr
LT53YWl0X2xpc3QucHJpb19saXN0LnByZXYgJiYgIWxvY2stPndhaXRfbGlz
dC5wcmlvX2xpc3QubmV4dCk7DQogDQotI2lmZGVmIENPTkZJR19ERUJVR19E
RUFETE9DS1MNCi0JaWYgKHRyYWNlX29uKSB7DQotCQlUUkFDRV9XQVJOX09O
X0xPQ0tFRChsb2NrX293bmVyKGxvY2spICE9IHRpKTsNCi0JCVRSQUNFX1dB
Uk5fT05fTE9DS0VEKGxpc3RfZW1wdHkoJmxvY2stPmhlbGRfbGlzdCkpOw0K
LQkJbGlzdF9kZWxfaW5pdCgmbG9jay0+aGVsZF9saXN0KTsNCi0JfQ0KLSNl
bmRpZg0KIA0KICNpZiBBTExfVEFTS1NfUEkNCiAJaWYgKHBsaXN0X2hlYWRf
ZW1wdHkoJmxvY2stPndhaXRfbGlzdCkpDQogCQljaGVja19waV9saXN0X2Vt
cHR5KGxvY2ssIGxvY2tfb3duZXIobG9jaykpOw0KICNlbmRpZg0KIAlpZiAo
dW5saWtlbHkoIXBsaXN0X2hlYWRfZW1wdHkoJmxvY2stPndhaXRfbGlzdCkp
KSB7DQotCQlpZiAoc2F2ZV9zdGF0ZSkNCi0JCQlfX3VwX211dGV4X3dhaXRl
cl9zYXZlc3RhdGUobG9jayBfX0VJUF9fKTsNCi0JCWVsc2UNCi0JCQlfX3Vw
X211dGV4X3dhaXRlcl9ub3NhdmVzdGF0ZShsb2NrIF9fRUlQX18pOw0KLQl9
IGVsc2UNCisJCV9fdXBfbXV0ZXhfd2FpdGVyKGxvY2ssc2F2ZV9zdGF0ZSBf
X0VJUF9fKTsNCisJCWRlYnVnX2xvY2sobG9jaywid29rZSB1cCB3YWl0ZXIi
KTsNCisJfSBlbHNlIHsNCisjaWZkZWYgQ09ORklHX0RFQlVHX0RFQURMT0NL
Uw0KKwkJaWYgKHRyYWNlX29uKSB7DQorCQkJVFJBQ0VfV0FSTl9PTl9MT0NL
RUQobG9ja19vd25lcihsb2NrKSAhPSB0aSk7DQorCQkJVFJBQ0VfV0FSTl9P
Tl9MT0NLRUQobGlzdF9lbXB0eSgmbG9jay0+aGVsZF9saXN0KSk7DQorCQkJ
bGlzdF9kZWxfaW5pdCgmbG9jay0+aGVsZF9saXN0KTsNCisJCX0NCisjZW5k
aWYNCiAJCWxvY2stPm93bmVyID0gTlVMTDsNCisJCWRlYnVnX2xvY2sobG9j
aywidGhlcmUgd2FzIG5vIHdhaXRlcnMiKTsNCisJCWFjY291bnRfbXV0ZXhf
b3duZXJfdXAodGktPnRhc2spOw0KKwl9DQogCV9yYXdfc3Bpbl91bmxvY2so
JmxvY2stPndhaXRfbG9jayk7DQogI2lmIGRlZmluZWQoQ09ORklHX0RFQlVH
X1BSRUVNUFQpICYmIGRlZmluZWQoQ09ORklHX1BSRUVNUFRfUlQpDQotCWFj
Y291bnRfbXV0ZXhfb3duZXJfdXAoY3VycmVudCk7DQogCWlmICghY3VycmVu
dC0+bG9ja19jb3VudCAmJiAhcnRfcHJpbyhjdXJyZW50LT5ub3JtYWxfcHJp
bykgJiYNCiAJCQkJCXJ0X3ByaW8oY3VycmVudC0+cHJpbykpIHsNCiAJCXN0
YXRpYyBpbnQgb25jZSA9IDE7DQpAQCAtMTg0MSwxMjUgKzE2ODYsMTAzIEBA
IHN0YXRpYyBpbnQgX19zY2hlZCBfX2Rvd25faW50ZXJydXB0aWJsZSgNCiAJ
c3RydWN0IHJ0X211dGV4X3dhaXRlciB3YWl0ZXI7DQogCXN0cnVjdCB0aW1l
cl9saXN0IHRpbWVyOw0KIAl1bnNpZ25lZCBsb25nIGV4cGlyZSA9IDA7DQor
CWludCB0aW1lcl9pbnN0YWxsZWQgPSAwOw0KIAlpbnQgcmV0Ow0KIA0KIAl0
cmFjZV9sb2NrX2lycXNhdmUoJnRyYWNlX2xvY2ssIGZsYWdzLCB0aSk7DQog
CVRSQUNFX0JVR19PTl9MT0NLRUQoIXJhd19pcnFzX2Rpc2FibGVkKCkpOw0K
LQlfcmF3X3NwaW5fbG9jaygmdGFzay0+cGlfbG9jayk7DQogCV9yYXdfc3Bp
bl9sb2NrKCZsb2NrLT53YWl0X2xvY2spOw0KIAlJTklUX1dBSVRFUigmd2Fp
dGVyKTsNCiANCi0Jb2xkX293bmVyID0gbG9ja19vd25lcihsb2NrKTsNCiAJ
aW5pdF9saXN0cyhsb2NrKTsNCiANCi0JaWYgKGxpa2VseSghb2xkX293bmVy
KSB8fCBfX2dyYWJfbG9jayhsb2NrLCB0YXNrLCBvbGRfb3duZXItPnRhc2sp
KSB7DQorCXJldCA9IDA7DQorCS8qIHdhaXQgdG8gYmUgZ2l2ZW4gdGhlIGxv
Y2sgKi8NCisJZm9yICg7Oykgew0KKwkJb2xkX293bmVyID0gbG9ja19vd25l
cihsb2NrKTsNCisgICAgICAgICAgICAgICAgDQorCQlpZiAoYWxsb3dlZF90
b190YWtlX2xvY2sodGksdGFzayxvbGRfb3duZXIsbG9jaykpIHsNCiAJCS8q
IGdyYW50ZWQgKi8NCi0JCVRSQUNFX1dBUk5fT05fTE9DS0VEKCFwbGlzdF9o
ZWFkX2VtcHR5KCZsb2NrLT53YWl0X2xpc3QpICYmICFvbGRfb3duZXIpOw0K
LQkJaWYgKG9sZF9vd25lcikgew0KLQkJCV9yYXdfc3Bpbl9sb2NrKCZvbGRf
b3duZXItPnRhc2stPnBpX2xvY2spOw0KLQkJCXNldF9uZXdfb3duZXIobG9j
aywgb2xkX293bmVyLCB0aSBfX0VJUF9fKTsNCi0JCQlfcmF3X3NwaW5fdW5s
b2NrKCZvbGRfb3duZXItPnRhc2stPnBpX2xvY2spOw0KLQkJfSBlbHNlDQor
CQkJVFJBQ0VfV0FSTl9PTl9MT0NLRUQoIXBsaXN0X2hlYWRfZW1wdHkoJmxv
Y2stPndhaXRfbGlzdCkgJiYgIW9sZF9vd25lcik7DQogCQkJc2V0X25ld19v
d25lcihsb2NrLCBvbGRfb3duZXIsIHRpIF9fRUlQX18pOw0KLQkJX3Jhd19z
cGluX3VubG9jaygmbG9jay0+d2FpdF9sb2NrKTsNCi0JCV9yYXdfc3Bpbl91
bmxvY2soJnRhc2stPnBpX2xvY2spOw0KLQkJdHJhY2VfdW5sb2NrX2lycXJl
c3RvcmUoJnRyYWNlX2xvY2ssIGZsYWdzLCB0aSk7DQotDQotCQlGUkVFX1dB
SVRFUigmd2FpdGVyKTsNCi0JCXJldHVybiAwOw0KLQl9DQorCQkJX3Jhd19z
cGluX3VubG9jaygmbG9jay0+d2FpdF9sb2NrKTsNCisJCQl0cmFjZV91bmxv
Y2tfaXJxcmVzdG9yZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsNCiANCi0J
c2V0X3Rhc2tfc3RhdGUodGFzaywgVEFTS19JTlRFUlJVUFRJQkxFKTsNCisJ
CQlnb3RvIG91dF9mcmVlX3RpbWVyOw0KKwkJfQ0KIA0KLQlwbGlzdF9ub2Rl
X2luaXQoJndhaXRlci5saXN0LCB0YXNrLT5wcmlvKTsNCi0JdGFza19ibG9j
a3Nfb25fbG9jaygmd2FpdGVyLCB0aSwgbG9jayBfX0VJUF9fKTsNCisJCXRh
c2tfYmxvY2tzX29uX2xvY2soJndhaXRlciwgdGksIGxvY2ssIFRBU0tfSU5U
RVJSVVBUSUJMRSBfX0VJUF9fKTsNCiANCi0JVFJBQ0VfQlVHX09OX0xPQ0tF
RCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQotCS8qIHdlIGRvbid0IG5lZWQg
dG8gdG91Y2ggdGhlIGxvY2sgc3RydWN0IGFueW1vcmUgKi8NCi0JX3Jhd19z
cGluX3VubG9jaygmbG9jay0+d2FpdF9sb2NrKTsNCi0JX3Jhd19zcGluX3Vu
bG9jaygmdGFzay0+cGlfbG9jayk7DQotCXRyYWNlX3VubG9ja19pcnFyZXN0
b3JlKCZ0cmFjZV9sb2NrLCBmbGFncywgdGkpOw0KKwkJVFJBQ0VfQlVHX09O
X0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQorCQkvKiB3ZSBkb24n
dCBuZWVkIHRvIHRvdWNoIHRoZSBsb2NrIHN0cnVjdCBhbnltb3JlICovDQor
CQlfcmF3X3NwaW5fdW5sb2NrKCZsb2NrLT53YWl0X2xvY2spOw0KKwkJdHJh
Y2VfdW5sb2NrX2lycXJlc3RvcmUoJnRyYWNlX2xvY2ssIGZsYWdzLCB0aSk7
DQorCQkNCisJCW1pZ2h0X3NsZWVwKCk7DQorCQkNCisJCW5vc2NoZWRfZmxh
ZyA9IGN1cnJlbnQtPmZsYWdzICYgUEZfTk9TQ0hFRDsNCisJCWN1cnJlbnQt
PmZsYWdzICY9IH5QRl9OT1NDSEVEOw0KKwkJaWYgKHRpbWUgJiYgIXRpbWVy
X2luc3RhbGxlZCkgew0KKwkJCWV4cGlyZSA9IHRpbWUgKyBqaWZmaWVzOw0K
KwkJCWluaXRfdGltZXIoJnRpbWVyKTsNCisJCQl0aW1lci5leHBpcmVzID0g
ZXhwaXJlOw0KKwkJCXRpbWVyLmRhdGEgPSAodW5zaWduZWQgbG9uZyljdXJy
ZW50Ow0KKwkJCXRpbWVyLmZ1bmN0aW9uID0gcHJvY2Vzc190aW1lb3V0Ow0K
KwkJCWFkZF90aW1lcigmdGltZXIpOw0KKwkJCXRpbWVyX2luc3RhbGxlZCA9
IDE7DQorCQl9DQogDQotCW1pZ2h0X3NsZWVwKCk7DQorICAgICAgICAgICAg
ICAgICAgICAgICAgDQorCQlpZiAod2FpdGVyLnRpKSB7DQorCQkJc2NoZWR1
bGUoKTsNCisJCX0NCisJCQ0KKwkJY3VycmVudC0+ZmxhZ3MgfD0gbm9zY2hl
ZF9mbGFnOw0KKwkJdGFzay0+c3RhdGUgPSBUQVNLX1JVTk5JTkc7DQogDQot
CW5vc2NoZWRfZmxhZyA9IGN1cnJlbnQtPmZsYWdzICYgUEZfTk9TQ0hFRDsN
Ci0JY3VycmVudC0+ZmxhZ3MgJj0gflBGX05PU0NIRUQ7DQotCWlmICh0aW1l
KSB7DQotCQlleHBpcmUgPSB0aW1lICsgamlmZmllczsNCi0JCWluaXRfdGlt
ZXIoJnRpbWVyKTsNCi0JCXRpbWVyLmV4cGlyZXMgPSBleHBpcmU7DQotCQl0
aW1lci5kYXRhID0gKHVuc2lnbmVkIGxvbmcpY3VycmVudDsNCi0JCXRpbWVy
LmZ1bmN0aW9uID0gcHJvY2Vzc190aW1lb3V0Ow0KLQkJYWRkX3RpbWVyKCZ0
aW1lcik7DQotCX0NCisJCXRyYWNlX2xvY2tfaXJxc2F2ZSgmdHJhY2VfbG9j
aywgZmxhZ3MsIHRpKTsNCisJCV9yYXdfc3Bpbl9sb2NrKCZsb2NrLT53YWl0
X2xvY2spOw0KKwkJaWYod2FpdGVyLnRpKSB7DQorCQkJcmVtb3ZlX3dhaXRl
cihsb2NrLCZ3YWl0ZXIsMSk7DQorCQl9DQorCQlfcmF3X3NwaW5fbG9jaygm
dGFzay0+cGlfbG9jayk7DQorCQl0YXNrLT5ibG9ja2VkX29uID0gTlVMTDsN
CisJCV9yYXdfc3Bpbl91bmxvY2soJnRhc2stPnBpX2xvY2spOw0KIA0KLQly
ZXQgPSAwOw0KLXdhaXRfYWdhaW46DQotCS8qIHdhaXQgdG8gYmUgZ2l2ZW4g
dGhlIGxvY2sgKi8NCi0JZm9yICg7Oykgew0KLQkJaWYgKHNpZ25hbF9wZW5k
aW5nKGN1cnJlbnQpIHx8ICh0aW1lICYmICF0aW1lcl9wZW5kaW5nKCZ0aW1l
cikpKSB7DQotCQkJLyoNCi0JCQkgKiBSZW1vdmUgb3Vyc2VsdmVzIGZyb20g
dGhlIHdhaXQgbGlzdCBpZiB3ZQ0KLQkJCSAqIGRpZG50IGdldCB0aGUgbG9j
ayAtIGVsc2UgcmV0dXJuIHN1Y2Nlc3M6DQotCQkJICovDQotCQkJdHJhY2Vf
bG9ja19pcnEoJnRyYWNlX2xvY2ssIHRpKTsNCi0JCQlfcmF3X3NwaW5fbG9j
aygmdGFzay0+cGlfbG9jayk7DQotCQkJX3Jhd19zcGluX2xvY2soJmxvY2st
PndhaXRfbG9jayk7DQotCQkJaWYgKHdhaXRlci50aSB8fCB0aW1lKSB7DQot
CQkJCXBsaXN0X2RlbCgmd2FpdGVyLmxpc3QpOw0KLQkJCQkvKg0KLQkJCQkg
KiBJZiB3ZSB3ZXJlIHRoZSBsYXN0IHdhaXRlciB0aGVuIGNsZWFyDQotCQkJ
CSAqIHRoZSBwZW5kaW5nIGJpdDoNCi0JCQkJICovDQotCQkJCWlmIChwbGlz
dF9oZWFkX2VtcHR5KCZsb2NrLT53YWl0X2xpc3QpKQ0KLQkJCQkJbG9jay0+
b3duZXIgPSBsb2NrX293bmVyKGxvY2spOw0KLQkJCQkvKg0KLQkJCQkgKiBK
dXN0IHJlbW92ZSBvdXJzZWx2ZXMgZnJvbSB0aGUgUEkgbGlzdC4NCi0JCQkJ
ICogKE5vIGJpZyBwcm9ibGVtIGlmIG91ciBQSSBlZmZlY3QgbGluZ2Vycw0K
LQkJCQkgKiAgYSBiaXQgLSBvd25lciB3aWxsIHJlc3RvcmUgcHJpby4pDQot
CQkJCSAqLw0KLQkJCQlUUkFDRV9XQVJOX09OX0xPQ0tFRCh3YWl0ZXIudGkg
IT0gdGkpOw0KLQkJCQlUUkFDRV9XQVJOX09OX0xPQ0tFRChjdXJyZW50LT5i
bG9ja2VkX29uICE9ICZ3YWl0ZXIpOw0KLQkJCQlwbGlzdF9kZWwoJndhaXRl
ci5waV9saXN0KTsNCi0JCQkJd2FpdGVyLnBpX2xpc3QucHJpbyA9IHRhc2st
PnByaW87DQotCQkJCXdhaXRlci50aSA9IE5VTEw7DQotCQkJCWN1cnJlbnQt
PmJsb2NrZWRfb24gPSBOVUxMOw0KLQkJCQlpZiAodGltZSkgew0KLQkJCQkJ
cmV0ID0gKGludCkoZXhwaXJlIC0gamlmZmllcyk7DQotCQkJCQlpZiAoIXRp
bWVyX3BlbmRpbmcoJnRpbWVyKSkgew0KLQkJCQkJCWRlbF9zaW5nbGVzaG90
X3RpbWVyX3N5bmMoJnRpbWVyKTsNCi0JCQkJCQlyZXQgPSAtRVRJTUVET1VU
Ow0KLQkJCQkJfQ0KLQkJCQl9IGVsc2UNCi0JCQkJCXJldCA9IC1FSU5UUjsN
CisJCWlmKHNpZ25hbF9wZW5kaW5nKGN1cnJlbnQpKSB7DQorCQkJaWYgKHRp
bWUpIHsNCisJCQkJcmV0ID0gKGludCkoZXhwaXJlIC0gamlmZmllcyk7DQor
CQkJCWlmICghdGltZXJfcGVuZGluZygmdGltZXIpKSB7DQorCQkJCQlyZXQg
PSAtRVRJTUVET1VUOw0KKwkJCQl9DQogCQkJfQ0KLQkJCV9yYXdfc3Bpbl91
bmxvY2soJmxvY2stPndhaXRfbG9jayk7DQotCQkJX3Jhd19zcGluX3VubG9j
aygmdGFzay0+cGlfbG9jayk7DQotCQkJdHJhY2VfdW5sb2NrX2lycSgmdHJh
Y2VfbG9jaywgdGkpOw0KLQkJCWJyZWFrOw0KKwkJCWVsc2UNCisJCQkJcmV0
ID0gLUVJTlRSOw0KKwkJCQ0KKwkJCWdvdG8gb3V0X3VubG9jazsNCiAJCX0N
Ci0JCWlmICghd2FpdGVyLnRpKQ0KLQkJCWJyZWFrOw0KLQkJc2NoZWR1bGUo
KTsNCi0JCXNldF90YXNrX3N0YXRlKHRhc2ssIFRBU0tfSU5URVJSVVBUSUJM
RSk7DQotCX0NCi0NCi0JLyoNCi0JICogQ2hlY2sgdG8gc2VlIGlmIHdlIGRp
ZG4ndCBoYXZlIG93bmVyc2hpcCBzdG9sZW4uDQotCSAqLw0KLQlpZiAoIXJl
dCkgew0KLQkJaWYgKGNhcHR1cmVfbG9jaygmd2FpdGVyLCB0aSwgdGFzaykp
IHsNCi0JCQlzZXRfdGFza19zdGF0ZSh0YXNrLCBUQVNLX0lOVEVSUlVQVElC
TEUpOw0KLQkJCWdvdG8gd2FpdF9hZ2FpbjsNCisJCWVsc2UgaWYodGltZXJf
aW5zdGFsbGVkICYmDQorCQkJIXRpbWVyX3BlbmRpbmcoJnRpbWVyKSkgew0K
KwkJCXJldCA9IC1FVElNRURPVVQ7DQorCQkJZ290byBvdXRfdW5sb2NrOw0K
IAkJfQ0KIAl9DQogDQotCXRhc2stPnN0YXRlID0gVEFTS19SVU5OSU5HOw0K
LQljdXJyZW50LT5mbGFncyB8PSBub3NjaGVkX2ZsYWc7DQogDQorIG91dF91
bmxvY2s6DQorCV9yYXdfc3Bpbl91bmxvY2soJmxvY2stPndhaXRfbG9jayk7
DQorCXRyYWNlX3VubG9ja19pcnFyZXN0b3JlKCZ0cmFjZV9sb2NrLCBmbGFn
cywgdGkpOw0KKw0KKyBvdXRfZnJlZV90aW1lcjoNCisJaWYgKHRpbWUgJiYg
dGltZXJfaW5zdGFsbGVkKSB7DQorCQlpZiAoIXRpbWVyX3BlbmRpbmcoJnRp
bWVyKSkgew0KKwkJCWRlbF9zaW5nbGVzaG90X3RpbWVyX3N5bmMoJnRpbWVy
KTsNCisJCX0NCisJfQ0KIAlGUkVFX1dBSVRFUigmd2FpdGVyKTsNCiAJcmV0
dXJuIHJldDsNCiB9DQorDQogLyoNCiAgKiB0cnlsb2NrIGZvciB3cml0aW5n
IC0tIHJldHVybnMgMSBpZiBzdWNjZXNzZnVsLCAwIGlmIGNvbnRlbnRpb24N
CiAgKi8NCkBAIC0xOTcyLDcgKzE3OTUsNiBAQCBzdGF0aWMgaW50IF9fZG93
bl90cnlsb2NrKHN0cnVjdCBydF9tdXRlDQogDQogCXRyYWNlX2xvY2tfaXJx
c2F2ZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsNCiAJVFJBQ0VfQlVHX09O
X0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQotCV9yYXdfc3Bpbl9s
b2NrKCZ0YXNrLT5waV9sb2NrKTsNCiAJLyoNCiAJICogSXQgaXMgT0sgZm9y
IHRoZSBvd25lciBvZiB0aGUgbG9jayB0byBkbyBhIHRyeWxvY2sgb24NCiAJ
ICogYSBsb2NrIGl0IG93bnMsIHNvIHRvIHByZXZlbnQgZGVhZGxvY2tpbmcs
IHdlIG11c3QNCkBAIC0xOTg5LDE3ICsxODExLDExIEBAIHN0YXRpYyBpbnQg
X19kb3duX3RyeWxvY2soc3RydWN0IHJ0X211dGUNCiAJaWYgKGxpa2VseSgh
b2xkX293bmVyKSB8fCBfX2dyYWJfbG9jayhsb2NrLCB0YXNrLCBvbGRfb3du
ZXItPnRhc2spKSB7DQogCQkvKiBncmFudGVkICovDQogCQlUUkFDRV9XQVJO
X09OX0xPQ0tFRCghcGxpc3RfaGVhZF9lbXB0eSgmbG9jay0+d2FpdF9saXN0
KSAmJiAhb2xkX293bmVyKTsNCi0JCWlmIChvbGRfb3duZXIpIHsNCi0JCQlf
cmF3X3NwaW5fbG9jaygmb2xkX293bmVyLT50YXNrLT5waV9sb2NrKTsNCi0J
CQlzZXRfbmV3X293bmVyKGxvY2ssIG9sZF9vd25lciwgdGkgX19FSVBfXyk7
DQotCQkJX3Jhd19zcGluX3VubG9jaygmb2xkX293bmVyLT50YXNrLT5waV9s
b2NrKTsNCi0JCX0gZWxzZQ0KLQkJCXNldF9uZXdfb3duZXIobG9jaywgb2xk
X293bmVyLCB0aSBfX0VJUF9fKTsNCisJCXNldF9uZXdfb3duZXIobG9jaywg
b2xkX293bmVyLCB0aSBfX0VJUF9fKTsNCiAJCXJldCA9IDE7DQogCX0NCiAJ
X3Jhd19zcGluX3VubG9jaygmbG9jay0+d2FpdF9sb2NrKTsNCiBmYWlsZWQ6
DQotCV9yYXdfc3Bpbl91bmxvY2soJnRhc2stPnBpX2xvY2spOw0KIAl0cmFj
ZV91bmxvY2tfaXJxcmVzdG9yZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHRpKTsN
CiANCiAJcmV0dXJuIHJldDsNCkBAIC0yMDQ2LDE2ICsxODYyLDE2IEBAIHN0
YXRpYyBpbnQgZG93bl9yZWFkX3RyeWxvY2tfbXV0ZXgoc3RydWMNCiB9DQog
I2VuZGlmDQogDQotc3RhdGljIHZvaWQgX191cF9tdXRleF93YWl0ZXJfbm9z
YXZlc3RhdGUoc3RydWN0IHJ0X211dGV4ICpsb2NrIF9fRUlQX0RFQ0xfXykN
CitzdGF0aWMgdm9pZCBfX3VwX211dGV4X3dhaXRlcihzdHJ1Y3QgcnRfbXV0
ZXggKmxvY2ssDQorCQkJICAgICAgaW50IHNhdmVfc3RhdGUgX19FSVBfREVD
TF9fKQ0KIHsNCiAJc3RydWN0IHRocmVhZF9pbmZvICpvbGRfb3duZXJfdGks
ICpuZXdfb3duZXJfdGk7DQogCXN0cnVjdCB0YXNrX3N0cnVjdCAqb2xkX293
bmVyLCAqbmV3X293bmVyOw0KLQlzdHJ1Y3QgcnRfbXV0ZXhfd2FpdGVyICp3
Ow0KIAlpbnQgcHJpbzsNCiANCiAJb2xkX293bmVyX3RpID0gbG9ja19vd25l
cihsb2NrKTsNCiAJb2xkX293bmVyID0gb2xkX293bmVyX3RpLT50YXNrOw0K
LQluZXdfb3duZXJfdGkgPSBwaWNrX25ld19vd25lcihsb2NrLCBvbGRfb3du
ZXJfdGksIDAgX19FSVBfXyk7DQorCW5ld19vd25lcl90aSA9IHBpY2tfbmV3
X293bmVyKGxvY2ssIG9sZF9vd25lcl90aSwgc2F2ZV9zdGF0ZSBfX0VJUF9f
KTsNCiAJbmV3X293bmVyID0gbmV3X293bmVyX3RpLT50YXNrOw0KIA0KIAkv
Kg0KQEAgLTIwNjMsNjcgKzE4NzksMjEgQEAgc3RhdGljIHZvaWQgX191cF9t
dXRleF93YWl0ZXJfbm9zYXZlc3RhdA0KIAkgKiB0byB0aGUgcHJldmlvdXMg
cHJpb3JpdHkgKG9yIHRvIHRoZSBuZXh0IGhpZ2hlc3QgcHJpbw0KIAkgKiB3
YWl0ZXIncyBwcmlvcml0eSk6DQogCSAqLw0KLQlfcmF3X3NwaW5fbG9jaygm
b2xkX293bmVyLT5waV9sb2NrKTsNCi0JcHJpbyA9IG9sZF9vd25lci0+bm9y
bWFsX3ByaW87DQotCWlmICh1bmxpa2VseSghcGxpc3RfaGVhZF9lbXB0eSgm
b2xkX293bmVyLT5waV93YWl0ZXJzKSkpIHsNCi0JCXcgPSBwbGlzdF9maXJz
dF9lbnRyeSgmb2xkX293bmVyLT5waV93YWl0ZXJzLCBzdHJ1Y3QgcnRfbXV0
ZXhfd2FpdGVyLCBwaV9saXN0KTsNCi0JCWlmICh3LT50aS0+dGFzay0+cHJp
byA8IHByaW8pDQotCQkJcHJpbyA9IHctPnRpLT50YXNrLT5wcmlvOw0KLQl9
DQotCWlmICh1bmxpa2VseShwcmlvICE9IG9sZF9vd25lci0+cHJpbykpDQot
CQlwaV9zZXRwcmlvKGxvY2ssIG9sZF9vd25lciwgcHJpbyk7DQotCV9yYXdf
c3Bpbl91bmxvY2soJm9sZF9vd25lci0+cGlfbG9jayk7DQotI2lmZGVmIENB
UFRVUkVfTE9DSw0KLSNpZmRlZiBDT05GSUdfUFJFRU1QVF9SVA0KLQlpZiAo
bG9jayAhPSAma2VybmVsX3NlbS5sb2NrKSB7DQotI2VuZGlmDQotCQluZXdf
b3duZXItPnJ0X2ZsYWdzIHw9IFJUX1BFTkRPV05FUjsNCi0JCW5ld19vd25l
ci0+cGVuZGluZ19vd25lciA9IGxvY2s7DQotI2lmZGVmIENPTkZJR19QUkVF
TVBUX1JUDQotCX0NCi0jZW5kaWYNCi0jZW5kaWYNCi0Jd2FrZV91cF9wcm9j
ZXNzKG5ld19vd25lcik7DQotfQ0KLQ0KLXN0YXRpYyB2b2lkIF9fdXBfbXV0
ZXhfd2FpdGVyX3NhdmVzdGF0ZShzdHJ1Y3QgcnRfbXV0ZXggKmxvY2sgX19F
SVBfREVDTF9fKQ0KLXsNCi0Jc3RydWN0IHRocmVhZF9pbmZvICpvbGRfb3du
ZXJfdGksICpuZXdfb3duZXJfdGk7DQotCXN0cnVjdCB0YXNrX3N0cnVjdCAq
b2xkX293bmVyLCAqbmV3X293bmVyOw0KLQlzdHJ1Y3QgcnRfbXV0ZXhfd2Fp
dGVyICp3Ow0KLQlpbnQgcHJpbzsNCisJaWYoQUxMX1RBU0tTX1BJIHx8IHJ0
X3ByaW8ob2xkX293bmVyLT5wcmlvKSkgew0KKwkJX3Jhd19zcGluX2xvY2so
Jm9sZF9vd25lci0+cGlfbG9jayk7DQogDQotCW9sZF9vd25lcl90aSA9IGxv
Y2tfb3duZXIobG9jayk7DQotCW9sZF9vd25lciA9IG9sZF9vd25lcl90aS0+
dGFzazsNCi0JbmV3X293bmVyX3RpID0gcGlja19uZXdfb3duZXIobG9jaywg
b2xkX293bmVyX3RpLCAxIF9fRUlQX18pOw0KLQluZXdfb3duZXIgPSBuZXdf
b3duZXJfdGktPnRhc2s7DQorCQlwcmlvID0gY2FsY19waV9wcmlvKG9sZF9v
d25lcik7DQorCQlpZiAodW5saWtlbHkocHJpbyAhPSBvbGRfb3duZXItPnBy
aW8pKQ0KKwkJCW11dGV4X3NldHByaW8ob2xkX293bmVyLCBwcmlvKTsNCiAN
Ci0JLyoNCi0JICogSWYgdGhlIG93bmVyIGdvdCBwcmlvcml0eS1ib29zdGVk
IHRoZW4gcmVzdG9yZSBpdA0KLQkgKiB0byB0aGUgcHJldmlvdXMgcHJpb3Jp
dHkgKG9yIHRvIHRoZSBuZXh0IGhpZ2hlc3QgcHJpbw0KLQkgKiB3YWl0ZXIn
cyBwcmlvcml0eSk6DQotCSAqLw0KLQlfcmF3X3NwaW5fbG9jaygmb2xkX293
bmVyLT5waV9sb2NrKTsNCi0JcHJpbyA9IG9sZF9vd25lci0+bm9ybWFsX3By
aW87DQotCWlmICh1bmxpa2VseSghcGxpc3RfaGVhZF9lbXB0eSgmb2xkX293
bmVyLT5waV93YWl0ZXJzKSkpIHsNCi0JCXcgPSBwbGlzdF9maXJzdF9lbnRy
eSgmb2xkX293bmVyLT5waV93YWl0ZXJzLCBzdHJ1Y3QgcnRfbXV0ZXhfd2Fp
dGVyLCBwaV9saXN0KTsNCi0JCWlmICh3LT50aS0+dGFzay0+cHJpbyA8IHBy
aW8pDQotCQkJcHJpbyA9IHctPnRpLT50YXNrLT5wcmlvOw0KLQl9DQotCWlm
ICh1bmxpa2VseShwcmlvICE9IG9sZF9vd25lci0+cHJpbykpDQotCQlwaV9z
ZXRwcmlvKGxvY2ssIG9sZF9vd25lciwgcHJpbyk7DQotCV9yYXdfc3Bpbl91
bmxvY2soJm9sZF9vd25lci0+cGlfbG9jayk7DQotI2lmZGVmIENBUFRVUkVf
TE9DSw0KLSNpZmRlZiBDT05GSUdfUFJFRU1QVF9SVA0KLQlpZiAobG9jayAh
PSAma2VybmVsX3NlbS5sb2NrKSB7DQotI2VuZGlmDQotCQluZXdfb3duZXIt
PnJ0X2ZsYWdzIHw9IFJUX1BFTkRPV05FUjsNCi0JCW5ld19vd25lci0+cGVu
ZGluZ19vd25lciA9IGxvY2s7DQotI2lmZGVmIENPTkZJR19QUkVFTVBUX1JU
DQorCQlfcmF3X3NwaW5fdW5sb2NrKCZvbGRfb3duZXItPnBpX2xvY2spOw0K
Kwl9DQorCWlmKHNhdmVfc3RhdGUpIHsNCisJCXdha2VfdXBfcHJvY2Vzc19t
dXRleChuZXdfb3duZXIpOw0KKwl9DQorCWVsc2Ugew0KKwkJd2FrZV91cF9w
cm9jZXNzKG5ld19vd25lcik7DQogCX0NCi0jZW5kaWYNCi0jZW5kaWYNCi0J
d2FrZV91cF9wcm9jZXNzX211dGV4KG5ld19vd25lcik7DQogfQ0KIA0KICNp
ZmRlZiBDT05GSUdfUFJFRU1QVF9SVA0KQEAgLTI1NzgsNyArMjM0OCw3IEBA
IGludCBfX2xvY2tmdW5jIF9yZWFkX3RyeWxvY2socndsb2NrX3QgKnINCiB7
DQogI2lmZGVmIENPTkZJR19ERUJVR19SVF9MT0NLSU5HX01PREUNCiAJaWYg
KCFwcmVlbXB0X2xvY2tzKQ0KLQlyZXR1cm4gX3Jhd19yZWFkX3RyeWxvY2so
JnJ3bG9jay0+bG9jay5sb2NrLmRlYnVnX3J3bG9jayk7DQorCQlyZXR1cm4g
X3Jhd19yZWFkX3RyeWxvY2soJnJ3bG9jay0+bG9jay5sb2NrLmRlYnVnX3J3
bG9jayk7DQogCWVsc2UNCiAjZW5kaWYNCiAJCXJldHVybiBkb3duX3JlYWRf
dHJ5bG9ja19tdXRleCgmcndsb2NrLT5sb2NrKTsNCkBAIC0yOTA1LDE3ICsy
Njc1LDYgQEAgbm90cmFjZSBpbnQgaXJxc19kaXNhYmxlZCh2b2lkKQ0KIEVY
UE9SVF9TWU1CT0woaXJxc19kaXNhYmxlZCk7DQogI2VuZGlmDQogDQotLyoN
Ci0gKiBUaGlzIHJvdXRpbmUgY2hhbmdlcyB0aGUgb3duZXIgb2YgYSBtdXRl
eC4gSXQncyBvbmx5DQotICogY2FsbGVyIGlzIHRoZSBmdXRleCBjb2RlIHdo
aWNoIGxvY2tzIGEgZnV0ZXggb24gYmVoYWxmDQotICogb2YgYW5vdGhlciB0
aHJlYWQuDQotICovDQotdm9pZCBmYXN0Y2FsbCBydF9tdXRleF9zZXRfb3du
ZXIoc3RydWN0IHJ0X211dGV4ICpsb2NrLCBzdHJ1Y3QgdGhyZWFkX2luZm8g
KnQpDQotew0KLQlhY2NvdW50X211dGV4X293bmVyX3VwKGN1cnJlbnQpOw0K
LQlhY2NvdW50X211dGV4X293bmVyX2Rvd24odC0+dGFzaywgbG9jayk7DQot
CWxvY2stPm93bmVyID0gdDsNCi19DQogDQogc3RydWN0IHRocmVhZF9pbmZv
ICogZmFzdGNhbGwgcnRfbXV0ZXhfb3duZXIoc3RydWN0IHJ0X211dGV4ICps
b2NrKQ0KIHsNCkBAIC0yOTUwLDcgKzI3MDksNiBAQCBkb3duX3RyeV9mdXRl
eChzdHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIHN0DQogDQogCXRyYWNlX2xvY2tf
aXJxc2F2ZSgmdHJhY2VfbG9jaywgZmxhZ3MsIHByb3h5X293bmVyKTsNCiAJ
VFJBQ0VfQlVHX09OX0xPQ0tFRCghcmF3X2lycXNfZGlzYWJsZWQoKSk7DQot
CV9yYXdfc3Bpbl9sb2NrKCZ0YXNrLT5waV9sb2NrKTsNCiAJX3Jhd19zcGlu
X2xvY2soJmxvY2stPndhaXRfbG9jayk7DQogDQogCW9sZF9vd25lciA9IGxv
Y2tfb3duZXIobG9jayk7DQpAQCAtMjk1OSwxNiArMjcxNywxMCBAQCBkb3du
X3RyeV9mdXRleChzdHJ1Y3QgcnRfbXV0ZXggKmxvY2ssIHN0DQogCWlmIChs
aWtlbHkoIW9sZF9vd25lcikgfHwgX19ncmFiX2xvY2sobG9jaywgdGFzaywg
b2xkX293bmVyLT50YXNrKSkgew0KIAkJLyogZ3JhbnRlZCAqLw0KIAkJVFJB
Q0VfV0FSTl9PTl9MT0NLRUQoIXBsaXN0X2hlYWRfZW1wdHkoJmxvY2stPndh
aXRfbGlzdCkgJiYgIW9sZF9vd25lcik7DQotCQlpZiAob2xkX293bmVyKSB7
DQotCQkJX3Jhd19zcGluX2xvY2soJm9sZF9vd25lci0+dGFzay0+cGlfbG9j
ayk7DQotCQkJc2V0X25ld19vd25lcihsb2NrLCBvbGRfb3duZXIsIHByb3h5
X293bmVyIF9fRUlQX18pOw0KLQkJCV9yYXdfc3Bpbl91bmxvY2soJm9sZF9v
d25lci0+dGFzay0+cGlfbG9jayk7DQotCQl9IGVsc2UNCiAJCQlzZXRfbmV3
X293bmVyKGxvY2ssIG9sZF9vd25lciwgcHJveHlfb3duZXIgX19FSVBfXyk7
DQogCQlyZXQgPSAxOw0KIAl9DQogCV9yYXdfc3Bpbl91bmxvY2soJmxvY2st
PndhaXRfbG9jayk7DQotCV9yYXdfc3Bpbl91bmxvY2soJnRhc2stPnBpX2xv
Y2spOw0KIAl0cmFjZV91bmxvY2tfaXJxcmVzdG9yZSgmdHJhY2VfbG9jaywg
ZmxhZ3MsIHByb3h5X293bmVyKTsNCiANCiAJcmV0dXJuIHJldDsNCkBAIC0z
MDY0LDMgKzI4MTYsMzMgQEAgdm9pZCBmYXN0Y2FsbCBpbml0X3J0X211dGV4
KHN0cnVjdCBydF9tdQ0KIAlfX2luaXRfcnRfbXV0ZXgobG9jaywgc2F2ZV9z
dGF0ZSwgbmFtZSwgZmlsZSwgbGluZSk7DQogfQ0KIEVYUE9SVF9TWU1CT0wo
aW5pdF9ydF9tdXRleCk7DQorDQorDQorcGlkX3QgZ2V0X2Jsb2NrZWRfb24o
dGFza190ICp0YXNrKQ0KK3sNCisJcGlkX3QgcmVzID0gMDsNCisJc3RydWN0
IHJ0X211dGV4ICpsb2NrOw0KKwlzdHJ1Y3QgdGhyZWFkX2luZm8gKm93bmVy
Ow0KKyB0cnlfYWdhaW46DQorCV9yYXdfc3Bpbl9sb2NrKCZ0YXNrLT5waV9s
b2NrKTsNCisJaWYoIXRhc2stPmJsb2NrZWRfb24pIHsNCisJCV9yYXdfc3Bp
bl91bmxvY2soJnRhc2stPnBpX2xvY2spOw0KKwkJZ290byBvdXQ7DQorCX0N
CisJbG9jayA9IHRhc2stPmJsb2NrZWRfb24tPmxvY2s7DQorCWlmKCFfcmF3
X3NwaW5fdHJ5bG9jaygmbG9jay0+d2FpdF9sb2NrKSkgew0KKwkJX3Jhd19z
cGluX3VubG9jaygmdGFzay0+cGlfbG9jayk7DQorCQlnb3RvIHRyeV9hZ2Fp
bjsNCisJfSAgICAgICANCisJb3duZXIgPSBsb2NrX293bmVyKGxvY2spOw0K
KwlpZihvd25lcikNCisJCXJlcyA9IG93bmVyLT50YXNrLT5waWQ7DQorDQor
CV9yYXdfc3Bpbl91bmxvY2soJnRhc2stPnBpX2xvY2spOw0KKwlfcmF3X3Nw
aW5fdW5sb2NrKCZsb2NrLT53YWl0X2xvY2spOw0KKyAgICAgICAgDQorIG91
dDoNCisJcmV0dXJuIHJlczsNCisgICAgICAgICAgICAgICAgDQorfQ0KK0VY
UE9SVF9TWU1CT0woZ2V0X2Jsb2NrZWRfb24pOw0K
--202006529-1967741563-1138375101=:30636--
