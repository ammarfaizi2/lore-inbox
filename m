Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1422634AbWBAPby@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1422634AbWBAPby (ORCPT <rfc822;willy@w.ods.org>);
	Wed, 1 Feb 2006 10:31:54 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1422633AbWBAPby
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 1 Feb 2006 10:31:54 -0500
Received: from smtp204.mail.sc5.yahoo.com ([216.136.130.127]:36742 "HELO
	smtp204.mail.sc5.yahoo.com") by vger.kernel.org with SMTP
	id S1422632AbWBAPbw (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 1 Feb 2006 10:31:52 -0500
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com.au;
  h=Received:Message-ID:Date:From:User-Agent:X-Accept-Language:MIME-Version:To:CC:Subject:References:In-Reply-To:Content-Type:Content-Transfer-Encoding;
  b=dzV9sPCFp96qseO9f8Oav9y+M7BRrcsbgKwJ7AbiovpxR+LSWzBUzwk1QE7ArxmHyiVltuxxsFFWo1vy0wO6mWI7wdtCYcBGE9nTkVWfFc38JPRFN/h4Zo4+LtMB/hc7Ql5u3MDbNJXQaLS6gIMtPqbYKY8tlqZvgo1TYuw4rkU=  ;
Message-ID: <43E0D464.2020509@yahoo.com.au>
Date: Thu, 02 Feb 2006 02:31:48 +1100
From: Nick Piggin <nickpiggin@yahoo.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20051007 Debian/1.7.12-1
X-Accept-Language: en
MIME-Version: 1.0
To: Ingo Molnar <mingo@elte.hu>
CC: Steven Rostedt <rostedt@goodmis.org>,
       Peter Williams <pwil3058@bigpond.net.au>,
       Thomas Gleixner <tglx@linutronix.de>, Andrew Morton <akpm@osdl.org>,
       LKML <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] Avoid moving tasks when a schedule can be made.
References: <1138797874.7088.44.camel@localhost.localdomain> <43E0B24E.8080508@yahoo.com.au> <43E0B342.6090700@yahoo.com.au> <20060201132054.GA31156@elte.hu> <43E0BBEC.3020209@yahoo.com.au> <43E0BDA3.8040003@yahoo.com.au> <20060201141248.GA6277@elte.hu> <43E0C4CF.8090501@yahoo.com.au> <20060201143727.GA9915@elte.hu> <43E0CBBC.2000002@yahoo.com.au> <20060201151137.GA14794@elte.hu>
In-Reply-To: <20060201151137.GA14794@elte.hu>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

Ingo Molnar wrote:
> * Nick Piggin <nickpiggin@yahoo.com.au> wrote:

>>If it were generated by some real workload that cares, then I would care.
> 
> 
> well, you might not care, but i do. It's up to you what you care about, 
> but right now the scheduler policy is that we do care about latencies.  
> Yes, it's obviously all subject to common sense, and if something 
> triggers in a rare and extreme workload then any change related to it 
> has a _much_ higher barrier of acceptance than a common codepath. But
> your blanket dismissal of this whole subject based on the rarity of the
> workload is just plain wrong.
> 

No, if you read what I'd been saying, I'm not dismissing the whole
subject based on the workload. I'm saying that there is no point to
include such a "fix" based on the numbers given by this workload (if
there is a more meaningful one, then sure). Especially not while
there are sources of equivalent latency.

It is really simple: I can find a code path in the kernel, and work
out how to exploit it by increasing resource loading until it goes
bang (another example, tasklist_lock).

This is not really a justification for trying to "fix" it.

Unless somewhere there was an agreement that 1.5ms interrupt latency
was a bug, full stop.

> 
>>>to argue that 'you can get the same by using rwsems so why should we 
>>>bother' is pretty lame: rwsems are rare and arguably broken in 
>>>behavior, and i'd not say the same about the scheduler (just yet :-).
>>
>>I don't think it is lame at all. They're fairly important in use in 
>>mmap_sem that I know of. And I have seen workloads where the up_write 
>>path gets really expensive (arguably more relevant ones than 
>>hackbench).
> 
> 
> they are broken e.g. in that they are mass-waking all the readers with 
> interrupts disabled. At a minimum rwsems should be declared irq-unsafe 
> (like mutexes), as all the substantial uses are in process-context 
> codepaths anyway. I'll revisit rwsems once the current mutex work is 
> done.
> 

That would be great. Actually I have some patches that move the actual
waking of the tasks out from underneath the lock too which gave some
scalability benefits (and I'd imagine far less interrupt-off time, so
let me know when you start work on rwsems).

But there are still places where interrupts can be held off for
indefinite periods. I don't see why the scheduler lock is suddenly
important - I could have told you years ago what would happen if you
trigger the load balancer with enough tasks.

-- 
SUSE Labs, Novell Inc.
Send instant messages to your online friends http://au.messenger.yahoo.com 
