Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S315458AbSHLOlj>; Mon, 12 Aug 2002 10:41:39 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S318064AbSHLOlj>; Mon, 12 Aug 2002 10:41:39 -0400
Received: from august.V-LO.krakow.pl ([62.121.131.17]:156 "EHLO
	august.V-LO.krakow.pl") by vger.kernel.org with ESMTP
	id <S315458AbSHLOli>; Mon, 12 Aug 2002 10:41:38 -0400
Date: Mon, 12 Aug 2002 16:45:21 +0200 (CEST)
From: Jan NOwaK <nok@V-LO.krakow.pl>
To: linux-kernel@vger.kernel.org
Subject: remove_proc_entry behaviour
Message-ID: <Pine.LNX.4.44.0208121627270.224-100000@august.V-LO.krakow.pl>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

Hello linux-kernel,

I'm writing a patch that uses proc filesystem, and allows creating
entries in one of /proc subdirectory. They are created by proc_mkdir
and proc_symlink. But there is a problem when they are to be removed.
I use remove_proc_entry. They are deleted, but I get the message:

remove_proc_entry: lease/test busy, count=1
de_put: deferred delete of test

I found that first line is generated by the following code in
remove_proc_entry:

        if (!atomic_read(&de->count))
                  free_proc_entry(de);
           else {
                  de->deleted = 1;
                  printk("remove_proc_entry: %s/%s busy, count=%d\n",
                           parent->name, de->name, atomic_read(&de->count));
          }

The presence of printk suggests that something goes wrong. Is it true?
What is the proper way of removing proc entry that wouldn't generate
this message? I get it although I'm sure that entry isn't used by
anything else...

nok

