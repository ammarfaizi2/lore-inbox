Return-Path: <linux-kernel-owner+willy=40w.ods.org-S262539AbVA0KAT@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262539AbVA0KAT (ORCPT <rfc822;willy@w.ods.org>);
	Thu, 27 Jan 2005 05:00:19 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262543AbVA0KAT
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Thu, 27 Jan 2005 05:00:19 -0500
Received: from rproxy.gmail.com ([64.233.170.196]:45260 "EHLO rproxy.gmail.com")
	by vger.kernel.org with ESMTP id S262539AbVA0J7q (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 27 Jan 2005 04:59:46 -0500
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=i4nW1feNaCH29kh15Rev8ZjDqhh1NaVBjDN41P3zxxTjJtECRBatfLmF8zrW+p1UftqRLSXZSsVx7BuK+OdxmFWDYN1xY/JaMflzU8Zqd1ctjNlj8VlFOIPwSDwmCw+qa1fY4aTf7FeuQRY+22Nf3ISfmpwUe3BrjcKwn1fNgQ0=
Message-ID: <9e473391050127015970e1fedc@mail.gmail.com>
Date: Thu, 27 Jan 2005 04:59:45 -0500
From: Jon Smirl <jonsmirl@gmail.com>
Reply-To: Jon Smirl <jonsmirl@gmail.com>
To: Greg KH <greg@kroah.com>
Subject: Re: Fwd: Patch to control VGA bus routing and active VGA device.
Cc: Russell King <rmk+lkml@arm.linux.org.uk>, Jeff Garzik <jgarzik@pobox.com>,
       Matthew Wilcox <matthew@wil.cx>, Jesse Barnes <jbarnes@sgi.com>,
       linux-pci@atrey.karlin.mff.cuni.cz, lkml <linux-kernel@vger.kernel.org>
In-Reply-To: <20050125042459.GA32697@kroah.com>
Mime-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_588_14386459.1106819985598"
References: <9e47339105011719436a9e5038@mail.gmail.com>
	 <41ED3BD2.1090105@pobox.com>
	 <9e473391050122083822a7f81c@mail.gmail.com>
	 <200501240847.51208.jbarnes@sgi.com>
	 <20050124175131.GM31455@parcelfarce.linux.theplanet.co.uk>
	 <9e473391050124111767a9c6b7@mail.gmail.com>
	 <41F54FC1.6080207@pobox.com>
	 <20050124195523.B5541@flint.arm.linux.org.uk>
	 <20050125042459.GA32697@kroah.com>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

------=_Part_588_14386459.1106819985598
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On Mon, 24 Jan 2005 20:24:59 -0800, Greg KH <greg@kroah.com> wrote:
> This can be done today in the bus specific match functions.  And because
> of that, I would argue that this belongs in the bus specific code, and
> not in the driver core, as it's up to the bus to know what the different
> types of "matches" that can happen, and what the priority is.

Here's a version of the VGA control code that actually works. It helps
if I pci_enable() the device before using it. There was nothing wrong
with the routing code.

I can also control multiple cards on the same bus by turning on/off
their response to IO space and then enabling VGA via the standard
ports. I can use this to move my console from card to card.

I have this code in drivers/pci because it needs to know add/remove
from hotplug. Is there a better way to structure it? Note that this is
not a VGA device, it is just a mechanism for controlling which VGA
device is active.

Another item I need to add is generating an initial hotplug event for
each secondary card. This event has to happen even if there is a card
specific driver loaded. The event will be used to run the reset
program needed by secondary cards.

-- 
Jon Smirl
jonsmirl@gmail.com

------=_Part_588_14386459.1106819985598
Content-Type: application/octet-stream; name="patch"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="patch"

ZGlmZiAtTnJ1IGEvYXJjaC9pMzg2L3BjaS9maXh1cC5jIGIvYXJjaC9pMzg2L3BjaS9maXh1cC5j
Ci0tLSBhL2FyY2gvaTM4Ni9wY2kvZml4dXAuYwkyMDA1LTAxLTI3IDA0OjAxOjA4IC0wNTowMAor
KysgYi9hcmNoL2kzODYvcGNpL2ZpeHVwLmMJMjAwNS0wMS0yNyAwNDowMTowOCAtMDU6MDAKQEAg
LTM3NSw2ICszNzUsNiBAQAogCQl9CiAJCWJ1cyA9IGJ1cy0+cGFyZW50OwogCX0KLQlwZGV2LT5y
ZXNvdXJjZVtQQ0lfUk9NX1JFU09VUkNFXS5mbGFncyB8PSBJT1JFU09VUkNFX1JPTV9TSEFET1c7
CisJcGRldi0+cmVzb3VyY2VbUENJX1JPTV9SRVNPVVJDRV0uZmxhZ3MgfD0gSU9SRVNPVVJDRV9S
T01fU0hBRE9XIHwgSU9SRVNPVVJDRV9WR0FfQUNUSVZFOwogfQogREVDTEFSRV9QQ0lfRklYVVBf
SEVBREVSKFBDSV9BTllfSUQsIFBDSV9BTllfSUQsIHBjaV9maXh1cF92aWRlbyk7CmRpZmYgLU5y
dSBhL2RyaXZlcnMvcGNpL0tjb25maWcgYi9kcml2ZXJzL3BjaS9LY29uZmlnCi0tLSBhL2RyaXZl
cnMvcGNpL0tjb25maWcJMjAwNS0wMS0yNyAwNDowMTowOCAtMDU6MDAKKysrIGIvZHJpdmVycy9w
Y2kvS2NvbmZpZwkyMDA1LTAxLTI3IDA0OjAxOjA4IC0wNTowMApAQCAtNDcsMyArNDcsMTMgQEAK
IAogCSAgV2hlbiBpbiBkb3VidCwgc2F5IFkuCiAKK2NvbmZpZyBWR0FfQ09OVFJPTAorCWJvb2wg
IlZHQSBDb250cm9sIgorCWRlcGVuZHMgb24gUENJCisJLS0taGVscC0tLQorCSAgUHJvdmlkZXMg
c3lzZnMgYXR0cmlidXRlcyBmb3IgZW5zdXJpbmcgdGhhdCBvbmx5IGEgc2luZ2xlIFZHQQorCSAg
ZGV2aWNlIGNhbiBiZSBlbmFibGVkIHBlciBQQ0kgZG9tYWluLiBJZiBhIFZHQSBkZXZpY2UgaXMg
cmVtb3ZlZAorCSAgdmlhIGhvdHBsdWcsIGRpc3BsYXkgaXMgcm91dGVkIHRvIGFub3RoZXIgVkdB
IGRldmljZSBpZiBhdmFpbGFibGUuCisKKwkgIElmIHlvdSBoYXZlIG1vcmUgdGhhbiBvbmUgVkdB
IGRldmljZSwgc2F5IFkuCisKZGlmZiAtTnJ1IGEvZHJpdmVycy9wY2kvTWFrZWZpbGUgYi9kcml2
ZXJzL3BjaS9NYWtlZmlsZQotLS0gYS9kcml2ZXJzL3BjaS9NYWtlZmlsZQkyMDA1LTAxLTI3IDA0
OjAxOjA4IC0wNTowMAorKysgYi9kcml2ZXJzL3BjaS9NYWtlZmlsZQkyMDA1LTAxLTI3IDA0OjAx
OjA4IC0wNTowMApAQCAtMjgsNiArMjgsNyBAQAogb2JqLSQoQ09ORklHX01JUFMpICs9IHNldHVw
LWJ1cy5vIHNldHVwLWlycS5vCiBvYmotJChDT05GSUdfWDg2X1ZJU1dTKSArPSBzZXR1cC1pcnEu
bwogb2JqLSQoQ09ORklHX1BDSV9NU0kpICs9IG1zaS5vCitvYmotJChDT05GSUdfVkdBX0NPTlRS
T0wpICs9IHZnYS5vCiAKICMKICMgQUNQSSBSZWxhdGVkIFBDSSBGVyBGdW5jdGlvbnMKZGlmZiAt
TnJ1IGEvZHJpdmVycy9wY2kvYnVzLmMgYi9kcml2ZXJzL3BjaS9idXMuYwotLS0gYS9kcml2ZXJz
L3BjaS9idXMuYwkyMDA1LTAxLTI3IDA0OjAxOjA4IC0wNTowMAorKysgYi9kcml2ZXJzL3BjaS9i
dXMuYwkyMDA1LTAxLTI3IDA0OjAxOjA4IC0wNTowMApAQCAtODUsNiArODUsOSBAQAogCiAJcGNp
X3Byb2NfYXR0YWNoX2RldmljZShkZXYpOwogCXBjaV9jcmVhdGVfc3lzZnNfZGV2X2ZpbGVzKGRl
dik7CisjaWYgQ09ORklHX1ZHQV9DT05UUk9MCisJcGNpX3ZnYV9hZGRfZGV2aWNlKGRldik7Cisj
ZW5kaWYKIH0KIAogLyoqCmRpZmYgLU5ydSBhL2RyaXZlcnMvcGNpL3BjaS5oIGIvZHJpdmVycy9w
Y2kvcGNpLmgKLS0tIGEvZHJpdmVycy9wY2kvcGNpLmgJMjAwNS0wMS0yNyAwNDowMTowOCAtMDU6
MDAKKysrIGIvZHJpdmVycy9wY2kvcGNpLmgJMjAwNS0wMS0yNyAwNDowMTowOCAtMDU6MDAKQEAg
LTExLDYgKzExLDggQEAKIAkJCQkgIHZvaWQgKCphbGlnbmYpKHZvaWQgKiwgc3RydWN0IHJlc291
cmNlICosCiAJCQkJCSAgCSB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nKSwKIAkJCQkgIHZv
aWQgKmFsaWduZl9kYXRhKTsKK2V4dGVybiBpbnQgcGNpX3ZnYV9hZGRfZGV2aWNlKHN0cnVjdCBw
Y2lfZGV2ICpwZGV2KTsKK2V4dGVybiBpbnQgcGNpX3ZnYV9yZW1vdmVfZGV2aWNlKHN0cnVjdCBw
Y2lfZGV2ICpwZGV2KTsKIC8qIFBDSSAvcHJvYyBmdW5jdGlvbnMgKi8KICNpZmRlZiBDT05GSUdf
UFJPQ19GUwogZXh0ZXJuIGludCBwY2lfcHJvY19hdHRhY2hfZGV2aWNlKHN0cnVjdCBwY2lfZGV2
ICpkZXYpOwpkaWZmIC1OcnUgYS9kcml2ZXJzL3BjaS9yZW1vdmUuYyBiL2RyaXZlcnMvcGNpL3Jl
bW92ZS5jCi0tLSBhL2RyaXZlcnMvcGNpL3JlbW92ZS5jCTIwMDUtMDEtMjcgMDQ6MDE6MDggLTA1
OjAwCisrKyBiL2RyaXZlcnMvcGNpL3JlbW92ZS5jCTIwMDUtMDEtMjcgMDQ6MDE6MDggLTA1OjAw
CkBAIC0yNiw2ICsyNiw5IEBACiAKIHN0YXRpYyB2b2lkIHBjaV9kZXN0cm95X2RldihzdHJ1Y3Qg
cGNpX2RldiAqZGV2KQogeworI2lmIENPTkZJR19WR0FfQ09OVFJPTAorCXBjaV92Z2FfcmVtb3Zl
X2RldmljZShkZXYpOworI2VuZGlmCiAJcGNpX3Byb2NfZGV0YWNoX2RldmljZShkZXYpOwogCXBj
aV9yZW1vdmVfc3lzZnNfZGV2X2ZpbGVzKGRldik7CiAJZGV2aWNlX3VucmVnaXN0ZXIoJmRldi0+
ZGV2KTsKZGlmZiAtTnJ1IGEvZHJpdmVycy9wY2kvc2V0dXAtYnVzLmMgYi9kcml2ZXJzL3BjaS9z
ZXR1cC1idXMuYwotLS0gYS9kcml2ZXJzL3BjaS9zZXR1cC1idXMuYwkyMDA1LTAxLTI3IDA0OjAx
OjA4IC0wNTowMAorKysgYi9kcml2ZXJzL3BjaS9zZXR1cC1idXMuYwkyMDA1LTAxLTI3IDA0OjAx
OjA4IC0wNTowMApAQCAtNjQsNyArNjQsOSBAQAogCiAJCWlmIChjbGFzcyA9PSBQQ0lfQ0xBU1Nf
RElTUExBWV9WR0EgfHwKIAkJICAgIGNsYXNzID09IFBDSV9DTEFTU19OT1RfREVGSU5FRF9WR0Ep
Ci0JCQlidXMtPmJyaWRnZV9jdGwgfD0gUENJX0JSSURHRV9DVExfVkdBOworCQkJLyogb25seSBy
b3V0ZSB0byB0aGUgYWN0aXZlIFZHQSwgaWdub3JlIGluYWN0aXZlIG9uZXMgKi8KKwkJCWlmICAo
ZGV2LT5yZXNvdXJjZVtQQ0lfUk9NX1JFU09VUkNFXS5mbGFncyAmIElPUkVTT1VSQ0VfVkdBX0FD
VElWRSkKKwkJCQlidXMtPmJyaWRnZV9jdGwgfD0gUENJX0JSSURHRV9DVExfVkdBOwogCiAJCXBk
ZXZfc29ydF9yZXNvdXJjZXMoZGV2LCAmaGVhZCk7CiAJfQpkaWZmIC1OcnUgYS9kcml2ZXJzL3Bj
aS92Z2EuYyBiL2RyaXZlcnMvcGNpL3ZnYS5jCi0tLSAvZGV2L251bGwJV2VkIERlYyAzMSAxNjow
MDowMCAxOTY5MDAKKysrIGIvZHJpdmVycy9wY2kvdmdhLmMJMjAwNS0wMS0yNyAwNDowMTowOCAt
MDU6MDAKQEAgLTAsMCArMSwyNTQgQEAKKy8qCisgKiBsaW51eC9kcml2ZXJzL3BjaS92Z2EuYwor
ICoKKyAqIChDKSBDb3B5cmlnaHQgMjAwNCBKb24gU21pcmwgPGpvbnNtaXJsQGdtYWlsLmNvbT4K
KyAqCisgKiBWR0EgY29udHJvbCBsb2dpYyBmb3IgZW5zdXJpbmcgb25seSBhIHNpbmdsZSBlbmFi
bGVkIFZHQSBkZXZpY2UKKyAqLworCisjaW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUg
PGxpbnV4L2ZzLmg+CisjaW5jbHVkZSA8bGludXgvY2Rldi5oPgorI2luY2x1ZGUgPGxpbnV4L3Bj
aS5oPgorI2luY2x1ZGUgPGxpbnV4L21ham9yLmg+CisKK3N0YXRpYyBpbnQgdmdhX2luaXRpYWxp
emVkID0gMDsKK3N0YXRpYyBzdHJ1Y3QgcGNpX2RldiAqdmdhX2FjdGl2ZSA9IE5VTEw7CisKK3N0
YXRpYyB2b2lkIGJyaWRnZV95ZXMoc3RydWN0IHBjaV9kZXYgKnBkZXYpCit7CisJc3RydWN0IHBj
aV9kZXYgKmJyaWRnZTsKKwlzdHJ1Y3QgcGNpX2J1cyAqYnVzOworCQorCS8qIE1ha2Ugc3VyZSB0
aGUgYnJpZGdlcyByb3V0ZSB0byB1cyAqLworCWJ1cyA9IHBkZXYtPmJ1czsKKwl3aGlsZSAoYnVz
KSB7CisJCWJyaWRnZSA9IGJ1cy0+c2VsZjsKKwkJaWYgKGJyaWRnZSkgeworCQkJYnVzLT5icmlk
Z2VfY3RsIHw9IFBDSV9CUklER0VfQ1RMX1ZHQTsKKwkJCXBjaV93cml0ZV9jb25maWdfd29yZChi
cmlkZ2UsIFBDSV9CUklER0VfQ09OVFJPTCwgYnVzLT5icmlkZ2VfY3RsKTsKKwkJfQorCQlidXMg
PSBidXMtPnBhcmVudDsKKwl9Cit9CisKK3N0YXRpYyB2b2lkIGJyaWRnZV9ubyhzdHJ1Y3QgcGNp
X2RldiAqcGRldikKK3sKKwlzdHJ1Y3QgcGNpX2RldiAqYnJpZGdlOworCXN0cnVjdCBwY2lfYnVz
ICpidXM7CisJCisJLyogTWFrZSBzdXJlIHRoZSBicmlkZ2VzIGRvbid0IHJvdXRlIHRvIHVzICov
CisJYnVzID0gcGRldi0+YnVzOworCXdoaWxlIChidXMpIHsKKwkJYnJpZGdlID0gYnVzLT5zZWxm
OworCQlpZiAoYnJpZGdlKSB7CisJCQlidXMtPmJyaWRnZV9jdGwgJj0gflBDSV9CUklER0VfQ1RM
X1ZHQTsKKwkJCXBjaV93cml0ZV9jb25maWdfd29yZChicmlkZ2UsIFBDSV9CUklER0VfQ09OVFJP
TCwgYnVzLT5icmlkZ2VfY3RsKTsKKwkJfQorCQlidXMgPSBidXMtPnBhcmVudDsKKwl9Cit9CisK
K3N0YXRpYyB2b2lkIHZnYV9lbmFibGUoc3RydWN0IHBjaV9kZXYgKnBkZXYsIHVuc2lnbmVkIGlu
dCBlbmFibGUpCit7CisJdTE2IGNvbW1hbmQ7CisJCisJYnJpZGdlX3llcyhwZGV2KTsKKworCWlm
IChlbmFibGUpIHsKKwkJcGNpX2VuYWJsZV9kZXZpY2UocGRldik7CisJCS8qIHRoaXMgYXNzdW1l
cyBhbGwgb3RoZXIgcG90ZW50aWFsIFZHQSBkZXZpY2VzIGFyZSBkaXNhYmxlZCAqLworCQlvdXRi
KDB4MDEgfCBpbmIoMHgzQzMpLCAgMHgzQzMpOyAgLyogMCAtIGVuYWJsZSAqLworCQlvdXRiKDB4
MDggfCBpbmIoMHg0NmU4KSwgMHg0NmU4KTsKKwkJb3V0YigweDAxIHwgaW5iKDB4MTAyKSwgIDB4
MTAyKTsKKwkJcGRldi0+cmVzb3VyY2VbUENJX1JPTV9SRVNPVVJDRV0uZmxhZ3MgfD0gSU9SRVNP
VVJDRV9WR0FfQUNUSVZFOworCQl2Z2FfYWN0aXZlID0gcGRldjsKKworCQkvKiByZXR1cm4gYW5k
IGxlYXZlIHRoZSBjYXJkIGVuYWJsZWQgKi8KKwkJcmV0dXJuOworCX0KKwkKKwlwY2lfcmVhZF9j
b25maWdfd29yZChwZGV2LCBQQ0lfQ09NTUFORCwgJmNvbW1hbmQpOworCXBjaV93cml0ZV9jb25m
aWdfd29yZChwZGV2LCBQQ0lfQ09NTUFORCwgY29tbWFuZCB8IFBDSV9DT01NQU5EX0lPIHwgUENJ
X0NPTU1BTkRfTUVNT1JZKTsKKwkKKwlvdXRiKH4weDAxICYgaW5iKDB4M0MzKSwgIDB4M0MzKTsK
KwlvdXRiKH4weDA4ICYgaW5iKDB4NDZlOCksIDB4NDZlOCk7CisJb3V0Yih+MHgwMSAmIGluYigw
eDEwMiksICAweDEwMik7CisJcGRldi0+cmVzb3VyY2VbUENJX1JPTV9SRVNPVVJDRV0uZmxhZ3Mg
Jj0gfklPUkVTT1VSQ0VfVkdBX0FDVElWRTsKKwlpZiAocGRldiA9PSB2Z2FfYWN0aXZlKQorCQl2
Z2FfYWN0aXZlID0gTlVMTDsKKwlicmlkZ2Vfbm8ocGRldik7CisKKwlwY2lfd3JpdGVfY29uZmln
X3dvcmQocGRldiwgUENJX0NPTU1BTkQsIGNvbW1hbmQpOworfQorCisvKiBlY2hvIHRoZXNlIHZh
bHVlcyB0byB0aGUgc3lzZnMgdmdhIGF0dHJpYnV0ZSBvbiBhIFZHQSBkZXZpY2UgKi8KK2VudW0g
ZUVuYWJsZSB7CisJVkdBX0RJU0FCTEVfVEhJUyA9IDAsCS8qIElmIHRoaXMgVkdBIGlzIGVuYWJs
ZWQsIGRpc2FibGUgaXQuICovCisJVkdBX0VOQUJMRV9USElTID0gMSwJLyogRGlzYWJsZSBhbGwg
VkdBcyB0aGVuIGVuYWJsZSB0aGlzIFZHQSwgbWFyayBhcyBhY3RpdmUgVkdBICovCisJLyogVXNl
ZCB3aGlsZSByZXNldHRpbmcgYSBib2FyZCwgYm9hcmQgYmVpbmcgcmVzZXQgbWF5IG5vdCBiZSB0
aGUgYWN0aXZlIFZHQSAqLworCVZHQV9ESVNBQkxFX0FMTCA9IDIsCS8qIFJlbWVtYmVyIGFjdGl2
ZSBWR0EgdGhlbiBkaXNhYmxlIGFsbCBWR0FhIGFuZCBkZXZpY2VzICovCisJVkdBX0VOQUJMRV9B
Q1RJVkUgPSAzLAkvKiBNYWtlIHN1cmUgYWxsIFZHQXMgYXJlIGRpc2FibGVkLCB0aGVuIHJlZW5h
YmxlIGFjdGl2ZSBWR0EgKi8KK307CisKK3N0YXRpYyB2b2lkIHNldF9zdGF0ZShzdHJ1Y3QgcGNp
X2RldiAqcGRldiwgZW51bSBlRW5hYmxlIGVuYWJsZSkKK3sKKwlzdHJ1Y3QgcGNpX2RldiAqcGNp
ZGV2ID0gTlVMTDsKKwl1bnNpZ25lZCBpbnQgY2xhc3M7CisKKwlpZiAoZW5hYmxlID09IFZHQV9E
SVNBQkxFX1RISVMpCisJCWlmICh2Z2FfYWN0aXZlICE9IHBkZXYpCisJCQlyZXR1cm47CisJCQor
CXZnYV9lbmFibGUodmdhX2FjdGl2ZSwgMCk7CisKKwkvKiBsb29wIG92ZXIgYWxsIGRldmljZXMg
YW5kIG1ha2Ugc3VyZSBubyBtdWx0aXBsZSByb3V0aW5ncyAqLworCXdoaWxlICgocGNpZGV2ID0g
cGNpX2dldF9zdWJzeXMoUENJX0FOWV9JRCwgUENJX0FOWV9JRCwgUENJX0FOWV9JRCwgUENJX0FO
WV9JRCwgcGNpZGV2KSkgIT0gTlVMTCkgeworCQljbGFzcyA9IHBjaWRldi0+Y2xhc3MgPj4gODsK
KworCQlpZiAoY2xhc3MgPT0gUENJX0NMQVNTX0RJU1BMQVlfVkdBKQorCQkJYnJpZGdlX25vKHBj
aWRldik7CisJfQorCisJLyogbG9vcCBvdmVyIGFsbCBkZXZpY2VzIGFuZCBtYWtlIHN1cmUgZXZl
cnlvbmUgaXMgZGlzYWJsZWQgKi8KKwl3aGlsZSAoKHBjaWRldiA9IHBjaV9nZXRfc3Vic3lzKFBD
SV9BTllfSUQsIFBDSV9BTllfSUQsIFBDSV9BTllfSUQsIFBDSV9BTllfSUQsIHBjaWRldikpICE9
IE5VTEwpIHsKKwkJY2xhc3MgPSBwY2lkZXYtPmNsYXNzID4+IDg7CisKKwkJaWYgKGNsYXNzID09
IFBDSV9DTEFTU19ESVNQTEFZX1ZHQSkKKwkJCXZnYV9lbmFibGUocGNpZGV2LCAwKTsKKwl9CisK
Kwlzd2l0Y2ggKGVuYWJsZSkgeworCQljYXNlIFZHQV9ESVNBQkxFX1RISVM6CisJCWNhc2UgVkdB
X0RJU0FCTEVfQUxMOgorCQkJYnJlYWs7CisKKwkJLyogTWFyayB1cyBhY3RpdmUgaWYgcmVxdWVz
dGVkICovCisJCWNhc2UgVkdBX0VOQUJMRV9USElTOgorCQkJdmdhX2VuYWJsZShwZGV2LCAxKTsK
KwkJCWJyZWFrOworCQorCQkvKiBSZXN0b3JlIGFjdGl2ZSBkZXZpY2UgaWYgcmVxdWVzdGVkICov
CisJCWNhc2UgVkdBX0VOQUJMRV9BQ1RJVkU6CisJCQl2Z2FfZW5hYmxlKHZnYV9hY3RpdmUsIDEp
OworCQkJYnJlYWs7CisJfQorfQorCisvKiBzeXNmcyBzdG9yZSBmb3IgVkdBIGRldmljZSAqLwor
c3RhdGljIHNzaXplX3QgdmdhX2RldmljZV9zdG9yZShzdHJ1Y3QgZGV2aWNlICpkZXYsIGNvbnN0
IGNoYXIgKmJ1Ziwgc2l6ZV90IGNvdW50KQoreworCWNoYXIgKmxhc3Q7CisJc3RydWN0IHBjaV9k
ZXYgKnBkZXYgPSB0b19wY2lfZGV2KGRldik7CisJZW51bSBlRW5hYmxlIGVuYWJsZTsKKworCS8q
IHN5c2ZzIHN0cmluZ3MgYXJlIHRlcm1pbmF0ZWQgYnkgXG4gKi8KKwllbmFibGUgPSBzaW1wbGVf
c3RydG91bChidWYsICZsYXN0LCAwKTsKKwlpZiAobGFzdCA9PSBidWYpCisJCXJldHVybiAtRUlO
VkFMOworCisJaWYgKChlbmFibGUgPCBWR0FfRElTQUJMRV9USElTKSB8fCAoZW5hYmxlID4gVkdB
X0VOQUJMRV9BQ1RJVkUpKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXNldF9zdGF0ZShwZGV2LCBl
bmFibGUpOworCisJcmV0dXJuIGNvdW50OworfQorCisvKiBzeXNmcyBzaG93IGZvciBWR0EgZGV2
aWNlICovCitzdGF0aWMgc3NpemVfdCB2Z2FfZGV2aWNlX3Nob3coc3RydWN0IGRldmljZSAqZGV2
LCBjaGFyICpidWYpCit7CisJc3RydWN0IHBjaV9kZXYgKnBkZXYgPSB0b19wY2lfZGV2KGRldik7
CisJcmV0dXJuIHNwcmludGYoYnVmLCAiJWRcbiIsIChwZGV2LT5yZXNvdXJjZVtQQ0lfUk9NX1JF
U09VUkNFXS5mbGFncyAmIElPUkVTT1VSQ0VfVkdBX0FDVElWRSkgIT0gMCk7Cit9CisKK3N0YXRp
YyBzdHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSB2Z2FfZGV2aWNlX2F0dHIgPSBfX0FUVFIodmdhLCBT
X0lSVUdPfFNfSVdVU1IsIHZnYV9kZXZpY2Vfc2hvdywgdmdhX2RldmljZV9zdG9yZSk7CisKKy8q
IHN5c2ZzIHNob3cgZm9yIFZHQSByb3V0aW5nIGJyaWRnZSAqLworc3RhdGljIHNzaXplX3Qgdmdh
X2JyaWRnZV9zaG93KHN0cnVjdCBkZXZpY2UgKmRldiwgY2hhciAqYnVmKQoreworCXN0cnVjdCBw
Y2lfZGV2ICpwZGV2ID0gdG9fcGNpX2RldihkZXYpOworCXUxNiBsOworCisJLyogZG9uJ3QgdHJ1
c3QgdGhlIHNoYWRvdyBQQ0lfQlJJREdFX0NUTF9WR0EgaW4gcGRldiAqLworCS8qIHVzZXIgc3Bh
Y2UgbWF5IGNoYW5nZSBoYXJkd2FyZSB3aXRob3V0IHRlbGxpbmcgdGhlIGtlcm5lbCAqLworCXBj
aV9yZWFkX2NvbmZpZ193b3JkKHBkZXYsIFBDSV9CUklER0VfQ09OVFJPTCwgJmwpOworCXJldHVy
biBzcHJpbnRmKGJ1ZiwgIiVkXG4iLCAobCAmIFBDSV9CUklER0VfQ1RMX1ZHQSkgIT0gMCk7Cit9
CisKK3N0YXRpYyBzdHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSB2Z2FfYnJpZGdlX2F0dHIgPSBfX0FU
VFIodmdhLCBTX0lSVUdPLCB2Z2FfYnJpZGdlX3Nob3csIE5VTEwpOworCisvKiBJZiB0aGUgZGV2
aWNlIGlzIGEgVkdBIG9yIGEgYnJpZGdlLCBhZGQgYSBWR0Egc3lzZnMgYXR0cmlidXRlICovCitp
bnQgcGNpX3ZnYV9hZGRfZGV2aWNlKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQoreworCWludCBjbGFz
cyA9IHBkZXYtPmNsYXNzID4+IDg7CisKKwlpZiAoIXZnYV9pbml0aWFsaXplZCkKKwkJcmV0dXJu
IC1FQUNDRVM7CisKKwlpZiAoY2xhc3MgPT0gUENJX0NMQVNTX0RJU1BMQVlfVkdBKSB7CisJCWRl
dmljZV9jcmVhdGVfZmlsZSgmcGRldi0+ZGV2LCAmdmdhX2RldmljZV9hdHRyKTsKKworCQkvKiBy
ZWNvcmQgdGhlIGFjdGl2ZSBib290IGRldmljZSB3aGVuIGxvY2F0ZWQgKi8KKwkJaWYgKHBkZXYt
PnJlc291cmNlW1BDSV9ST01fUkVTT1VSQ0VdLmZsYWdzICYgSU9SRVNPVVJDRV9WR0FfQUNUSVZF
KQorCQkJdmdhX2FjdGl2ZSA9IHBkZXY7CisJCXJldHVybiAwOworCX0KKworCWlmICgoY2xhc3Mg
PT0gUENJX0NMQVNTX0JSSURHRV9QQ0kpIHx8IChjbGFzcyA9PSBQQ0lfQ0xBU1NfQlJJREdFX0NB
UkRCVVMpKSB7CisJCWRldmljZV9jcmVhdGVfZmlsZSgmcGRldi0+ZGV2LCAmdmdhX2JyaWRnZV9h
dHRyKTsKKwl9CisJcmV0dXJuIDA7Cit9CisKKy8qIElmIHRoZSBkZXZpY2UgaXMgYSBWR0Egb3Ig
YSBicmlkZ2UsIHJlbW92ZSB0aGUgVkdBIHN5c2ZzIGF0dHJpYnV0ZSAqLworaW50IHBjaV92Z2Ff
cmVtb3ZlX2RldmljZShzdHJ1Y3QgcGNpX2RldiAqcGRldikKK3sKKwlzdHJ1Y3QgcGNpX2RldiAq
cGNpZGV2ID0gTlVMTDsKKwlpbnQgY2xhc3MgPSBwZGV2LT5jbGFzcyA+PiA4OworCisJaWYgKCF2
Z2FfaW5pdGlhbGl6ZWQpCisJCXJldHVybiAtRUFDQ0VTOworCisJaWYgKGNsYXNzID09IFBDSV9D
TEFTU19ESVNQTEFZX1ZHQSkgeworCQlkZXZpY2VfcmVtb3ZlX2ZpbGUoJnBkZXYtPmRldiwgJnZn
YV9kZXZpY2VfYXR0cik7CisKKwkJLyogcmVjb3JkIHRoZSBhY3RpdmUgYm9vdCBkZXZpY2Ugd2hl
biBsb2NhdGVkICovCisJCWlmICh2Z2FfYWN0aXZlID09IHBkZXYpIHsKKwkJCXdoaWxlICgocGNp
ZGV2ID0gcGNpX2dldF9zdWJzeXMoUENJX0FOWV9JRCwgUENJX0FOWV9JRCwgUENJX0FOWV9JRCwg
UENJX0FOWV9JRCwgcGNpZGV2KSkgIT0gTlVMTCkgeworCQkJCWNsYXNzID0gcGNpZGV2LT5jbGFz
cyA+PiA4OworCQkJCWlmIChjbGFzcyAhPSBQQ0lfQ0xBU1NfRElTUExBWV9WR0EpCisJCQkJCWNv
bnRpbnVlOworCQkJCWlmIChwY2lkZXYgPT0gcGRldikKKwkJCQkJY29udGludWU7CisJCQkJc2V0
X3N0YXRlKHBjaWRldiwgVkdBX0VOQUJMRV9USElTKTsKKwkJCQlicmVhazsKKwkJCX0KKwkJCWlm
IChwY2lkZXYgPT0gTlVMTCkKKwkJCQlzZXRfc3RhdGUoTlVMTCwgVkdBX0RJU0FCTEVfQUxMKTsK
KwkJCQorCQl9CisJCXJldHVybiAwOworCX0KKworCWlmICgoY2xhc3MgPT0gUENJX0NMQVNTX0JS
SURHRV9QQ0kpIHx8IChjbGFzcyA9PSBQQ0lfQ0xBU1NfQlJJREdFX0NBUkRCVVMpKQorCQlkZXZp
Y2VfcmVtb3ZlX2ZpbGUoJnBkZXYtPmRldiwgJnZnYV9icmlkZ2VfYXR0cik7CisKKwlyZXR1cm4g
MDsKK30KKworLyogSW5pdGlhbGl6ZSBieSBzY2FubmluZyBhbGwgZGV2aWNlcyAqLworc3RhdGlj
IGludCBfX2luaXQgdmdhX2luaXQodm9pZCkKK3sKKwlzdHJ1Y3QgcGNpX2RldiAqcGRldiA9IE5V
TEw7CisKKwl2Z2FfaW5pdGlhbGl6ZWQgPSAxOworCisJd2hpbGUgKChwZGV2ID0gcGNpX2dldF9z
dWJzeXMoUENJX0FOWV9JRCwgUENJX0FOWV9JRCwgUENJX0FOWV9JRCwgUENJX0FOWV9JRCwgcGRl
dikpICE9IE5VTEwpCisJCXBjaV92Z2FfYWRkX2RldmljZShwZGV2KTsKKwkJCisJcmV0dXJuIDA7
Cit9CisKK19faW5pdGNhbGwodmdhX2luaXQpOworCmRpZmYgLU5ydSBhL2luY2x1ZGUvbGludXgv
aW9wb3J0LmggYi9pbmNsdWRlL2xpbnV4L2lvcG9ydC5oCi0tLSBhL2luY2x1ZGUvbGludXgvaW9w
b3J0LmgJMjAwNS0wMS0yNyAwNDowMTowOCAtMDU6MDAKKysrIGIvaW5jbHVkZS9saW51eC9pb3Bv
cnQuaAkyMDA1LTAxLTI3IDA0OjAxOjA4IC0wNTowMApAQCAtNDEsNyArNDEsNiBAQAogI2RlZmlu
ZSBJT1JFU09VUkNFX0NBQ0hFQUJMRQkweDAwMDA0MDAwCiAjZGVmaW5lIElPUkVTT1VSQ0VfUkFO
R0VMRU5HVEgJMHgwMDAwODAwMAogI2RlZmluZSBJT1JFU09VUkNFX1NIQURPV0FCTEUJMHgwMDAx
MDAwMAotI2RlZmluZSBJT1JFU09VUkNFX0JVU19IQVNfVkdBCTB4MDAwODAwMDAKIAogI2RlZmlu
ZSBJT1JFU09VUkNFX0RJU0FCTEVECTB4MTAwMDAwMDAKICNkZWZpbmUgSU9SRVNPVVJDRV9VTlNF
VAkweDIwMDAwMDAwCkBAIC04Niw2ICs4NSw3IEBACiAjZGVmaW5lIElPUkVTT1VSQ0VfUk9NX0VO
QUJMRQkJKDE8PDApCS8qIFJPTSBpcyBlbmFibGVkLCBzYW1lIGFzIFBDSV9ST01fQUREUkVTU19F
TkFCTEUgKi8KICNkZWZpbmUgSU9SRVNPVVJDRV9ST01fU0hBRE9XCQkoMTw8MSkJLyogUk9NIGlz
IGNvcHkgYXQgQzAwMDowICovCiAjZGVmaW5lIElPUkVTT1VSQ0VfUk9NX0NPUFkJCSgxPDwyKQkv
KiBST00gaXMgYWxsb2MnZCBjb3B5LCByZXNvdXJjZSBmaWVsZCBvdmVybGFpZCAqLworI2RlZmlu
ZSBJT1JFU09VUkNFX1ZHQV9BQ1RJVkUJCSgxPDwzKQkvKiBWR0EgZGV2aWNlIGlzIGFjdGl2ZSAq
LwogCiAvKiBQQy9JU0Evd2hhdGV2ZXIgLSB0aGUgbm9ybWFsIFBDIGFkZHJlc3Mgc3BhY2VzOiBJ
TyBhbmQgbWVtb3J5ICovCiBleHRlcm4gc3RydWN0IHJlc291cmNlIGlvcG9ydF9yZXNvdXJjZTsK

------=_Part_588_14386459.1106819985598--
