Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S283801AbRLEIm5>; Wed, 5 Dec 2001 03:42:57 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S283804AbRLEIms>; Wed, 5 Dec 2001 03:42:48 -0500
Received: from fgwmail7.fujitsu.co.jp ([192.51.44.37]:31635 "EHLO
	fgwmail7.fujitsu.co.jp") by vger.kernel.org with ESMTP
	id <S283801AbRLEImf>; Wed, 5 Dec 2001 03:42:35 -0500
Date: Wed, 05 Dec 2001 17:42:25 +0900
Message-ID: <itbmoy6m.wl@nisaaru.dvs.cs.fujitsu.co.jp>
From: Tachino Nobuhiro <tachino@open.nm.fujitsu.co.jp>
To: Christoph Rohland <cr@sap.com>
Cc: Tachino Nobuhiro <tachino@open.nm.fujitsu.co.jp>,
        Alan Cox <alan@lxorguk.ukuu.org.uk>,
        padraig@antefacto.com (Padraig Brady),
        scho1208@yahoo.com (Roy S.C. Ho), david@gibson.dropbear.id.au,
        linux-kernel@vger.kernel.org
Subject: Re: question about kernel 2.4 ramdisk
In-Reply-To: <m3wv02oz2w.fsf@linux.local>
In-Reply-To: <3C0D2843.5060708@antefacto.com>
	<E16BLxI-0003Ic-00@the-village.bc.nu>
	<snaqhzhj.wl@nisaaru.dvs.cs.fujitsu.co.jp>
	<m3wv02oz2w.fsf@linux.local>
User-Agent: Wanderlust/2.7.6 (Too Funky) EMIKO/1.14.1 (Choanoflagellata) LIMIT/1.14.7 (Fujiidera) APEL/10.3 Emacs/21.1 (i586-kondara-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by EMIKO 1.14.1 - "Choanoflagellata")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


At 05 Dec 2001 09:23:03 +0100,
Christoph Rohland wrote:
> 
> Hi Tachino,
> 
> On Wed, 05 Dec 2001, Tachino Nobuhiro wrote:
> > +		if (!strcmp(optname, "maxfilesize") && value) {
> > +			p->filepages = simple_strtoul(value, &value, 0)
> > +				/ K_PER_PAGE;
> > +			if (*value)
> > +				return -EINVAL;
> > +		} else if (!strcmp(optname, "maxsize") && value) {
> > +			p->pages = simple_strtoul(value, &value, 0)
> > +				/ K_PER_PAGE;
> > +			if (*value)
> > +				return -EINVAL;
> > +		} else if (!strcmp(optname, "maxinodes") && value) {
> > +			p->inodes = simple_strtoul(value, &value, 0);
> > +			if (*value)
> > +				return -EINVAL;
> > +		} else if (!strcmp(optname, "maxdentries") && value) {
> > +			p->dentries = simple_strtoul(value, &value, 0);
> > +			if (*value)
> > +				return -EINVAL;
> > +		}
> 
> Please! If you do the limit checking for ramfs adapt the same options
> like shmem.c i.e. size,nr_inodes,nr_blocks,mode(+uid+gid). Don't
> invent yet another mount option set. Also give them the same
> semantics. Best would be to use shmem_parse_options.

These options are not my invention. Ramfs in 2.4.13-ac7 already has them.
But I agree the original options are not easy to understand, so if compatibility
does not matter, I am glad to change them.


> Further thought: Wouldn't it be better to add a no_swap mount option
> to shmem and try to merge the two? There is a lot of code duplication
> between mm/shmem.c and fs/ramfs/inode.c.
> 

I thought that too. but I don't know it should be done in stable kernel series.
