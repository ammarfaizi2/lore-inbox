Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S293182AbSCOTXP>; Fri, 15 Mar 2002 14:23:15 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S293201AbSCOTXJ>; Fri, 15 Mar 2002 14:23:09 -0500
Received: from neon-gw-l3.transmeta.com ([63.209.4.196]:37137 "EHLO
	neon-gw.transmeta.com") by vger.kernel.org with ESMTP
	id <S293190AbSCOTWP>; Fri, 15 Mar 2002 14:22:15 -0500
Date: Fri, 15 Mar 2002 11:20:24 -0800 (PST)
From: Linus Torvalds <torvalds@transmeta.com>
To: Larry McVoy <lm@bitmover.com>
cc: <linux-kernel@vger.kernel.org>
Subject: Re: Linux 2.4 and BitKeeper
In-Reply-To: <20020315111022.S29887@work.bitmover.com>
Message-ID: <Pine.LNX.4.33.0203151110130.29289-100000@penguin.transmeta.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


On Fri, 15 Mar 2002, Larry McVoy wrote:
> 
> By "your way" you mean "the current way", right?  In which case, the future
> option I described is OK, right?  Or am I still missing something?

No, the future option looks fine. I suspect that when you go for a real 
integrated database, you'll automatically get all the features I like.

>  I used the user level NFS server and you could do a 
> 
> 	mount -o ro,rev=v.2.5.5 -tnfs /home/BK/repository/xxxx v2.5.5
> 
> and it worked just fine.  I personally hate this because there is no way that
> I have ever seen to make filesystem semantics == SCM semantics.  It turns into
> a hack for read/write.  If it made you happy to do this for read only, hey,
> there's a nice newbie project.

The thing is, I think that the "work area" really is overrated.

There's no reason to have a work area at all if you just had:
 - read-only filesystem for grep/make (autogenerated)
 - separate commands for editing

I don't find it depressing at all to have to use "bk editor" to edit a
file. I just aliased that one, and I'm all done. That's why I don't think
that the filesystem interface should have revisions or writeability: once
you get into those things, the filesystem abstractions simply aren't valid
any more.

But reading the current contents (as opposed to reading some revision) of 
the thing _is_ a perfectly valid thing to do, where the FS interfaces do 
actually map perfectly.

> Whoops, sorry, try it with -Ur, the -U says "user files only, skip the BK crud"

That's better. It doesn't fix the pipe example, though. You're missing the 
-l option to grep etc..

		Linus

