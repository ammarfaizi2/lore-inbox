Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1751103AbVI1WC4@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751103AbVI1WC4 (ORCPT <rfc822;willy@w.ods.org>);
	Wed, 28 Sep 2005 18:02:56 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751111AbVI1WC4
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 28 Sep 2005 18:02:56 -0400
Received: from mail0.lsil.com ([147.145.40.20]:61670 "EHLO mail0.lsil.com")
	by vger.kernel.org with ESMTP id S1751053AbVI1WCz (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 28 Sep 2005 18:02:55 -0400
Message-ID: <91888D455306F94EBD4D168954A9457C04181C2F@nacos172.co.lsil.com>
From: "Bhattacharjee, Satadal" <Satadal.Bhattacharjee@engenio.com>
To: "'linux-kernel@vger.kernel.org'" <linux-kernel@vger.kernel.org>
Cc: "Bagalkote, Sreenivas" <Sreenivas.Bagalkote@engenio.com>,
       "Patro, Sumant" <Sumant.Patro@engenio.com>,
       "Ram, Hari" <hari.ram@engenio.com>,
       "Mukker, Atul" <Atul.Mukker@engenio.com>
Subject: Registering for multiple SIGIO within a process
Date: Wed, 28 Sep 2005 16:02:53 -0600
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2658.27)
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

Hi, 
I have hit a typical situation where I am having issues with signals. Below
is the description of the issue. 
There are two separate Host Bus Adapters (HBA) connected to the system. Each
HBA has its own driver loaded in the kernel.

There are two separate shared objects to talk to each of the drivers. One
shared object does not communicate with the other one.

Each shared object has function within it to register with kernel to receive
SIGIO when an event is generated by the HBA. Driver received the event from
the HBA and sends SIGIO to the kernel.

There is an application (executable) which loads the two shared objects.
Application then calls function within the shared object to register events
from HBA.

When driver generates a signal, the shared object which registered last,
receives the signal. The first registration never receives any signal.

Now I checked the man pages and found out that you can register for the same
signal only once from a process. 
We tried to change the signal from SIGIO to SIGUSER1 in one of the shared
object. But on checking the kernel code we realized that only SIGIO is
supported. 

So can somebody suggest what is the correct mechanism to register with the
kernel for receiving multiple signals from a single process?

I am not subscribed to the list, so please copy me in the CC field when
replying. 
The shared object code snippet for registration is below: 
struct sigaction sa; 
int oflags; 
int rc = 0; 
// setup the signal handler 
memset(&sa, 0, sizeof(struct sigaction)); 
sa.sa_handler = &AENSignalHandler; // AENSignalHandler is the signal handler

//sa.sa_flags = SA_ONESHOT; 
sigfillset(&sa.sa_mask); 
sigaction(SIGIO, &sa, NULL); 
//aen_do_registration - enable driver to send us SIGIO for event
notification 
rc = fcntl(ghMegaDev, F_SETOWN, getpid()); // ghMegaDev is the handle to the
driver 
if (rc < 0) { 
perror("AEN: registration, F_SETOWN"); 
return SL_ERR_LINUX_AEN_INIT_FAILED; 
} 
oflags = fcntl(ghMegaDev, F_GETFL); 
rc = fcntl(ghMegaDev, F_SETFL, oflags| FASYNC); 
if (rc < 0) { 
perror("setup_aen_handler: Failed to set ASYNC flag\n"); 
return SL_ERR_LINUX_AEN_INIT_FAILED; 
} 
***************************************************************** 
Satadal Bhattacharjee, 
LSI Logic Corp., 
3098 W Warren Ave, 
Fremont, CA, 94539 
satadalb@lsil.com 
(408) 433-4204 

