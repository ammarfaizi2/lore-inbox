Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1750731AbWJJNRg@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1750731AbWJJNRg (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 10 Oct 2006 09:17:36 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1750734AbWJJNRg
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 10 Oct 2006 09:17:36 -0400
Received: from tomts25.bellnexxia.net ([209.226.175.188]:183 "EHLO
	tomts25-srv.bellnexxia.net") by vger.kernel.org with ESMTP
	id S1750731AbWJJNRe (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 10 Oct 2006 09:17:34 -0400
Date: Tue, 10 Oct 2006 09:17:29 -0400
From: Mathieu Desnoyers <compudj@krystal.dyndns.org>
To: dean gaudet <dean@arctic.org>
Cc: Martin Bligh <mbligh@google.com>, "Frank Ch. Eigler" <fche@redhat.com>,
       Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>, prasanna@in.ibm.com,
       Andrew Morton <akpm@osdl.org>, Ingo Molnar <mingo@elte.hu>,
       Paul Mundt <lethal@linux-sh.org>,
       linux-kernel <linux-kernel@vger.kernel.org>, Jes Sorensen <jes@sgi.com>,
       Tom Zanussi <zanussi@us.ibm.com>,
       Richard J Moore <richardj_moore@uk.ibm.com>,
       Michel Dagenais <michel.dagenais@polymtl.ca>,
       Christoph Hellwig <hch@infradead.org>,
       Greg Kroah-Hartman <gregkh@suse.de>,
       Thomas Gleixner <tglx@linutronix.de>, William Cohen <wcohen@redhat.com>,
       ltt-dev@shafik.org, systemtap@sources.redhat.com,
       Alan Cox <alan@lxorguk.ukuu.org.uk>,
       Jeremy Fitzhardinge <jeremy@goop.org>,
       Karim Yaghmour <karim@opersys.com>, Pavel Machek <pavel@suse.cz>,
       Joe Perches <joe@perches.com>, "Randy.Dunlap" <rdunlap@xenotime.net>,
       "Jose R. Santos" <jrs@us.ibm.com>
Subject: Re: Performance analysis of Linux Kernel Markers 0.20 for 2.6.17
Message-ID: <20061010131729.GC6200@Krystal>
References: <20060930180157.GA25761@Krystal> <Pine.LNX.4.64.0610081223150.28503@twinlark.arctic.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.64.0610081223150.28503@twinlark.arctic.org>
X-Editor: vi
X-Info: http://krystal.dyndns.org:8080
X-Operating-System: Linux/2.4.32-grsec (i686)
X-Uptime: 09:12:58 up 48 days, 10:21,  4 users,  load average: 0.22, 0.92, 1.18
User-Agent: Mutt/1.5.13 (2006-08-11)
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

* dean gaudet (dean@arctic.org) wrote:
> On Sat, 30 Sep 2006, Mathieu Desnoyers wrote:
> 
> > - Optimized
> > 
> > static int my_open(struct inode *inode, struct file *file)
> > {
> >    0:   55                      push   %ebp
> >    1:   89 e5                   mov    %esp,%ebp
> >    3:   83 ec 0c                sub    $0xc,%esp
> >         MARK(subsys_mark1, "%d %p", 1, NULL);
> >    6:   b0 00                   mov    $0x0,%al <-- immediate load 0 in al
> >    8:   84 c0                   test   %al,%al
> >    a:   75 07                   jne    13 <my_open+0x13>
> 
> why not replace the mov+test with "xor %eax,%eax" and then change the 0x75 
> to a 0x74 to change from jne to je when you want to enable the marker?
> 
> i.e. disabled:
> 
> 	31 c0	xor %eax,%eax
> 	75 07	jne 13
> 
> enabled:
> 
> 	31 c0	xor %eax,%eax
> 	74 07	je 13
> 
> it would save 2 bytes, 1 instruction and avoid partial register writes... 
> and still has the nice property that a single byte store into the code is 
> required for enable/disable (which sounds like a great property -- i 
> assume you were deliberately going for that).
> 
> i assume there's probably no reason to tie the sequence to eax either -- 
> you could let gcc choose it (or maybe you already do).
> 
Hi dean,

Yes, good idea. I effectively did the 1 byte write to make sure it could be
coherent for any code alignment on the machine. The only problem with modifying
the jne into a je is this : How can we take a pointer to this assembly
instruction when it is generated by gcc ? We can always search for an
instruction pattern after the inline assembly, but we have no guarantee that
gcc will not put any code between the inline asm and the actual jne.

Mathieu

OpenPGP public key:              http://krystal.dyndns.org:8080/key/compudj.gpg
Key fingerprint:     8CD5 52C3 8E3C 4140 715F  BA06 3F25 A8FE 3BAE 9A68 
