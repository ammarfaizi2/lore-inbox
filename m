Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S264363AbTLVJVT (ORCPT <rfc822;willy@w.ods.org>);
	Mon, 22 Dec 2003 04:21:19 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S264364AbTLVJVS
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Mon, 22 Dec 2003 04:21:18 -0500
Received: from sv1.valinux.co.jp ([210.128.90.2]:47579 "EHLO sv1.valinux.co.jp")
	by vger.kernel.org with ESMTP id S264363AbTLVJVR (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Mon, 22 Dec 2003 04:21:17 -0500
Date: Mon, 22 Dec 2003 18:21:16 +0900
From: IWAMOTO Toshihiro <iwamoto@valinux.co.jp>
To: akpm@osdl.org
Cc: linux-kernel@vger.kernel.org
Subject: [PATCH] memory leak with execve failure
User-Agent: Wanderlust/2.8.1 (Something) SEMI/1.14.3 (Ushinoya) FLIM/1.14.3
 (=?ISO-8859-4?Q?Unebigory=F2mae?=) APEL/10.3 Emacs/21.2
 (i386-debian-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.3 - "Ushinoya")
Content-Type: text/plain; charset=US-ASCII
Message-Id: <20031222092116.2BBF47007E@sv1.valinux.co.jp>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

I found linux-2.6.0-test11 leaks memory when execve fails.
I've also checked the bitkeeper tree and the problem seems to be
unchanged.

The attached patch is a partial backout of bitkeeper rev. 1.87 of
fs/exec.c.  I guess the original change was a simple mistake.
(free_arg_pages() is a NOP when CONFIG_MMU is defined).

--- linux-2.6.0-test11/fs/exec.c	Thu Nov 27 05:43:36 2003
+++ linux-2.6.0-test11-new/fs/exec.c	Mon Dec 22 17:50:24 2003
@@ -1070,6 +1070,7 @@ int do_execve(char * filename,
 	struct linux_binprm bprm;
 	struct file *file;
 	int retval;
+	int i;
 
 	sched_balance_exec();
 
@@ -1138,7 +1139,11 @@ int do_execve(char * filename,
 
 out:
 	/* Something went wrong, return the inode and free the argument pages*/
-	free_arg_pages(&bprm);
+	for (i = 0 ; i < MAX_ARG_PAGES ; i++) {
+		struct page * page = bprm.page[i];
+		if (page)
+			__free_page(page);
+	}
 
 	if (bprm.security)
 		security_bprm_free(&bprm);


--
IWAMOTO Toshihiro

