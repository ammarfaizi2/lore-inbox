Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S293638AbSB1UfC>; Thu, 28 Feb 2002 15:35:02 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S293727AbSB1UcJ>; Thu, 28 Feb 2002 15:32:09 -0500
Received: from nixpbe.pdb.sbs.de ([192.109.2.33]:19948 "EHLO nixpbe.pdb.sbs.de")
	by vger.kernel.org with ESMTP id <S293723AbSB1UbH>;
	Thu, 28 Feb 2002 15:31:07 -0500
Date: Thu, 28 Feb 2002 21:34:18 +0100 (CET)
From: Martin Wilck <Martin.Wilck@fujitsu-siemens.com>
To: Linux Kernel mailing list <linux-kernel@vger.kernel.org>
Subject: ioperm() / iopl() irritation
Message-ID: <Pine.LNX.4.33.0202282128170.25655-100000@biker.pdb.fsc.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


A short question that may be dumb:

In the docs on i386 IO protection that I know, it is said that
the processor ANDs the two protection mechanisms offered by the
IOPL flag and the io permission bitmap. That is, if IO permissions
are granted through iopl(), but ports are masked in the IO permission
bitmap, a segmentation fault should arise.

Such a situation should be generated by code like this:

  iopl(3);
  ioperm (0,0x1f,1); /* 0x20-0x3ff remain masked */
  c = inb (0x20);

However on my machine this codse is successful! How is that possible?
(If the iopl() statement is commented out, the code segfaults of course).

Martin

-- 
Martin Wilck                Phone: +49 5251 8 15113
Fujitsu Siemens Computers   Fax:   +49 5251 8 20409
Heinz-Nixdorf-Ring 1	    mailto:Martin.Wilck@Fujitsu-Siemens.com
D-33106 Paderborn           http://www.fujitsu-siemens.com/primergy






