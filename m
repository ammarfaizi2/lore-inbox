Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S280410AbRK1T33>; Wed, 28 Nov 2001 14:29:29 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S280402AbRK1T3T>; Wed, 28 Nov 2001 14:29:19 -0500
Received: from dsl-65-186-161-49.telocity.com ([65.186.161.49]:31758 "EHLO
	nic.osagesoftware.com") by vger.kernel.org with ESMTP
	id <S280430AbRK1T3J>; Wed, 28 Nov 2001 14:29:09 -0500
Message-Id: <4.3.2.7.2.20011128142619.00b1a380@mail.osagesoftware.com>
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Wed, 28 Nov 2001 14:29:07 -0500
To: lkml <linux-kernel@vger.kernel.org>
From: David Relson <relson@osagesoftware.com>
Subject: Re: Compilation problem in ndisc.c / 2.5.1-pre2 : possible gcc
  bug?
In-Reply-To: <Pine.LNX.3.95.1011128140806.5756A-100000@chaos.analogic.co
 m>
In-Reply-To: <slrna0ad1m.4ia.spamtrap@dexter.hensema.xs4all.nl>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

At 02:09 PM 11/28/01, you wrote:
>On 28 Nov 2001, Erik Hensema wrote:
>
> >
> > I've been looking into the compile problems of net/ipv6/ndisc.c in
> > 2.5.1-pre2 and I found that the asm generated by gcc (2.95.3) is wrong:
> >
> > This is a small part of a diff betweem two asm files generated by gcc, note
> > the missing \n's in the wrong code:
> >
> > -
> > -             addl 0(%ebp), %edx
> > -             adcl 4(%ebp), %edx
> > -             adcl 8(%ebp), %edx
> > -             adcl 12(%ebp), %edx
> > -             adcl 0(%ecx), %edx
> > -             adcl 4(%ecx), %edx
> > -             adcl 8(%ecx), %edx
> > -             adcl 12(%ecx), %edx
> > -             adcl %edi, %edx
> > -             adcl %eax, %edx
> > -             adcl $0, %edx
> > -
> > +     addl 0(%ebp), %edxadcl 4(%ebp), %edxadcl 8(%ebp), %edxadcl 
> 12(%ebp), %edxadcl 0(%ecx), %edxadcl 4(%ecx), %edxadcl 8(%ecx), %edxadcl 
> 12(%ecx), %edxadcl %edi, %edxadcl %eax, %edxadcl $0, %edx
>
>
>This is probably just some loop unrolling, not some as you say "wrong
>code".

The lack of \n's is wrong.  Adding \n's and some whitespace, gives 
identical code.  Looks like a defective printf() in gcc.

David


