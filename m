Return-Path: <linux-kernel-owner+willy=40w.ods.org-S262345AbUKKTxn@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262345AbUKKTxn (ORCPT <rfc822;willy@w.ods.org>);
	Thu, 11 Nov 2004 14:53:43 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262334AbUKKTxJ
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Thu, 11 Nov 2004 14:53:09 -0500
Received: from bay-bridge.veritas.com ([143.127.3.10]:33746 "EHLO
	MTVMIME01.enterprise.veritas.com") by vger.kernel.org with ESMTP
	id S262332AbUKKTtG (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Thu, 11 Nov 2004 14:49:06 -0500
Date: Thu, 11 Nov 2004 19:48:45 +0000 (GMT)
From: Hugh Dickins <hugh@veritas.com>
X-X-Sender: hugh@localhost.localdomain
To: Brent Casavant <bcasavan@sgi.com>
cc: "Martin J. Bligh" <mbligh@aracnet.com>, Andi Kleen <ak@suse.de>,
       "Adam J. Richter" <adam@yggdrasil.com>, <colpatch@us.ibm.com>,
       <linux-kernel@vger.kernel.org>, <linux-mm@kvack.org>
Subject: Re: [PATCH] Use MPOL_INTERLEAVE for tmpfs files
In-Reply-To: <Pine.LNX.4.44.0411091824070.5130-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.44.0411111929370.2939-300000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="8323328-272375429-1100202525=:2939"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--8323328-272375429-1100202525=:2939
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Tue, 9 Nov 2004, Hugh Dickins wrote:
> 
> Not to say that your patch or Adam's will go further (I've no objection
> to the way Adam is using tmpfs, but no opinion on the future of devfs),
> but they're two hints that I should rework that to get out of people's
> way.  I'll do a patch for that, then another something like yours on
> top, for you to go back and check.
> 
> I think the option should be "mpol=interleave" rather than just
> "interleave", who knows what baroque mpols we might want to support
> there in future?

Okay, two pattachments.

The first (against 2.6.10-rc1-mm5) being my reversion of NULL sbinfo
in shmem.c, to make it easier for others to add things into sbinfo
without having to worry about NULL cases.  So that goes back to
allocating an sbinfo even for the internal mount: I've rounded up to
L1_CACHE_BYTES to avoid false sharing, but even so, please test it out
on your 512-way to make sure I haven't screwed up the scalability we
got before - thanks.  If you find it okay, I'll send to akpm soonish.

The second (against the first) being my take on your patch, with
mpol=interleave, and minor alterations which may irritate you so much
you'll revert them immediately! (mainly, using MPOL_INTERLEAVE and
MPOL_DEFAULT within shmem.c rather than defining separate flags).
Only slightly tested at this end.

Hugh

--8323328-272375429-1100202525=:2939
Content-Type: TEXT/PLAIN; charset=US-ASCII; name="tmpfs1.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.LNX.4.44.0411111948450.2939@localhost.localdomain>
Content-Description: revert NULL sbinfo
Content-Disposition: attachment; filename="tmpfs1.patch"

LS0tIDIuNi4xMC1yYzEtbW01L0RvY3VtZW50YXRpb24vZmlsZXN5c3RlbXMv
dG1wZnMudHh0CTIwMDQtMTAtMTggMjI6NTU6NTMuMDAwMDAwMDAwICswMTAw
DQorKysgdG1wZnMxL0RvY3VtZW50YXRpb24vZmlsZXN5c3RlbXMvdG1wZnMu
dHh0CTIwMDQtMTEtMTEgMTk6MjQ6MTQuNDM4MTIxMTIwICswMDAwDQpAQCAt
NzEsOCArNzEsOCBAQCBjYW4gYmUgY2hhbmdlZCBvbiByZW1vdW50LiAgVGhl
IHNpemUgcGFyDQogdG8gbGltaXQgdGhpcyB0bXBmcyBpbnN0YW5jZSB0byB0
aGF0IHBlcmNlbnRhZ2Ugb2YgeW91ciBwaHlzaWNhbCBSQU06DQogdGhlIGRl
ZmF1bHQsIHdoZW4gbmVpdGhlciBzaXplIG5vciBucl9ibG9ja3MgaXMgc3Bl
Y2lmaWVkLCBpcyBzaXplPTUwJQ0KIA0KLUlmIGJvdGggbnJfYmxvY2tzIChv
ciBzaXplKSBhbmQgbnJfaW5vZGVzIGFyZSBzZXQgdG8gMCwgbmVpdGhlciBi
bG9ja3MNCi1ub3IgaW5vZGVzIHdpbGwgYmUgbGltaXRlZCBpbiB0aGF0IGlu
c3RhbmNlLiAgSXQgaXMgZ2VuZXJhbGx5IHVud2lzZSB0bw0KK0lmIG5yX2Js
b2Nrcz0wIChvciBzaXplPTApLCBibG9ja3Mgd2lsbCBub3QgYmUgbGltaXRl
ZCBpbiB0aGF0IGluc3RhbmNlOw0KK2lmIG5yX2lub2Rlcz0wLCBpbm9kZXMg
d2lsbCBub3QgYmUgbGltaXRlZC4gIEl0IGlzIGdlbmVyYWxseSB1bndpc2Ug
dG8NCiBtb3VudCB3aXRoIHN1Y2ggb3B0aW9ucywgc2luY2UgaXQgYWxsb3dz
IGFueSB1c2VyIHdpdGggd3JpdGUgYWNjZXNzIHRvDQogdXNlIHVwIGFsbCB0
aGUgbWVtb3J5IG9uIHRoZSBtYWNoaW5lOyBidXQgZW5oYW5jZXMgdGhlIHNj
YWxhYmlsaXR5IG9mDQogdGhhdCBpbnN0YW5jZSBpbiBhIHN5c3RlbSB3aXRo
IG1hbnkgY3B1cyBtYWtpbmcgaW50ZW5zaXZlIHVzZSBvZiBpdC4NCkBAIC05
Nyw0ICs5Nyw0IEBAIFJBTS9TV0FQIGluIDEwMjQwIGlub2RlcyBhbmQgaXQg
aXMgb25seSANCiBBdXRob3I6DQogICAgQ2hyaXN0b3BoIFJvaGxhbmQgPGNy
QHNhcC5jb20+LCAxLjEyLjAxDQogVXBkYXRlZDoNCi0gICBIdWdoIERpY2tp
bnMgPGh1Z2hAdmVyaXRhcy5jb20+LCAwMSBTZXB0ZW1iZXIgMjAwNA0KKyAg
IEh1Z2ggRGlja2lucyA8aHVnaEB2ZXJpdGFzLmNvbT4sIDEwIE5vdmVtYmVy
IDIwMDQNCi0tLSAyLjYuMTAtcmMxLW1tNS9tbS9zaG1lbS5jCTIwMDQtMTEt
MTEgMTI6NDA6MTMuMDAwMDAwMDAwICswMDAwDQorKysgdG1wZnMxL21tL3No
bWVtLmMJMjAwNC0xMS0xMSAxOToyNDoxNC40NDExMjA2NjQgKzAwMDANCkBA
IC0xOTQsNyArMTk0LDcgQEAgc3RhdGljIHNwaW5sb2NrX3Qgc2htZW1fc3dh
cGxpc3RfbG9jayA9IA0KIHN0YXRpYyB2b2lkIHNobWVtX2ZyZWVfYmxvY2tz
KHN0cnVjdCBpbm9kZSAqaW5vZGUsIGxvbmcgcGFnZXMpDQogew0KIAlzdHJ1
Y3Qgc2htZW1fc2JfaW5mbyAqc2JpbmZvID0gU0hNRU1fU0IoaW5vZGUtPmlf
c2IpOw0KLQlpZiAoc2JpbmZvKSB7DQorCWlmIChzYmluZm8tPm1heF9ibG9j
a3MpIHsNCiAJCXNwaW5fbG9jaygmc2JpbmZvLT5zdGF0X2xvY2spOw0KIAkJ
c2JpbmZvLT5mcmVlX2Jsb2NrcyArPSBwYWdlczsNCiAJCWlub2RlLT5pX2Js
b2NrcyAtPSBwYWdlcypCTE9DS1NfUEVSX1BBR0U7DQpAQCAtMzU3LDcgKzM1
Nyw3IEBAIHN0YXRpYyBzd3BfZW50cnlfdCAqc2htZW1fc3dwX2FsbG9jKHN0
cnUNCiAJCSAqIHBhZ2UgKGFuZCBwZXJoYXBzIGluZGlyZWN0IGluZGV4IHBh
Z2VzKSB5ZXQgdG8gYWxsb2NhdGU6DQogCQkgKiBhIHdhc3RlIHRvIGFsbG9j
YXRlIGluZGV4IGlmIHdlIGNhbm5vdCBhbGxvY2F0ZSBkYXRhLg0KIAkJICov
DQotCQlpZiAoc2JpbmZvKSB7DQorCQlpZiAoc2JpbmZvLT5tYXhfYmxvY2tz
KSB7DQogCQkJc3Bpbl9sb2NrKCZzYmluZm8tPnN0YXRfbG9jayk7DQogCQkJ
aWYgKHNiaW5mby0+ZnJlZV9ibG9ja3MgPD0gMSkgew0KIAkJCQlzcGluX3Vu
bG9jaygmc2JpbmZvLT5zdGF0X2xvY2spOw0KQEAgLTY3OCw4ICs2NzgsOCBA
QCBzdGF0aWMgdm9pZCBzaG1lbV9kZWxldGVfaW5vZGUoc3RydWN0IGluDQog
CQkJc3Bpbl91bmxvY2soJnNobWVtX3N3YXBsaXN0X2xvY2spOw0KIAkJfQ0K
IAl9DQotCWlmIChzYmluZm8pIHsNCi0JCUJVR19PTihpbm9kZS0+aV9ibG9j
a3MpOw0KKwlCVUdfT04oaW5vZGUtPmlfYmxvY2tzKTsNCisJaWYgKHNiaW5m
by0+bWF4X2lub2Rlcykgew0KIAkJc3Bpbl9sb2NrKCZzYmluZm8tPnN0YXRf
bG9jayk7DQogCQlzYmluZm8tPmZyZWVfaW5vZGVzKys7DQogCQlzcGluX3Vu
bG9jaygmc2JpbmZvLT5zdGF0X2xvY2spOw0KQEAgLTEwODEsNyArMTA4MSw3
IEBAIHJlcGVhdDoNCiAJfSBlbHNlIHsNCiAJCXNobWVtX3N3cF91bm1hcChl
bnRyeSk7DQogCQlzYmluZm8gPSBTSE1FTV9TQihpbm9kZS0+aV9zYik7DQot
CQlpZiAoc2JpbmZvKSB7DQorCQlpZiAoc2JpbmZvLT5tYXhfYmxvY2tzKSB7
DQogCQkJc3Bpbl9sb2NrKCZzYmluZm8tPnN0YXRfbG9jayk7DQogCQkJaWYg
KHNiaW5mby0+ZnJlZV9ibG9ja3MgPT0gMCB8fA0KIAkJCSAgICBzaG1lbV9h
Y2N0X2Jsb2NrKGluZm8tPmZsYWdzKSkgew0KQEAgLTEyNjksNyArMTI2OSw3
IEBAIHNobWVtX2dldF9pbm9kZShzdHJ1Y3Qgc3VwZXJfYmxvY2sgKnNiLCAN
CiAJc3RydWN0IHNobWVtX2lub2RlX2luZm8gKmluZm87DQogCXN0cnVjdCBz
aG1lbV9zYl9pbmZvICpzYmluZm8gPSBTSE1FTV9TQihzYik7DQogDQotCWlm
IChzYmluZm8pIHsNCisJaWYgKHNiaW5mby0+bWF4X2lub2Rlcykgew0KIAkJ
c3Bpbl9sb2NrKCZzYmluZm8tPnN0YXRfbG9jayk7DQogCQlpZiAoIXNiaW5m
by0+ZnJlZV9pbm9kZXMpIHsNCiAJCQlzcGluX3VubG9jaygmc2JpbmZvLT5z
dGF0X2xvY2spOw0KQEAgLTEzMTksMzEgKzEzMTksNiBAQCBzaG1lbV9nZXRf
aW5vZGUoc3RydWN0IHN1cGVyX2Jsb2NrICpzYiwgDQogfQ0KIA0KICNpZmRl
ZiBDT05GSUdfVE1QRlMNCi0NCi1zdGF0aWMgaW50IHNobWVtX3NldF9zaXpl
KHN0cnVjdCBzaG1lbV9zYl9pbmZvICpzYmluZm8sDQotCQkJICB1bnNpZ25l
ZCBsb25nIG1heF9ibG9ja3MsIHVuc2lnbmVkIGxvbmcgbWF4X2lub2RlcykN
Ci17DQotCWludCBlcnJvcjsNCi0JdW5zaWduZWQgbG9uZyBibG9ja3MsIGlu
b2RlczsNCi0NCi0Jc3Bpbl9sb2NrKCZzYmluZm8tPnN0YXRfbG9jayk7DQot
CWJsb2NrcyA9IHNiaW5mby0+bWF4X2Jsb2NrcyAtIHNiaW5mby0+ZnJlZV9i
bG9ja3M7DQotCWlub2RlcyA9IHNiaW5mby0+bWF4X2lub2RlcyAtIHNiaW5m
by0+ZnJlZV9pbm9kZXM7DQotCWVycm9yID0gLUVJTlZBTDsNCi0JaWYgKG1h
eF9ibG9ja3MgPCBibG9ja3MpDQotCQlnb3RvIG91dDsNCi0JaWYgKG1heF9p
bm9kZXMgPCBpbm9kZXMpDQotCQlnb3RvIG91dDsNCi0JZXJyb3IgPSAwOw0K
LQlzYmluZm8tPm1heF9ibG9ja3MgID0gbWF4X2Jsb2NrczsNCi0Jc2JpbmZv
LT5mcmVlX2Jsb2NrcyA9IG1heF9ibG9ja3MgLSBibG9ja3M7DQotCXNiaW5m
by0+bWF4X2lub2RlcyAgPSBtYXhfaW5vZGVzOw0KLQlzYmluZm8tPmZyZWVf
aW5vZGVzID0gbWF4X2lub2RlcyAtIGlub2RlczsNCi1vdXQ6DQotCXNwaW5f
dW5sb2NrKCZzYmluZm8tPnN0YXRfbG9jayk7DQotCXJldHVybiBlcnJvcjsN
Ci19DQotDQogc3RhdGljIHN0cnVjdCBpbm9kZV9vcGVyYXRpb25zIHNobWVt
X3N5bWxpbmtfaW5vZGVfb3BlcmF0aW9uczsNCiBzdGF0aWMgc3RydWN0IGlu
b2RlX29wZXJhdGlvbnMgc2htZW1fc3ltbGlua19pbmxpbmVfb3BlcmF0aW9u
czsNCiANCkBAIC0xNTk4LDE1ICsxNTczLDE3IEBAIHN0YXRpYyBpbnQgc2ht
ZW1fc3RhdGZzKHN0cnVjdCBzdXBlcl9ibG8NCiAJYnVmLT5mX3R5cGUgPSBU
TVBGU19NQUdJQzsNCiAJYnVmLT5mX2JzaXplID0gUEFHRV9DQUNIRV9TSVpF
Ow0KIAlidWYtPmZfbmFtZWxlbiA9IE5BTUVfTUFYOw0KLQlpZiAoc2JpbmZv
KSB7DQotCQlzcGluX2xvY2soJnNiaW5mby0+c3RhdF9sb2NrKTsNCisJc3Bp
bl9sb2NrKCZzYmluZm8tPnN0YXRfbG9jayk7DQorCWlmIChzYmluZm8tPm1h
eF9ibG9ja3MpIHsNCiAJCWJ1Zi0+Zl9ibG9ja3MgPSBzYmluZm8tPm1heF9i
bG9ja3M7DQogCQlidWYtPmZfYmF2YWlsID0gYnVmLT5mX2JmcmVlID0gc2Jp
bmZvLT5mcmVlX2Jsb2NrczsNCisJfQ0KKwlpZiAoc2JpbmZvLT5tYXhfaW5v
ZGVzKSB7DQogCQlidWYtPmZfZmlsZXMgPSBzYmluZm8tPm1heF9pbm9kZXM7
DQogCQlidWYtPmZfZmZyZWUgPSBzYmluZm8tPmZyZWVfaW5vZGVzOw0KLQkJ
c3Bpbl91bmxvY2soJnNiaW5mby0+c3RhdF9sb2NrKTsNCiAJfQ0KIAkvKiBl
bHNlIGxlYXZlIHRob3NlIGZpZWxkcyAwIGxpa2Ugc2ltcGxlX3N0YXRmcyAq
Lw0KKwlzcGluX3VubG9jaygmc2JpbmZvLT5zdGF0X2xvY2spOw0KIAlyZXR1
cm4gMDsNCiB9DQogDQpAQCAtMTY2Myw3ICsxNjQwLDcgQEAgc3RhdGljIGlu
dCBzaG1lbV9saW5rKHN0cnVjdCBkZW50cnkgKm9sZA0KIAkgKiBidXQgZWFj
aCBuZXcgbGluayBuZWVkcyBhIG5ldyBkZW50cnksIHBpbm5pbmcgbG93bWVt
LCBhbmQNCiAJICogdG1wZnMgZGVudHJpZXMgY2Fubm90IGJlIHBydW5lZCB1
bnRpbCB0aGV5IGFyZSB1bmxpbmtlZC4NCiAJICovDQotCWlmIChzYmluZm8p
IHsNCisJaWYgKHNiaW5mby0+bWF4X2lub2Rlcykgew0KIAkJc3Bpbl9sb2Nr
KCZzYmluZm8tPnN0YXRfbG9jayk7DQogCQlpZiAoIXNiaW5mby0+ZnJlZV9p
bm9kZXMpIHsNCiAJCQlzcGluX3VubG9jaygmc2JpbmZvLT5zdGF0X2xvY2sp
Ow0KQEAgLTE2ODgsNyArMTY2NSw3IEBAIHN0YXRpYyBpbnQgc2htZW1fdW5s
aW5rKHN0cnVjdCBpbm9kZSAqZGkNCiANCiAJaWYgKGlub2RlLT5pX25saW5r
ID4gMSAmJiAhU19JU0RJUihpbm9kZS0+aV9tb2RlKSkgew0KIAkJc3RydWN0
IHNobWVtX3NiX2luZm8gKnNiaW5mbyA9IFNITUVNX1NCKGlub2RlLT5pX3Ni
KTsNCi0JCWlmIChzYmluZm8pIHsNCisJCWlmIChzYmluZm8tPm1heF9pbm9k
ZXMpIHsNCiAJCQlzcGluX2xvY2soJnNiaW5mby0+c3RhdF9sb2NrKTsNCiAJ
CQlzYmluZm8tPmZyZWVfaW5vZGVzKys7DQogCQkJc3Bpbl91bmxvY2soJnNi
aW5mby0+c3RhdF9sb2NrKTsNCkBAIC0xOTEyLDIyICsxODg5LDQyIEBAIGJh
ZF92YWw6DQogc3RhdGljIGludCBzaG1lbV9yZW1vdW50X2ZzKHN0cnVjdCBz
dXBlcl9ibG9jayAqc2IsIGludCAqZmxhZ3MsIGNoYXIgKmRhdGEpDQogew0K
IAlzdHJ1Y3Qgc2htZW1fc2JfaW5mbyAqc2JpbmZvID0gU0hNRU1fU0Ioc2Ip
Ow0KLQl1bnNpZ25lZCBsb25nIG1heF9ibG9ja3MgPSAwOw0KLQl1bnNpZ25l
ZCBsb25nIG1heF9pbm9kZXMgPSAwOw0KKwl1bnNpZ25lZCBsb25nIG1heF9i
bG9ja3MgPSBzYmluZm8tPm1heF9ibG9ja3M7DQorCXVuc2lnbmVkIGxvbmcg
bWF4X2lub2RlcyA9IHNiaW5mby0+bWF4X2lub2RlczsNCisJdW5zaWduZWQg
bG9uZyBibG9ja3M7DQorCXVuc2lnbmVkIGxvbmcgaW5vZGVzOw0KKwlpbnQg
ZXJyb3IgPSAtRUlOVkFMOw0KIA0KLQlpZiAoc2JpbmZvKSB7DQotCQltYXhf
YmxvY2tzID0gc2JpbmZvLT5tYXhfYmxvY2tzOw0KLQkJbWF4X2lub2RlcyA9
IHNiaW5mby0+bWF4X2lub2RlczsNCi0JfQ0KLQlpZiAoc2htZW1fcGFyc2Vf
b3B0aW9ucyhkYXRhLCBOVUxMLCBOVUxMLCBOVUxMLCAmbWF4X2Jsb2Nrcywg
Jm1heF9pbm9kZXMpKQ0KLQkJcmV0dXJuIC1FSU5WQUw7DQotCS8qIEtlZXAg
aXQgc2ltcGxlOiBkaXNhbGxvdyBsaW1pdGVkIDwtPiB1bmxpbWl0ZWQgcmVt
b3VudCAqLw0KLQlpZiAoKG1heF9ibG9ja3MgfHwgbWF4X2lub2RlcykgPT0g
IXNiaW5mbykNCi0JCXJldHVybiAtRUlOVkFMOw0KLQkvKiBCdXQgYWxsb3cg
dGhlIHBvaW50bGVzcyB1bmxpbWl0ZWQgLT4gdW5saW1pdGVkIHJlbW91bnQg
Ki8NCi0JaWYgKCFzYmluZm8pDQotCQlyZXR1cm4gMDsNCi0JcmV0dXJuIHNo
bWVtX3NldF9zaXplKHNiaW5mbywgbWF4X2Jsb2NrcywgbWF4X2lub2Rlcyk7
DQorCWlmIChzaG1lbV9wYXJzZV9vcHRpb25zKGRhdGEsIE5VTEwsIE5VTEws
IE5VTEwsDQorCQkJCSZtYXhfYmxvY2tzLCAmbWF4X2lub2RlcykpDQorCQly
ZXR1cm4gZXJyb3I7DQorDQorCXNwaW5fbG9jaygmc2JpbmZvLT5zdGF0X2xv
Y2spOw0KKwlibG9ja3MgPSBzYmluZm8tPm1heF9ibG9ja3MgLSBzYmluZm8t
PmZyZWVfYmxvY2tzOw0KKwlpbm9kZXMgPSBzYmluZm8tPm1heF9pbm9kZXMg
LSBzYmluZm8tPmZyZWVfaW5vZGVzOw0KKwlpZiAobWF4X2Jsb2NrcyA8IGJs
b2NrcykNCisJCWdvdG8gb3V0Ow0KKwlpZiAobWF4X2lub2RlcyA8IGlub2Rl
cykNCisJCWdvdG8gb3V0Ow0KKwkvKg0KKwkgKiBUaG9zZSB0ZXN0cyBhbHNv
IGRpc2FsbG93IGxpbWl0ZWQtPnVubGltaXRlZCB3aGlsZSBhbnkgYXJlIGlu
DQorCSAqIHVzZSwgc28gaV9ibG9ja3Mgd2lsbCBhbHdheXMgYmUgemVybyB3
aGVuIG1heF9ibG9ja3MgaXMgemVybzsNCisJICogYnV0IHdlIG11c3Qgc2Vw
YXJhdGVseSBkaXNhbGxvdyB1bmxpbWl0ZWQtPmxpbWl0ZWQsIGJlY2F1c2UN
CisJICogaW4gdGhhdCBjYXNlIHdlIGhhdmUgbm8gcmVjb3JkIG9mIGhvdyBt
dWNoIGlzIGFscmVhZHkgaW4gdXNlLg0KKwkgKi8NCisJaWYgKG1heF9ibG9j
a3MgJiYgIXNiaW5mby0+bWF4X2Jsb2NrcykNCisJCWdvdG8gb3V0Ow0KKwlp
ZiAobWF4X2lub2RlcyAmJiAhc2JpbmZvLT5tYXhfaW5vZGVzKQ0KKwkJZ290
byBvdXQ7DQorDQorCWVycm9yID0gMDsNCisJc2JpbmZvLT5tYXhfYmxvY2tz
ICA9IG1heF9ibG9ja3M7DQorCXNiaW5mby0+ZnJlZV9ibG9ja3MgPSBtYXhf
YmxvY2tzIC0gYmxvY2tzOw0KKwlzYmluZm8tPm1heF9pbm9kZXMgID0gbWF4
X2lub2RlczsNCisJc2JpbmZvLT5mcmVlX2lub2RlcyA9IG1heF9pbm9kZXMg
LSBpbm9kZXM7DQorb3V0Og0KKwlzcGluX3VubG9jaygmc2JpbmZvLT5zdGF0
X2xvY2spOw0KKwlyZXR1cm4gZXJyb3I7DQogfQ0KICNlbmRpZg0KIA0KQEAg
LTE5NTIsMTEgKzE5NDksMTEgQEAgc3RhdGljIGludCBzaG1lbV9maWxsX3N1
cGVyKHN0cnVjdCBzdXBlcg0KIAl1aWRfdCB1aWQgPSBjdXJyZW50LT5mc3Vp
ZDsNCiAJZ2lkX3QgZ2lkID0gY3VycmVudC0+ZnNnaWQ7DQogCWludCBlcnIg
PSAtRU5PTUVNOw0KLQ0KLSNpZmRlZiBDT05GSUdfVE1QRlMNCisJc3RydWN0
IHNobWVtX3NiX2luZm8gKnNiaW5mbzsNCiAJdW5zaWduZWQgbG9uZyBibG9j
a3MgPSAwOw0KIAl1bnNpZ25lZCBsb25nIGlub2RlcyA9IDA7DQogDQorI2lm
ZGVmIENPTkZJR19UTVBGUw0KIAkvKg0KIAkgKiBQZXIgZGVmYXVsdCB3ZSBv
bmx5IGFsbG93IGhhbGYgb2YgdGhlIHBoeXNpY2FsIHJhbSBwZXINCiAJICog
dG1wZnMgaW5zdGFuY2UsIGxpbWl0aW5nIGlub2RlcyB0byBvbmUgcGVyIHBh
Z2Ugb2YgbG93bWVtOw0KQEAgLTE5NjcsMzQgKzE5NjQsMzQgQEAgc3RhdGlj
IGludCBzaG1lbV9maWxsX3N1cGVyKHN0cnVjdCBzdXBlcg0KIAkJaW5vZGVz
ID0gdG90YWxyYW1fcGFnZXMgLSB0b3RhbGhpZ2hfcGFnZXM7DQogCQlpZiAo
aW5vZGVzID4gYmxvY2tzKQ0KIAkJCWlub2RlcyA9IGJsb2NrczsNCi0NCi0J
CWlmIChzaG1lbV9wYXJzZV9vcHRpb25zKGRhdGEsICZtb2RlLA0KLQkJCQkJ
JnVpZCwgJmdpZCwgJmJsb2NrcywgJmlub2RlcykpDQorCQlpZiAoc2htZW1f
cGFyc2Vfb3B0aW9ucyhkYXRhLCAmbW9kZSwgJnVpZCwgJmdpZCwNCisJCQkJ
CSZibG9ja3MsICZpbm9kZXMpKQ0KIAkJCXJldHVybiAtRUlOVkFMOw0KIAl9
DQotDQotCWlmIChibG9ja3MgfHwgaW5vZGVzKSB7DQotCQlzdHJ1Y3Qgc2ht
ZW1fc2JfaW5mbyAqc2JpbmZvOw0KLQkJc2JpbmZvID0ga21hbGxvYyhzaXpl
b2Yoc3RydWN0IHNobWVtX3NiX2luZm8pLCBHRlBfS0VSTkVMKTsNCi0JCWlm
ICghc2JpbmZvKQ0KLQkJCXJldHVybiAtRU5PTUVNOw0KLQkJc2ItPnNfZnNf
aW5mbyA9IHNiaW5mbzsNCi0JCXNwaW5fbG9ja19pbml0KCZzYmluZm8tPnN0
YXRfbG9jayk7DQotCQlzYmluZm8tPm1heF9ibG9ja3MgPSBibG9ja3M7DQot
CQlzYmluZm8tPmZyZWVfYmxvY2tzID0gYmxvY2tzOw0KLQkJc2JpbmZvLT5t
YXhfaW5vZGVzID0gaW5vZGVzOw0KLQkJc2JpbmZvLT5mcmVlX2lub2RlcyA9
IGlub2RlczsNCi0JfQ0KLQlzYi0+c194YXR0ciA9IHNobWVtX3hhdHRyX2hh
bmRsZXJzOw0KICNlbHNlDQogCXNiLT5zX2ZsYWdzIHw9IE1TX05PVVNFUjsN
CiAjZW5kaWYNCiANCisJLyogUm91bmQgdXAgdG8gTDFfQ0FDSEVfQllURVMg
dG8gcmVzaXN0IGZhbHNlIHNoYXJpbmcgKi8NCisJc2JpbmZvID0ga21hbGxv
YyhtYXgoKGludClzaXplb2Yoc3RydWN0IHNobWVtX3NiX2luZm8pLA0KKwkJ
CQlMMV9DQUNIRV9CWVRFUyksIEdGUF9LRVJORUwpOw0KKwlpZiAoIXNiaW5m
bykNCisJCXJldHVybiAtRU5PTUVNOw0KKw0KKwlzcGluX2xvY2tfaW5pdCgm
c2JpbmZvLT5zdGF0X2xvY2spOw0KKwlzYmluZm8tPm1heF9ibG9ja3MgPSBi
bG9ja3M7DQorCXNiaW5mby0+ZnJlZV9ibG9ja3MgPSBibG9ja3M7DQorCXNi
aW5mby0+bWF4X2lub2RlcyA9IGlub2RlczsNCisJc2JpbmZvLT5mcmVlX2lu
b2RlcyA9IGlub2RlczsNCisNCisJc2ItPnNfZnNfaW5mbyA9IHNiaW5mbzsN
CiAJc2ItPnNfbWF4Ynl0ZXMgPSBTSE1FTV9NQVhfQllURVM7DQogCXNiLT5z
X2Jsb2Nrc2l6ZSA9IFBBR0VfQ0FDSEVfU0laRTsNCiAJc2ItPnNfYmxvY2tz
aXplX2JpdHMgPSBQQUdFX0NBQ0hFX1NISUZUOw0KIAlzYi0+c19tYWdpYyA9
IFRNUEZTX01BR0lDOw0KIAlzYi0+c19vcCA9ICZzaG1lbV9vcHM7DQorCXNi
LT5zX3hhdHRyID0gc2htZW1feGF0dHJfaGFuZGxlcnM7DQorDQogCWlub2Rl
ID0gc2htZW1fZ2V0X2lub2RlKHNiLCBTX0lGRElSIHwgbW9kZSwgMCk7DQog
CWlmICghaW5vZGUpDQogCQlnb3RvIGZhaWxlZDsNCg==
--8323328-272375429-1100202525=:2939
Content-Type: TEXT/PLAIN; charset=US-ASCII; name="tmpfs2.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.LNX.4.44.0411111948451.2939@localhost.localdomain>
Content-Description: mpol=interleave
Content-Disposition: attachment; filename="tmpfs2.patch"

LS0tIHRtcGZzMS9Eb2N1bWVudGF0aW9uL2ZpbGVzeXN0ZW1zL3RtcGZzLnR4
dAkyMDA0LTExLTExIDE5OjI0OjE0LjQzODEyMTEyMCArMDAwMA0KKysrIHRt
cGZzMi9Eb2N1bWVudGF0aW9uL2ZpbGVzeXN0ZW1zL3RtcGZzLnR4dAkyMDA0
LTExLTExIDE5OjI0OjMyLjE3MzQyNDk0NCArMDAwMA0KQEAgLTc4LDYgKzc4
LDEyIEBAIHVzZSB1cCBhbGwgdGhlIG1lbW9yeSBvbiB0aGUgbWFjaGluZTsg
YnUNCiB0aGF0IGluc3RhbmNlIGluIGEgc3lzdGVtIHdpdGggbWFueSBjcHVz
IG1ha2luZyBpbnRlbnNpdmUgdXNlIG9mIGl0Lg0KIA0KIA0KK3RtcGZzIGhh
cyBhIG1vdW50IG9wdGlvbiB0byBzZXQgdGhlIE5VTUEgbWVtb3J5IGFsbG9j
YXRpb24gcG9saWN5IGZvcg0KK2FsbCBmaWxlcyBpbiB0aGF0IGluc3RhbmNl
Og0KK21wb2w9aW50ZXJsZWF2ZQkJcHJlZmVycyB0byBhbGxvY2F0ZSBtZW1v
cnkgZnJvbSBlYWNoIG5vZGUgaW4gdHVybg0KK21wb2w9ZGVmYXVsdAkJcHJl
ZmVycyB0byBhbGxvY2F0ZSBtZW1vcnkgZnJvbSB0aGUgbG9jYWwgbm9kZQ0K
Kw0KKw0KIFRvIHNwZWNpZnkgdGhlIGluaXRpYWwgcm9vdCBkaXJlY3Rvcnkg
eW91IGNhbiB1c2UgdGhlIGZvbGxvd2luZyBtb3VudA0KIG9wdGlvbnM6DQog
DQotLS0gdG1wZnMxL2ZzL2h1Z2V0bGJmcy9pbm9kZS5jCTIwMDQtMTEtMTEg
MTI6Mzk6NTkuMDAwMDAwMDAwICswMDAwDQorKysgdG1wZnMyL2ZzL2h1Z2V0
bGJmcy9pbm9kZS5jCTIwMDQtMTEtMTEgMTk6MjQ6MzIuMTc0NDI0NzkyICsw
MDAwDQpAQCAtNDAwLDcgKzQwMCw3IEBAIHN0YXRpYyBzdHJ1Y3QgaW5vZGUg
Kmh1Z2V0bGJmc19nZXRfaW5vZGUNCiAJCWlub2RlLT5pX21hcHBpbmctPmJh
Y2tpbmdfZGV2X2luZm8gPSZodWdldGxiZnNfYmFja2luZ19kZXZfaW5mbzsN
CiAJCWlub2RlLT5pX2F0aW1lID0gaW5vZGUtPmlfbXRpbWUgPSBpbm9kZS0+
aV9jdGltZSA9IENVUlJFTlRfVElNRTsNCiAJCWluZm8gPSBIVUdFVExCRlNf
SShpbm9kZSk7DQotCQltcG9sX3NoYXJlZF9wb2xpY3lfaW5pdCgmaW5mby0+
cG9saWN5KTsNCisJCW1wb2xfc2hhcmVkX3BvbGljeV9pbml0KCZpbmZvLT5w
b2xpY3ksIE1QT0xfREVGQVVMVCk7DQogCQlzd2l0Y2ggKG1vZGUgJiBTX0lG
TVQpIHsNCiAJCWRlZmF1bHQ6DQogCQkJaW5pdF9zcGVjaWFsX2lub2RlKGlu
b2RlLCBtb2RlLCBkZXYpOw0KLS0tIHRtcGZzMS9pbmNsdWRlL2xpbnV4L21l
bXBvbGljeS5oCTIwMDQtMTEtMTEgMTI6NDA6MDkuMDAwMDAwMDAwICswMDAw
DQorKysgdG1wZnMyL2luY2x1ZGUvbGludXgvbWVtcG9saWN5LmgJMjAwNC0x
MS0xMSAxOToyNDozMi4xNzU0MjQ2NDAgKzAwMDANCkBAIC0xMzcsMTIgKzEz
Nyw3IEBAIHN0cnVjdCBzaGFyZWRfcG9saWN5IHsNCiAJc3BpbmxvY2tfdCBs
b2NrOw0KIH07DQogDQotc3RhdGljIGlubGluZSB2b2lkIG1wb2xfc2hhcmVk
X3BvbGljeV9pbml0KHN0cnVjdCBzaGFyZWRfcG9saWN5ICppbmZvKQ0KLXsN
Ci0JaW5mby0+cm9vdCA9IFJCX1JPT1Q7DQotCXNwaW5fbG9ja19pbml0KCZp
bmZvLT5sb2NrKTsNCi19DQotDQordm9pZCBtcG9sX3NoYXJlZF9wb2xpY3lf
aW5pdChzdHJ1Y3Qgc2hhcmVkX3BvbGljeSAqaW5mbywgaW50IHBvbGljeSk7
DQogaW50IG1wb2xfc2V0X3NoYXJlZF9wb2xpY3koc3RydWN0IHNoYXJlZF9w
b2xpY3kgKmluZm8sDQogCQkJCXN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1h
LA0KIAkJCQlzdHJ1Y3QgbWVtcG9saWN5ICpuZXcpOw0KQEAgLTE5OCw3ICsx
OTMsOCBAQCBzdGF0aWMgaW5saW5lIGludCBtcG9sX3NldF9zaGFyZWRfcG9s
aWN5DQogCXJldHVybiAtRUlOVkFMOw0KIH0NCiANCi1zdGF0aWMgaW5saW5l
IHZvaWQgbXBvbF9zaGFyZWRfcG9saWN5X2luaXQoc3RydWN0IHNoYXJlZF9w
b2xpY3kgKmluZm8pDQorc3RhdGljIGlubGluZSB2b2lkIG1wb2xfc2hhcmVk
X3BvbGljeV9pbml0KHN0cnVjdCBzaGFyZWRfcG9saWN5ICppbmZvLA0KKwkJ
CQkJaW50IHBvbGljeSkNCiB7DQogfQ0KIA0KLS0tIHRtcGZzMS9pbmNsdWRl
L2xpbnV4L3NobWVtX2ZzLmgJMjAwNC0xMC0xOCAyMjo1Njo1MC4wMDAwMDAw
MDAgKzAxMDANCisrKyB0bXBmczIvaW5jbHVkZS9saW51eC9zaG1lbV9mcy5o
CTIwMDQtMTEtMTEgMTk6MjQ6MzIuMTc1NDI0NjQwICswMDAwDQpAQCAtMjYs
NiArMjYsNyBAQCBzdHJ1Y3Qgc2htZW1fc2JfaW5mbyB7DQogCXVuc2lnbmVk
IGxvbmcgZnJlZV9ibG9ja3M7ICAvKiBIb3cgbWFueSBhcmUgbGVmdCBmb3Ig
YWxsb2NhdGlvbiAqLw0KIAl1bnNpZ25lZCBsb25nIG1heF9pbm9kZXM7ICAg
LyogSG93IG1hbnkgaW5vZGVzIGFyZSBhbGxvd2VkICovDQogCXVuc2lnbmVk
IGxvbmcgZnJlZV9pbm9kZXM7ICAvKiBIb3cgbWFueSBhcmUgbGVmdCBmb3Ig
YWxsb2NhdGlvbiAqLw0KKwlpbnQgcG9saWN5OwkJICAgIC8qIERlZmF1bHQg
TlVNQSBtZW1vcnkgYWxsb2MgcG9saWN5ICovDQogCXNwaW5sb2NrX3QgICAg
c3RhdF9sb2NrOw0KIH07DQogDQotLS0gdG1wZnMxL21tL21lbXBvbGljeS5j
CTIwMDQtMTEtMTEgMTI6NDA6MTIuMDAwMDAwMDAwICswMDAwDQorKysgdG1w
ZnMyL21tL21lbXBvbGljeS5jCTIwMDQtMTEtMTEgMTk6MjQ6MzIuMTc2NDI0
NDg4ICswMDAwDQpAQCAtMTA2MCw2ICsxMDYwLDI4IEBAIHJlc3RhcnQ6DQog
CXJldHVybiAwOw0KIH0NCiANCit2b2lkIG1wb2xfc2hhcmVkX3BvbGljeV9p
bml0KHN0cnVjdCBzaGFyZWRfcG9saWN5ICppbmZvLCBpbnQgcG9saWN5KQ0K
K3sNCisJaW5mby0+cm9vdCA9IFJCX1JPT1Q7DQorCXNwaW5fbG9ja19pbml0
KCZpbmZvLT5sb2NrKTsNCisNCisJaWYgKHBvbGljeSAhPSBNUE9MX0RFRkFV
TFQpIHsNCisJCXN0cnVjdCBtZW1wb2xpY3kgKm5ld3BvbDsNCisNCisJCS8q
IEZhbGxzIGJhY2sgdG8gTVBPTF9ERUZBVUxUIG9uIGFueSBlcnJvciAqLw0K
KwkJbmV3cG9sID0gbXBvbF9uZXcocG9saWN5LCBub2Rlc19hZGRyKG5vZGVf
b25saW5lX21hcCkpOw0KKwkJaWYgKCFJU19FUlIobmV3cG9sKSkgew0KKwkJ
CS8qIENyZWF0ZSBwc2V1ZG8tdm1hIHRoYXQgY29udGFpbnMganVzdCB0aGUg
cG9saWN5ICovDQorCQkJc3RydWN0IHZtX2FyZWFfc3RydWN0IHB2bWE7DQor
DQorCQkJbWVtc2V0KCZwdm1hLCAwLCBzaXplb2Yoc3RydWN0IHZtX2FyZWFf
c3RydWN0KSk7DQorCQkJLyogUG9saWN5IGNvdmVycyBlbnRpcmUgZmlsZSAq
Lw0KKwkJCXB2bWEudm1fZW5kID0gfjBVTDsNCisJCQltcG9sX3NldF9zaGFy
ZWRfcG9saWN5KGluZm8sICZwdm1hLCBuZXdwb2wpOw0KKwkJfQ0KKwl9DQor
fQ0KKw0KIGludCBtcG9sX3NldF9zaGFyZWRfcG9saWN5KHN0cnVjdCBzaGFy
ZWRfcG9saWN5ICppbmZvLA0KIAkJCXN0cnVjdCB2bV9hcmVhX3N0cnVjdCAq
dm1hLCBzdHJ1Y3QgbWVtcG9saWN5ICpucG9sKQ0KIHsNCi0tLSB0bXBmczEv
bW0vc2htZW0uYwkyMDA0LTExLTExIDE5OjI0OjE0LjQ0MTEyMDY2NCArMDAw
MA0KKysrIHRtcGZzMi9tbS9zaG1lbS5jCTIwMDQtMTEtMTEgMTk6MjQ6MzIu
MTc4NDI0MTg0ICswMDAwDQpAQCAtMTI5Miw3ICsxMjkyLDcgQEAgc2htZW1f
Z2V0X2lub2RlKHN0cnVjdCBzdXBlcl9ibG9jayAqc2IsIA0KIAkJaW5mbyA9
IFNITUVNX0koaW5vZGUpOw0KIAkJbWVtc2V0KGluZm8sIDAsIChjaGFyICop
aW5vZGUgLSAoY2hhciAqKWluZm8pOw0KIAkJc3Bpbl9sb2NrX2luaXQoJmlu
Zm8tPmxvY2spOw0KLSAJCW1wb2xfc2hhcmVkX3BvbGljeV9pbml0KCZpbmZv
LT5wb2xpY3kpOw0KKyAJCW1wb2xfc2hhcmVkX3BvbGljeV9pbml0KCZpbmZv
LT5wb2xpY3ksIHNiaW5mby0+cG9saWN5KTsNCiAJCUlOSVRfTElTVF9IRUFE
KCZpbmZvLT5zd2FwbGlzdCk7DQogDQogCQlzd2l0Y2ggKG1vZGUgJiBTX0lG
TVQpIHsNCkBAIC0xODE3LDcgKzE4MTcsNyBAQCBzdGF0aWMgc3RydWN0IGlu
b2RlX29wZXJhdGlvbnMgc2htZW1fc3ltDQogI2VuZGlmDQogfTsNCiANCi1z
dGF0aWMgaW50IHNobWVtX3BhcnNlX29wdGlvbnMoY2hhciAqb3B0aW9ucywg
aW50ICptb2RlLCB1aWRfdCAqdWlkLCBnaWRfdCAqZ2lkLCB1bnNpZ25lZCBs
b25nICpibG9ja3MsIHVuc2lnbmVkIGxvbmcgKmlub2RlcykNCitzdGF0aWMg
aW50IHNobWVtX3BhcnNlX29wdGlvbnMoY2hhciAqb3B0aW9ucywgaW50ICpt
b2RlLCB1aWRfdCAqdWlkLCBnaWRfdCAqZ2lkLCB1bnNpZ25lZCBsb25nICpi
bG9ja3MsIHVuc2lnbmVkIGxvbmcgKmlub2RlcywgaW50ICpwb2xpY3kpDQog
ew0KIAljaGFyICp0aGlzX2NoYXIsICp2YWx1ZSwgKnJlc3Q7DQogDQpAQCAt
MTg3MSw2ICsxODcxLDEzIEBAIHN0YXRpYyBpbnQgc2htZW1fcGFyc2Vfb3B0
aW9ucyhjaGFyICpvcHQNCiAJCQkqZ2lkID0gc2ltcGxlX3N0cnRvdWwodmFs
dWUsJnJlc3QsMCk7DQogCQkJaWYgKCpyZXN0KQ0KIAkJCQlnb3RvIGJhZF92
YWw7DQorCQl9IGVsc2UgaWYgKCFzdHJjbXAodGhpc19jaGFyLCJtcG9sIikp
IHsNCisJCQlpZiAoIXN0cmNtcCh2YWx1ZSwiaW50ZXJsZWF2ZSIpKQ0KKwkJ
CQkqcG9saWN5ID0gTVBPTF9JTlRFUkxFQVZFOw0KKwkJCWVsc2UgaWYgKCFz
dHJjbXAodmFsdWUsImRlZmF1bHQiKSkNCisJCQkJKnBvbGljeSA9IE1QT0xf
REVGQVVMVDsNCisJCQllbHNlDQorCQkJCWdvdG8gYmFkX3ZhbDsNCiAJCX0g
ZWxzZSB7DQogCQkJcHJpbnRrKEtFUk5fRVJSICJ0bXBmczogQmFkIG1vdW50
IG9wdGlvbiAlc1xuIiwNCiAJCQkgICAgICAgdGhpc19jaGFyKTsNCkBAIC0x
ODkxLDEyICsxODk4LDEzIEBAIHN0YXRpYyBpbnQgc2htZW1fcmVtb3VudF9m
cyhzdHJ1Y3Qgc3VwZXINCiAJc3RydWN0IHNobWVtX3NiX2luZm8gKnNiaW5m
byA9IFNITUVNX1NCKHNiKTsNCiAJdW5zaWduZWQgbG9uZyBtYXhfYmxvY2tz
ID0gc2JpbmZvLT5tYXhfYmxvY2tzOw0KIAl1bnNpZ25lZCBsb25nIG1heF9p
bm9kZXMgPSBzYmluZm8tPm1heF9pbm9kZXM7DQorCWludCBwb2xpY3kgPSBz
YmluZm8tPnBvbGljeTsNCiAJdW5zaWduZWQgbG9uZyBibG9ja3M7DQogCXVu
c2lnbmVkIGxvbmcgaW5vZGVzOw0KIAlpbnQgZXJyb3IgPSAtRUlOVkFMOw0K
IA0KIAlpZiAoc2htZW1fcGFyc2Vfb3B0aW9ucyhkYXRhLCBOVUxMLCBOVUxM
LCBOVUxMLA0KLQkJCQkmbWF4X2Jsb2NrcywgJm1heF9pbm9kZXMpKQ0KKwkJ
CQkmbWF4X2Jsb2NrcywgJm1heF9pbm9kZXMsICZwb2xpY3kpKQ0KIAkJcmV0
dXJuIGVycm9yOw0KIA0KIAlzcGluX2xvY2soJnNiaW5mby0+c3RhdF9sb2Nr
KTsNCkBAIC0xOTIyLDYgKzE5MzAsNyBAQCBzdGF0aWMgaW50IHNobWVtX3Jl
bW91bnRfZnMoc3RydWN0IHN1cGVyDQogCXNiaW5mby0+ZnJlZV9ibG9ja3Mg
PSBtYXhfYmxvY2tzIC0gYmxvY2tzOw0KIAlzYmluZm8tPm1heF9pbm9kZXMg
ID0gbWF4X2lub2RlczsNCiAJc2JpbmZvLT5mcmVlX2lub2RlcyA9IG1heF9p
bm9kZXMgLSBpbm9kZXM7DQorCXNiaW5mby0+cG9saWN5ID0gcG9saWN5Ow0K
IG91dDoNCiAJc3Bpbl91bmxvY2soJnNiaW5mby0+c3RhdF9sb2NrKTsNCiAJ
cmV0dXJuIGVycm9yOw0KQEAgLTE5NTIsNiArMTk2MSw3IEBAIHN0YXRpYyBp
bnQgc2htZW1fZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXINCiAJc3RydWN0IHNo
bWVtX3NiX2luZm8gKnNiaW5mbzsNCiAJdW5zaWduZWQgbG9uZyBibG9ja3Mg
PSAwOw0KIAl1bnNpZ25lZCBsb25nIGlub2RlcyA9IDA7DQorCWludCBwb2xp
Y3kgPSBNUE9MX0RFRkFVTFQ7DQogDQogI2lmZGVmIENPTkZJR19UTVBGUw0K
IAkvKg0KQEAgLTE5NjUsNyArMTk3NSw3IEBAIHN0YXRpYyBpbnQgc2htZW1f
ZmlsbF9zdXBlcihzdHJ1Y3Qgc3VwZXINCiAJCWlmIChpbm9kZXMgPiBibG9j
a3MpDQogCQkJaW5vZGVzID0gYmxvY2tzOw0KIAkJaWYgKHNobWVtX3BhcnNl
X29wdGlvbnMoZGF0YSwgJm1vZGUsICZ1aWQsICZnaWQsDQotCQkJCQkmYmxv
Y2tzLCAmaW5vZGVzKSkNCisJCQkJCSZibG9ja3MsICZpbm9kZXMsICZwb2xp
Y3kpKQ0KIAkJCXJldHVybiAtRUlOVkFMOw0KIAl9DQogI2Vsc2UNCkBAIC0x
OTgzLDYgKzE5OTMsNyBAQCBzdGF0aWMgaW50IHNobWVtX2ZpbGxfc3VwZXIo
c3RydWN0IHN1cGVyDQogCXNiaW5mby0+ZnJlZV9ibG9ja3MgPSBibG9ja3M7
DQogCXNiaW5mby0+bWF4X2lub2RlcyA9IGlub2RlczsNCiAJc2JpbmZvLT5m
cmVlX2lub2RlcyA9IGlub2RlczsNCisJc2JpbmZvLT5wb2xpY3kgPSBwb2xp
Y3k7DQogDQogCXNiLT5zX2ZzX2luZm8gPSBzYmluZm87DQogCXNiLT5zX21h
eGJ5dGVzID0gU0hNRU1fTUFYX0JZVEVTOw0K
--8323328-272375429-1100202525=:2939--
