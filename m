Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1030451AbWEZEvL@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1030451AbWEZEvL (ORCPT <rfc822;willy@w.ods.org>);
	Fri, 26 May 2006 00:51:11 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1030444AbWEZEvL
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Fri, 26 May 2006 00:51:11 -0400
Received: from sandesha.sasken.com ([164.164.56.19]:7363 "EHLO
	mail3.sasken.com") by vger.kernel.org with ESMTP id S1030451AbWEZEvJ
	(ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Fri, 26 May 2006 00:51:09 -0400
From: "Bharti" <bhartig@sasken.com>
Subject: Re: trapping key press using signals
Date: Fri, 26 May 2006 10:20:59 +0530
Message-ID: <e561fo$f9p$1@ncc-t.sasken.com>
References: <ds7ggl$jc4$1@ncc-m.sasken.com>
X-Priority: 3
X-MSMail-Priority: Normal
X-Newsreader: Microsoft Outlook Express 6.00.2900.2180
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180
X-RFC2646: Format=Flowed; Response
To: linux-kernel@vger.kernel.org
X-News-Gateway: ncc-z.sasken.com
X-imss-version: 2.037
X-imss-result: Passed
X-imss-scores: Clean:13.97904 C:2 M:3 S:5 R:5
X-imss-settings: Baseline:3 C:2 M:3 S:3 R:3 (0.5000 0.5000)
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


Hi,

       With reference to your question : How to catch signals generated by 
key press using signals i would like to share a piece of code which will 
help you understand  the concept more easily.

There are basically 3 ways to send singnals to Processes:
1.Using the keyboard : Like Ctrl-C , this causes the system to send an INT 
signal (SIGINT) to the running process by default it causes the process to 
immediately  terminate. Another one is Ctrl-Z  (SIGTSTP) which causes the 
process to suspend execution and Ctrl-\ (SIGABRT) which does the same as 
Ctrl-C but gives us some better flexibility.
Here is the piece of code snippet that causes the progeam to print the 
string "Testing Code to understand" when a user presses Ctrl-C:

#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>
#include<signal.h>
void catch_int(sig_num)
{
   /* re-set the signal handler again to catch_int, for next time*/
signal(SIGINT,catch_int);
printf("Testing Code to understand\n");
fflush(stdout);
}

int main(int argc,char* argv[])
{
/*set the INT (Ctrl-C) signal handler to 'catch_int' */
signal(SIGINT,catch_int);
/*now,lets get into an infinite loop of doing nothing.*/
for(;;)
     pause();
}

The pause() system call causes the process to halt execution, until a signal 
is received. It is suerly  better than a 'busy wait' infinite loop.


2. Sending signals from the command Line: Like Kill
 kill-<signal><PID>
If no signal name or number is specified, by default TERM signal is sent to 
the process.
3. Using Susyem Calls:  This way of generating signals is acheived by using 
Kill system call (normal of sending a signal from one process to another).

Bye,
Bharti.

"pdn" <preetham@sasken.com> wrote in message 
news:ds7ggl$jc4$1@ncc-m.sasken.com...
> Hi,
>        How do i catch the signals generated by keypress using signals.
>
> 



"SASKEN RATED Among THE Top 3 BEST COMPANIES TO WORK FOR IN INDIA - SURVEY 2005 conducted by the BUSINESS TODAY - Mercer - TNS India"

                           SASKEN BUSINESS DISCLAIMER
This message may contain confidential, proprietary or legally Privileged information. In case you are not the original intended Recipient of the message, you must not, directly or indirectly, use, Disclose, distribute, print, or copy any part of this message and you are requested to delete it and inform the sender. Any views expressed in this message are those of the individual sender unless otherwise stated. Nothing contained in this message shall be construed as an offer or acceptance of any offer by Sasken Communication Technologies Limited ("Sasken") unless sent with that express intent and with due authority of Sasken. Sasken has taken enough precautions to prevent the spread of viruses. However the company accepts no liability for any damage caused by any virus transmitted by this email
