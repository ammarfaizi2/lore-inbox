Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S271661AbTGRAgp (ORCPT <rfc822;willy@w.ods.org>);
	Thu, 17 Jul 2003 20:36:45 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S271659AbTGRAgo
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Thu, 17 Jul 2003 20:36:44 -0400
Received: from fmr01.intel.com ([192.55.52.18]:5095 "EHLO hermes.fm.intel.com")
	by vger.kernel.org with ESMTP id S271664AbTGRAfF (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 17 Jul 2003 20:35:05 -0400
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----_=_NextPart_001_01C34CC6.826CCBE6"
X-MimeOLE: Produced By Microsoft Exchange V6.0.6375.0
Subject: [RFC][PATCH] EFI support for ia32 kernel
Date: Thu, 17 Jul 2003 17:49:57 -0700
Message-ID: <D36CE1FCEFD3524B81CA12C6FE5BCAB002FFE552@fmsmsx406.fm.intel.com>
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator: 
Thread-Topic: [RFC][PATCH] EFI support for ia32 kernel
Thread-Index: AcNMxnziuYJhFJS5RdCgaIi7OS68QQ==
From: "Tolentino, Matthew E" <matthew.e.tolentino@intel.com>
To: <linux-kernel@vger.kernel.org>
Cc: <Matt_Domsch@Dell.com>,
       "Matt Tolentino" <metolent@snoqualmie.dp.intel.com>,
       "Patterson, David H" <david.h.patterson@intel.com>,
       "Carbonari, Steven" <steven.carbonari@intel.com>,
       "Luck, Tony" <tony.luck@intel.com>
X-OriginalArrivalTime: 18 Jul 2003 00:49:57.0729 (UTC) FILETIME=[82BEE510:01C34CC6]
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.

------_=_NextPart_001_01C34CC6.826CCBE6
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Hi,

Attached is a patch against 2.6.0-test1 that enables Extensible Firmware =
Interface (EFI) awareness in ia32 Linux kernels.  Below is some =
background and pointers to further information regarding EFI.  I would =
appreciate any and all suggestions and/or comments on the changes.  =
Further, for those attending OLS next week, I would be more than happy =
to discuss any of the details of this patch and/or EFI. =20

-- What is EFI? =20
EFI is a consistent interface that standardizes the services of platform =
firmware.  EFI has been included in ia64 platforms for several years, =
and will soon be included on ia32 platforms.  More information, =
including the EFI specification and various papers and presentations =
relating to EFI can be found at =
http://developer.intel.com/technology/efi. =20

-- What does this patch do?
This patch enables kernel initialization using platform configuration =
information gleaned from EFI - details that have been traditionally =
obtained from legacy BIOS.  Instead of BIOS (INT) calls performed during =
initial kernel setup, platform hardware details are obtained from EFI by =
the loader and passed to the kernel.  For example, the EFI memory map =
provides a snapshot of system memory (including ranges, types, =
attributes, etc.) obtained by the loader in pre-boot space.  Use of the =
EFI memory map alleviates the need for the INT 15h BIOS call to get the =
e820h memory map. =20

Most of the changes to the kernel center around inclusion of EFI data =
structure parsing in the early kernel initialization.  Several files =
have been added to support EFI, several of which have been leveraged =
from ia64.  The change set includes:=20

 arch/i386/Kconfig            |   10=20
 arch/i386/kernel/Makefile    |    3=20
 arch/i386/kernel/acpi/boot.c |   28 +
 arch/i386/kernel/efi.c       |  613 =
+++++++++++++++++++++++++++++++++++++++++++
 arch/i386/kernel/efi_stub.S  |  125 ++++++++
 arch/i386/kernel/efivars.c   |  442 +++++++++++++++++++++++++++++++
 arch/i386/kernel/reboot.c    |   29 +-
 arch/i386/kernel/setup.c     |  338 +++++++++++++++--------
 arch/i386/kernel/time.c      |   60 ++++
 drivers/acpi/Kconfig         |   10=20
 drivers/acpi/osl.c           |    1=20
 fs/proc/proc_misc.c          |   22 +
 include/asm-i386/setup.h     |   28 +
 include/linux/efi.h          |   94 ++++--
 init/main.c                  |    3=20
 15 files changed, 1635 insertions(+), 171 deletions(-)

Note, this patch enables one to use the same kernel on systems with =
either legacy BIOS or EFI. This capability is provided via a mechanism =
that determines whether the kernel was booted from EFI, based on the =
presence of efi boot parameters passed by ELILO.  If the efi boot =
parameters are present, then the global flag "efi_enabled" is =
initialized, which determines the code path during early initialization. =
 Therefore, the addition of the EFI enabling code path does not affect =
the current initialization code path, but extends it.  This mechanism =
also accounts for the size of this patch, as many of the changes involve =
indentation differences based on checks of the efi_enabled global. =20

--What's next?
+ code cleanups - I still need to adjust printks and I'm sure there are =
coding style issues in this patch. =20
+ incorporation of suggestions/comments
+ testing on EFI system w/ >4GB system memory
+ move EFI variable support to a platform independent driver directory?
+ 2.4 port - I will also send out a 2.4 patch that enables equivalent =
support. =20

Comments?  Suggestions? =20

thanks,
matt


------_=_NextPart_001_01C34CC6.826CCBE6
Content-Type: application/octet-stream;
	name="linux-2.6.0-test1-efi.patch"
Content-Transfer-Encoding: base64
Content-Description: linux-2.6.0-test1-efi.patch
Content-Disposition: attachment;
	filename="linux-2.6.0-test1-efi.patch"

ZGlmZiAtdXJOIGxpbnV4LTIuNi4wLXRlc3QxL2FyY2gvaTM4Ni9LY29uZmlnIGxpbnV4LTIuNi4w
LXRlc3QxLWVmaS9hcmNoL2kzODYvS2NvbmZpZwotLS0gbGludXgtMi42LjAtdGVzdDEvYXJjaC9p
Mzg2L0tjb25maWcJMjAwMy0wNy0xNCAxMTo1NjoyMS4wMDAwMDAwMDAgLTA3MDAKKysrIGxpbnV4
LTIuNi4wLXRlc3QxLWVmaS9hcmNoL2kzODYvS2NvbmZpZwkyMDAzLTA3LTE3IDE0OjAyOjQ1LjAw
MDAwMDAwMCAtMDcwMApAQCAtNzgyLDYgKzc4MiwxNiBAQAogCiAJICBTZWUgPGZpbGU6RG9jdW1l
bnRhdGlvbi9tdHJyLnR4dD4gZm9yIG1vcmUgaW5mb3JtYXRpb24uCiAKK2NvbmZpZyBFRklfVkFS
UworCXRyaXN0YXRlICIvcHJvYy9lZmkvdmFycyBzdXBwb3J0IgorCWhlbHAKKwkgIElmIHlvdSBz
YXkgWSBoZXJlLCB5b3UgYXJlIGFibGUgdG8gZ2V0IEVGSSAoRXh0ZW5zaWJsZSBGaXJtd2FyZQor
CSAgSW50ZXJmYWNlKSB2YXJpYWJsZSBpbmZvcm1hdGlvbiBpbiAvcHJvYy9lZmkvdmFycy4gIFlv
dSBtYXkgcmVhZCwKKwkgIHdyaXRlLCBjcmVhdGUsIGFuZCBkZXN0cm95IEVGSSB2YXJpYWJsZXMg
dGhyb3VnaCB0aGlzIGludGVyZmFjZS4KKworCSAgVG8gdXNlIHRoaXMgb3B0aW9uLCB5b3UgaGF2
ZSB0byBjaGVjayB0aGF0IHRoZSAiL3Byb2MgZmlsZSBzeXN0ZW0KKwkgIHN1cHBvcnQiIChDT05G
SUdfUFJPQ19GUykgaXMgZW5hYmxlZCwgdG9vLgorCiBjb25maWcgSEFWRV9ERUNfTE9DSwogCWJv
b2wKIAlkZXBlbmRzIG9uIChTTVAgfHwgUFJFRU1QVCkgJiYgWDg2X0NNUFhDSEcKZGlmZiAtdXJO
IGxpbnV4LTIuNi4wLXRlc3QxL2FyY2gvaTM4Ni9rZXJuZWwvYWNwaS9ib290LmMgbGludXgtMi42
LjAtdGVzdDEtZWZpL2FyY2gvaTM4Ni9rZXJuZWwvYWNwaS9ib290LmMKLS0tIGxpbnV4LTIuNi4w
LXRlc3QxL2FyY2gvaTM4Ni9rZXJuZWwvYWNwaS9ib290LmMJMjAwMy0wNy0xMyAyMDozNzozMS4w
MDAwMDAwMDAgLTA3MDAKKysrIGxpbnV4LTIuNi4wLXRlc3QxLWVmaS9hcmNoL2kzODYva2VybmVs
L2FjcGkvYm9vdC5jCTIwMDMtMDctMTcgMTE6MzA6MzIuMDAwMDAwMDAwIC0wNzAwCkBAIC0yNiw2
ICsyNiw3IEBACiAjaW5jbHVkZSA8bGludXgvaW5pdC5oPgogI2luY2x1ZGUgPGxpbnV4L2NvbmZp
Zy5oPgogI2luY2x1ZGUgPGxpbnV4L2FjcGkuaD4KKyNpbmNsdWRlIDxsaW51eC9lZmkuaD4KICNp
bmNsdWRlIDxhc20vcGdhbGxvYy5oPgogI2luY2x1ZGUgPGFzbS9hcGljLmg+CiAjaW5jbHVkZSA8
YXNtL2lvLmg+CkBAIC0yNzYsMTYgKzI3NywyMyBAQAogdW5zaWduZWQgbG9uZyBfX2luaXQKIGFj
cGlfZmluZF9yc2RwICh2b2lkKQogewotCXVuc2lnbmVkIGxvbmcJCXJzZHBfcGh5cyA9IDA7Ci0K
LQkvKgotCSAqIFNjYW4gbWVtb3J5IGxvb2tpbmcgZm9yIHRoZSBSU0RQIHNpZ25hdHVyZS4gRmly
c3Qgc2VhcmNoIEVCREEgKGxvdwotCSAqIG1lbW9yeSkgcGFyYWdyYXBocyBhbmQgdGhlbiBzZWFy
Y2ggdXBwZXIgbWVtb3J5IChFMDAwMC1GRkZGRikuCi0JICovCi0JcnNkcF9waHlzID0gYWNwaV9z
Y2FuX3JzZHAgKDAsIDB4NDAwKTsKLQlpZiAoIXJzZHBfcGh5cykKLQkJcnNkcF9waHlzID0gYWNw
aV9zY2FuX3JzZHAgKDB4RTAwMDAsIDB4RkZGRkYpOwotCisJdW5zaWduZWQgbG9uZyByc2RwX3Bo
eXMgPSAwOworCWV4dGVybiBpbnQgZWZpX2VuYWJsZWQ7CisJCisJaWYgKGVmaV9lbmFibGVkKSB7
CisJCWlmIChlZmkuYWNwaTIwKQorCQkJcnNkcF9waHlzID0gX19wYShlZmkuYWNwaTIwKTsKKwkJ
ZWxzZSBpZiAoZWZpLmFjcGkpCisJCQlyc2RwX3BoeXMgPSBfX3BhKGVmaS5hY3BpKTsKKwl9IGVs
c2UgeworCQkvKgorCQkgKiBTY2FuIG1lbW9yeSBsb29raW5nIGZvciB0aGUgUlNEUCBzaWduYXR1
cmUuIEZpcnN0IHNlYXJjaCBFQkRBIChsb3cKKwkJICogbWVtb3J5KSBwYXJhZ3JhcGhzIGFuZCB0
aGVuIHNlYXJjaCB1cHBlciBtZW1vcnkgKEUwMDAwLUZGRkZGKS4KKwkJICovCisJCXJzZHBfcGh5
cyA9IGFjcGlfc2Nhbl9yc2RwICgwLCAweDQwMCk7CisJCWlmICghcnNkcF9waHlzKQorCQkJcnNk
cF9waHlzID0gYWNwaV9zY2FuX3JzZHAgKDB4RTAwMDAsIDB4RkZGRkYpOworCX0KIAlyZXR1cm4g
cnNkcF9waHlzOwogfQogCmRpZmYgLXVyTiBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYva2Vy
bmVsL2VmaS5jIGxpbnV4LTIuNi4wLXRlc3QxLWVmaS9hcmNoL2kzODYva2VybmVsL2VmaS5jCi0t
LSBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYva2VybmVsL2VmaS5jCTE5NjktMTItMzEgMTY6
MDA6MDAuMDAwMDAwMDAwIC0wODAwCisrKyBsaW51eC0yLjYuMC10ZXN0MS1lZmkvYXJjaC9pMzg2
L2tlcm5lbC9lZmkuYwkyMDAzLTA3LTE3IDE3OjIwOjQ3LjAwMDAwMDAwMCAtMDcwMApAQCAtMCww
ICsxLDYxMyBAQAorLyoKKyAqIEV4dGVuc2libGUgRmlybXdhcmUgSW50ZXJmYWNlCisgKgorICog
QmFzZWQgb24gRXh0ZW5zaWJsZSBGaXJtd2FyZSBJbnRlcmZhY2UgU3BlY2lmaWNhdGlvbiB2ZXJz
aW9uIDEuMCAKKyAqCisgKiBDb3B5cmlnaHQgKEMpIDE5OTkgVkEgTGludXggU3lzdGVtcworICog
Q29weXJpZ2h0IChDKSAxOTk5IFdhbHQgRHJ1bW1vbmQgPGRydW1tb25kQHZhbGludXguY29tPgor
ICogQ29weXJpZ2h0IChDKSAxOTk5LTIwMDIgSGV3bGV0dC1QYWNrYXJkIENvLgorICoJRGF2aWQg
TW9zYmVyZ2VyLVRhbmcgPGRhdmlkbUBocGwuaHAuY29tPgorICoJU3RlcGhhbmUgRXJhbmlhbiA8
ZXJhbmlhbkBocGwuaHAuY29tPgorICoKKyAqIEFsbCBFRkkgUnVudGltZSBTZXJ2aWNlcyBhcmUg
bm90IGltcGxlbWVudGVkIHlldCBhcyBFRkkgb25seQorICogc3VwcG9ydHMgcGh5c2ljYWwgbW9k
ZSBhZGRyZXNzaW5nIG9uIFNvZnRTRFYuIFRoaXMgaXMgdG8gYmUgZml4ZWQKKyAqIGluIGEgZnV0
dXJlIHZlcnNpb24uICAtLWRydW1tb25kIDE5OTktMDctMjAKKyAqCisgKiBJbXBsZW1lbnRlZCBF
RkkgcnVudGltZSBzZXJ2aWNlcyBhbmQgdmlydHVhbCBtb2RlIGNhbGxzLiAgLS1kYXZpZG0KKyAq
CisgKiBHb3V0aGFtIFJhbzogPGdvdXRoYW0ucmFvQGludGVsLmNvbT4KKyAqCVNraXAgbm9uLVdC
IG1lbW9yeSBhbmQgaWdub3JlIGVtcHR5IG1lbW9yeSByYW5nZXMuCisgKi8KKworI2luY2x1ZGUg
PGxpbnV4L2NvbmZpZy5oPgorI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5oPgorI2luY2x1ZGUgPGxp
bnV4L2luaXQuaD4KKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L3Rp
bWUuaD4KKyNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L2Jvb3Rt
ZW0uaD4KKyNpbmNsdWRlIDxsaW51eC9pb3BvcnQuaD4KKyNpbmNsdWRlIDxsaW51eC9wcm9jX2Zz
Lmg+CisjaW5jbHVkZSA8bGludXgvZWZpLmg+CisKKyNpbmNsdWRlIDxhc20vc2V0dXAuaD4KKyNp
bmNsdWRlIDxhc20vaW8uaD4KKyNpbmNsdWRlIDxhc20vcGFnZS5oPgorI2luY2x1ZGUgPGFzbS9w
Z3RhYmxlLmg+CisjaW5jbHVkZSA8YXNtL3Byb2Nlc3Nvci5oPgorI2luY2x1ZGUgPGFzbS9kZXNj
Lmg+CisjaW5jbHVkZSA8YXNtL3BnYWxsb2MuaD4KKyNpbmNsdWRlIDxhc20vdGxiZmx1c2guaD4K
KworI2RlZmluZSBFRklfREVCVUcJMAorI2RlZmluZSBQRlggCQkiRUZJOiAiCisKK2V4dGVybiBl
Zmlfc3RhdHVzX3QgYXNtbGlua2FnZSBlZmlfY2FsbF9waHlzKHZvaWQgKiwgLi4uKTsKKworc3Ry
dWN0IGVmaSBlZmk7CitzdHJ1Y3QgZWZpIGVmaV9waHlzIF9faW5pdGRhdGE7CitzdHJ1Y3QgZWZp
X21lbW9yeV9tYXAgbWVtbWFwIF9faW5pdGRhdGE7CisKK3N0YXRpYyBpbnQgZWZpX3B0ZSA9IDA7
CitzdGF0aWMgdW5zaWduZWQgbG9uZyBlZmlfdGVtcF9wYWdlX3RhYmxlWzEwMjRdCisgICAgX19h
dHRyaWJ1dGVfXyAoKGFsaWduZWQoNDA5NikpKSBfX2luaXRkYXRhIDsKK2V4dGVybiBwZ2RfdCBz
d2FwcGVyX3BnX2RpclsxMDI0XTsKKworLyoKKyAqIGVmaV9kaXIgaXMgYWxsb2NhdGVkIGhlcmUs
IGJ1dCB0aGUgZGlyZWN0b3J5IGlzbid0IGNyZWF0ZWQgCisgKiBoZXJlLCBhcyBwcm9jX21rZGly
KCkgZG9lc24ndCB3b3JrIHRoaXMgZWFybHkgaW4gdGhlIGJvb3R1cAorICogcHJvY2Vzcy4gIFRo
ZXJlZm9yZSwgZWFjaCBtb2R1bGUsIGxpa2UgZWZpdmFycywgbXVzdCB0ZXN0IGZvcgorICogICAg
aWYgKCFlZmlfZGlyKSBlZmlfZGlyID0gcHJvY19ta2RpcigiZWZpIiwgTlVMTCk7CisgKiBwcmlv
ciB0byBjcmVhdGluZyB0aGVpciBvd24gZW50cmllcyB1bmRlciAvcHJvYy9lZmkuCisgKi8KKyNp
ZmRlZiBDT05GSUdfUFJPQ19GUworc3RydWN0IHByb2NfZGlyX2VudHJ5ICplZmlfZGlyOworI2Vu
ZGlmCisKKworLyoKKyAqIFRvIG1ha2UgRUZJIGNhbGwgRUZJIHJ1bnRpbWUgc2VydmljZSBpbiBw
aHlzaWNhbCBhZGRyZXNzaW5nIG1vZGUgd2UgbmVlZAorICogcHJlbG9nL2VwaWxvZyBiZWZvcmUv
YWZ0ZXIgdGhlIGludm9jYXRpb24gdG8gZGlzYWJsZSBpbnRlcnJ1cHQsIHRvIAorICogY2xhaW0g
RUZJIHJ1bnRpbWUgc2VydmljZSBoYW5kbGVyIGV4Y2x1c2l2ZWx5IGFuZCB0byBkdXBsaWNhdGUg
YSBtZW1vcnkgaW4KKyAqIGxvdyBtZW1vcnkgc3BhY2Ugc2F5IDAgLSAzRy4KKyAqLworCitzdGF0
aWMgdW5zaWduZWQgbG9uZyBlZmlfcnRfZWZsYWdzOworc3RhdGljIHNwaW5sb2NrX3QgZWZpX3J0
X2xvY2sgPSBTUElOX0xPQ0tfVU5MT0NLRUQ7CitzdGF0aWMgcGdkX3QgZWZpX2Jha19wZ19kaXJf
cG9pbnRlclsyXTsKKworc3RhdGljIHZvaWQgZWZpX2NhbGxfcGh5c19wcmVsb2codm9pZCkKK3sK
Kwl1bnNpZ25lZCBsb25nIGNyNDsKKwl1bnNpZ25lZCBsb25nIHRlbXA7CisKKwlzcGluX2xvY2so
JmVmaV9ydF9sb2NrKTsKKwlsb2NhbF9pcnFfc2F2ZShlZmlfcnRfZWZsYWdzKTsKKwkKKwkvKgor
CSAqIElmIEkgZG9uJ3QgaGF2ZSBQU0UsIEkgc2hvdWxkIGp1c3QgZHVwbGljYXRlIHR3byBlbnRy
aWVzIGluIHBhZ2UKKwkgKiBkaXJlY3RvcnkuIEkgSSBoYXZlIFBTRSwgSSBqdXN0IG5lZWQgdG8g
ZHVwbGljYXRlIG9uZSBlbnRyeSBpbgorCSAqIHBhZ2UgZGlyZWN0b3J5LgorCSAqLworCV9fYXNt
X18gX192b2xhdGlsZV9fKCJtb3ZsICUlY3I0LCAlMCI6Ij1yIihjcjQpKTsKKworCWlmIChjcjQg
JiBYODZfQ1I0X1BTRSkgeworCQllZmlfYmFrX3BnX2Rpcl9wb2ludGVyWzBdLnBnZCA9CisJCSAg
ICBzd2FwcGVyX3BnX2RpcltwZ2RfaW5kZXgoMCldLnBnZDsKKwkJc3dhcHBlcl9wZ19kaXJbMF0u
cGdkID0KKwkJICAgIHN3YXBwZXJfcGdfZGlyW3BnZF9pbmRleChQQUdFX09GRlNFVCldLnBnZDsK
Kwl9IGVsc2UgeworCQllZmlfYmFrX3BnX2Rpcl9wb2ludGVyWzBdLnBnZCA9CisJCSAgICBzd2Fw
cGVyX3BnX2RpcltwZ2RfaW5kZXgoMCldLnBnZDsKKwkJZWZpX2Jha19wZ19kaXJfcG9pbnRlclsx
XS5wZ2QgPQorCQkgICAgc3dhcHBlcl9wZ19kaXJbcGdkX2luZGV4KDB4NDAwMDAwKV0ucGdkOwor
CQlzd2FwcGVyX3BnX2RpcltwZ2RfaW5kZXgoMCldLnBnZCA9CisJCSAgICBzd2FwcGVyX3BnX2Rp
cltwZ2RfaW5kZXgoUEFHRV9PRkZTRVQpXS5wZ2Q7CisJCXRlbXAgPSBQQUdFX09GRlNFVCArIDB4
NDAwMDAwOworCQlzd2FwcGVyX3BnX2RpcltwZ2RfaW5kZXgoMHg0MDAwMDApXS5wZ2QgPQorCQkg
ICAgc3dhcHBlcl9wZ19kaXJbcGdkX2luZGV4KHRlbXApXS5wZ2Q7CisJfQorCisJLyoKKwkgKiBP
bmx5IG9uZSBwcm9jZXNzb3IgY2FuIHJlYWNoIGhlcmUuICBBZnRlciB0aGUgbG9jayBpcworCSAq
IHJlbGVhc2VkLCB0aGUgb3JpZ2luYWwgcGFnZSB0YWJsZSBpcyByZXN0b3JlZC4KKwkgKi8KKwls
b2NhbF9mbHVzaF90bGIoKTsKKworCWNwdV9nZHRfZGVzY3JbMF0uYWRkcmVzcyA9IF9fcGEoY3B1
X2dkdF9kZXNjclswXS5hZGRyZXNzKTsKKwlfX2FzbV9fIF9fdm9sYXRpbGVfXygibGdkdCAlMCI6
Ij1tIgorCQkJICAgICgqKHN0cnVjdCBYZ3RfZGVzY19zdHJ1Y3QgKikgX19wYSgmY3B1X2dkdF9k
ZXNjclswXSkpKTsKK30KKworc3RhdGljIHZvaWQgZWZpX2NhbGxfcGh5c19lcGlsb2codm9pZCkK
K3sKKwl1bnNpZ25lZCBsb25nIGNyNDsKKworCWNwdV9nZHRfZGVzY3JbMF0uYWRkcmVzcyA9IAor
CQkodW5zaWduZWQgbG9uZykgX192YShjcHVfZ2R0X2Rlc2NyWzBdLmFkZHJlc3MpOworCV9fYXNt
X18gX192b2xhdGlsZV9fKCJsZ2R0ICUwIjoiPW0iKGNwdV9nZHRfZGVzY3IpKTsKKwlfX2FzbV9f
IF9fdm9sYXRpbGVfXygibW92bCAlJWNyNCwgJTAiOiI9ciIoY3I0KSk7CisKKwlpZiAoY3I0ICYg
WDg2X0NSNF9QU0UpIHsKKwkJc3dhcHBlcl9wZ19kaXJbcGdkX2luZGV4KDApXS5wZ2QgPQorCQkg
ICAgZWZpX2Jha19wZ19kaXJfcG9pbnRlclswXS5wZ2Q7CisJfSBlbHNlIHsKKwkJc3dhcHBlcl9w
Z19kaXJbcGdkX2luZGV4KDApXS5wZ2QgPQorCQkgICAgZWZpX2Jha19wZ19kaXJfcG9pbnRlclsw
XS5wZ2Q7CisJCXN3YXBwZXJfcGdfZGlyW3BnZF9pbmRleCgweDQwMDAwMCldLnBnZCA9CisJCSAg
ICBlZmlfYmFrX3BnX2Rpcl9wb2ludGVyWzFdLnBnZDsKKwl9CisKKwkvKgorCSAqIEJlY2F1c2Ug
b25seSBvbmUgcHJvY2Vzc29yIGNhbiByZWFjaCBoZXJlLCBhZnRlciB0aGUgbG9jayBpcworCSAq
IHJlbGVhc2VkLCB0aGUgb3JpZ2luYWwgcGFnZSB0YWJsZSBpcyByZXN0b3JlZC4KKwkgKi8KKwls
b2NhbF9mbHVzaF90bGIoKTsKKworCWxvY2FsX2lycV9yZXN0b3JlKGVmaV9ydF9lZmxhZ3MpOwor
CXNwaW5fdW5sb2NrKCZlZmlfcnRfbG9jayk7Cit9CisKK3N0YXRpYyBlZmlfc3RhdHVzX3QgCitw
aHlzX2VmaV9zZXRfdmlydHVhbF9hZGRyZXNzX21hcCh1bnNpZ25lZCBsb25nIG1lbW9yeV9tYXBf
c2l6ZSwgCisJCQkJIHVuc2lnbmVkIGxvbmcgZGVzY3JpcHRvcl9zaXplLAorCQkJCSB1MzIgZGVz
Y3JpcHRvcl92ZXJzaW9uLCAKKwkJCQkgZWZpX21lbW9yeV9kZXNjX3QgKnZpcnR1YWxfbWFwKQor
eworCWVmaV9zdGF0dXNfdCBzdGF0dXMgPSBFRklfTk9UX0ZPVU5EOworCQorCWVmaV9jYWxsX3Bo
eXNfcHJlbG9nKCk7CisJc3RhdHVzID0gZWZpX2NhbGxfcGh5cyhlZmlfcGh5cy5zZXRfdmlydHVh
bF9hZGRyZXNzX21hcCwgCisJCQkJICAgICBtZW1vcnlfbWFwX3NpemUsIGRlc2NyaXB0b3Jfc2l6
ZSwKKwkJCQkgICAgIGRlc2NyaXB0b3JfdmVyc2lvbiwgdmlydHVhbF9tYXApOworCWVmaV9jYWxs
X3BoeXNfZXBpbG9nKCk7CisJcmV0dXJuIHN0YXR1czsKK30KKworZWZpX3N0YXR1c190IAorcGh5
c19lZmlfZ2V0X3RpbWUoZWZpX3RpbWVfdCAqdG0sIGVmaV90aW1lX2NhcF90ICp0YykKK3sKKwll
Zmlfc3RhdHVzX3Qgc3RhdHVzID0gRUZJX05PVF9GT1VORDsKKworCWVmaV9jYWxsX3BoeXNfcHJl
bG9nKCk7CisJc3RhdHVzID0gZWZpX2NhbGxfcGh5cyhlZmlfcGh5cy5nZXRfdGltZSwgdG0sIHRj
KTsKKwllZmlfY2FsbF9waHlzX2VwaWxvZygpOworCXJldHVybiBzdGF0dXM7IAorfQorCit2b2lk
IGVmaV9nZXR0aW1lb2ZkYXkoc3RydWN0IHRpbWVzcGVjICp0dikKK3sKKwllZmlfdGltZV90IHRt
OworCisJbWVtc2V0KHR2LCAwLCBzaXplb2YodHYpKTsKKwlpZiAoKCplZmkuZ2V0X3RpbWUpICgm
dG0sIDApICE9IEVGSV9TVUNDRVNTKQorCQlyZXR1cm47CisKKwl0di0+dHZfc2VjID0gbWt0aW1l
KHRtLnllYXIsIHRtLm1vbnRoLCB0bS5kYXksIHRtLmhvdXIsIHRtLm1pbnV0ZSwKKwkJICAgICAg
ICAgICAgdG0uc2Vjb25kKTsKKwl0di0+dHZfbnNlYyA9IHRtLm5hbm9zZWNvbmQ7Cit9CisKK3N0
YXRpYyBpbnQgCitpc19hdmFpbGFibGVfbWVtb3J5KGVmaV9tZW1vcnlfZGVzY190ICogbWQpCit7
CisJaWYgKCEobWQtPmF0dHJpYnV0ZSAmIEVGSV9NRU1PUllfV0IpKQorCQlyZXR1cm4gMDsKKwor
CXN3aXRjaCAobWQtPnR5cGUpIHsKKwkJY2FzZSBFRklfTE9BREVSX0NPREU6CisJCWNhc2UgRUZJ
X0xPQURFUl9EQVRBOgorCQljYXNlIEVGSV9CT09UX1NFUlZJQ0VTX0NPREU6CisJCWNhc2UgRUZJ
X0JPT1RfU0VSVklDRVNfREFUQToKKwkJY2FzZSBFRklfQ09OVkVOVElPTkFMX01FTU9SWToKKwkJ
CXJldHVybiAxOworCX0KKwlyZXR1cm4gMDsKK30KKworLyoKKyAqIFdhbGtzIHRoZSBFRkkgbWVt
b3J5IG1hcCBhbmQgY2FsbHMgQ0FMTEJBQ0sgb25jZSBmb3IgZWFjaCBFRkkKKyAqIG1lbW9yeSBk
ZXNjcmlwdG9yIHRoYXQgaGFzIG1lbW9yeSB0aGF0IGlzIGF2YWlsYWJsZSBmb3Iga2VybmVsIHVz
ZS4KKyAqLwordm9pZCBlZmlfbWVtbWFwX3dhbGsoZWZpX2ZyZWVtZW1fY2FsbGJhY2tfdCBjYWxs
YmFjaywgdm9pZCAqYXJnKQoreworCWludCBwcmV2X3ZhbGlkID0gMDsKKwlzdHJ1Y3QgcmFuZ2Ug
eworCQl1bnNpZ25lZCBsb25nIHN0YXJ0OworCQl1bnNpZ25lZCBsb25nIGVuZDsKKwl9IHByZXYs
IGN1cnI7CisJZWZpX21lbW9yeV9kZXNjX3QgKm1kOworCXVuc2lnbmVkIGxvbmcgc3RhcnQsIGVu
ZDsKKwlpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCBtZW1tYXAubnJfbWFwOyBpKyspIHsKKwkJ
bWQgPSAmbWVtbWFwLm1hcFtpXTsKKworCQlpZiAobWQtPm51bV9wYWdlcyA9PSAwKQkvKiBubyBw
YWdlcyBtZWFucyBub3RoaW5nIHRvIGRvLi4uICovCisJCQljb250aW51ZTsKKwkJaWYgKGlzX2F2
YWlsYWJsZV9tZW1vcnkobWQpKSB7CisJCQljdXJyLnN0YXJ0ID0gbWQtPnBoeXNfYWRkcjsKKwkJ
CWN1cnIuZW5kID0gY3Vyci5zdGFydCArIAorCQkJCQkobWQtPm51bV9wYWdlcyA8PCBFRklfUEFH
RV9TSElGVCk7CisKKwkJCWlmICghcHJldl92YWxpZCkgeworCQkJCXByZXYgPSBjdXJyOworCQkJ
CXByZXZfdmFsaWQgPSAxOworCQkJfSBlbHNlIHsKKwkJCQlpZiAoY3Vyci5zdGFydCA8IHByZXYu
c3RhcnQpCisJCQkJCXByaW50ayhQRlggIlVub3JkZXJlZCBtZW1vcnkgbWFwXG4iKTsKKwkJCQlp
ZiAocHJldi5lbmQgPT0gY3Vyci5zdGFydCkKKwkJCQkJcHJldi5lbmQgPSBjdXJyLmVuZDsKKwkJ
CQllbHNlIHsKKwkJCQkJc3RhcnQgPQorCQkJCQkgICAgKHVuc2lnbmVkIGxvbmcpIChQQUdFX0FM
SUdOKHByZXYuc3RhcnQpKTsKKwkJCQkJZW5kID0gKHVuc2lnbmVkIGxvbmcpIChwcmV2LmVuZCAm
IFBBR0VfTUFTSyk7CisJCQkJCWlmICgoZW5kID4gc3RhcnQpCisJCQkJCSAgICAmJiAoKmNhbGxi
YWNrKSAoc3RhcnQsIGVuZCwgYXJnKSA8IDApCisJCQkJCQlyZXR1cm47CisJCQkJCXByZXYgPSBj
dXJyOworCQkJCX0KKwkJCX0KKwkJfSBlbHNlCisJCQljb250aW51ZTsKKwl9CisJaWYgKHByZXZf
dmFsaWQpIHsKKwkJc3RhcnQgPSAodW5zaWduZWQgbG9uZykgUEFHRV9BTElHTihwcmV2LnN0YXJ0
KTsKKwkJZW5kID0gKHVuc2lnbmVkIGxvbmcpIChwcmV2LmVuZCAmIFBBR0VfTUFTSyk7CisJCWlm
IChlbmQgPiBzdGFydCkKKwkJCSgqY2FsbGJhY2spIChzdGFydCwgZW5kLCBhcmcpOworCX0KK30K
KworLyoKKyAqIG1lbV9zdGFydCBpcyBhIHBoeXNpY2FsIGFkZHJlc3MuCisgKi8KK3Vuc2lnbmVk
IGxvbmcgX19pbml0IAorZWZpX3NldHVwX3RlbXBfcGFnZV90YWJsZSh1bnNpZ25lZCBsb25nIG1l
bV9zdGFydCwgdW5zaWduZWQgbG9uZyBzaXplKQoreworCXVuc2lnbmVkIGxvbmcgcmVnaW9uX3N0
YXJ0X2FkZHIgPSAobWVtX3N0YXJ0ICYgMHhmZmZmZjAwMCk7CisJdW5zaWduZWQgbG9uZyByZWdp
b25fZW5kX2FkZHIgPSBtZW1fc3RhcnQgKyBzaXplIC0gMTsKKwl1bnNpZ25lZCBsb25nIHZpcnRf
c3RhcnRfYWRkciA9IDA7CisKKwlpZiAocmVnaW9uX3N0YXJ0X2FkZHIgPiByZWdpb25fZW5kX2Fk
ZHIpCisJCUJVRygpOworCisJdmlydF9zdGFydF9hZGRyID0gKHVuc2lnbmVkIGxvbmcpIF9fdmEo
TUFYTUVNKSArIAorCQkJCShlZmlfcHRlIDw8IEVGSV9QQUdFX1NISUZUKSArIAorCQkJCShtZW1f
c3RhcnQgJiAweGZmZik7CisKKwl3aGlsZSAocmVnaW9uX3N0YXJ0X2FkZHIgPCByZWdpb25fZW5k
X2FkZHIpIHsKKwkJaWYgKGVmaV9wdGUgPT0gMTAyNCkKKwkJCXByaW50ayhQRlggIkVGSSBQYWdl
IFRhYmxlIGlzIGZ1bGwhXG4iKTsKKworCQllZmlfdGVtcF9wYWdlX3RhYmxlW2VmaV9wdGVdID0g
KHJlZ2lvbl9zdGFydF9hZGRyIHwgNyk7CisKKwkJaWYgKGVmaV9wdGUgPT0gMCkKKwkJCXN3YXBw
ZXJfcGdfZGlyWygodW5zaWduZWQgbG9uZykgKCh1bnNpZ25lZCBsb25nKQorCQkJIF9fdmEoTUFY
TUVNKSArIChlZmlfcHRlIDw8IEVGSV9QQUdFX1NISUZUKSkpID4+IDIyXS5wZ2QgPQorCQkJICAg
ICh1bnNpZ25lZCBsb25nKSAoX19wYSgmKGVmaV90ZW1wX3BhZ2VfdGFibGVbMF0pKSB8IDcpOwor
CisJCXJlZ2lvbl9zdGFydF9hZGRyICs9IDB4MTAwMDsKKwkJZWZpX3B0ZSsrOworCX0KKwlsb2Nh
bF9mbHVzaF90bGIoKTsKKwlyZXR1cm4gdmlydF9zdGFydF9hZGRyOworfQorCit2b2lkIF9faW5p
dCBlZmlfaW5pdCh2b2lkKQoreworCWVmaV9jb25maWdfdGFibGVfdCAqY29uZmlnX3RhYmxlczsK
KwllZmlfY2hhcjE2X3QgKmMxNjsKKwljaGFyIHZlbmRvclsxMDBdID0gInVua25vd24iOworCWlu
dCBpID0gMDsKKworCS8qCisJICogU2V0IHVwIHRoZSBwYWdlIHRhYmxlcyBmb3IgRUZJIHN5c3Rl
bSB0YWJsZS4KKwkgKi8KKwltZW1zZXQoJmVmaSwgMCwgc2l6ZW9mKGVmaSkgKTsKKwltZW1zZXQo
JmVmaV9waHlzLCAwLCBzaXplb2YoZWZpX3BoeXMpKTsKKworCWVmaV9waHlzLnN5c3RhYiA9IEVG
SV9TWVNUQUI7CisJbWVtbWFwLnBoeXNfbWFwID0gRUZJX01FTU1BUDsKKwltZW1tYXAubnJfbWFw
PSBFRklfTUVNTUFQX1NJWkUvRUZJX01FTURFU0NfU0laRTsKKworCWVmaS5zeXN0YWIgPQorCSAg
ICAoZWZpX3N5c3RlbV90YWJsZV90ICopCisJICAgIGVmaV9zZXR1cF90ZW1wX3BhZ2VfdGFibGUo
KHVuc2lnbmVkIGxvbmcpIGVmaV9waHlzLnN5c3RhYiwKKwkJCQkgICAgICBzaXplb2YoZWZpX3N5
c3RlbV90YWJsZV90KSk7CisJLyoKKwkgKiBWZXJpZnkgdGhlIEVGSSBUYWJsZQorCSAqLworCWlm
IChlZmkuc3lzdGFiID09IE5VTEwpCisJCXByaW50ayhQRlggIldvYWghIENhbid0IGZpbmQgRUZJ
IHN5c3RlbSB0YWJsZS5cbiIpOworCWlmIChlZmkuc3lzdGFiLT5oZHIuc2lnbmF0dXJlICE9IEVG
SV9TWVNURU1fVEFCTEVfU0lHTkFUVVJFKQorCQlwcmludGsoUEZYICJXb2FoISBFRkkgc3lzdGVt
IHRhYmxlIHNpZ25hdHVyZSBpbmNvcnJlY3RcbiIpOworCWlmICgoZWZpLnN5c3RhYi0+aGRyLnJl
dmlzaW9uIF4gRUZJX1NZU1RFTV9UQUJMRV9SRVZJU0lPTikgPj4gMTYgIT0gMCkKKwkJcHJpbnRr
KFBGWAorCQkgICAgICAgIldhcm5pbmc6IEVGSSBzeXN0ZW0gdGFibGUgbWFqb3IgdmVyc2lvbiBt
aXNtYXRjaDogIgorCQkgICAgICAgImdvdCAlZC4lMDJkLCBleHBlY3RlZCAlZC4lMDJkXG4iLAor
CQkgICAgICAgZWZpLnN5c3RhYi0+aGRyLnJldmlzaW9uID4+IDE2LAorCQkgICAgICAgZWZpLnN5
c3RhYi0+aGRyLnJldmlzaW9uICYgMHhmZmZmLAorCQkgICAgICAgRUZJX1NZU1RFTV9UQUJMRV9S
RVZJU0lPTiA+PiAxNiwKKwkJICAgICAgIEVGSV9TWVNURU1fVEFCTEVfUkVWSVNJT04gJiAweGZm
ZmYpOworCisJLyogU2hvdyB3aGF0IHdlIGtub3cgZm9yIHBvc3Rlcml0eSAqLworCWMxNiA9IChl
ZmlfY2hhcjE2X3QgKikgZWZpX3NldHVwX3RlbXBfcGFnZV90YWJsZShlZmkuc3lzdGFiLT5md192
ZW5kb3IsIDIpOworCWlmIChjMTYpIHsKKwkJLyoKKwkJICogU2V0IHVwIHRoZSBwYWdlIHRhYmxl
cyBmb3IgZndfdmVuZG9yLgorCQkgKi8KKwkJZm9yIChpID0gMDsgaSA8IHNpemVvZih2ZW5kb3Ip
ICYmICpjMTY7ICsraSkgeworCQkJdmVuZG9yW2ldID0gKmMxNisrOworCQkJLyogCisJCQkgKiBJ
ZiBJIGNyb3NzIHRoZSBib3VuZGFyeSBvZiBhIHBhZ2UsIHRoZW4gbWFwIG1vcmUuCisJCQkgKi8K
KwkJCWlmICgoKCh1bnNpZ25lZCBsb25nKSBjMTYpICYgMHhmZmYpID09IDApCisJCQkJYzE2ID0K
KwkJCQkgICAgKGVmaV9jaGFyMTZfdCAqKSBlZmlfc2V0dXBfdGVtcF9wYWdlX3RhYmxlKAorCQkJ
CQkgICAgKCh1bnNpZ25lZCBsb25nKSAoZWZpLnN5c3RhYi0+ZndfdmVuZG9yKSkgKyBpLCA0MDk2
KTsKKwkJfQorCQl2ZW5kb3JbaV0gPSAnXDAnOworCX0KKworCXByaW50ayhQRlggIkVGSSB2JXUu
JS4wMnUgYnkgJXMgXG4iLAorCSAgICAgICBlZmkuc3lzdGFiLT5oZHIucmV2aXNpb24gPj4gMTYs
CisJICAgICAgIGVmaS5zeXN0YWItPmhkci5yZXZpc2lvbiAmIDB4ZmZmZiwgdmVuZG9yKTsKKwor
CS8qCisJICogU2V0IHVwIHRoZSBwYWdlIHRhYmxlcyBmb3IgY29uZmlnX3RhYmxlcy4KKwkgKi8K
Kwljb25maWdfdGFibGVzID0gKGVmaV9jb25maWdfdGFibGVfdCAqKQorCQkJCWVmaV9zZXR1cF90
ZW1wX3BhZ2VfdGFibGUoZWZpLnN5c3RhYi0+dGFibGVzLAorCQkJICAgICAgICBlZmkuc3lzdGFi
LT5ucl90YWJsZXMgKiBzaXplb2YgKGVmaV9jb25maWdfdGFibGVfdCkpOworCisJZm9yIChpID0g
MDsgaSA8IGVmaS5zeXN0YWItPm5yX3RhYmxlczsgaSsrKSB7CisJCWlmIChlZmlfZ3VpZGNtcChj
b25maWdfdGFibGVzW2ldLmd1aWQsIE1QU19UQUJMRV9HVUlEKSA9PSAwKSB7CisJCQllZmkubXBz
ID0gKHZvaWQgKiljb25maWdfdGFibGVzW2ldLnRhYmxlOworCQkJcHJpbnRrKCIgTVBTPTB4JWx4
ICIsIGNvbmZpZ190YWJsZXNbaV0udGFibGUpOworCQl9IGVsc2UKKwkJICAgIGlmIChlZmlfZ3Vp
ZGNtcChjb25maWdfdGFibGVzW2ldLmd1aWQsIEFDUElfMjBfVEFCTEVfR1VJRCkgPT0gMCkgewor
CQkJZWZpLmFjcGkyMCA9IF9fdmEoY29uZmlnX3RhYmxlc1tpXS50YWJsZSk7CisJCQlwcmludGso
IiBBQ1BJIDIuMD0weCVseCAiLCBjb25maWdfdGFibGVzW2ldLnRhYmxlKTsKKwkJfSBlbHNlCisJ
CSAgICBpZiAoZWZpX2d1aWRjbXAoY29uZmlnX3RhYmxlc1tpXS5ndWlkLCBBQ1BJX1RBQkxFX0dV
SUQpID09IDApIHsKKwkJCWVmaS5hY3BpID0gX192YShjb25maWdfdGFibGVzW2ldLnRhYmxlKTsK
KwkJCXByaW50aygiIEFDUEk9MHglbHggIiwgY29uZmlnX3RhYmxlc1tpXS50YWJsZSk7CisJCX0g
ZWxzZQorCQkgICAgaWYgKGVmaV9ndWlkY21wKGNvbmZpZ190YWJsZXNbaV0uZ3VpZCwgU01CSU9T
X1RBQkxFX0dVSUQpID09IDApIHsKKwkJCWVmaS5zbWJpb3MgPSAodm9pZCAqKSBjb25maWdfdGFi
bGVzW2ldLnRhYmxlOworCQkJcHJpbnRrKCIgU01CSU9TPTB4JWx4ICIsIGNvbmZpZ190YWJsZXNb
aV0udGFibGUpOworCQl9IGVsc2UKKwkJICAgIGlmIChlZmlfZ3VpZGNtcChjb25maWdfdGFibGVz
W2ldLmd1aWQsIEhDRFBfVEFCTEVfR1VJRCkgPT0gMCkgeworCQkJZWZpLmhjZHAgPSAodm9pZCAq
KWNvbmZpZ190YWJsZXNbaV0udGFibGU7CisJCQlwcmludGsoIiBIQ0RQPTB4JWx4ICIsIGNvbmZp
Z190YWJsZXNbaV0udGFibGUpOworCQl9IGVsc2UKKwkJICAgIGlmIChlZmlfZ3VpZGNtcChjb25m
aWdfdGFibGVzW2ldLmd1aWQsIFVHQV9JT19QUk9UT0NPTF9HVUlEKSA9PSAwKSB7CisJCQllZmku
dWdhID0gKHZvaWQgKiljb25maWdfdGFibGVzW2ldLnRhYmxlOworCQkJcHJpbnRrKCIgVUdBPTB4
JWx4ICIsIGNvbmZpZ190YWJsZXNbaV0udGFibGUpOworCQl9IAorCX0KKwlwcmludGsoIlxuIik7
CisJCQkKKwkvKgorCSAqIFNldCB1cCB0aGUgcGFnZSB0YWJsZXMgZm9yIHJ1bnRpbWUgc2Vydmlj
ZXMuIFdlIG5lZWQgdG8gbWFwIAorCSAqIHRoZSBydW50aW1lIHNlcnZpY2VzIHRhYmxlIHNvIHRo
YXQgd2UgY2FuIGdyYWIgdGhlIHBoeXNpY2FsIAorCSAqIGFkZHJlc3Mgb2YgdGhlIEVGSSBydW50
aW1lIGZ1bmN0aW9ucy4KKwkgKi8KKwkgICAgCisJZWZpLnN5c3RhYi0+cnVudGltZSA9IAorCQko
ZWZpX3J1bnRpbWVfc2VydmljZXNfdCAqKSBlZmlfc2V0dXBfdGVtcF9wYWdlX3RhYmxlKAorCQkJ
CQkJKHVuc2lnbmVkIGxvbmcpIGVmaS5zeXN0YWItPnJ1bnRpbWUsCisJCQkJICAgICAgCQlzaXpl
b2YoZWZpX3J1bnRpbWVfc2VydmljZXNfdCkpOworCisJLyogCisJICogV2Ugd2lsbCBvbmx5IG5l
ZWQgKmVhcmx5KiBhY2Nlc3MgdG8gdGhlIGZvbGxvd2luZyB0d28gRUZJIFJUIAorCSAqIHNlcnZp
Y2VzIGJlZm9yZSBzZXRfdmlydHVhbF9hZGRyZXNzX21hcCBpcyBpbnZva2VkLiAgCisgCSAqLwor
CWVmaV9waHlzLmdldF90aW1lID0gKGVmaV9nZXRfdGltZV90ICopIGVmaS5zeXN0YWItPnJ1bnRp
bWUtPmdldF90aW1lOworCWVmaV9waHlzLnNldF92aXJ0dWFsX2FkZHJlc3NfbWFwID0gCisJCShl
Zmlfc2V0X3ZpcnR1YWxfYWRkcmVzc19tYXBfdCAqKSBlZmkuc3lzdGFiLT5ydW50aW1lLT5zZXRf
dmlydHVhbF9hZGRyZXNzX21hcDsKKworCW1lbW1hcC5tYXAgPSAoZWZpX21lbW9yeV9kZXNjX3Qg
KikgCisJCQllZmlfc2V0dXBfdGVtcF9wYWdlX3RhYmxlKCh1bnNpZ25lZCBsb25nKSBFRklfTUVN
TUFQLCAKKwkJCQkJCSAgIAlFRklfTUVNTUFQX1NJWkUpOworCWlmIChFRklfTUVNREVTQ19TSVpF
ICE9IHNpemVvZihlZmlfbWVtb3J5X2Rlc2NfdCkpIHsKKwkJcHJpbnRrKFBGWCAiV2FybmluZyEg
S2VybmVsLWRlZmluZWQgbWVtZGVzYyBkb2Vzbid0ICIKKwkJCSAgICJtYXRjaCB0aGUgb25lIGZy
b20gRUZJIVxuIik7CisJfQorfQorCit2b2lkIF9faW5pdCBlZmlfZW50ZXJfdmlydHVhbF9tb2Rl
KHZvaWQpCit7CisJaW50IGk7CisJZWZpX21lbW9yeV9kZXNjX3QgKm1kOworCWVmaV9zdGF0dXNf
dCBzdGF0dXM7CisKKwltZW1tYXAubWFwID0gaW9yZW1hcCgodW5zaWduZWQgbG9uZykgbWVtbWFw
LnBoeXNfbWFwLCBFRklfTUVNTUFQX1NJWkUpOworCisJaWYgKCFtZW1tYXAubWFwKQorCQlwcmlu
dGsoUEZYICJpb3JlbWFwIG9mIG1lbW1hcC5tYXAgZmFpbGVkIFxuIik7CisJLyoKKwkgKiBzdGFy
dCB0byBzZXQgdXAgdGhlIHBlcm1hbmVudCB2aXJ0dWFsIG1hcHBpbmcuCisJICovCisJZWZpLnN5
c3RhYiA9IE5VTEw7CisJCQorCWZvciAoaSA9IDA7IGkgPCBtZW1tYXAubnJfbWFwOyBpKyspIHsK
KwkJbWQgPSAmbWVtbWFwLm1hcFtpXTsKKwkJCisJCWlmIChtZC0+YXR0cmlidXRlICYgRUZJX01F
TU9SWV9SVU5USU1FKSB7CisJCQltZC0+dmlydF9hZGRyID0gKHU2NCkgaW9yZW1hcCgodW5zaWdu
ZWQgbG9uZykgbWQtPnBoeXNfYWRkciwKKwkJCQkJCSAgICAgICh1bnNpZ25lZCBsb25nKSAobWQt
Pm51bV9wYWdlcykgPDwgRUZJX1BBR0VfU0hJRlQpOworCQkJaWYgKCEodW5zaWduZWQgbG9uZykg
bWQtPnZpcnRfYWRkcikgeworCQkJCXByaW50ayhQRlggImlvcmVtYXAgb2YgbWQ6IDB4JWxYIGZh
aWxlZCBcbiIsIAorCQkJCQkJKHVuc2lnbmVkIGxvbmcpIG1kLT5waHlzX2FkZHIpOworCQkJfQor
CisJCQlpZiAoKCh1bnNpZ25lZCBsb25nKW1kLT5waHlzX2FkZHIgPD0gKHVuc2lnbmVkIGxvbmcp
ZWZpX3BoeXMuc3lzdGFiKSAmJiAKKwkJCQkJKCh1bnNpZ25lZCBsb25nKWVmaV9waHlzLnN5c3Rh
YiA8IG1kLT5waHlzX2FkZHIgKyAKKwkJCQkJKCh1bnNpZ25lZCBsb25nKSBtZC0+bnVtX3BhZ2Vz
IDw8IEVGSV9QQUdFX1NISUZUKSkpIHsKKwkJCQllZmkuc3lzdGFiID0gKGVmaV9zeXN0ZW1fdGFi
bGVfdCAqKSAoKG1kLT52aXJ0X2FkZHIgLSBtZC0+cGh5c19hZGRyKSArICh1NjQpZWZpX3BoeXMu
c3lzdGFiKTsgCisJCQl9CisJCX0KKwl9CisKKwlpZiAoIWVmaS5zeXN0YWIpCisJCUJVRygpOwor
CQorCXN0YXR1cyA9IDA7CisJc3RhdHVzID0gcGh5c19lZmlfc2V0X3ZpcnR1YWxfYWRkcmVzc19t
YXAoCisJCQlFRklfTUVNTUFQX1NJWkUsIAorCQkJRUZJX01FTURFU0NfU0laRSwKKwkJCUVGSV9N
RU1ERVNDX1ZFUlNJT04sCQorCQkgICAgICAgCW1lbW1hcC5waHlzX21hcCk7CisJCisJaWYgKHN0
YXR1cyAhPSBFRklfU1VDQ0VTUykgeworCQlwcmludGsgKCJZb3UgYXJlIHNjcmV3ZWQhICIKKwkJ
CSJVbmFibGUgdG8gc3dpdGNoIEVGSSBpbnRvIHZpcnR1YWwgbW9kZSAoc3RhdHVzPSVsdSlcbiIs
IHN0YXR1cyk7CisJCXBhbmljKCJDYWxsIHRvIEVGSSdzIFNldFZpcnR1YWxBZGRyZXNzTWFwKCkg
ZmFpbGVkISIpOworCX0KKworCS8qCisJICogTm93IHRoYXQgRUZJIGlzIGluIHZpcnR1YWwgbW9k
ZSwgdXBkYXRlIHRoZSBmdW5jdGlvbgorCSAqIHBvaW50ZXJzIGluIHRoZSBydW50aW1lIHNlcnZp
Y2UgdGFibGUgdG8gdGhlIG5ldyB2aXJ0dWFsIGFkZHJlc3NlcworCSAqIHNvIHRoZXkgbWF5IGJl
IGNhbGxlZCBkaXJlY3RseToKKwkgKi8KKworCWVmaS5nZXRfdGltZSA9IChlZmlfZ2V0X3RpbWVf
dCAqKSBlZmkuc3lzdGFiLT5ydW50aW1lLT5nZXRfdGltZTsKKwllZmkuc2V0X3RpbWUgPSAoZWZp
X3NldF90aW1lX3QgKikgZWZpLnN5c3RhYi0+cnVudGltZS0+c2V0X3RpbWU7CisJZWZpLmdldF93
YWtldXBfdGltZSA9IChlZmlfZ2V0X3dha2V1cF90aW1lX3QgKikKKwkJCQkJZWZpLnN5c3RhYi0+
cnVudGltZS0+Z2V0X3dha2V1cF90aW1lOworCWVmaS5zZXRfd2FrZXVwX3RpbWUgPSAoZWZpX3Nl
dF93YWtldXBfdGltZV90ICopCisJCQkJCWVmaS5zeXN0YWItPnJ1bnRpbWUtPnNldF93YWtldXBf
dGltZTsKKwllZmkuZ2V0X3ZhcmlhYmxlID0gKGVmaV9nZXRfdmFyaWFibGVfdCAqKQorCQkJCQll
Zmkuc3lzdGFiLT5ydW50aW1lLT5nZXRfdmFyaWFibGU7CisJZWZpLmdldF9uZXh0X3ZhcmlhYmxl
ID0gKGVmaV9nZXRfbmV4dF92YXJpYWJsZV90ICopCisJCQkJCWVmaS5zeXN0YWItPnJ1bnRpbWUt
PmdldF9uZXh0X3ZhcmlhYmxlOworCWVmaS5zZXRfdmFyaWFibGUgPSAoZWZpX3NldF92YXJpYWJs
ZV90ICopCisJCQkJCWVmaS5zeXN0YWItPnJ1bnRpbWUtPnNldF92YXJpYWJsZTsKKwllZmkuZ2V0
X25leHRfaGlnaF9tb25vX2NvdW50ID0gKGVmaV9nZXRfbmV4dF9oaWdoX21vbm9fY291bnRfdCAq
KQorCQkJCQllZmkuc3lzdGFiLT5ydW50aW1lLT5nZXRfbmV4dF9oaWdoX21vbm9fY291bnQ7CisJ
ZWZpLnJlc2V0X3N5c3RlbSA9IChlZmlfcmVzZXRfc3lzdGVtX3QgKikKKwkJCQkJZWZpLnN5c3Rh
Yi0+cnVudGltZS0+cmVzZXRfc3lzdGVtOworCit9CisKK3ZvaWQgX19pbml0IAorZWZpX2luaXRp
YWxpemVfaW9tZW1fcmVzb3VyY2VzKHN0cnVjdCByZXNvdXJjZSAqY29kZV9yZXNvdXJjZSwKKwkJ
CSAgICAgICBzdHJ1Y3QgcmVzb3VyY2UgKmRhdGFfcmVzb3VyY2UpCit7CisJc3RydWN0IHJlc291
cmNlICpyZXM7CisJZWZpX21lbW9yeV9kZXNjX3QgKm1kOworCWludCBpOworCQorCWZvciAoaSA9
IDA7IGkgPCBtZW1tYXAubnJfbWFwOyBpKyspIHsKKwkJbWQgPSAmbWVtbWFwLm1hcFtpXTsKKwkK
KwkJaWYgKChtZC0+cGh5c19hZGRyICsgKG1kLT5udW1fcGFnZXMgPDwgRUZJX1BBR0VfU0hJRlQp
KSA+CisJCSAgICAweDEwMDAwMDAwMFVMTCkKKwkJCWNvbnRpbnVlOworCQlyZXMgPSBhbGxvY19i
b290bWVtX2xvdyhzaXplb2Yoc3RydWN0IHJlc291cmNlKSk7CisJCXN3aXRjaCAobWQtPnR5cGUp
IHsKKwkJY2FzZSBFRklfUkVTRVJWRURfVFlQRToKKwkJCXJlcy0+bmFtZSA9ICJSZXNlcnZlZCBN
ZW1vcnkiOworCQkJYnJlYWs7CisJCWNhc2UgRUZJX0xPQURFUl9DT0RFOgorCQkJcmVzLT5uYW1l
ID0gIkxvYWRlciBDb2RlIjsKKwkJCWJyZWFrOworCQljYXNlIEVGSV9MT0FERVJfREFUQToKKwkJ
CXJlcy0+bmFtZSA9ICJMb2FkZXIgRGF0YSI7CisJCQlicmVhazsKKwkJY2FzZSBFRklfQk9PVF9T
RVJWSUNFU19EQVRBOgorCQkJcmVzLT5uYW1lID0gIkJvb3RTZXJ2aWNlcyBEYXRhIjsKKwkJCWJy
ZWFrOworCQljYXNlIEVGSV9CT09UX1NFUlZJQ0VTX0NPREU6CisJCQlyZXMtPm5hbWUgPSAiQm9v
dFNlcnZpY2VzIENvZGUiOworCQkJYnJlYWs7CisJCWNhc2UgRUZJX1JVTlRJTUVfU0VSVklDRVNf
Q09ERToKKwkJCXJlcy0+bmFtZSA9ICJSdW50aW1lIFNlcnZpY2UgQ29kZSI7CisJCQlicmVhazsK
KwkJY2FzZSBFRklfUlVOVElNRV9TRVJWSUNFU19EQVRBOgorCQkJcmVzLT5uYW1lID0gIlJ1bnRp
bWUgU2VydmljZSBEYXRhIjsKKwkJCWJyZWFrOworCQljYXNlIEVGSV9DT05WRU5USU9OQUxfTUVN
T1JZOgorCQkJcmVzLT5uYW1lID0gIkNvbnZlbnRpb25hbCBNZW1vcnkiOworCQkJYnJlYWs7CisJ
CWNhc2UgRUZJX1VOVVNBQkxFX01FTU9SWToKKwkJCXJlcy0+bmFtZSA9ICJVbnVzYWJsZSBNZW1v
cnkiOworCQkJYnJlYWs7CisJCWNhc2UgRUZJX0FDUElfUkVDTEFJTV9NRU1PUlk6CisJCQlyZXMt
Pm5hbWUgPSAiQUNQSSBSZWNsYWltIjsKKwkJCWJyZWFrOworCQljYXNlIEVGSV9BQ1BJX01FTU9S
WV9OVlM6CisJCQlyZXMtPm5hbWUgPSAiQUNQSSBOVlMiOworCQkJYnJlYWs7CisJCWNhc2UgRUZJ
X01FTU9SWV9NQVBQRURfSU86CisJCQlyZXMtPm5hbWUgPSAiTWVtb3J5IE1hcHBlZCBJTyI7CisJ
CQlicmVhazsKKwkJY2FzZSBFRklfTUVNT1JZX01BUFBFRF9JT19QT1JUX1NQQUNFOgorCQkJcmVz
LT5uYW1lID0gIk1lbW9yeSBNYXBwZWQgSU8gUG9ydCBTcGFjZSI7CisJCQlicmVhazsKKwkJZGVm
YXVsdDoKKwkJCXJlcy0+bmFtZSA9ICJSZXNlcnZlZCI7CisJCQlicmVhazsKKwkJfQorCQlyZXMt
PnN0YXJ0ID0gbWQtPnBoeXNfYWRkcjsKKwkJcmVzLT5lbmQgPSByZXMtPnN0YXJ0ICsgKChtZC0+
bnVtX3BhZ2VzIDw8IEVGSV9QQUdFX1NISUZUKSAtIDEpOworCQlyZXMtPmZsYWdzID0gSU9SRVNP
VVJDRV9NRU0gfCBJT1JFU09VUkNFX0JVU1k7CisJCWlmIChyZXF1ZXN0X3Jlc291cmNlKCZpb21l
bV9yZXNvdXJjZSwgcmVzKSkKKwkJCXByaW50ayhQRlggIkZhaWxlZCB0byBhbGxvY2F0ZSByZXMg
JXMgOiAweCVseC0weCVseFxuIiwKKwkJCQkgICAgICByZXMtPm5hbWUsIHJlcy0+c3RhcnQsIHJl
cy0+ZW5kKTsKKworCQlpZiAobWQtPnR5cGUgPT0gRUZJX0NPTlZFTlRJT05BTF9NRU1PUlkpIHsK
KwkJCXJlcXVlc3RfcmVzb3VyY2UocmVzLCBjb2RlX3Jlc291cmNlKTsKKwkJCXJlcXVlc3RfcmVz
b3VyY2UocmVzLCBkYXRhX3Jlc291cmNlKTsKKwkJfQorCX0KK30KKworLyoKKyAqIENvbnZlbmll
bmNlIGZ1bmN0aW9ucyB0byBvYnRhaW4gbWVtb3J5IHR5cGVzIGFuZCBhdHRyaWJ1dGVzCisgKi8K
KwordTMyIGVmaV9tZW1fdHlwZSh1bnNpZ25lZCBsb25nIHBoeXNfYWRkcikKK3sKKwllZmlfbWVt
b3J5X2Rlc2NfdCAqbWQ7CisJaW50IGk7CisJCisJZm9yIChpID0gMDsgaSA8IG1lbW1hcC5ucl9t
YXA7IGkrKykgeworCQltZCA9ICZtZW1tYXAubWFwW2ldOworCQlpZiAoKG1kLT5waHlzX2FkZHIg
PD0gcGh5c19hZGRyKSAmJiAocGh5c19hZGRyIDwKKwkJCShtZC0+cGh5c19hZGRyICsgKG1kLT4g
bnVtX3BhZ2VzIDw8IEVGSV9QQUdFX1NISUZUKSkgKSkKKwkJCXJldHVybiBtZC0+dHlwZTsKKwl9
CisJcmV0dXJuIDA7Cit9CisKK3U2NCBlZmlfbWVtX2F0dHJpYnV0ZXModW5zaWduZWQgbG9uZyBw
aHlzX2FkZHIpCit7CisJZWZpX21lbW9yeV9kZXNjX3QgKm1kOworCWludCBpOworCisJZm9yIChp
ID0gMDsgaSA8IG1lbW1hcC5ucl9tYXA7IGkrKykgeworCQltZCA9ICZtZW1tYXAubWFwW2ldOwor
CQlpZiAoKG1kLT5waHlzX2FkZHIgPD0gcGh5c19hZGRyKSAmJiAocGh5c19hZGRyIDwKKwkJCSht
ZC0+cGh5c19hZGRyICsgKG1kLT4gbnVtX3BhZ2VzIDw8IEVGSV9QQUdFX1NISUZUKSkgKSkKKwkJ
CXJldHVybiBtZC0+YXR0cmlidXRlOworCX0KKwlyZXR1cm4gMDsKK30KKwordm9pZCBwcmludF9l
ZmlfbWVtbWFwKHZvaWQpCit7CisJZWZpX21lbW9yeV9kZXNjX3QgKm1kOworCWludCBpOworCQor
CWZvciAoaSA9IDA7IGkgPCBtZW1tYXAubnJfbWFwOyBpKyspIHsKKwkJbWQgPSAmbWVtbWFwLm1h
cFtpXTsKKwkJcHJpbnRrKCJtZW0lMDJ1OiB0eXBlPSV1LCBhdHRyPTB4JWxseCwgcmFuZ2U9WzB4
JTAxNmxseC0weCUwMTZsbHgpICglbGx1TUIpXG4iLAorCQkJaSwgbWQtPnR5cGUsIG1kLT5hdHRy
aWJ1dGUsIG1kLT5waHlzX2FkZHIsCisJCQltZC0+cGh5c19hZGRyICsgKG1kLT5udW1fcGFnZXMg
PDwgRUZJX1BBR0VfU0hJRlQpLAorCQkJKG1kLT5udW1fcGFnZXMgPj4gKDIwIC0gRUZJX1BBR0Vf
U0hJRlQpKSk7CisJfQorfQorCmRpZmYgLXVyTiBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYv
a2VybmVsL2VmaV9zdHViLlMgbGludXgtMi42LjAtdGVzdDEtZWZpL2FyY2gvaTM4Ni9rZXJuZWwv
ZWZpX3N0dWIuUwotLS0gbGludXgtMi42LjAtdGVzdDEvYXJjaC9pMzg2L2tlcm5lbC9lZmlfc3R1
Yi5TCTE5NjktMTItMzEgMTY6MDA6MDAuMDAwMDAwMDAwIC0wODAwCisrKyBsaW51eC0yLjYuMC10
ZXN0MS1lZmkvYXJjaC9pMzg2L2tlcm5lbC9lZmlfc3R1Yi5TCTIwMDMtMDctMTQgMTE6MzQ6Mjcu
MDAwMDAwMDAwIC0wNzAwCkBAIC0wLDAgKzEsMTI1IEBACisvKgorICogRUZJIGNhbGwgc3R1YiBm
b3IgSUEzMi4KKyAqCisgKiBUaGlzIHN0dWIgYWxsb3dzIHVzIHRvIG1ha2UgRUZJIGNhbGxzIGlu
IHBoeXNpY2FsIG1vZGUgd2l0aCBpbnRlcnJ1cHRzCisgKiB0dXJuZWQgb2ZmLgorICovCisKKyNp
bmNsdWRlIDxsaW51eC9jb25maWcuaD4KKyNpbmNsdWRlIDxsaW51eC9saW5rYWdlLmg+CisjaW5j
bHVkZSA8YXNtL3BhZ2UuaD4KKyNpbmNsdWRlIDxhc20vcGd0YWJsZS5oPgorCisvKgorICogZWZp
X2NhbGxfcGh5cyh2b2lkICosIC4uLikgaXMgYSBmdW5jdGlvbiB3aXRoIHZhcmlhYmxlIHBhcmFt
ZXRlcnMuCisgKiBBbGwgdGhlIGNhbGxlcnMgb2YgdGhpcyBmdW5jdGlvbiBhc3N1cmUgdGhhdCBh
bGwgdGhlIHBhcmFtZXRlcnMgYXJlIDQtYnl0ZXMuCisgKi8KKworLyoKKyAqIEluIGdjYyBjYWxs
aW5nIGNvbnZlbnRpb24sIEVCWCwgRVNQLCBFQlAsIEVTSSBhbmQgRURJIGFyZSBhbGwgY2FsbGVl
IHNhdmUuCisgKiBTbyB3ZSdkIGJldHRlciBzYXZlIGFsbCBvZiB0aGVtIGF0IHRoZSBiZWdpbm5p
bmcgb2YgdGhpcyBmdW5jdGlvbiBhbmQgcmVzdG9yZQorICogYXQgdGhlIGVuZCBubyBtYXR0ZXIg
aG93IG1hbnkgd2UgdXNlLCBiZWNhdXNlIHdlIGNhbiBub3QgYXNzdXJlIEVGSSBydW50aW1lIAor
ICogc2VydmljZSBmdW5jdGlvbnMgd2lsbCBjb21wbHkgd2l0aCBnY2MgY2FsbGluZyBjb252ZW50
aW9uLCB0b28uCisgKi8KKworLnRleHQKKy5zZWN0aW9uIC50ZXh0LCAiYSIKK0VOVFJZKGVmaV9j
YWxsX3BoeXMpCisJLyogCisJICogMC4gVGhlIGZ1bmN0aW9uIGNhbiBvbmx5IGJlIGNhbGxlZCBp
biBMaW51eCBrZXJuZWwuIFNvIENTIGhhcyBiZWVuCisJICogc2V0IHRvIDB4MDAxMCwgRFMgYW5k
IFNTIGhhdmUgYmVlbiBzZXQgdG8gMHgwMDE4LiBJbiBFRkksIEkgZm91bmQKKwkgKiB0aGUgdmFs
dWVzIG9mIHRoZXNlIHJlZ2lzdGVycyBhcmUgdGhlIHNhbWUuIEFuZCwgdGhlIGNvcnJlc3BvbmRp
bmcgCisJICogR0RUIGVudHJpZXMgYXJlIGlkZW50aWNhbC4gU28gSSB3aWxsIGRvIG5vdGhpbmcg
YWJvdXQgc2VnbWVudCByZWcKKwkgKiBhbmQgR0RULCBidXQgY2hhbmdlIEdEVCBiYXNlIHJlZ2lz
dGVyIGluIHByZWxvZyBhbmQgZXBpbG9nLgorCSAqLworCisJLyoKKwkgKiAxLiBOb3cgSSBhbSBy
dW5uaW5nIHdpdGggRUlQID0gPHBoeXNpY2FsIGFkZHJlc3M+ICsgUEFHRV9PRkZTRVQuCisJICog
QnV0IHRvIG1ha2UgaXQgc21vb3RobHkgc3dpdGNoIGZyb20gdmlydHVhbCBtb2RlIHRvIGZsYXQg
bW9kZS4KKwkgKiBUaGUgbWFwcGluZyBvZiBsb3dlciB2aXJ0dWFsIG1lbW9yeSBoYXMgYmVlbiBj
cmVhdGVkIGluIHByZWxvZyBhbmQKKwkgKiBlcGlsb2cuCisJICovCisJbW92bAkkMWYsICVlZHgK
KwlzdWJsCSRfX1BBR0VfT0ZGU0VULCAlZWR4CisJam1wCSolZWR4CisxOgorCisJLyoKKwkgKiAy
LiBOb3cgb24gdGhlIHRvcCBvZiBzdGFjayBpcyB0aGUgcmV0dXJuIAorCSAqIGFkZHJlc3MgaW4g
dGhlIGNhbGxlciBvZiBlZmlfY2FsbF9waHlzKCksIHRoZW4gcGFyYW1ldGVyIDEsCisJICogcGFy
YW1ldGVyIDIsIC4uLiwgcGFyYW0gbi4gVG8gbWFrZSB0aGluZ3MgZWFzeSwgd2Ugc2F2ZSB0aGUg
cmV0dXJuIAorCSAqIGFkZHJlc3Mgb2YgZWZpX2NhbGxfcGh5cyBpbiBhIGdsb2JhbCB2YXJpYWJs
ZS4KKwkgKi8KKwlwb3BsCSVlZHgKKwltb3ZsCSVlZHgsIHNhdmVkX3JldHVybl9hZGRyCisJLyog
Z2V0IHRoZSBmdW5jdGlvbiBwb2ludGVyIGludG8gRUNYKi8KKwlwb3BsCSVlY3gKKwltb3ZsCSVl
Y3gsIGVmaV9ydF9mdW5jdGlvbl9wdHIKKwltb3ZsCSQyZiwgJWVkeAorCXN1YmwJJF9fUEFHRV9P
RkZTRVQsICVlZHgKKwlwdXNobAklZWR4CisKKwkvKgorCSAqIDMuIENsZWFyIFBHIGJpdCBpbiAl
Q1IwLgorCSAqLworCW1vdmwJJWNyMCwgJWVkeAorCWFuZGwJJDB4N2ZmZmZmZmYsICVlZHgKKwlt
b3ZsCSVlZHgsICVjcjAKKwlqbXAJMWYKKzE6CisKKwkvKgorCSAqIDQuIEFkanVzdCBzdGFjayBw
b2ludGVyLgorCSAqLworCXN1YmwJJF9fUEFHRV9PRkZTRVQsICVlc3AKKwkKKwkvKgorCSAqIDUu
IENhbGwgdGhlIHBoeXNpY2FsIGZ1bmN0aW9uLgorCSAqLworCWptcAkqJWVjeAorCisyOgorCS8q
CisJICogNi4gQWZ0ZXIgRUZJIHJ1bnRpbWUgc2VydmljZSByZXR1cm5zLCBjb250cm9sIHdpbGwg
cmV0dXJuIHRvIAorCSAqIGZvbGxvd2luZyBpbnN0cnVjdGlvbi4gV2UnZCBiZXR0ZXIgcmVhZGp1
c3Qgc3RhY2sgcG9pbnRlciBmaXJzdC4KKwkgKi8KKwlhZGRsCSRfX1BBR0VfT0ZGU0VULCAlZXNw
CisKKwkvKgorCSAqIDcuIFJlc3RvcmUgUEcgYml0CisJICovCisJbW92bAklY3IwLCAlZWR4CisJ
b3JsCSQweDgwMDAwMDAwLCAlZWR4CisJbW92bAklZWR4LCAlY3IwCisJam1wCTFmCisxOgorCS8q
CisJICogOC4gTm93IHJlc3RvcmUgdGhlIHZpcnR1YWwgbW9kZSBmcm9tIGZsYXQgbW9kZSBieQor
CSAqIGFkZGluZyBFSVAgd2l0aCBQQUdFX09GRlNFVC4KKwkgKi8KKwltb3ZsCSQxZiwgJWVkeAor
CWptcAkqJWVkeAorMToKKworCS8qIAorCSAqIDkuIEJhbGFuY2UgdGhlIHN0YWNrLiBBbmQgYmVj
YXVzZSBFQVggY29udGFpbiB0aGUgcmV0dXJuIHZhbHVlLAorCSAqIHdlJ2QgYmV0dGVyIG5vdCBj
bG9iYmVyIGl0LgorCSAqLworCWxlYWwJZWZpX3J0X2Z1bmN0aW9uX3B0ciwgJWVkeAorCW1vdmwJ
KCVlZHgpLCAlZWN4CisJcHVzaGwJJWVjeAorCisJLyoKKwkgKiAxMC4gUHVzaCB0aGUgc2F2ZWQg
cmV0dXJuIGFkZHJlc3Mgb250byB0aGUgc3RhY2sgYW5kIHJldHVybi4KKwkgKi8KKwlsZWFsCXNh
dmVkX3JldHVybl9hZGRyLCAlZWR4CisJbW92bAkoJWVkeCksICVlY3gKKwlwdXNobAklZWN4CisJ
cmV0CisucHJldmlvdXMKKworLmRhdGEKK3NhdmVkX3JldHVybl9hZGRyOgorCS5sb25nIDAKK2Vm
aV9ydF9mdW5jdGlvbl9wdHI6CisJLmxvbmcgMApkaWZmIC11ck4gbGludXgtMi42LjAtdGVzdDEv
YXJjaC9pMzg2L2tlcm5lbC9lZml2YXJzLmMgbGludXgtMi42LjAtdGVzdDEtZWZpL2FyY2gvaTM4
Ni9rZXJuZWwvZWZpdmFycy5jCi0tLSBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYva2VybmVs
L2VmaXZhcnMuYwkxOTY5LTEyLTMxIDE2OjAwOjAwLjAwMDAwMDAwMCAtMDgwMAorKysgbGludXgt
Mi42LjAtdGVzdDEtZWZpL2FyY2gvaTM4Ni9rZXJuZWwvZWZpdmFycy5jCTIwMDMtMDctMTQgMTM6
MjA6NTkuMDAwMDAwMDAwIC0wNzAwCkBAIC0wLDAgKzEsNDQyIEBACisvKgorICogRUZJIFZhcmlh
YmxlcyAtIGVmaXZhcnMuYworICoKKyAqIENvcHlyaWdodCAoQykgMjAwMSBEZWxsIENvbXB1dGVy
IENvcnBvcmF0aW9uIDxNYXR0X0RvbXNjaEBkZWxsLmNvbT4KKyAqCisgKiBUaGlzIGNvZGUgdGFr
ZXMgYWxsIHZhcmlhYmxlcyBhY2Nlc3NpYmxlIGZyb20gRUZJIHJ1bnRpbWUgYW5kCisgKiAgZXhw
b3J0cyB0aGVtIHZpYSAvcHJvYworICoKKyAqIFJlYWRzIHRvIC9wcm9jL2VmaS92YXJzL3Zhcm5h
bWUgcmV0dXJuIGFuIGVmaV92YXJpYWJsZV90IHN0cnVjdHVyZS4KKyAqIFdyaXRlcyB0byAvcHJv
Yy9lZmkvdmFycy92YXJuYW1lIG11c3QgYmUgYW4gZWZpX3ZhcmlhYmxlX3Qgc3RydWN0dXJlLgor
ICogV3JpdGVzIHdpdGggRGF0YVNpemUgPSAwIG9yIEF0dHJpYnV0ZXMgPSAwIGRlbGV0ZXMgdGhl
IHZhcmlhYmxlLgorICogV3JpdGVzIHdpdGggYSBuZXcgdmFsdWUgaW4gVmFyaWFibGVOYW1lK1Zl
bmRvckd1aWQgY3JlYXRlcworICogYSBuZXcgdmFyaWFibGUuCisgKgorICoKKyAqICBUaGlzIHBy
b2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1v
ZGlmeQorICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExp
Y2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisgKiAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsg
ZWl0aGVyIHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwgb3IKKyAqICAoYXQgeW91ciBvcHRpb24p
IGFueSBsYXRlciB2ZXJzaW9uLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQg
aW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAqICBidXQgV0lUSE9VVCBBTlkg
V0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICogIE1FUkNI
QU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUK
KyAqICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorICoKKyAq
ICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJs
aWMgTGljZW5zZQorICogIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHdyaXRlIHRv
IHRoZSBGcmVlIFNvZnR3YXJlCisgKiAgRm91bmRhdGlvbiwgSW5jLiwgNTkgVGVtcGxlIFBsYWNl
LCBTdWl0ZSAzMzAsIEJvc3RvbiwgTUEgIDAyMTExLTEzMDcgIFVTQQorICoKKyAqIENoYW5nZWxv
ZzoKKyAqCisgKiAgMTAgRGVjIDIwMDIgLSBNYXR0IERvbXNjaCA8TWF0dF9Eb21zY2hAZGVsbC5j
b20+CisgKiAgIGZpeCBsb2NraW5nIHBlciBQZXRlciBDaHViYidzIGZpbmRpbmdzCisgKiAKKyAq
ICAyNSBNYXIgMjAwMiAtIE1hdHQgRG9tc2NoIDxNYXR0X0RvbXNjaEBkZWxsLmNvbT4KKyAqICAg
bW92ZSB1dWlkX3VucGFyc2UoKSB0byBpbmNsdWRlL2FzbS1pYTY0L2VmaS5oOmVmaV9ndWlkX3Vu
cGFyc2UoKQorICoKKyAqICAxMiBGZWIgMjAwMiAtIE1hdHQgRG9tc2NoIDxNYXR0X0RvbXNjaEBk
ZWxsLmNvbT4KKyAqICAgdXNlIGxpc3RfZm9yX2VhY2hfc2FmZSB3aGVuIGRlbGV0aW5nIHZhcnMu
CisgKiAgIHJlbW92ZSBpZmRlZiBDT05GSUdfU01QIGFyb3VuZCBpbmNsdWRlIDxsaW51eC9zbXAu
aD4KKyAqICAgdjAuMDQgcmVsZWFzZSB0byBsaW51eC1pYTY0QGxpbnV4aWE2NC5vcmcKKyAqCisg
KiAgMjAgQXByaWwgMjAwMSAtIE1hdHQgRG9tc2NoIDxNYXR0X0RvbXNjaEBkZWxsLmNvbT4KKyAq
ICAgTW92ZWQgdmFycyBmcm9tIC9wcm9jL2VmaSB0byAvcHJvYy9lZmkvdmFycywgYW5kIG1hZGUK
KyAqICAgZWZpLmMgb3duIHRoZSAvcHJvYy9lZmkgZGlyZWN0b3J5LgorICogICB2MC4wMyByZWxl
YXNlIHRvIGxpbnV4LWlhNjRAbGludXhpYTY0Lm9yZworICoKKyAqICAyNiBNYXJjaCAyMDAxIC0g
TWF0dCBEb21zY2ggPE1hdHRfRG9tc2NoQGRlbGwuY29tPgorICogICBBdCB0aGUgcmVxdWVzdCBv
ZiBTdGVwaGFuZSwgbW92ZWQgb3duZXJzaGlwIG9mIC9wcm9jL2VmaQorICogICB0byBlZmkuYywg
YW5kIG5vdyBlZml2YXJzIGxpdmVzIHVuZGVyIC9wcm9jL2VmaS92YXJzLgorICoKKyAqICAxMiBN
YXJjaCAyMDAxIC0gTWF0dCBEb21zY2ggPE1hdHRfRG9tc2NoQGRlbGwuY29tPgorICogICBGZWVk
YmFjayByZWNlaXZlZCBmcm9tIFN0ZXBoYW5lIEVyYW5pYW4gaW5jb3Jwb3JhdGVkLgorICogICBl
Zml2YXJfd3JpdGUoKSBjaGVja3MgY29weV9mcm9tX3VzZXIoKSByZXR1cm4gdmFsdWUuCisgKiAg
IGVmaXZhcl9yZWFkL3dyaXRlKCkgcmV0dXJucyBwcm9wZXIgZXJybm8uCisgKiAgIHYwLjAyIHJl
bGVhc2UgdG8gbGludXgtaWE2NEBsaW51eGlhNjQub3JnCisgKgorICogIDI2IEZlYnJ1YXJ5IDIw
MDEgLSBNYXR0IERvbXNjaCA8TWF0dF9Eb21zY2hAZGVsbC5jb20+CisgKiAgIHYwLjAxIHJlbGVh
c2UgdG8gbGludXgtaWE2NEBsaW51eGlhNjQub3JnCisgKi8KKworI2luY2x1ZGUgPGxpbnV4L2Nv
bmZpZy5oPgorI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisjaW5jbHVkZSA8bGludXgvZXJybm8u
aD4KKyNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CisjaW5jbHVkZSA8bGludXgvcHJvY19mcy5oPgor
I2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CQkvKiBmb3IgY2FwYWJsZSgpICovCisjaW5jbHVkZSA8
bGludXgvbW0uaD4KKyNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4KKyNpbmNsdWRlIDxsaW51eC9z
bXAuaD4KKyNpbmNsdWRlIDxsaW51eC9lZmkuaD4KKworI2luY2x1ZGUgPGFzbS91YWNjZXNzLmg+
CisKK01PRFVMRV9BVVRIT1IoIk1hdHQgRG9tc2NoIDxNYXR0X0RvbXNjaEBEZWxsLmNvbT4iKTsK
K01PRFVMRV9ERVNDUklQVElPTigiL3Byb2MgaW50ZXJmYWNlIHRvIEVGSSBWYXJpYWJsZXMiKTsK
K01PRFVMRV9MSUNFTlNFKCJHUEwiKTsKKworI2RlZmluZSBFRklWQVJTX1ZFUlNJT04gIjAuMDYg
MjAwMi1EZWMtMTAiCisKK3N0YXRpYyBpbnQKK2VmaXZhcl9yZWFkKGNoYXIgKnBhZ2UsIGNoYXIg
KipzdGFydCwgb2ZmX3Qgb2ZmLAorCSAgICBpbnQgY291bnQsIGludCAqZW9mLCB2b2lkICpkYXRh
KTsKK3N0YXRpYyBpbnQKK2VmaXZhcl93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgY29uc3QgY2hh
ciAqYnVmZmVyLAorCSAgICAgdW5zaWduZWQgbG9uZyBjb3VudCwgdm9pZCAqZGF0YSk7CisKKwor
LyoKKyAqIFRoZSBtYXhpbXVtIHNpemUgb2YgVmFyaWFibGVOYW1lICsgRGF0YSA9IDEwMjQKKyAq
IFRoZXJlZm9yZSwgaXQncyByZWFzb25hYmxlIHRvIHNhdmUgdGhhdCBtdWNoCisgKiBzcGFjZSBp
biBlYWNoIHBhcnQgb2YgdGhlIHN0cnVjdHVyZSwKKyAqIGFuZCB3ZSB1c2UgYSBwYWdlIGZvciBy
ZWFkaW5nL3dyaXRpbmcuCisgKi8KKwordHlwZWRlZiBzdHJ1Y3QgX2VmaV92YXJpYWJsZV90IHsK
KwllZmlfY2hhcjE2X3QgIFZhcmlhYmxlTmFtZVsxMDI0L3NpemVvZihlZmlfY2hhcjE2X3QpXTsK
KwllZmlfZ3VpZF90ICAgIFZlbmRvckd1aWQ7CisJdW5zaWduZWQgbG9uZyBEYXRhU2l6ZTsKKwlf
X3U4ICAgICAgICAgIERhdGFbMTAyNF07CisJZWZpX3N0YXR1c190ICBTdGF0dXM7CisJX191MzIg
ICAgICAgICBBdHRyaWJ1dGVzOworfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKSBlZmlfdmFyaWFi
bGVfdDsKKworCit0eXBlZGVmIHN0cnVjdCBfZWZpdmFyX2VudHJ5X3QgeworCWVmaV92YXJpYWJs
ZV90ICAgICAgICAgIHZhcjsKKwlzdHJ1Y3QgcHJvY19kaXJfZW50cnkgICAqZW50cnk7CisJc3Ry
dWN0IGxpc3RfaGVhZCAgICAgICAgbGlzdDsKK30gZWZpdmFyX2VudHJ5X3Q7CisKKy8qCisgIGVm
aXZhcnNfbG9jayBwcm90ZWN0cyB0d28gdGhpbmdzOgorICAxKSBlZml2YXJfbGlzdCAtIGFkZHMs
IHJlbW92YWxzLCByZWFkcywgd3JpdGVzCisgIDIpIGVmaS5bZ3NdZXRfdmFyaWFibGUoKSBjYWxs
cy4KKyAgSXQgbXVzdCBub3QgYmUgaGVsZCB3aGVuIGNyZWF0aW5nIHByb2MgZW50cmllcyBvciBj
YWxsaW5nIGttYWxsb2MuCisgIGVmaS5nZXRfbmV4dF92YXJpYWJsZSgpIGlzIG9ubHkgY2FsbGVk
IGZyb20gZWZpdmFyc19pbml0KCksCisgIHdoaWNoIGlzIHByb3RlY3RlZCBieSB0aGUgQktMLCBz
byB0aGF0IHBhdGggaXMgc2FmZS4KKyovCitzdGF0aWMgc3BpbmxvY2tfdCBlZml2YXJzX2xvY2sg
PSBTUElOX0xPQ0tfVU5MT0NLRUQ7CitzdGF0aWMgTElTVF9IRUFEKGVmaXZhcl9saXN0KTsKK3N0
YXRpYyBzdHJ1Y3QgcHJvY19kaXJfZW50cnkgKmVmaV92YXJzX2RpcjsKKworI2RlZmluZSBlZml2
YXJfZW50cnkobikgbGlzdF9lbnRyeShuLCBlZml2YXJfZW50cnlfdCwgbGlzdCkKKworLyogUmV0
dXJuIHRoZSBudW1iZXIgb2YgdW5pY29kZSBjaGFyYWN0ZXJzIGluIGRhdGEgKi8KK3N0YXRpYyB1
bnNpZ25lZCBsb25nCit1dGY4X3N0cmxlbihlZmlfY2hhcjE2X3QgKmRhdGEsIHVuc2lnbmVkIGxv
bmcgbWF4bGVuZ3RoKQoreworCXVuc2lnbmVkIGxvbmcgbGVuZ3RoID0gMDsKKwl3aGlsZSAoKmRh
dGErKyAhPSAwICYmIGxlbmd0aCA8IG1heGxlbmd0aCkKKwkJbGVuZ3RoKys7CisJcmV0dXJuIGxl
bmd0aDsKK30KKworLyogUmV0dXJuIHRoZSBudW1iZXIgb2YgYnl0ZXMgaXMgdGhlIGxlbmd0aCBv
ZiB0aGlzIHN0cmluZyAqLworLyogTm90ZTogdGhpcyBpcyBOT1QgdGhlIHNhbWUgYXMgdGhlIG51
bWJlciBvZiB1bmljb2RlIGNoYXJhY3RlcnMgKi8KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9u
ZwordXRmOF9zdHJzaXplKGVmaV9jaGFyMTZfdCAqZGF0YSwgdW5zaWduZWQgbG9uZyBtYXhsZW5n
dGgpCit7CisJcmV0dXJuIHV0Zjhfc3RybGVuKGRhdGEsIG1heGxlbmd0aC9zaXplb2YoZWZpX2No
YXIxNl90KSkgKiBzaXplb2YoZWZpX2NoYXIxNl90KTsKK30KKworCitzdGF0aWMgaW50Citwcm9j
X2NhbGNfbWV0cmljcyhjaGFyICpwYWdlLCBjaGFyICoqc3RhcnQsIG9mZl90IG9mZiwKKwkJICBp
bnQgY291bnQsIGludCAqZW9mLCBpbnQgbGVuKQoreworCWlmIChsZW4gPD0gb2ZmK2NvdW50KSAq
ZW9mID0gMTsKKwkqc3RhcnQgPSBwYWdlICsgb2ZmOworCWxlbiAtPSBvZmY7CisJaWYgKGxlbj5j
b3VudCkgbGVuID0gY291bnQ7CisJaWYgKGxlbjwwKSBsZW4gPSAwOworCXJldHVybiBsZW47Cit9
CisKKy8qCisgKiBlZml2YXJfY3JlYXRlX3Byb2NfZW50cnkoKQorICogUmVxdWlyZXM6CisgKiAg
ICB2YXJpYWJsZV9uYW1lX3NpemUgPSBudW1iZXIgb2YgYnl0ZXMgcmVxdWlyZWQgdG8gaG9sZAor
ICogICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVfbmFtZSAobm90IGNvdW50aW5nIHRo
ZSBOVUxMCisgKiAgICAgICAgICAgICAgICAgICAgICAgICBjaGFyYWN0ZXIgYXQgdGhlIGVuZC4K
KyAqICAgIGVmaXZhcnNfbG9jayBpcyBub3QgaGVsZCBvbiBlbnRyeSBvciBleGl0LgorICogUmV0
dXJucyAxIG9uIGZhaWx1cmUsIDAgb24gc3VjY2VzcworICovCitzdGF0aWMgaW50CitlZml2YXJf
Y3JlYXRlX3Byb2NfZW50cnkodW5zaWduZWQgbG9uZyB2YXJpYWJsZV9uYW1lX3NpemUsCisJCQkg
ZWZpX2NoYXIxNl90ICp2YXJpYWJsZV9uYW1lLAorCQkJIGVmaV9ndWlkX3QgKnZlbmRvcl9ndWlk
KQoreworCisJaW50IGksIHNob3J0X25hbWVfc2l6ZSA9IHZhcmlhYmxlX25hbWVfc2l6ZSAvIHNp
emVvZihlZmlfY2hhcjE2X3QpICsgMzg7CisJY2hhciAqc2hvcnRfbmFtZTsKKwllZml2YXJfZW50
cnlfdCAqbmV3X2VmaXZhcjsKKworICAgICAgICBzaG9ydF9uYW1lID0ga21hbGxvYyhzaG9ydF9u
YW1lX3NpemUrMSwgR0ZQX0tFUk5FTCk7CisgICAgICAgIG5ld19lZml2YXIgPSBrbWFsbG9jKHNp
emVvZihlZml2YXJfZW50cnlfdCksIEdGUF9LRVJORUwpOworCisJaWYgKCFzaG9ydF9uYW1lIHx8
ICFuZXdfZWZpdmFyKSAgeworCQlpZiAoc2hvcnRfbmFtZSkgICAgICAgIGtmcmVlKHNob3J0X25h
bWUpOworCQlpZiAobmV3X2VmaXZhcikgICAgICAgIGtmcmVlKG5ld19lZml2YXIpOworCQlyZXR1
cm4gMTsKKwl9CisJbWVtc2V0KHNob3J0X25hbWUsIDAsIHNob3J0X25hbWVfc2l6ZSsxKTsKKwlt
ZW1zZXQobmV3X2VmaXZhciwgMCwgc2l6ZW9mKGVmaXZhcl9lbnRyeV90KSk7CisKKwltZW1jcHko
bmV3X2VmaXZhci0+dmFyLlZhcmlhYmxlTmFtZSwgdmFyaWFibGVfbmFtZSwKKwkgICAgICAgdmFy
aWFibGVfbmFtZV9zaXplKTsKKwltZW1jcHkoJihuZXdfZWZpdmFyLT52YXIuVmVuZG9yR3VpZCks
IHZlbmRvcl9ndWlkLCBzaXplb2YoZWZpX2d1aWRfdCkpOworCisJLyogQ29udmVydCBVbmljb2Rl
IHRvIG5vcm1hbCBjaGFycyAoYXNzdW1lIHRvcCBiaXRzIGFyZSAwKSwKKwkgICBhbGEgVVRGLTgg
Ki8KKwlmb3IgKGk9MDsgaTwgKGludCkgKHZhcmlhYmxlX25hbWVfc2l6ZSAvIHNpemVvZihlZmlf
Y2hhcjE2X3QpKTsgaSsrKSB7CisJCXNob3J0X25hbWVbaV0gPSB2YXJpYWJsZV9uYW1lW2ldICYg
MHhGRjsKKwl9CisKKwkvKiBUaGlzIGlzIHVnbHksIGJ1dCBuZWNlc3NhcnkgdG8gc2VwYXJhdGUg
b25lIHZlbmRvcidzCisJICAgcHJpdmF0ZSB2YXJpYWJsZXMgZnJvbSBhbm90aGVyJ3MuICAgICAg
ICAgKi8KKworCSooc2hvcnRfbmFtZSArIHN0cmxlbihzaG9ydF9uYW1lKSkgPSAnLSc7CisJZWZp
X2d1aWRfdW5wYXJzZSh2ZW5kb3JfZ3VpZCwgc2hvcnRfbmFtZSArIHN0cmxlbihzaG9ydF9uYW1l
KSk7CisKKwkvKiBDcmVhdGUgdGhlIGVudHJ5IGluIHByb2MgKi8KKwluZXdfZWZpdmFyLT5lbnRy
eSA9IGNyZWF0ZV9wcm9jX2VudHJ5KHNob3J0X25hbWUsIDA2MDAsIGVmaV92YXJzX2Rpcik7CisJ
a2ZyZWUoc2hvcnRfbmFtZSk7IHNob3J0X25hbWUgPSBOVUxMOworCWlmICghbmV3X2VmaXZhci0+
ZW50cnkpIHJldHVybiAxOworCisJbmV3X2VmaXZhci0+ZW50cnktPm93bmVyID0gVEhJU19NT0RV
TEU7CisJbmV3X2VmaXZhci0+ZW50cnktPmRhdGEgPSBuZXdfZWZpdmFyOworCW5ld19lZml2YXIt
PmVudHJ5LT5yZWFkX3Byb2MgPSBlZml2YXJfcmVhZDsKKwluZXdfZWZpdmFyLT5lbnRyeS0+d3Jp
dGVfcHJvYyA9IGVmaXZhcl93cml0ZTsKKworICAgICAgICBzcGluX2xvY2soJmVmaXZhcnNfbG9j
ayk7CisgICAgICAgIGxpc3RfYWRkKCZuZXdfZWZpdmFyLT5saXN0LCAmZWZpdmFyX2xpc3QpOwor
ICAgICAgICBzcGluX3VubG9jaygmZWZpdmFyc19sb2NrKTsKKworCXJldHVybiAwOworfQorCisK
KworLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqCisgKiBlZml2YXJfcmVhZCgpCisgKiBSZXF1aXJlczoKKyAqIE1vZGlmaWVzOiBwYWdl
CisgKiBSZXR1cm5zOiBudW1iZXIgb2YgYnl0ZXMgd3JpdHRlbiwgb3IgLUVJTlZBTCBvbiBmYWls
dXJlCisgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKiovCisKK3N0YXRpYyBpbnQKK2VmaXZhcl9yZWFkKGNoYXIgKnBhZ2UsIGNoYXIgKipz
dGFydCwgb2ZmX3Qgb2ZmLCBpbnQgY291bnQsIGludCAqZW9mLCB2b2lkICpkYXRhKQoreworCWlu
dCBsZW4gPSBzaXplb2YoZWZpX3ZhcmlhYmxlX3QpOworCWVmaXZhcl9lbnRyeV90ICplZmlfdmFy
ID0gZGF0YTsKKwllZmlfdmFyaWFibGVfdCAqdmFyX2RhdGEgPSAoZWZpX3ZhcmlhYmxlX3QgKilw
YWdlOworCisJaWYgKCFwYWdlIHx8ICFkYXRhKSByZXR1cm4gLUVJTlZBTDsKKworCXNwaW5fbG9j
aygmZWZpdmFyc19sb2NrKTsKKworCW1lbWNweSh2YXJfZGF0YSwgJmVmaV92YXItPnZhciwgbGVu
KTsKKworCXZhcl9kYXRhLT5EYXRhU2l6ZSA9IDEwMjQ7CisJdmFyX2RhdGEtPlN0YXR1cyA9IGVm
aS5nZXRfdmFyaWFibGUodmFyX2RhdGEtPlZhcmlhYmxlTmFtZSwKKwkJCQkJICAgICZ2YXJfZGF0
YS0+VmVuZG9yR3VpZCwKKwkJCQkJICAgICZ2YXJfZGF0YS0+QXR0cmlidXRlcywKKwkJCQkJICAg
ICZ2YXJfZGF0YS0+RGF0YVNpemUsCisJCQkJCSAgICB2YXJfZGF0YS0+RGF0YSk7CisKKwlzcGlu
X3VubG9jaygmZWZpdmFyc19sb2NrKTsKKworCXJldHVybiBwcm9jX2NhbGNfbWV0cmljcyhwYWdl
LCBzdGFydCwgb2ZmLCBjb3VudCwgZW9mLCBsZW4pOworfQorCisvKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAqIGVmaXZhcl93cml0
ZSgpCisgKiBSZXF1aXJlczogZGF0YSBpcyBhbiBlZmlfc2V0dmFyaWFibGVfdCBkYXRhIHR5cGUs
CisgKiAgICAgICAgICAgcHJvcGVybHkgZmlsbGVkIGluLCBwb3NzaWJseSBieSBhIGNhbGwKKyAq
ICAgICAgICAgICBmaXJzdCB0byBlZml2YXJfcmVhZCgpLgorICogICAgICAgICAgIENhbGxlciBt
dXN0IGhhdmUgQ0FQX1NZU19BRE1JTgorICogTW9kaWZpZXM6IE5WUkFNCisgKiBSZXR1cm5zOiB2
YXJfZGF0YS0+RGF0YVNpemUgb24gc3VjY2VzcywgZXJybm8gb24gZmFpbHVyZQorICoKKyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
K3N0YXRpYyBpbnQKK2VmaXZhcl93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgY29uc3QgY2hhciAq
YnVmZmVyLAorCSAgICAgdW5zaWduZWQgbG9uZyBjb3VudCwgdm9pZCAqZGF0YSkKK3sKKwl1bnNp
Z25lZCBsb25nIHN0cnNpemUxLCBzdHJzaXplMjsKKwlpbnQgZm91bmQ9MDsKKwlzdHJ1Y3QgbGlz
dF9oZWFkICpwb3MsICpuOworCXVuc2lnbmVkIGxvbmcgc2l6ZSA9IHNpemVvZihlZmlfdmFyaWFi
bGVfdCk7CisJZWZpX3N0YXR1c190IHN0YXR1czsKKwllZml2YXJfZW50cnlfdCAqZWZpdmFyID0g
ZGF0YSwgKnNlYXJjaF9lZml2YXIgPSBOVUxMOworCWVmaV92YXJpYWJsZV90ICp2YXJfZGF0YTsK
KwlpZiAoIWRhdGEgfHwgY291bnQgIT0gc2l6ZSkgeworCQlwcmludGsoS0VSTl9XQVJOSU5HICJl
Zml2YXJzOiBpbXByb3BlciBzdHJ1Y3Qgb2Ygc2l6ZSAweCVseCBwYXNzZWQuXG4iLCBjb3VudCk7
CisJCXJldHVybiAtRUlOVkFMOworCX0KKwlpZiAoIWNhcGFibGUoQ0FQX1NZU19BRE1JTikpCisJ
CXJldHVybiAtRUFDQ0VTOworCisJdmFyX2RhdGEgPSBrbWFsbG9jKHNpemUsIEdGUF9LRVJORUwp
OworCWlmICghdmFyX2RhdGEpCisJCXJldHVybiAtRU5PTUVNOworCWlmIChjb3B5X2Zyb21fdXNl
cih2YXJfZGF0YSwgYnVmZmVyLCBzaXplKSkgeworICAgICAgICAgICAgICAgIGtmcmVlKHZhcl9k
YXRhKTsKKwkJcmV0dXJuIC1FRkFVTFQ7CisJfQorCisJc3Bpbl9sb2NrKCZlZml2YXJzX2xvY2sp
OworCisJLyogU2luY2UgdGhlIGRhdGEgcHRyIHdlJ3ZlIGN1cnJlbnRseSBnb3QgaXMgcHJvYmFi
bHkgZm9yCisJICAgYSBkaWZmZXJlbnQgdmFyaWFibGUgZmluZCB0aGUgcmlnaHQgdmFyaWFibGUu
CisJICAgVGhpcyBhbGxvd3MgYW55IHByb3Blcmx5IGZvcm1hdHRlZCBkYXRhIHN0cnVjdHVyZSB0
bworCSAgIGJlIHdyaXR0ZW4gdG8gYW55IG9mIHRoZSBmaWxlcyBpbiAvcHJvYy9lZmkvdmFycyBh
bmQgaXQgd2lsbCB3b3JrLgorCSovCisJbGlzdF9mb3JfZWFjaF9zYWZlKHBvcywgbiwgJmVmaXZh
cl9saXN0KSB7CisJCXNlYXJjaF9lZml2YXIgPSBlZml2YXJfZW50cnkocG9zKTsKKwkJc3Ryc2l6
ZTEgPSB1dGY4X3N0cnNpemUoc2VhcmNoX2VmaXZhci0+dmFyLlZhcmlhYmxlTmFtZSwgMTAyNCk7
CisJCXN0cnNpemUyID0gdXRmOF9zdHJzaXplKHZhcl9kYXRhLT5WYXJpYWJsZU5hbWUsIDEwMjQp
OworCQlpZiAoIHN0cnNpemUxID09IHN0cnNpemUyICYmCisJCSAgICAgIW1lbWNtcCgmKHNlYXJj
aF9lZml2YXItPnZhci5WYXJpYWJsZU5hbWUpLAorCQkJICAgICB2YXJfZGF0YS0+VmFyaWFibGVO
YW1lLCBzdHJzaXplMSkgJiYKKwkJICAgICAhZWZpX2d1aWRjbXAoc2VhcmNoX2VmaXZhci0+dmFy
LlZlbmRvckd1aWQsCisJCQkJICB2YXJfZGF0YS0+VmVuZG9yR3VpZCkpIHsKKwkJCWZvdW5kID0g
MTsKKwkJCWJyZWFrOworCQl9CisJfQorCWlmIChmb3VuZCkgZWZpdmFyID0gc2VhcmNoX2VmaXZh
cjsKKworCXN0YXR1cyA9IGVmaS5zZXRfdmFyaWFibGUodmFyX2RhdGEtPlZhcmlhYmxlTmFtZSwK
KwkJCQkgICZ2YXJfZGF0YS0+VmVuZG9yR3VpZCwKKwkJCQkgIHZhcl9kYXRhLT5BdHRyaWJ1dGVz
LAorCQkJCSAgdmFyX2RhdGEtPkRhdGFTaXplLAorCQkJCSAgdmFyX2RhdGEtPkRhdGEpOworCisJ
aWYgKHN0YXR1cyAhPSBFRklfU1VDQ0VTUykgeworCQlwcmludGsoS0VSTl9XQVJOSU5HICJzZXRf
dmFyaWFibGUoKSBmYWlsZWQ6IHN0YXR1cz0lbHhcbiIsIHN0YXR1cyk7CisJCWtmcmVlKHZhcl9k
YXRhKTsKKwkJc3Bpbl91bmxvY2soJmVmaXZhcnNfbG9jayk7CisJCXJldHVybiAtRUlPOworCX0K
KworCisJaWYgKCF2YXJfZGF0YS0+RGF0YVNpemUgfHwgIXZhcl9kYXRhLT5BdHRyaWJ1dGVzKSB7
CisJCS8qIFdlIGp1c3QgZGVsZXRlZCB0aGUgTlZSQU0gdmFyaWFibGUgKi8KKwkJcmVtb3ZlX3By
b2NfZW50cnkoZWZpdmFyLT5lbnRyeS0+bmFtZSwgZWZpX3ZhcnNfZGlyKTsKKwkJbGlzdF9kZWwo
JmVmaXZhci0+bGlzdCk7CisJCWtmcmVlKGVmaXZhcik7CisJfQorCisJc3Bpbl91bmxvY2soJmVm
aXZhcnNfbG9jayk7CisKKwkvKiBJZiB0aGlzIGlzIGEgbmV3IHZhcmlhYmxlLCBzZXQgdXAgdGhl
IHByb2MgZW50cnkgZm9yIGl0LiAqLworCWlmICghZm91bmQpIHsKKwkJZWZpdmFyX2NyZWF0ZV9w
cm9jX2VudHJ5KHV0Zjhfc3Ryc2l6ZSh2YXJfZGF0YS0+VmFyaWFibGVOYW1lLAorCQkJCQkJICAg
ICAgMTAyNCksCisJCQkJCSB2YXJfZGF0YS0+VmFyaWFibGVOYW1lLAorCQkJCQkgJnZhcl9kYXRh
LT5WZW5kb3JHdWlkKTsKKwl9CisKKwlrZnJlZSh2YXJfZGF0YSk7CisJcmV0dXJuIHNpemU7Cit9
CisKKworCitzdGF0aWMgaW50IF9faW5pdAorZWZpdmFyc19pbml0KHZvaWQpCit7CisKKwllZmlf
c3RhdHVzX3Qgc3RhdHVzOworCWVmaV9ndWlkX3QgdmVuZG9yX2d1aWQ7CisJZWZpX2NoYXIxNl90
ICp2YXJpYWJsZV9uYW1lID0ga21hbGxvYygxMDI0LCBHRlBfS0VSTkVMKTsKKwl1bnNpZ25lZCBs
b25nIHZhcmlhYmxlX25hbWVfc2l6ZSA9IDEwMjQ7CisKKwlwcmludGsoS0VSTl9JTkZPICJFRkkg
VmFyaWFibGVzIEZhY2lsaXR5IHYlc1xuIiwgRUZJVkFSU19WRVJTSU9OKTsKKworICAgICAgICAv
KiBTaW5jZSBlZmkuYyBoYXBwZW5zIGJlZm9yZSBwcm9jZnMgaXMgYXZhaWxhYmxlLAorICAgICAg
ICAgICB3ZSBjcmVhdGUgdGhlIGRpcmVjdG9yeSBoZXJlIGlmIGl0IGRvZXNuJ3QKKyAgICAgICAg
ICAgYWxyZWFkeSBleGlzdC4gIFRoZXJlJ3MgcHJvYmFibHkgYSBiZXR0ZXIgd2F5CisgICAgICAg
ICAgIHRvIGRvIHRoaXMuCisgICAgICAgICovCisgICAgICAgIGlmICghZWZpX3ZhcnNfZGlyKQor
ICAgICAgICAgICAgICAgIGVmaV92YXJzX2RpciA9IHByb2NfbWtkaXIoImVmaSIsIE5VTEwpOwor
CisJZWZpX3ZhcnNfZGlyID0gcHJvY19ta2RpcigidmFycyIsIGVmaV92YXJzX2Rpcik7CisKKwkv
KiBQZXIgRUZJIHNwZWMsIHRoZSBtYXhpbXVtIHN0b3JhZ2UgYWxsb2NhdGVkIGZvciBib3RoCisJ
ICAgdGhlIHZhcmlhYmxlIG5hbWUgYW5kIHZhcmlhYmxlIGRhdGEgaXMgMTAyNCBieXRlcy4KKwkq
LworCisJbWVtc2V0KHZhcmlhYmxlX25hbWUsIDAsIDEwMjQpOworCisJZG8geworCQl2YXJpYWJs
ZV9uYW1lX3NpemU9MTAyNDsKKworCQlzdGF0dXMgPSBlZmkuZ2V0X25leHRfdmFyaWFibGUoJnZh
cmlhYmxlX25hbWVfc2l6ZSwKKwkJCQkJICAgICAgIHZhcmlhYmxlX25hbWUsCisJCQkJCSAgICAg
ICAmdmVuZG9yX2d1aWQpOworCisKKwkJc3dpdGNoIChzdGF0dXMpIHsKKwkJY2FzZSBFRklfU1VD
Q0VTUzoKKwkJCWVmaXZhcl9jcmVhdGVfcHJvY19lbnRyeSh2YXJpYWJsZV9uYW1lX3NpemUsCisJ
CQkJCQkgdmFyaWFibGVfbmFtZSwKKwkJCQkJCSAmdmVuZG9yX2d1aWQpOworCQkJYnJlYWs7CisJ
CWNhc2UgRUZJX05PVF9GT1VORDoKKwkJCWJyZWFrOworCQlkZWZhdWx0OgorCQkJcHJpbnRrKEtF
Uk5fV0FSTklORyAiZ2V0X25leHRfdmFyaWFibGU6IHN0YXR1cz0lbHhcbiIsIHN0YXR1cyk7CisJ
CQlzdGF0dXMgPSBFRklfTk9UX0ZPVU5EOworCQkJYnJlYWs7CisJCX0KKworCX0gd2hpbGUgKHN0
YXR1cyAhPSBFRklfTk9UX0ZPVU5EKTsKKworCWtmcmVlKHZhcmlhYmxlX25hbWUpOworCXJldHVy
biAwOworfQorCitzdGF0aWMgdm9pZCBfX2V4aXQKK2VmaXZhcnNfZXhpdCh2b2lkKQoreworCXN0
cnVjdCBsaXN0X2hlYWQgKnBvcywgKm47CisJZWZpdmFyX2VudHJ5X3QgKmVmaXZhcjsKKworICAg
ICAgICBzcGluX2xvY2soJmVmaXZhcnNfbG9jayk7CisJbGlzdF9mb3JfZWFjaF9zYWZlKHBvcywg
biwgJmVmaXZhcl9saXN0KSB7CisJCWVmaXZhciA9IGVmaXZhcl9lbnRyeShwb3MpOworCQlyZW1v
dmVfcHJvY19lbnRyeShlZml2YXItPmVudHJ5LT5uYW1lLCBlZmlfdmFyc19kaXIpOworCQlsaXN0
X2RlbCgmZWZpdmFyLT5saXN0KTsKKwkJa2ZyZWUoZWZpdmFyKTsKKwl9CisJc3Bpbl91bmxvY2so
JmVmaXZhcnNfbG9jayk7CisKKwlyZW1vdmVfcHJvY19lbnRyeShlZmlfdmFyc19kaXItPm5hbWUs
IGVmaV92YXJzX2Rpcik7Cit9CisKK21vZHVsZV9pbml0KGVmaXZhcnNfaW5pdCk7Cittb2R1bGVf
ZXhpdChlZml2YXJzX2V4aXQpOworCisvKgorICogT3ZlcnJpZGVzIGZvciBFbWFjcyBzbyB0aGF0
IHdlIGZvbGxvdyBMaW51cydzIHRhYmJpbmcgc3R5bGUuCisgKiBFbWFjcyB3aWxsIG5vdGljZSB0
aGlzIHN0dWZmIGF0IHRoZSBlbmQgb2YgdGhlIGZpbGUgYW5kIGF1dG9tYXRpY2FsbHkKKyAqIGFk
anVzdCB0aGUgc2V0dGluZ3MgZm9yIHRoaXMgYnVmZmVyIG9ubHkuICBUaGlzIG11c3QgcmVtYWlu
IGF0IHRoZSBlbmQKKyAqIG9mIHRoZSBmaWxlLgorICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisgKiBM
b2NhbCB2YXJpYWJsZXM6CisgKiBjLWluZGVudC1sZXZlbDogNAorICogYy1icmFjZS1pbWFnaW5h
cnktb2Zmc2V0OiAwCisgKiBjLWJyYWNlLW9mZnNldDogLTQKKyAqIGMtYXJnZGVjbC1pbmRlbnQ6
IDQKKyAqIGMtbGFiZWwtb2Zmc2V0OiAtNAorICogYy1jb250aW51ZWQtc3RhdGVtZW50LW9mZnNl
dDogNAorICogYy1jb250aW51ZWQtYnJhY2Utb2Zmc2V0OiAwCisgKiBpbmRlbnQtdGFicy1tb2Rl
OiBuaWwKKyAqIHRhYi13aWR0aDogOAorICogRW5kOgorICovCmRpZmYgLXVyTiBsaW51eC0yLjYu
MC10ZXN0MS9hcmNoL2kzODYva2VybmVsL01ha2VmaWxlIGxpbnV4LTIuNi4wLXRlc3QxLWVmaS9h
cmNoL2kzODYva2VybmVsL01ha2VmaWxlCi0tLSBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYv
a2VybmVsL01ha2VmaWxlCTIwMDMtMDctMTMgMjA6MzE6MjAuMDAwMDAwMDAwIC0wNzAwCisrKyBs
aW51eC0yLjYuMC10ZXN0MS1lZmkvYXJjaC9pMzg2L2tlcm5lbC9NYWtlZmlsZQkyMDAzLTA3LTE3
IDE0OjAzOjUwLjAwMDAwMDAwMCAtMDcwMApAQCAtNyw3ICs3LDcgQEAKIG9iai15CTo9IHByb2Nl
c3MubyBzZW1hcGhvcmUubyBzaWduYWwubyBlbnRyeS5vIHRyYXBzLm8gaXJxLm8gdm04Ni5vIFwK
IAkJcHRyYWNlLm8gaTgyNTkubyBpb3BvcnQubyBsZHQubyBzZXR1cC5vIHRpbWUubyBzeXNfaTM4
Ni5vIFwKIAkJcGNpLWRtYS5vIGkzODZfa3N5bXMubyBpMzg3Lm8gZG1pX3NjYW4ubyBib290Zmxh
Zy5vIFwKLQkJZG91YmxlZmF1bHQubworCQlkb3VibGVmYXVsdC5vIGVmaS5vIGVmaV9zdHViLm8K
IAogb2JqLXkJCQkJKz0gY3B1Lwogb2JqLXkJCQkJKz0gdGltZXJzLwpAQCAtMzEsNiArMzEsNyBA
QAogb2JqLSQoQ09ORklHX01PRFVMRVMpCQkrPSBtb2R1bGUubwogb2JqLXkJCQkJKz0gc3lzZW50
ZXIubyB2c3lzY2FsbC5vCiBvYmotJChDT05GSUdfQUNQSV9TUkFUKSAJKz0gc3JhdC5vCitvYmot
JChDT05GSUdfRUZJX1ZBUlMpIAkJKz0gZWZpdmFycy5vCiAKIEVYVFJBX0FGTEFHUyAgIDo9IC10
cmFkaXRpb25hbAogCmRpZmYgLXVyTiBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYva2VybmVs
L3JlYm9vdC5jIGxpbnV4LTIuNi4wLXRlc3QxLWVmaS9hcmNoL2kzODYva2VybmVsL3JlYm9vdC5j
Ci0tLSBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYva2VybmVsL3JlYm9vdC5jCTIwMDMtMDct
MTMgMjA6MzI6MzMuMDAwMDAwMDAwIC0wNzAwCisrKyBsaW51eC0yLjYuMC10ZXN0MS1lZmkvYXJj
aC9pMzg2L2tlcm5lbC9yZWJvb3QuYwkyMDAzLTA3LTE0IDExOjM0OjI3LjAwMDAwMDAwMCAtMDcw
MApAQCAtNyw2ICs3LDcgQEAKICNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CiAjaW5jbHVkZSA8bGlu
dXgvaW50ZXJydXB0Lmg+CiAjaW5jbHVkZSA8bGludXgvbWMxNDY4MThydGMuaD4KKyNpbmNsdWRl
IDxsaW51eC9lZmkuaD4KICNpbmNsdWRlIDxhc20vdWFjY2Vzcy5oPgogI2luY2x1ZGUgIm1hY2hf
cmVib290LmgiCiAKQEAgLTI1MiwxOCArMjUzLDI2IEBACiAJZGlzYWJsZV9JT19BUElDKCk7CiAj
ZW5kaWYKIAotCWlmKCFyZWJvb3RfdGhydV9iaW9zKSB7Ci0JCS8qIHJlYm9vdGluZyBuZWVkcyB0
byB0b3VjaCB0aGUgcGFnZSBhdCBhYnNvbHV0ZSBhZGRyIDAgKi8KLQkJKigodW5zaWduZWQgc2hv
cnQgKilfX3ZhKDB4NDcyKSkgPSByZWJvb3RfbW9kZTsKLQkJZm9yICg7OykgewotCQkJbWFjaF9y
ZWJvb3QoKTsKLQkJCS8qIFRoYXQgZGlkbid0IHdvcmsgLSBmb3JjZSBhIHRyaXBsZSBmYXVsdC4u
ICovCisJaWYgKCFyZWJvb3RfdGhydV9iaW9zKSB7CisJCWlmIChlZmlfZW5hYmxlZCkgeworCQkJ
ZWZpLnJlc2V0X3N5c3RlbShFRklfUkVTRVRfQ09MRCwgRUZJX1NVQ0NFU1MsIDAsIDApOwogCQkJ
X19hc21fXyBfX3ZvbGF0aWxlX18oImxpZHQgJTAiOiA6Im0iIChub19pZHQpKTsKIAkJCV9fYXNt
X18gX192b2xhdGlsZV9fKCJpbnQzIik7CisJCX0gZWxzZSB7CisJCQkvKiByZWJvb3RpbmcgbmVl
ZHMgdG8gdG91Y2ggdGhlIHBhZ2UgYXQgYWJzb2x1dGUgYWRkciAwICovCisJCQkqKCh1bnNpZ25l
ZCBzaG9ydCAqKV9fdmEoMHg0NzIpKSA9IHJlYm9vdF9tb2RlOworCQkJZm9yICg7OykgeworCQkJ
CW1hY2hfcmVib290KCk7CisJCQkJLyogVGhhdCBkaWRuJ3Qgd29yayAtIGZvcmNlIGEgdHJpcGxl
IGZhdWx0Li4gKi8KKwkJCQlfX2FzbV9fIF9fdm9sYXRpbGVfXygibGlkdCAlMCI6IDoibSIgKG5v
X2lkdCkpOworCQkJCV9fYXNtX18gX192b2xhdGlsZV9fKCJpbnQzIik7CisJCQl9CiAJCX0KIAl9
Ci0KLQltYWNoaW5lX3JlYWxfcmVzdGFydChqdW1wX3RvX2Jpb3MsIHNpemVvZihqdW1wX3RvX2Jp
b3MpKTsKKwlpZiAoZWZpX2VuYWJsZWQpCisJCWVmaS5yZXNldF9zeXN0ZW0oRUZJX1JFU0VUX1dB
Uk0sIEVGSV9TVUNDRVNTLCAwLCAwKTsKKwllbHNlCisJCW1hY2hpbmVfcmVhbF9yZXN0YXJ0KGp1
bXBfdG9fYmlvcywgc2l6ZW9mKGp1bXBfdG9fYmlvcykpOwogfQogCiB2b2lkIG1hY2hpbmVfaGFs
dCh2b2lkKQpAQCAtMjcyLDcgKzI4MSw5IEBACiAKIHZvaWQgbWFjaGluZV9wb3dlcl9vZmYodm9p
ZCkKIHsKLQlpZiAocG1fcG93ZXJfb2ZmKQorCWlmIChlZmlfZW5hYmxlZCkKKwkJZWZpLnJlc2V0
X3N5c3RlbShFRklfUkVTRVRfU0hVVERPV04sIEVGSV9TVUNDRVNTLCAwLCAwKTsKKwllbHNlIGlm
IChwbV9wb3dlcl9vZmYpCiAJCXBtX3Bvd2VyX29mZigpOwogfQogCmRpZmYgLXVyTiBsaW51eC0y
LjYuMC10ZXN0MS9hcmNoL2kzODYva2VybmVsL3NldHVwLmMgbGludXgtMi42LjAtdGVzdDEtZWZp
L2FyY2gvaTM4Ni9rZXJuZWwvc2V0dXAuYwotLS0gbGludXgtMi42LjAtdGVzdDEvYXJjaC9pMzg2
L2tlcm5lbC9zZXR1cC5jCTIwMDMtMDctMTMgMjA6MzQ6MDIuMDAwMDAwMDAwIC0wNzAwCisrKyBs
aW51eC0yLjYuMC10ZXN0MS1lZmkvYXJjaC9pMzg2L2tlcm5lbC9zZXR1cC5jCTIwMDMtMDctMTcg
MTc6MjM6NDQuMDAwMDAwMDAwIC0wNzAwCkBAIC0zNiw2ICszNiw4IEBACiAjaW5jbHVkZSA8bGlu
dXgvcm9vdF9kZXYuaD4KICNpbmNsdWRlIDxsaW51eC9oaWdobWVtLmg+CiAjaW5jbHVkZSA8bGlu
dXgvbW9kdWxlLmg+CisjaW5jbHVkZSA8bGludXgvZWZpLmg+CisjaW5jbHVkZSA8bGludXgvaW5p
dC5oPgogI2luY2x1ZGUgPHZpZGVvL2VkaWQuaD4KICNpbmNsdWRlIDxhc20vZTgyMC5oPgogI2lu
Y2x1ZGUgPGFzbS9tcHNwZWMuaD4KQEAgLTUzLDYgKzU1LDkgQEAKICAqIE1hY2hpbmUgc2V0dXAu
LgogICovCiAKK3N0cnVjdCBpYTMyX2Jvb3RfcGFyYW1zIGVmaV9ib290X3BhcmFtcyBfX2luaXRk
YXRhOworaW50IGVmaV9lbmFibGVkID0gMDsKKwogLyogY3B1IGRhdGEgYXMgZGV0ZWN0ZWQgYnkg
dGhlIGFzc2VtYmx5IGNvZGUgaW4gaGVhZC5TICovCiBzdHJ1Y3QgY3B1aW5mb194ODYgbmV3X2Nw
dV9kYXRhIF9faW5pdGRhdGEgPSB7IDAsIDAsIDAsIDAsIC0xLCAxLCAwLCAwLCAtMSB9OwogLyog
Y29tbW9uIGNwdSBkYXRhIGZvciBhbGwgY3B1cyAqLwpAQCAtMTMxLDE0ICsxMzYsMzAgQEAKIHsK
IAlpbnQgaTsKIAl1bnNpZ25lZCBsb25nIGxvbmcgY3VycmVudF9zaXplID0gMDsKKwlleHRlcm4g
c3RydWN0IGVmaV9tZW1vcnlfbWFwIG1lbW1hcDsKIAotCWZvciAoaSA9IDA7IGkgPCBlODIwLm5y
X21hcDsgaSsrKSB7Ci0JCWlmIChlODIwLm1hcFtpXS50eXBlID09IEU4MjBfUkFNKSB7Ci0JCQlj
dXJyZW50X3NpemUgKz0gZTgyMC5tYXBbaV0uc2l6ZTsKLQkJCWlmIChjdXJyZW50X3NpemUgPj0g
c2l6ZSkgewotCQkJCWU4MjAubWFwW2ldLnNpemUgLT0gY3VycmVudF9zaXplLXNpemU7Ci0JCQkJ
ZTgyMC5ucl9tYXAgPSBpICsgMTsKLQkJCQlyZXR1cm47CisJaWYgKGVmaV9lbmFibGVkKSB7CisJ
CWZvciAoaSA9IDA7IGkgPCBtZW1tYXAubnJfbWFwOyBpKyspIHsKKwkJCWN1cnJlbnRfc2l6ZSA9
IG1lbW1hcC5tYXBbaV0ucGh5c19hZGRyICsKKwkJCQkgICAgICAgKG1lbW1hcC5tYXBbaV0ubnVt
X3BhZ2VzIDw8IDEyKTsKKwkJCWlmIChtZW1tYXAubWFwW2ldLnR5cGUgPT0gRUZJX0NPTlZFTlRJ
T05BTF9NRU1PUlkpIHsKKwkJCQlpZiAoY3VycmVudF9zaXplID4gc2l6ZSkgeworCQkJCQltZW1t
YXAubWFwW2ldLm51bV9wYWdlcyAtPQorCQkJCQkJKCgoY3VycmVudF9zaXplLXNpemUpICsgUEFH
RV9TSVpFLTEpID4+IFBBR0VfU0hJRlQpOworCQkJCQltZW1tYXAubnJfbWFwID0gaSArIDE7CisJ
CQkJCXJldHVybjsKKwkJCQl9CisJCQl9CisJCX0KKwl9IGVsc2UgeworCQlmb3IgKGkgPSAwOyBp
IDwgZTgyMC5ucl9tYXA7IGkrKykgeworCQkJaWYgKGU4MjAubWFwW2ldLnR5cGUgPT0gRTgyMF9S
QU0pIHsKKwkJCQljdXJyZW50X3NpemUgKz0gZTgyMC5tYXBbaV0uc2l6ZTsKKwkJCQlpZiAoY3Vy
cmVudF9zaXplID49IHNpemUpIHsKKwkJCQkJZTgyMC5tYXBbaV0uc2l6ZSAtPSBjdXJyZW50X3Np
emUtc2l6ZTsKKwkJCQkJZTgyMC5ucl9tYXAgPSBpICsgMTsKKwkJCQkJcmV0dXJuOworCQkJCX0K
IAkJCX0KIAkJfQogCX0KQEAgLTE0NiwxNyArMTY3LDIxIEBACiBzdGF0aWMgdm9pZCBfX2luaXQg
YWRkX21lbW9yeV9yZWdpb24odW5zaWduZWQgbG9uZyBsb25nIHN0YXJ0LAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHVuc2lnbmVkIGxvbmcgbG9uZyBzaXplLCBpbnQgdHlwZSkK
IHsKLQlpbnQgeCA9IGU4MjAubnJfbWFwOworCWludCB4OworCQorCWlmICghZWZpX2VuYWJsZWQp
IHsKKyAgICAgICAJCXggPSBlODIwLm5yX21hcDsKIAotCWlmICh4ID09IEU4MjBNQVgpIHsKLQkg
ICAgcHJpbnRrKEtFUk5fRVJSICJPb29wcyEgVG9vIG1hbnkgZW50cmllcyBpbiB0aGUgbWVtb3J5
IG1hcCFcbiIpOwotCSAgICByZXR1cm47Ci0JfQorCQlpZiAoeCA9PSBFODIwTUFYKSB7CisJCSAg
ICBwcmludGsoS0VSTl9FUlIgIk9vb3BzISBUb28gbWFueSBlbnRyaWVzIGluIHRoZSBtZW1vcnkg
bWFwIVxuIik7CisJCSAgICByZXR1cm47CisJCX0KIAotCWU4MjAubWFwW3hdLmFkZHIgPSBzdGFy
dDsKLQllODIwLm1hcFt4XS5zaXplID0gc2l6ZTsKLQllODIwLm1hcFt4XS50eXBlID0gdHlwZTsK
LQllODIwLm5yX21hcCsrOworCQllODIwLm1hcFt4XS5hZGRyID0gc3RhcnQ7CisJCWU4MjAubWFw
W3hdLnNpemUgPSBzaXplOworCQllODIwLm1hcFt4XS50eXBlID0gdHlwZTsKKwkJZTgyMC5ucl9t
YXArKzsKKwl9CiB9IC8qIGFkZF9tZW1vcnlfcmVnaW9uICovCiAKICNkZWZpbmUgRTgyMF9ERUJV
RwkxCkBAIC00MzIsMTAgKzQ1NywxNCBAQAogCiBzdGF0aWMgdm9pZCBfX2luaXQgc2V0dXBfbWVt
b3J5X3JlZ2lvbih2b2lkKQogewotCWNoYXIgKndobyA9IG1hY2hpbmVfc3BlY2lmaWNfbWVtb3J5
X3NldHVwKCk7Ci0KLQlwcmludGsoS0VSTl9JTkZPICJCSU9TLXByb3ZpZGVkIHBoeXNpY2FsIFJB
TSBtYXA6XG4iKTsKLQlwcmludF9tZW1vcnlfbWFwKHdobyk7CisJaWYgKGVmaV9lbmFibGVkKSB7
CisJCXByaW50ayhLRVJOX0lORk8gIkVGSS1wcm92aWRlZCBwaHlzaWNhbCBtZW1vcnkgbWFwOlxu
Iik7CisJCXByaW50X2VmaV9tZW1tYXAoKTsKKwl9IGVsc2UgeworCQljaGFyICp3aG8gPSBtYWNo
aW5lX3NwZWNpZmljX21lbW9yeV9zZXR1cCgpOworCQlwcmludGsoS0VSTl9JTkZPICJCSU9TLXBy
b3ZpZGVkIHBoeXNpY2FsIFJBTSBtYXA6XG4iKTsKKwkJcHJpbnRfbWVtb3J5X21hcCh3aG8pOwor
CX0KIH0gLyogc2V0dXBfbWVtb3J5X3JlZ2lvbiAqLwogCiAKQEAgLTU0Nyw2ICs1NzYsMjMgQEAK
IH0KIAogLyoKKyAqIENhbGxiYWNrIGZvciBlZmlfbWVtb3J5X3dhbGsuLi4gCisgKi8KK3N0YXRp
YyBpbnQgX19pbml0IAorZWZpX2ZpbmRfbWF4X3Bmbih1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNp
Z25lZCBsb25nIGVuZCwgdm9pZCAqYXJnKQoreworCXVuc2lnbmVkIGxvbmcgKm1heF9wZm4gPSBh
cmcsIHBmbjsKKworCWlmIChzdGFydCA8IGVuZCkgeworCQlwZm4gPSBQRk5fVVAoZW5kIC0xKTsK
KwkJaWYgKHBmbiA+ICptYXhfcGZuKQorCQkJKm1heF9wZm4gPSBwZm47CisJfQorCXJldHVybiAw
OworfQorCisKKy8qCiAgKiBGaW5kIHRoZSBoaWdoZXN0IHBhZ2UgZnJhbWUgbnVtYmVyIHdlIGhh
dmUgYXZhaWxhYmxlCiAgKi8KIHZvaWQgX19pbml0IGZpbmRfbWF4X3Bmbih2b2lkKQpAQCAtNTU0
LDE3ICs2MDAsMjIgQEAKIAlpbnQgaTsKIAogCW1heF9wZm4gPSAwOwotCWZvciAoaSA9IDA7IGkg
PCBlODIwLm5yX21hcDsgaSsrKSB7Ci0JCXVuc2lnbmVkIGxvbmcgc3RhcnQsIGVuZDsKLQkJLyog
UkFNPyAqLwotCQlpZiAoZTgyMC5tYXBbaV0udHlwZSAhPSBFODIwX1JBTSkKLQkJCWNvbnRpbnVl
OwotCQlzdGFydCA9IFBGTl9VUChlODIwLm1hcFtpXS5hZGRyKTsKLQkJZW5kID0gUEZOX0RPV04o
ZTgyMC5tYXBbaV0uYWRkciArIGU4MjAubWFwW2ldLnNpemUpOwotCQlpZiAoc3RhcnQgPj0gZW5k
KQotCQkJY29udGludWU7Ci0JCWlmIChlbmQgPiBtYXhfcGZuKQotCQkJbWF4X3BmbiA9IGVuZDsK
KwlpZiAoZWZpX2VuYWJsZWQpCisJCWVmaV9tZW1tYXBfd2FsayhlZmlfZmluZF9tYXhfcGZuLCAm
bWF4X3Bmbik7CisJZWxzZSB7CisKKwkJZm9yIChpID0gMDsgaSA8IGU4MjAubnJfbWFwOyBpKysp
IHsKKwkJCXVuc2lnbmVkIGxvbmcgc3RhcnQsIGVuZDsKKwkJCS8qIFJBTT8gKi8KKwkJCWlmIChl
ODIwLm1hcFtpXS50eXBlICE9IEU4MjBfUkFNKQorCQkJCWNvbnRpbnVlOworCQkJc3RhcnQgPSBQ
Rk5fVVAoZTgyMC5tYXBbaV0uYWRkcik7CisJCQllbmQgPSBQRk5fRE9XTihlODIwLm1hcFtpXS5h
ZGRyICsgZTgyMC5tYXBbaV0uc2l6ZSk7CisJCQlpZiAoc3RhcnQgPj0gZW5kKQorCQkJCWNvbnRp
bnVlOworCQkJaWYgKGVuZCA+IG1heF9wZm4pCisJCQkJbWF4X3BmbiA9IGVuZDsKKwkJfQogCX0K
IH0KIApAQCAtNjI4LDYgKzY3OSwyNSBAQAogfQogCiAjaWZuZGVmIENPTkZJR19ESVNDT05USUdN
RU0KKworLyogCisgKiBGcmVlIGFsbCBhdmFpbGFibGUgbWVtb3J5IGZvciBib290IHRpbWUgYWxs
b2NhdGlvbi4gIFVzZWQKKyAqIGFzIGEgY2FsbGJhY2sgZnVuY3Rpb24gYnkgZWZpX21lbW9yeV93
YWxrKCkKKyAqLworCitzdGF0aWMgaW50IF9faW5pdCAKK2ZyZWVfYXZhaWxhYmxlX21lbW9yeSh1
bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCwgdm9pZCAqYXJnKQoreworCS8q
IGNoZWNrIG1heF9sb3dfcGZuICovCisJaWYgKHN0YXJ0ID49ICgobWF4X2xvd19wZm4gKyAxKSA8
PCBQQUdFX1NISUZUKSkKKwkJcmV0dXJuIDA7CisJaWYgKGVuZCA+PSAoKG1heF9sb3dfcGZuICsg
MSkgPDwgUEFHRV9TSElGVCkpCisJCWVuZCA9IChtYXhfbG93X3BmbiArIDEpIDw8IFBBR0VfU0hJ
RlQ7CisJaWYgKHN0YXJ0IDwgZW5kKQorCQlmcmVlX2Jvb3RtZW0oc3RhcnQsIGVuZCAtIHN0YXJ0
KTsKKworCXJldHVybiAwOworfQogLyoKICAqIFJlZ2lzdGVyIGZ1bGx5IGF2YWlsYWJsZSBsb3cg
UkFNIHBhZ2VzIHdpdGggdGhlIGJvb3RtZW0gYWxsb2NhdG9yLgogICovCkBAIC02MzUsMzYgKzcw
NSw0MCBAQAogewogCWludCBpOwogCi0JZm9yIChpID0gMDsgaSA8IGU4MjAubnJfbWFwOyBpKysp
IHsKLQkJdW5zaWduZWQgbG9uZyBjdXJyX3BmbiwgbGFzdF9wZm4sIHNpemU7Ci0JCS8qCi0JCSAq
IFJlc2VydmUgdXNhYmxlIGxvdyBtZW1vcnkKLQkJICovCi0JCWlmIChlODIwLm1hcFtpXS50eXBl
ICE9IEU4MjBfUkFNKQotCQkJY29udGludWU7Ci0JCS8qCi0JCSAqIFdlIGFyZSByb3VuZGluZyB1
cCB0aGUgc3RhcnQgYWRkcmVzcyBvZiB1c2FibGUgbWVtb3J5OgotCQkgKi8KLQkJY3Vycl9wZm4g
PSBQRk5fVVAoZTgyMC5tYXBbaV0uYWRkcik7Ci0JCWlmIChjdXJyX3BmbiA+PSBtYXhfbG93X3Bm
bikKLQkJCWNvbnRpbnVlOwotCQkvKgotCQkgKiAuLi4gYW5kIGF0IHRoZSBlbmQgb2YgdGhlIHVz
YWJsZSByYW5nZSBkb3dud2FyZHM6Ci0JCSAqLwotCQlsYXN0X3BmbiA9IFBGTl9ET1dOKGU4MjAu
bWFwW2ldLmFkZHIgKyBlODIwLm1hcFtpXS5zaXplKTsKLQotCQlpZiAobGFzdF9wZm4gPiBtYXhf
bG93X3BmbikKLQkJCWxhc3RfcGZuID0gbWF4X2xvd19wZm47Ci0KLQkJLyoKLQkJICogLi4gZmlu
YWxseSwgZGlkIGFsbCB0aGUgcm91bmRpbmcgYW5kIHBsYXlpbmcKLQkJICogYXJvdW5kIGp1c3Qg
bWFrZSB0aGUgYXJlYSBnbyBhd2F5PwotCQkgKi8KLQkJaWYgKGxhc3RfcGZuIDw9IGN1cnJfcGZu
KQotCQkJY29udGludWU7Ci0KLQkJc2l6ZSA9IGxhc3RfcGZuIC0gY3Vycl9wZm47Ci0JCWZyZWVf
Ym9vdG1lbShQRk5fUEhZUyhjdXJyX3BmbiksIFBGTl9QSFlTKHNpemUpKTsKKwlpZiAoZWZpX2Vu
YWJsZWQpCisJCWVmaV9tZW1tYXBfd2FsayhmcmVlX2F2YWlsYWJsZV9tZW1vcnksIE5VTEwpOwor
CWVsc2UgeworCQlmb3IgKGkgPSAwOyBpIDwgZTgyMC5ucl9tYXA7IGkrKykgeworCQkJdW5zaWdu
ZWQgbG9uZyBjdXJyX3BmbiwgbGFzdF9wZm4sIHNpemU7CisJCQkvKgorCQkJICogUmVzZXJ2ZSB1
c2FibGUgbG93IG1lbW9yeQorCQkJICovCisJCQlpZiAoZTgyMC5tYXBbaV0udHlwZSAhPSBFODIw
X1JBTSkKKwkJCQljb250aW51ZTsKKwkJCS8qCisJCQkgKiBXZSBhcmUgcm91bmRpbmcgdXAgdGhl
IHN0YXJ0IGFkZHJlc3Mgb2YgdXNhYmxlIG1lbW9yeToKKwkJCSAqLworCQkJY3Vycl9wZm4gPSBQ
Rk5fVVAoZTgyMC5tYXBbaV0uYWRkcik7CisJCQlpZiAoY3Vycl9wZm4gPj0gbWF4X2xvd19wZm4p
CisJCQkJY29udGludWU7CisJCQkvKgorCQkJICogLi4uIGFuZCBhdCB0aGUgZW5kIG9mIHRoZSB1
c2FibGUgcmFuZ2UgZG93bndhcmRzOgorCQkJICovCisJCQlsYXN0X3BmbiA9IFBGTl9ET1dOKGU4
MjAubWFwW2ldLmFkZHIgKyBlODIwLm1hcFtpXS5zaXplKTsKKwkKKwkJCWlmIChsYXN0X3BmbiA+
IG1heF9sb3dfcGZuKQorCQkJCWxhc3RfcGZuID0gbWF4X2xvd19wZm47CisJCisJCQkvKgorCQkJ
ICogLi4gZmluYWxseSwgZGlkIGFsbCB0aGUgcm91bmRpbmcgYW5kIHBsYXlpbmcKKwkJCSAqIGFy
b3VuZCBqdXN0IG1ha2UgdGhlIGFyZWEgZ28gYXdheT8KKwkJCSAqLworCQkJaWYgKGxhc3RfcGZu
IDw9IGN1cnJfcGZuKQorCQkJCWNvbnRpbnVlOworCQorCQkJc2l6ZSA9IGxhc3RfcGZuIC0gY3Vy
cl9wZm47CisJCQlmcmVlX2Jvb3RtZW0oUEZOX1BIWVMoY3Vycl9wZm4pLCBQRk5fUEhZUyhzaXpl
KSk7CisJCX0KIAl9CiB9CiAKQEAgLTczNiwxOSArODEwLDM1IEBACiAjZW5kaWYKIAogI2lmZGVm
IENPTkZJR19CTEtfREVWX0lOSVRSRAotCWlmIChMT0FERVJfVFlQRSAmJiBJTklUUkRfU1RBUlQp
IHsKLQkJaWYgKElOSVRSRF9TVEFSVCArIElOSVRSRF9TSVpFIDw9IChtYXhfbG93X3BmbiA8PCBQ
QUdFX1NISUZUKSkgewotCQkJcmVzZXJ2ZV9ib290bWVtKElOSVRSRF9TVEFSVCwgSU5JVFJEX1NJ
WkUpOwotCQkJaW5pdHJkX3N0YXJ0ID0KLQkJCQlJTklUUkRfU1RBUlQgPyBJTklUUkRfU1RBUlQg
KyBQQUdFX09GRlNFVCA6IDA7Ci0JCQlpbml0cmRfZW5kID0gaW5pdHJkX3N0YXJ0K0lOSVRSRF9T
SVpFOwotCQl9Ci0JCWVsc2UgewotCQkJcHJpbnRrKEtFUk5fRVJSICJpbml0cmQgZXh0ZW5kcyBi
ZXlvbmQgZW5kIG9mIG1lbW9yeSAiCi0JCQkgICAgIigweCUwOGx4ID4gMHglMDhseClcbmRpc2Fi
bGluZyBpbml0cmRcbiIsCi0JCQkgICAgSU5JVFJEX1NUQVJUICsgSU5JVFJEX1NJWkUsCi0JCQkg
ICAgbWF4X2xvd19wZm4gPDwgUEFHRV9TSElGVCk7Ci0JCQlpbml0cmRfc3RhcnQgPSAwOworCWlm
IChlZmlfZW5hYmxlZCkgeworCQlpZiAoZWZpX2Jvb3RfcGFyYW1zLmluaXRyZF9zdGFydCkgewor
CQkJaWYgKGVmaV9ib290X3BhcmFtcy5pbml0cmRfc3RhcnQgKyBlZmlfYm9vdF9wYXJhbXMuaW5p
dHJkX3NpemUgPD0gKG1heF9sb3dfcGZuIDw8IFBBR0VfU0hJRlQpKSB7CisJCQkJcmVzZXJ2ZV9i
b290bWVtKGVmaV9ib290X3BhcmFtcy5pbml0cmRfc3RhcnQsIGVmaV9ib290X3BhcmFtcy5pbml0
cmRfc2l6ZSk7CisJCQkJaW5pdHJkX3N0YXJ0ID0gZWZpX2Jvb3RfcGFyYW1zLmluaXRyZF9zdGFy
dCArIFBBR0VfT0ZGU0VUOworCQkJCWluaXRyZF9lbmQgPSBpbml0cmRfc3RhcnQgKyBlZmlfYm9v
dF9wYXJhbXMuaW5pdHJkX3NpemU7CisJCQl9IGVsc2UgeworCQkJCXByaW50ayhLRVJOX0VSUiAi
aW5pdHJkIGV4dGVuZHMgYmV5b25kIGVuZCBvZiBtZW1vcnkhICIKKwkJCQkJCSIoMHglMDhseCA+
IDB4JTA4bHgpXG4gZGlzYWJsaW5nIGluaXRyZFxuIiwKKwkJCQkJCWVmaV9ib290X3BhcmFtcy5p
bml0cmRfc3RhcnQgKyBlZmlfYm9vdF9wYXJhbXMuaW5pdHJkX3NpemUsCisJCQkJCQltYXhfbG93
X3BmbiA8PCBQQUdFX1NISUZUKTsKKwkJCQlpbml0cmRfc3RhcnQgPSAwOworCQkJfQorCQl9CisJ
fSBlbHNlIHsKKwkJaWYgKExPQURFUl9UWVBFICYmIElOSVRSRF9TVEFSVCkgeworCQkJaWYgKElO
SVRSRF9TVEFSVCArIElOSVRSRF9TSVpFIDw9IChtYXhfbG93X3BmbiA8PCBQQUdFX1NISUZUKSkg
eworCQkJCXJlc2VydmVfYm9vdG1lbShJTklUUkRfU1RBUlQsIElOSVRSRF9TSVpFKTsKKwkJCQlp
bml0cmRfc3RhcnQgPQorCQkJCQlJTklUUkRfU1RBUlQgPyBJTklUUkRfU1RBUlQgKyBQQUdFX09G
RlNFVCA6IDA7CisJCQkJaW5pdHJkX2VuZCA9IGluaXRyZF9zdGFydCtJTklUUkRfU0laRTsKKwkJ
CX0KKwkJCWVsc2UgeworCQkJCXByaW50ayhLRVJOX0VSUiAiaW5pdHJkIGV4dGVuZHMgYmV5b25k
IGVuZCBvZiBtZW1vcnkgIgorCQkJCSAgICAiKDB4JTA4bHggPiAweCUwOGx4KVxuZGlzYWJsaW5n
IGluaXRyZFxuIiwKKwkJCQkgICAgSU5JVFJEX1NUQVJUICsgSU5JVFJEX1NJWkUsCisJCQkJICAg
IG1heF9sb3dfcGZuIDw8IFBBR0VfU0hJRlQpOworCQkJCWluaXRyZF9zdGFydCA9IDA7CisJCQl9
CiAJCX0KIAl9CiAjZW5kaWYKQEAgLTc2NywzMyArODU3LDM3IEBACiAJdW5zaWduZWQgbG9uZyBs
b3dfbWVtX3NpemU7CiAJaW50IGk7CiAKLQlwcm9iZV9yb21zKCk7Ci0JZm9yIChpID0gMDsgaSA8
IGU4MjAubnJfbWFwOyBpKyspIHsKLQkJc3RydWN0IHJlc291cmNlICpyZXM7Ci0JCWlmIChlODIw
Lm1hcFtpXS5hZGRyICsgZTgyMC5tYXBbaV0uc2l6ZSA+IDB4MTAwMDAwMDAwVUxMKQotCQkJY29u
dGludWU7Ci0JCXJlcyA9IGFsbG9jX2Jvb3RtZW1fbG93KHNpemVvZihzdHJ1Y3QgcmVzb3VyY2Up
KTsKLQkJc3dpdGNoIChlODIwLm1hcFtpXS50eXBlKSB7Ci0JCWNhc2UgRTgyMF9SQU06CXJlcy0+
bmFtZSA9ICJTeXN0ZW0gUkFNIjsgYnJlYWs7Ci0JCWNhc2UgRTgyMF9BQ1BJOglyZXMtPm5hbWUg
PSAiQUNQSSBUYWJsZXMiOyBicmVhazsKLQkJY2FzZSBFODIwX05WUzoJcmVzLT5uYW1lID0gIkFD
UEkgTm9uLXZvbGF0aWxlIFN0b3JhZ2UiOyBicmVhazsKLQkJZGVmYXVsdDoJcmVzLT5uYW1lID0g
InJlc2VydmVkIjsKLQkJfQotCQlyZXMtPnN0YXJ0ID0gZTgyMC5tYXBbaV0uYWRkcjsKLQkJcmVz
LT5lbmQgPSByZXMtPnN0YXJ0ICsgZTgyMC5tYXBbaV0uc2l6ZSAtIDE7Ci0JCXJlcy0+ZmxhZ3Mg
PSBJT1JFU09VUkNFX01FTSB8IElPUkVTT1VSQ0VfQlVTWTsKLQkJcmVxdWVzdF9yZXNvdXJjZSgm
aW9tZW1fcmVzb3VyY2UsIHJlcyk7Ci0JCWlmIChlODIwLm1hcFtpXS50eXBlID09IEU4MjBfUkFN
KSB7Ci0JCQkvKgotCQkJICogIFdlIGRvbid0IGtub3cgd2hpY2ggUkFNIHJlZ2lvbiBjb250YWlu
cyBrZXJuZWwgZGF0YSwKLQkJCSAqICBzbyB3ZSB0cnkgaXQgcmVwZWF0ZWRseSBhbmQgbGV0IHRo
ZSByZXNvdXJjZSBtYW5hZ2VyCi0JCQkgKiAgdGVzdCBpdC4KLQkJCSAqLwotCQkJcmVxdWVzdF9y
ZXNvdXJjZShyZXMsICZjb2RlX3Jlc291cmNlKTsKLQkJCXJlcXVlc3RfcmVzb3VyY2UocmVzLCAm
ZGF0YV9yZXNvdXJjZSk7CisJaWYgKGVmaV9lbmFibGVkKQorCQllZmlfaW5pdGlhbGl6ZV9pb21l
bV9yZXNvdXJjZXMoJmNvZGVfcmVzb3VyY2UsICZkYXRhX3Jlc291cmNlKTsKKwllbHNlIHsKKwkJ
cHJvYmVfcm9tcygpOworCQlmb3IgKGkgPSAwOyBpIDwgZTgyMC5ucl9tYXA7IGkrKykgeworCQkJ
c3RydWN0IHJlc291cmNlICpyZXM7CisJCQlpZiAoZTgyMC5tYXBbaV0uYWRkciArIGU4MjAubWFw
W2ldLnNpemUgPiAweDEwMDAwMDAwMFVMTCkKKwkJCQljb250aW51ZTsKKwkJCXJlcyA9IGFsbG9j
X2Jvb3RtZW1fbG93KHNpemVvZihzdHJ1Y3QgcmVzb3VyY2UpKTsKKwkJCXN3aXRjaCAoZTgyMC5t
YXBbaV0udHlwZSkgeworCQkJY2FzZSBFODIwX1JBTToJcmVzLT5uYW1lID0gIlN5c3RlbSBSQU0i
OyBicmVhazsKKwkJCWNhc2UgRTgyMF9BQ1BJOglyZXMtPm5hbWUgPSAiQUNQSSBUYWJsZXMiOyBi
cmVhazsKKwkJCWNhc2UgRTgyMF9OVlM6CXJlcy0+bmFtZSA9ICJBQ1BJIE5vbi12b2xhdGlsZSBT
dG9yYWdlIjsgYnJlYWs7CisJCQlkZWZhdWx0OglyZXMtPm5hbWUgPSAicmVzZXJ2ZWQiOworCQkJ
fQorCQkJcmVzLT5zdGFydCA9IGU4MjAubWFwW2ldLmFkZHI7CisJCQlyZXMtPmVuZCA9IHJlcy0+
c3RhcnQgKyBlODIwLm1hcFtpXS5zaXplIC0gMTsKKwkJCXJlcy0+ZmxhZ3MgPSBJT1JFU09VUkNF
X01FTSB8IElPUkVTT1VSQ0VfQlVTWTsKKwkJCXJlcXVlc3RfcmVzb3VyY2UoJmlvbWVtX3Jlc291
cmNlLCByZXMpOworCQkJaWYgKGU4MjAubWFwW2ldLnR5cGUgPT0gRTgyMF9SQU0pIHsKKwkJCQkv
KgorCQkJCSAqICBXZSBkb24ndCBrbm93IHdoaWNoIFJBTSByZWdpb24gY29udGFpbnMga2VybmVs
IGRhdGEsCisJCQkJICogIHNvIHdlIHRyeSBpdCByZXBlYXRlZGx5IGFuZCBsZXQgdGhlIHJlc291
cmNlIG1hbmFnZXIKKwkJCQkgKiAgdGVzdCBpdC4KKwkJCQkgKi8KKwkJCQlyZXF1ZXN0X3Jlc291
cmNlKHJlcywgJmNvZGVfcmVzb3VyY2UpOworCQkJCXJlcXVlc3RfcmVzb3VyY2UocmVzLCAmZGF0
YV9yZXNvdXJjZSk7CisJCQl9CiAJCX0KIAl9Ci0KKyAJIC8qIEVGSSBzeXN0ZW1zIG1heSBzdGls
bCBoYXZlIFZHQSAqLwogCXJlcXVlc3RfZ3JhcGhpY3NfcmVzb3VyY2UoKTsKIAogCS8qIHJlcXVl
c3QgSS9PIHNwYWNlIGZvciBkZXZpY2VzIHVzZWQgb24gYWxsIGlbMzQ1XTg2IFBDcyAqLwpAQCAt
OTIxLDIwICsxMDE1LDMxIEBACiAJcHJlX3NldHVwX2FyY2hfaG9vaygpOwogCWVhcmx5X2NwdV9p
bml0KCk7CiAKLSAJUk9PVF9ERVYgPSBPUklHX1JPT1RfREVWOwotIAlkcml2ZV9pbmZvID0gRFJJ
VkVfSU5GTzsKLSAJc2NyZWVuX2luZm8gPSBTQ1JFRU5fSU5GTzsKLQllZGlkX2luZm8gPSBFRElE
X0lORk87Ci0JYXBtX2luZm8uYmlvcyA9IEFQTV9CSU9TX0lORk87Ci0Jc2F2ZWRfdmlkZW9tb2Rl
ID0gVklERU9fTU9ERTsKLQlwcmludGsoIlZpZGVvIG1vZGUgdG8gYmUgdXNlZCBmb3IgcmVzdG9y
ZSBpcyAlbHhcbiIsIHNhdmVkX3ZpZGVvbW9kZSk7Ci0JaWYoIFNZU19ERVNDX1RBQkxFLmxlbmd0
aCAhPSAwICkgewotCQlNQ0FfYnVzID0gU1lTX0RFU0NfVEFCTEUudGFibGVbM10gJjB4MjsKLQkJ
bWFjaGluZV9pZCA9IFNZU19ERVNDX1RBQkxFLnRhYmxlWzBdOwotCQltYWNoaW5lX3N1Ym1vZGVs
X2lkID0gU1lTX0RFU0NfVEFCTEUudGFibGVbMV07Ci0JCUJJT1NfcmV2aXNpb24gPSBTWVNfREVT
Q19UQUJMRS50YWJsZVsyXTsKKwltZW1jcHkoJmVmaV9ib290X3BhcmFtcywgRUZJX0JPT1RfUEFS
QU1TLCBzaXplb2Yoc3RydWN0IGlhMzJfYm9vdF9wYXJhbXMpKTsKKwllZmlfZW5hYmxlZCA9IGVm
aV9ib290X3BhcmFtcy5zaXplOworCisJaWYgKGVmaV9lbmFibGVkKSB7CisJCXNjcmVlbl9pbmZv
Lm9yaWdfeCA9IGVmaV9ib290X3BhcmFtcy5vcmlnX3g7CisJCXNjcmVlbl9pbmZvLm9yaWdfeSA9
IGVmaV9ib290X3BhcmFtcy5vcmlnX3k7CisJCXNjcmVlbl9pbmZvLm9yaWdfdmlkZW9fY29scyA9
IGVmaV9ib290X3BhcmFtcy5udW1fY29sczsKKwkJc2NyZWVuX2luZm8ub3JpZ192aWRlb19saW5l
cyA9IGVmaV9ib290X3BhcmFtcy5udW1fcm93czsKKwkJc2NyZWVuX2luZm8ub3JpZ192aWRlb19w
b2ludHMgPSA0MDAgLyBzY3JlZW5faW5mby5vcmlnX3ZpZGVvX2NvbHM7CisJfSBlbHNlIHsKKyAJ
CVJPT1RfREVWID0gT1JJR19ST09UX0RFVjsKKyAJCWRyaXZlX2luZm8gPSBEUklWRV9JTkZPOwor
IAkJc2NyZWVuX2luZm8gPSBTQ1JFRU5fSU5GTzsKKwkJZWRpZF9pbmZvID0gRURJRF9JTkZPOwor
CQlhcG1faW5mby5iaW9zID0gQVBNX0JJT1NfSU5GTzsKKwkJc2F2ZWRfdmlkZW9tb2RlID0gVklE
RU9fTU9ERTsKKwkJcHJpbnRrKCJWaWRlbyBtb2RlIHRvIGJlIHVzZWQgZm9yIHJlc3RvcmUgaXMg
JWx4XG4iLCBzYXZlZF92aWRlb21vZGUpOworCQlpZiAoU1lTX0RFU0NfVEFCTEUubGVuZ3RoICE9
IDAgKSB7CisJCQlNQ0FfYnVzID0gU1lTX0RFU0NfVEFCTEUudGFibGVbM10gJjB4MjsKKwkJCW1h
Y2hpbmVfaWQgPSBTWVNfREVTQ19UQUJMRS50YWJsZVswXTsKKwkJCW1hY2hpbmVfc3VibW9kZWxf
aWQgPSBTWVNfREVTQ19UQUJMRS50YWJsZVsxXTsKKwkJCUJJT1NfcmV2aXNpb24gPSBTWVNfREVT
Q19UQUJMRS50YWJsZVsyXTsKKwkJfQkKKwkJYXV4X2RldmljZV9wcmVzZW50ID0gQVVYX0RFVklD
RV9JTkZPOwogCX0KLQlhdXhfZGV2aWNlX3ByZXNlbnQgPSBBVVhfREVWSUNFX0lORk87CiAKICNp
ZmRlZiBDT05GSUdfQkxLX0RFVl9SQU0KIAlyZF9pbWFnZV9zdGFydCA9IFJBTURJU0tfRkxBR1Mg
JiBSQU1ESVNLX0lNQUdFX1NUQVJUX01BU0s7CkBAIC05NDIsNyArMTA0NywxMSBAQAogCXJkX2Rv
bG9hZCA9ICgoUkFNRElTS19GTEFHUyAmIFJBTURJU0tfTE9BRF9GTEFHKSAhPSAwKTsKICNlbmRp
ZgogCUFSQ0hfU0VUVVAKLQlzZXR1cF9tZW1vcnlfcmVnaW9uKCk7CisJaWYgKGVmaV9lbmFibGVk
KQorCQllZmlfaW5pdCgpOworCWVsc2UKKwkJc2V0dXBfbWVtb3J5X3JlZ2lvbigpOworCiAJY29w
eV9lZGQoKTsKIAogCWlmICghTU9VTlRfUk9PVF9SRE9OTFkpCkBAIC05OTYsNyArMTEwNSw4IEBA
CiAKICNpZmRlZiBDT05GSUdfVlQKICNpZiBkZWZpbmVkKENPTkZJR19WR0FfQ09OU09MRSkKLQlj
b25zd2l0Y2hwID0gJnZnYV9jb247CisJaWYgKCFlZmlfZW5hYmxlZCB8fCAoZWZpX21lbV90eXBl
KDB4YTAwMDApICE9IEVGSV9DT05WRU5USU9OQUxfTUVNT1JZKSkKKwkJY29uc3dpdGNocCA9ICZ2
Z2FfY29uOwogI2VsaWYgZGVmaW5lZChDT05GSUdfRFVNTVlfQ09OU09MRSkKIAljb25zd2l0Y2hw
ID0gJmR1bW15X2NvbjsKICNlbmRpZgpkaWZmIC11ck4gbGludXgtMi42LjAtdGVzdDEvYXJjaC9p
Mzg2L2tlcm5lbC90aW1lLmMgbGludXgtMi42LjAtdGVzdDEtZWZpL2FyY2gvaTM4Ni9rZXJuZWwv
dGltZS5jCi0tLSBsaW51eC0yLjYuMC10ZXN0MS9hcmNoL2kzODYva2VybmVsL3RpbWUuYwkyMDAz
LTA3LTEzIDIwOjM0OjI5LjAwMDAwMDAwMCAtMDcwMAorKysgbGludXgtMi42LjAtdGVzdDEtZWZp
L2FyY2gvaTM4Ni9rZXJuZWwvdGltZS5jCTIwMDMtMDctMTQgMTE6MzQ6MjcuMDAwMDAwMDAwIC0w
NzAwCkBAIC00NCw2ICs0NCw3IEBACiAjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CiAjaW5jbHVk
ZSA8bGludXgvc3lzZGV2Lmg+CiAjaW5jbHVkZSA8bGludXgvYmNkLmg+CisjaW5jbHVkZSA8bGlu
dXgvZWZpLmg+CiAKICNpbmNsdWRlIDxhc20vaW8uaD4KICNpbmNsdWRlIDxhc20vc21wLmg+CkBA
IC0xNTgsNiArMTU5LDM3IEBACiAJcmV0dXJuIHJldHZhbDsKIH0KIAorc3RhdGljIGludCBlZmlf
c2V0X3J0Y19tbXNzKHVuc2lnbmVkIGxvbmcgbm93dGltZSkKK3sKKwlpbnQgcmVhbF9zZWNvbmRz
LCByZWFsX21pbnV0ZXM7CisJdW5zaWduZWQgbG9uZyAJZmxhZ3M7CisJZWZpX3N0YXR1c190IAlz
dGF0dXM7CisJZWZpX3RpbWVfdCAJZWZ0OworCWVmaV90aW1lX2NhcF90IAljYXA7CisKKwlzcGlu
X2xvY2tfaXJxc2F2ZSgmcnRjX2xvY2ssIGZsYWdzKTsKKworCXN0YXR1cyA9IGVmaS5nZXRfdGlt
ZSgmZWZ0LCAmY2FwKTsKKwlpZiAoc3RhdHVzICE9IEVGSV9TVUNDRVNTKQorCQlwYW5pYygiT29v
cHMsIGVmaXRpbWU6IGNhbid0IHJlYWQgdGltZSFcbiIpOworCXJlYWxfc2Vjb25kcyA9IG5vd3Rp
bWUgJSA2MDsKKwlyZWFsX21pbnV0ZXMgPSBub3d0aW1lIC8gNjA7CisKKwlpZiAoKChhYnMocmVh
bF9taW51dGVzIC0gZWZ0Lm1pbnV0ZSkgKyAxNSkvMzApICYgMSkKKwkJcmVhbF9taW51dGVzICs9
IDMwOworCXJlYWxfbWludXRlcyAlPSA2MDsKKworCWVmdC5taW51dGUgPSByZWFsX21pbnV0ZXM7
CisJZWZ0LnNlY29uZCA9IHJlYWxfc2Vjb25kczsKKworCXN0YXR1cyA9IGVmaS5zZXRfdGltZSgm
ZWZ0KTsKKwlpZiAoc3RhdHVzICE9IEVGSV9TVUNDRVNTKQorCQlwYW5pYygiT29vcHM6IGVmaXRp
bWU6IGNhbid0IHJlYWQgdGltZSFcbiIpOworCisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmcnRj
X2xvY2ssIGZsYWdzKTsKKwlyZXR1cm4gMDsKK30KKwogLyogbGFzdCB0aW1lIHRoZSBjbW9zIGNs
b2NrIGdvdCB1cGRhdGVkICovCiBzdGF0aWMgbG9uZyBsYXN0X3J0Y191cGRhdGU7CiAKQEAgLTIx
MCw3ICsyNDIsNyBAQAogCQkJPj0gVVNFQ19BRlRFUiAtICgodW5zaWduZWQpIFRJQ0tfU0laRSkg
LyAyICYmCiAJICAgICh4dGltZS50dl9uc2VjIC8gMTAwMCkKIAkJCTw9IFVTRUNfQkVGT1JFICsg
KCh1bnNpZ25lZCkgVElDS19TSVpFKSAvIDIpIHsKLQkJaWYgKHNldF9ydGNfbW1zcyh4dGltZS50
dl9zZWMpID09IDApCisJCWlmICgoZWZpX2VuYWJsZWQgJiYgKCFlZmlfc2V0X3J0Y19tbXNzKHh0
aW1lLnR2X3NlYykgKSkgfHwgKHNldF9ydGNfbW1zcyh4dGltZS50dl9zZWMpID09IDApKQogCQkJ
bGFzdF9ydGNfdXBkYXRlID0geHRpbWUudHZfc2VjOwogCQllbHNlCiAJCQlsYXN0X3J0Y191cGRh
dGUgPSB4dGltZS50dl9zZWMgLSA2MDA7IC8qIGRvIGl0IGFnYWluIGluIDYwIHMgKi8KQEAgLTI3
NSw2ICszMDcsMjcgQEAKIAlzZXRfa3NldF9uYW1lKCJwaXQiKSwKIH07CiAKKy8qCisgKiBUaGlz
IGlzIGNhbGxlZCBiZWZvcmUgdGhlIFJUIG1hcHBpbmdzIGFyZSBpbiBwbGFjZSwgc28gd2UKKyAq
IG5lZWQgdG8gYmUgYWJsZSB0byBnZXQgdGhlIHRpbWUgaW4gcGh5c2ljYWwgbW9kZS4KKyAqLwor
dW5zaWduZWQgbG9uZyBlZmlfZ2V0X3RpbWUodm9pZCkKK3sKKwllZmlfc3RhdHVzX3Qgc3RhdHVz
OworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJZWZpX3RpbWVfdCBlZnQ7CisJZWZpX3RpbWVfY2Fw
X3QgY2FwOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnJ0Y19sb2NrLCBmbGFncyk7CisJc3RhdHVz
ID0gcGh5c19lZmlfZ2V0X3RpbWUoJmVmdCwgJmNhcCk7CisJaWYgKHN0YXR1cyAhPSBFRklfU1VD
Q0VTUykKKwkJcHJpbnRrKCJPb3BzOiBlZml0aW1lOiBjYW4ndCByZWFkIHRpbWUgc3RhdHVzOiAw
eCVseFxuIiwgc3RhdHVzKTsKKworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnJ0Y19sb2NrLCBm
bGFncyk7CisJCisJcmV0dXJuIG1rdGltZShlZnQueWVhciwgZWZ0Lm1vbnRoLCBlZnQuZGF5LCBl
ZnQuaG91ciwgZWZ0Lm1pbnV0ZSwgZWZ0LnNlY29uZCk7Cit9CisKIC8qIFhYWCB0aGlzIGRyaXZl
cmZzIHN0dWZmIHNob3VsZCBwcm9iYWJseSBnbyBlbHNld2hlcmUgbGF0ZXIgLWpvaG4gKi8KIHN0
YXRpYyBzdHJ1Y3Qgc3lzX2RldmljZSBkZXZpY2VfaTgyNTMgPSB7CiAJLmlkCT0gMCwKQEAgLTI5
Myw3ICszNDYsMTAgQEAKIAogdm9pZCBfX2luaXQgdGltZV9pbml0KHZvaWQpCiB7Ci0JeHRpbWUu
dHZfc2VjID0gZ2V0X2Ntb3NfdGltZSgpOworCWlmIChlZmlfZW5hYmxlZCkKKwkJeHRpbWUudHZf
c2VjID0gZWZpX2dldF90aW1lKCk7CisJZWxzZQorCQl4dGltZS50dl9zZWMgPSBnZXRfY21vc190
aW1lKCk7CiAJd2FsbF90b19tb25vdG9uaWMudHZfc2VjID0gLXh0aW1lLnR2X3NlYzsKIAl4dGlt
ZS50dl9uc2VjID0gKElOSVRJQUxfSklGRklFUyAlIEhaKSAqIChOU0VDX1BFUl9TRUMgLyBIWik7
CiAJd2FsbF90b19tb25vdG9uaWMudHZfbnNlYyA9IC14dGltZS50dl9uc2VjOwpkaWZmIC11ck4g
bGludXgtMi42LjAtdGVzdDEvZHJpdmVycy9hY3BpL0tjb25maWcgbGludXgtMi42LjAtdGVzdDEt
ZWZpL2RyaXZlcnMvYWNwaS9LY29uZmlnCi0tLSBsaW51eC0yLjYuMC10ZXN0MS9kcml2ZXJzL2Fj
cGkvS2NvbmZpZwkyMDAzLTA3LTEzIDIwOjM5OjIzLjAwMDAwMDAwMCAtMDcwMAorKysgbGludXgt
Mi42LjAtdGVzdDEtZWZpL2RyaXZlcnMvYWNwaS9LY29uZmlnCTIwMDMtMDctMTQgMTI6MDk6NDMu
MDAwMDAwMDAwIC0wNzAwCkBAIC0yMzIsOCArMjMyLDE0IEBACiAJICBkdW1wIHlvdXIgQUNQSSBE
U0RUIHRhYmxlIHVzaW5nIC9wcm9jL2FjcGkvZHNkdC4KIAogY29uZmlnIEFDUElfRUZJCi0JYm9v
bAotCWRlcGVuZHMgb24gSUE2NCAmJiAoIUlBNjRfSFBfU0lNIHx8IElBNjRfU0dJX1NOKQorCWJv
b2wgIk9idGFpbiBSU0RQIFBvaW50ZXIgZnJvbSBFRkkiCisJZGVwZW5kcyBvbiBJQTY0ICYmICgh
SUE2NF9IUF9TSU0gfHwgSUE2NF9TR0lfU04pIHx8IFg4NiAmJiBBQ1BJCisJaGVscAorCSAgIE9u
IEVGSSBTeXN0ZW1zIHRoZSBSU0RQIHBvaW50ZXIgaXMgcGFzc2VkIHRvIHRoZSBrZXJuZWwgdmlh
CisJICAgdGhlIEVGSSBDb25maWd1cmF0aW9uIFRhYmxlLiAgT24gSXRhbml1bSBzeXN0ZW1zIHRo
aXMgaXMgCisJICAgc3RhbmRhcmQgYW5kIHJlcXVpcmVkLiAgRm9yIElBLTMyLCBzeXN0ZW1zIHRo
YXQgaGF2ZQorCSAgIEVGSSBmaXJtd2FyZSBzaG91bGQgbGVhdmUgdGhpcyBlbmFibGVkLiAgUGxh
dGZvcm1zIHdpdGggCisJICAgdHJhZGl0aW9uYWwgbGVnYWN5IEJJT1Mgc2hvdWxkIGRpc2FibGUg
dGhpcyBvcHRpb24uIAogCWRlZmF1bHQgeQogCiBlbmRtZW51CmRpZmYgLXVyTiBsaW51eC0yLjYu
MC10ZXN0MS9kcml2ZXJzL2FjcGkvb3NsLmMgbGludXgtMi42LjAtdGVzdDEtZWZpL2RyaXZlcnMv
YWNwaS9vc2wuYwotLS0gbGludXgtMi42LjAtdGVzdDEvZHJpdmVycy9hY3BpL29zbC5jCTIwMDMt
MDctMTMgMjA6Mzc6MTYuMDAwMDAwMDAwIC0wNzAwCisrKyBsaW51eC0yLjYuMC10ZXN0MS1lZmkv
ZHJpdmVycy9hY3BpL29zbC5jCTIwMDMtMDctMTcgMTE6Mjk6NDEuMDAwMDAwMDAwIC0wNzAwCkBA
IC00Miw3ICs0Miw2IEBACiAKICNpZmRlZiBDT05GSUdfQUNQSV9FRkkKICNpbmNsdWRlIDxsaW51
eC9lZmkuaD4KLXU2NCBlZmlfbWVtX2F0dHJpYnV0ZXMgKHU2NCBwaHlzX2FkZHIpOwogI2VuZGlm
CiAKIApkaWZmIC11ck4gbGludXgtMi42LjAtdGVzdDEvZnMvcHJvYy9wcm9jX21pc2MuYyBsaW51
eC0yLjYuMC10ZXN0MS1lZmkvZnMvcHJvYy9wcm9jX21pc2MuYwotLS0gbGludXgtMi42LjAtdGVz
dDEvZnMvcHJvYy9wcm9jX21pc2MuYwkyMDAzLTA3LTEzIDIwOjMwOjQzLjAwMDAwMDAwMCAtMDcw
MAorKysgbGludXgtMi42LjAtdGVzdDEtZWZpL2ZzL3Byb2MvcHJvY19taXNjLmMJMjAwMy0wNy0x
NCAxMTozNDoyNy4wMDAwMDAwMDAgLTA3MDAKQEAgLTQ0LDYgKzQ0LDcgQEAKICNpbmNsdWRlIDxs
aW51eC9qaWZmaWVzLmg+CiAjaW5jbHVkZSA8bGludXgvc3lzcnEuaD4KICNpbmNsdWRlIDxsaW51
eC92bWFsbG9jLmg+CisjaW5jbHVkZSA8bGludXgvZWZpLmg+CiAjaW5jbHVkZSA8YXNtL3VhY2Nl
c3MuaD4KICNpbmNsdWRlIDxhc20vcGd0YWJsZS5oPgogI2luY2x1ZGUgPGFzbS9pby5oPgpAQCAt
NDg0LDYgKzQ4NSwyNiBAQAogCWxlbiA9IHNwcmludGYocGFnZSwgIiVzXG4iLCBzYXZlZF9jb21t
YW5kX2xpbmUpOwogCXJldHVybiBwcm9jX2NhbGNfbWV0cmljcyhwYWdlLCBzdGFydCwgb2ZmLCBj
b3VudCwgZW9mLCBsZW4pOwogfQorc3RhdGljIGludCBzdGFydHVwX3RpbWVzX3JlYWRfcHJvYyhj
aGFyICpwYWdlLCBjaGFyICoqc3RhcnQsIG9mZl90IG9mZiwKKwkJCQkgICBpbnQgY291bnQsIGlu
dCAqZW9mLCB2b2lkICpkYXRhKQoreworCWludCBsZW4sIHRpbWVzOworCWVmaV9zdGF0dXNfdCBz
dGF0dXM7CisKKwlpZiAoZWZpX2VuYWJsZWQpIHsKKwkJc3RhdHVzID0gZWZpLmdldF9uZXh0X2hp
Z2hfbW9ub19jb3VudCgmdGltZXMpOworCQlpZiAoc3RhdHVzID09IEVGSV9TVUNDRVNTKSAKKwkJ
CXNwcmludGYocGFnZSwgIiVkXG4iLCB0aW1lcyk7CisJCWVsc2UgeworCQkJc3ByaW50ZihwYWdl
LCAiJWRcbiIsIDApOworCQkJcHJpbnRrKCJLZXJuZWwgZmFpbGVkIHRvIGNhbGwgR2V0TmV4dEhp
Z2hNb25vQ291bnQhXG4iKTsKKwkJfQorCQlsZW4gPSBzdHJsZW4ocGFnZSk7CisJfSBlbHNlIAor
CQlwYWdlWzBdID0gJ1wwJzsKKwkJCisJcmV0dXJuIHByb2NfY2FsY19tZXRyaWNzKHBhZ2UsIHN0
YXJ0LCBvZmYsIGNvdW50LCBlb2YsIDApOworfQogCiAjaWZkZWYgQ09ORklHX1NHSV9EUzEyODYK
IHN0YXRpYyBpbnQgZHMxMjg2X3JlYWRfcHJvYyhjaGFyICpwYWdlLCBjaGFyICoqc3RhcnQsIG9m
Zl90IG9mZiwKQEAgLTYyNyw2ICs2NDgsNyBAQAogCQl7ImRldmljZXMiLAlkZXZpY2VzX3JlYWRf
cHJvY30sCiAJCXsiZmlsZXN5c3RlbXMiLAlmaWxlc3lzdGVtc19yZWFkX3Byb2N9LAogCQl7ImNt
ZGxpbmUiLAljbWRsaW5lX3JlYWRfcHJvY30sCisJCXsic3RhcnR1cF90aW1lcyIsIHN0YXJ0dXBf
dGltZXNfcmVhZF9wcm9jfSwKICNpZmRlZiBDT05GSUdfU0dJX0RTMTI4NgogCQl7InJ0YyIsCQlk
czEyODZfcmVhZF9wcm9jfSwKICNlbmRpZgpkaWZmIC11ck4gbGludXgtMi42LjAtdGVzdDEvaW5j
bHVkZS9hc20taTM4Ni9zZXR1cC5oIGxpbnV4LTIuNi4wLXRlc3QxLWVmaS9pbmNsdWRlL2FzbS1p
Mzg2L3NldHVwLmgKLS0tIGxpbnV4LTIuNi4wLXRlc3QxL2luY2x1ZGUvYXNtLWkzODYvc2V0dXAu
aAkyMDAzLTA3LTEzIDIwOjM1OjUyLjAwMDAwMDAwMCAtMDcwMAorKysgbGludXgtMi42LjAtdGVz
dDEtZWZpL2luY2x1ZGUvYXNtLWkzODYvc2V0dXAuaAkyMDAzLTA3LTE0IDExOjM0OjI3LjAwMDAw
MDAwMCAtMDcwMApAQCAtMjgsNiArMjgsMTIgQEAKICNkZWZpbmUgQVBNX0JJT1NfSU5GTyAoKihz
dHJ1Y3QgYXBtX2Jpb3NfaW5mbyAqKSAoUEFSQU0rMHg0MCkpCiAjZGVmaW5lIERSSVZFX0lORk8g
KCooc3RydWN0IGRyaXZlX2luZm9fc3RydWN0ICopIChQQVJBTSsweDgwKSkKICNkZWZpbmUgU1lT
X0RFU0NfVEFCTEUgKCooc3RydWN0IHN5c19kZXNjX3RhYmxlX3N0cnVjdCopKFBBUkFNKzB4YTAp
KQorI2RlZmluZSBFRklfQk9PVF9QQVJBTVMgKFBBUkFNICsgMHgwYzAwKQorI2RlZmluZSBFRklf
U1lTVEFCICgoZWZpX2Jvb3RfcGFyYW1zLmVmaV9zeXNfdGJsKSkKKyNkZWZpbmUgRUZJX01FTURF
U0NfU0laRSAoIChlZmlfYm9vdF9wYXJhbXMuZWZpX21lbV9kZXNjX3NpemUpKQorI2RlZmluZSBF
RklfTUVNREVTQ19WRVJTSU9OICggKGVmaV9ib290X3BhcmFtcy5lZmlfbWVtX2Rlc2NfdmVyc2lv
bikpCisjZGVmaW5lIEVGSV9NRU1NQVAgKCAoZWZpX2Jvb3RfcGFyYW1zLmVmaV9tZW1fbWFwKSkK
KyNkZWZpbmUgRUZJX01FTU1BUF9TSVpFICggKGVmaV9ib290X3BhcmFtcy5lZmlfbWVtX21hcF9z
aXplKSkKICNkZWZpbmUgTU9VTlRfUk9PVF9SRE9OTFkgKCoodW5zaWduZWQgc2hvcnQgKikgKFBB
UkFNKzB4MUYyKSkKICNkZWZpbmUgUkFNRElTS19GTEFHUyAoKih1bnNpZ25lZCBzaG9ydCAqKSAo
UEFSQU0rMHgxRjgpKQogI2RlZmluZSBWSURFT19NT0RFICgqKHVuc2lnbmVkIHNob3J0ICopIChQ
QVJBTSsweDFGQSkpCkBAIC00Myw0ICs0OSwyNiBAQAogI2RlZmluZSBDT01NQU5EX0xJTkUgKChj
aGFyICopIChQQVJBTSsyMDQ4KSkKICNkZWZpbmUgQ09NTUFORF9MSU5FX1NJWkUgMjU2CiAKK3N0
cnVjdCBpYTMyX2Jvb3RfcGFyYW1zIHsKKwl1bnNpZ25lZCBsb25nIHNpemU7CisJdW5zaWduZWQg
bG9uZyBjb21tYW5kX2xpbmU7CisJZWZpX3N5c3RlbV90YWJsZV90ICplZmlfc3lzX3RibDsKKwll
ZmlfbWVtb3J5X2Rlc2NfdCAqZWZpX21lbV9tYXA7CisJdW5zaWduZWQgbG9uZyBlZmlfbWVtX21h
cF9zaXplOworCXVuc2lnbmVkIGxvbmcgZWZpX21lbV9kZXNjX3NpemU7CQorCXVuc2lnbmVkIGxv
bmcgZWZpX21lbV9kZXNjX3ZlcnNpb247CisJdW5zaWduZWQgbG9uZyBpbml0cmRfc3RhcnQ7CisJ
dW5zaWduZWQgbG9uZyBpbml0cmRfc2l6ZTsKKwl1bnNpZ25lZCBsb25nIGxvYWRlcl9zdGFydDsJ
CisJdW5zaWduZWQgbG9uZyBsb2FkZXJfc2l6ZTsKKwl1bnNpZ25lZCBsb25nIGtlcm5lbF9zdGFy
dDsKKwl1bnNpZ25lZCBsb25nIGtlbnJlbF9zaXplOworCXVuc2lnbmVkIGxvbmcgbnVtX2NvbHM7
CisJdW5zaWduZWQgbG9uZyBudW1fcm93czsKKwl1bnNpZ25lZCBsb25nIG9yaWdfeDsKKwl1bnNp
Z25lZCBsb25nIG9yaWdfeTsKK307CisKK2V4dGVybiBzdHJ1Y3QgaWEzMl9ib290X3BhcmFtcyBl
ZmlfYm9vdF9wYXJhbXM7CisKICNlbmRpZiAvKiBfaTM4Nl9TRVRVUF9IICovCmRpZmYgLXVyTiBs
aW51eC0yLjYuMC10ZXN0MS9pbmNsdWRlL2xpbnV4L2VmaS5oIGxpbnV4LTIuNi4wLXRlc3QxLWVm
aS9pbmNsdWRlL2xpbnV4L2VmaS5oCi0tLSBsaW51eC0yLjYuMC10ZXN0MS9pbmNsdWRlL2xpbnV4
L2VmaS5oCTIwMDMtMDctMTMgMjA6Mzg6MzUuMDAwMDAwMDAwIC0wNzAwCisrKyBsaW51eC0yLjYu
MC10ZXN0MS1lZmkvaW5jbHVkZS9saW51eC9lZmkuaAkyMDAzLTA3LTE3IDEzOjEzOjM1LjAwMDAw
MDAwMCAtMDcwMApAQCAtMTYsMTcgKzE2LDE5IEBACiAjaW5jbHVkZSA8bGludXgvdGltZS5oPgog
I2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgvcHJvY19mcy5oPgorI2lu
Y2x1ZGUgPGxpbnV4L3J0Yy5oPgorI2luY2x1ZGUgPGxpbnV4L2lvcG9ydC5oPgogCiAjaW5jbHVk
ZSA8YXNtL3BhZ2UuaD4KICNpbmNsdWRlIDxhc20vc3lzdGVtLmg+CiAKICNkZWZpbmUgRUZJX1NV
Q0NFU1MJCTAKLSNkZWZpbmUgRUZJX0xPQURfRVJST1IgICAgICAgICAgKCAxIHwgKDFVTCA8PCA2
MykpCi0jZGVmaW5lIEVGSV9JTlZBTElEX1BBUkFNRVRFUgkoIDIgfCAoMVVMIDw8IDYzKSkKLSNk
ZWZpbmUgRUZJX1VOU1VQUE9SVEVECQkoIDMgfCAoMVVMIDw8IDYzKSkKLSNkZWZpbmUgRUZJX0JB
RF9CVUZGRVJfU0laRSAgICAgKCA0IHwgKDFVTCA8PCA2MykpCi0jZGVmaW5lIEVGSV9CVUZGRVJf
VE9PX1NNQUxMCSggNSB8ICgxVUwgPDwgNjMpKQotI2RlZmluZSBFRklfTk9UX0ZPVU5ECQkoMTQg
fCAoMVVMIDw8IDYzKSkKKyNkZWZpbmUgRUZJX0xPQURfRVJST1IgICAgICAgICAgKCAxIHwgKDFV
TCA8PCAoQklUU19QRVJfTE9ORy0xKSkpCisjZGVmaW5lIEVGSV9JTlZBTElEX1BBUkFNRVRFUgko
IDIgfCAoMVVMIDw8IChCSVRTX1BFUl9MT05HLTEpKSkKKyNkZWZpbmUgRUZJX1VOU1VQUE9SVEVE
CQkoIDMgfCAoMVVMIDw8IChCSVRTX1BFUl9MT05HLTEpKSkKKyNkZWZpbmUgRUZJX0JBRF9CVUZG
RVJfU0laRSAgICAgKCA0IHwgKDFVTCA8PCAoQklUU19QRVJfTE9ORy0xKSkpCisjZGVmaW5lIEVG
SV9CVUZGRVJfVE9PX1NNQUxMCSggNSB8ICgxVUwgPDwgKEJJVFNfUEVSX0xPTkctMSkpKQorI2Rl
ZmluZSBFRklfTk9UX0ZPVU5ECQkoMTQgfCAoMVVMIDw8IChCSVRTX1BFUl9MT05HLTEpKSkKIAog
dHlwZWRlZiB1bnNpZ25lZCBsb25nIGVmaV9zdGF0dXNfdDsKIHR5cGVkZWYgdTggZWZpX2Jvb2xf
dDsKQEAgLTk2LDkgKzk4LDEyIEBACiAJdTY0IHZpcnRfYWRkcjsKIAl1NjQgbnVtX3BhZ2VzOwog
CXU2NCBhdHRyaWJ1dGU7CisjaWYgZGVmaW5lZChfX2kzODZfXykKKwl1NjQgcGFkMTsKKyNlbmRp
ZgogfSBlZmlfbWVtb3J5X2Rlc2NfdDsKIAotdHlwZWRlZiBpbnQgZWZpX2ZyZWVtZW1fY2FsbGJh
Y2tfdCAodTY0IHN0YXJ0LCB1NjQgZW5kLCB2b2lkICphcmcpOwordHlwZWRlZiBpbnQgZWZpX2Zy
ZWVtZW1fY2FsbGJhY2tfdCAodW5zaWduZWQgbG9uZyBzdGFydCwgdW5zaWduZWQgbG9uZyBlbmQs
IHZvaWQgKmFyZyk7CiAKIC8qCiAgKiBUeXBlcyBhbmQgZGVmaW5lcyBmb3IgVGltZSBTZXJ2aWNl
cwpAQCAtMTMyLDYgKzEzNyw3IEBACiAgKi8KICNkZWZpbmUgRUZJX1JFU0VUX0NPTEQgMAogI2Rl
ZmluZSBFRklfUkVTRVRfV0FSTSAxCisjZGVmaW5lIEVGSV9SRVNFVF9TSFVURE9XTiAyCiAKIC8q
CiAgKiBFRkkgUnVudGltZSBTZXJ2aWNlcyB0YWJsZQpAQCAtMTQxLDE3ICsxNDcsMTcgQEAKIAog
dHlwZWRlZiBzdHJ1Y3QgewogCWVmaV90YWJsZV9oZHJfdCBoZHI7Ci0JdTY0IGdldF90aW1lOwot
CXU2NCBzZXRfdGltZTsKLQl1NjQgZ2V0X3dha2V1cF90aW1lOwotCXU2NCBzZXRfd2FrZXVwX3Rp
bWU7Ci0JdTY0IHNldF92aXJ0dWFsX2FkZHJlc3NfbWFwOwotCXU2NCBjb252ZXJ0X3BvaW50ZXI7
Ci0JdTY0IGdldF92YXJpYWJsZTsKLQl1NjQgZ2V0X25leHRfdmFyaWFibGU7Ci0JdTY0IHNldF92
YXJpYWJsZTsKLQl1NjQgZ2V0X25leHRfaGlnaF9tb25vX2NvdW50OwotCXU2NCByZXNldF9zeXN0
ZW07CisJdW5zaWduZWQgbG9uZyBnZXRfdGltZTsKKwl1bnNpZ25lZCBsb25nIHNldF90aW1lOwor
CXVuc2lnbmVkIGxvbmcgZ2V0X3dha2V1cF90aW1lOworCXVuc2lnbmVkIGxvbmcgc2V0X3dha2V1
cF90aW1lOworCXVuc2lnbmVkIGxvbmcgc2V0X3ZpcnR1YWxfYWRkcmVzc19tYXA7CisJdW5zaWdu
ZWQgbG9uZyBjb252ZXJ0X3BvaW50ZXI7CisJdW5zaWduZWQgbG9uZyBnZXRfdmFyaWFibGU7CisJ
dW5zaWduZWQgbG9uZyBnZXRfbmV4dF92YXJpYWJsZTsKKwl1bnNpZ25lZCBsb25nIHNldF92YXJp
YWJsZTsKKwl1bnNpZ25lZCBsb25nIGdldF9uZXh0X2hpZ2hfbW9ub19jb3VudDsKKwl1bnNpZ25l
ZCBsb25nIHJlc2V0X3N5c3RlbTsKIH0gZWZpX3J1bnRpbWVfc2VydmljZXNfdDsKIAogdHlwZWRl
ZiBlZmlfc3RhdHVzX3QgZWZpX2dldF90aW1lX3QgKGVmaV90aW1lX3QgKnRtLCBlZmlfdGltZV9j
YXBfdCAqdGMpOwpAQCAtMTY1LDkgKzE3MSwxMyBAQAogCQkJCQkgICAgICBlZmlfZ3VpZF90ICp2
ZW5kb3IpOwogdHlwZWRlZiBlZmlfc3RhdHVzX3QgZWZpX3NldF92YXJpYWJsZV90IChlZmlfY2hh
cjE2X3QgKm5hbWUsIGVmaV9ndWlkX3QgKnZlbmRvciwgdTMyIGF0dHIsCiAJCQkJCSB1bnNpZ25l
ZCBsb25nIGRhdGFfc2l6ZSwgdm9pZCAqZGF0YSk7Ci10eXBlZGVmIGVmaV9zdGF0dXNfdCBlZmlf
Z2V0X25leHRfaGlnaF9tb25vX2NvdW50X3QgKHU2NCAqY291bnQpOwordHlwZWRlZiBlZmlfc3Rh
dHVzX3QgZWZpX2dldF9uZXh0X2hpZ2hfbW9ub19jb3VudF90ICh1MzIgKmNvdW50KTsKIHR5cGVk
ZWYgdm9pZCBlZmlfcmVzZXRfc3lzdGVtX3QgKGludCByZXNldF90eXBlLCBlZmlfc3RhdHVzX3Qg
c3RhdHVzLAogCQkJCSB1bnNpZ25lZCBsb25nIGRhdGFfc2l6ZSwgZWZpX2NoYXIxNl90ICpkYXRh
KTsKK3R5cGVkZWYgZWZpX3N0YXR1c190IGVmaV9zZXRfdmlydHVhbF9hZGRyZXNzX21hcF90ICh1
bnNpZ25lZCBsb25nIG1lbW9yeV9tYXBfc2l6ZSwKKwkJCQkJCSAgIHVuc2lnbmVkIGxvbmcgZGVz
Y3JpcHRvcl9zaXplLAorCQkJCQkJICAgdTMyIGRlc2NyaXB0b3JfdmVyc2lvbiwKKwkJCQkJCSAg
IGVmaV9tZW1vcnlfZGVzY190ICp2aXJ0dWFsX21hcCk7CiAKIC8qCiAgKiAgRUZJIENvbmZpZ3Vy
YXRpb24gVGFibGUgYW5kIEdVSUQgZGVmaW5pdGlvbnMKQEAgLTE5Myw5ICsyMDMsMTUgQEAKICNk
ZWZpbmUgSENEUF9UQUJMRV9HVUlECVwKICAgICBFRklfR1VJRCggIDB4Zjk1MTkzOGQsIDB4NjIw
YiwgMHg0MmVmLCAweDgyLCAweDc5LCAweGE4LCAweDRiLCAweDc5LCAweDYxLCAweDc4LCAweDk4
ICkKIAorI2RlZmluZSBVR0FfSU9fUFJPVE9DT0xfR1VJRCBcCisgICAgRUZJX0dVSUQoICAweDYx
YTRkNDllLCAweDZmNjgsIDB4NGYxYiwgMHhiOSwgMHgyMiwgMHhhOCwgMHg2ZSwgMHhlZCwgMHhi
LCAweDcsIDB4YTIgKQorCisjZGVmaW5lIFVHQV9EUkFXX1BST1RPQ09MX0dVSUQgXAorICAgIEVG
SV9HVUlEKCAgMHg5ODJjMjk4YiwgMHhmNGZhLCAweDQxY2IsIDB4YjgsIDB4MzgsIDB4NzcsIDB4
YWEsIDB4NjgsIDB4OGYsIDB4YjgsIDB4MzkgKQorCiB0eXBlZGVmIHN0cnVjdCB7CiAJZWZpX2d1
aWRfdCBndWlkOwotCXU2NCB0YWJsZTsKKwl1bnNpZ25lZCBsb25nIHRhYmxlOwogfSBlZmlfY29u
ZmlnX3RhYmxlX3Q7CiAKICNkZWZpbmUgRUZJX1NZU1RFTV9UQUJMRV9TSUdOQVRVUkUgMHg1NDUz
NTk1MzIwNDk0MjQ5CkBAIC0yMDMsMjAgKzIxOSwyNiBAQAogCiB0eXBlZGVmIHN0cnVjdCB7CiAJ
ZWZpX3RhYmxlX2hkcl90IGhkcjsKLQl1NjQgZndfdmVuZG9yOwkJLyogcGh5c2ljYWwgYWRkciBv
ZiBDSEFSMTYgdmVuZG9yIHN0cmluZyAqLworCXVuc2lnbmVkIGxvbmcgZndfdmVuZG9yOwkvKiBw
aHlzaWNhbCBhZGRyIG9mIENIQVIxNiB2ZW5kb3Igc3RyaW5nICovCiAJdTMyIGZ3X3JldmlzaW9u
OwotCXU2NCBjb25faW5faGFuZGxlOwotCXU2NCBjb25faW47Ci0JdTY0IGNvbl9vdXRfaGFuZGxl
OwotCXU2NCBjb25fb3V0OwotCXU2NCBzdGRlcnJfaGFuZGxlOwotCXU2NCBzdGRlcnI7Ci0JdTY0
IHJ1bnRpbWU7Ci0JdTY0IGJvb3R0aW1lOwotCXU2NCBucl90YWJsZXM7Ci0JdTY0IHRhYmxlczsK
Kwl1bnNpZ25lZCBsb25nIGNvbl9pbl9oYW5kbGU7CisJdW5zaWduZWQgbG9uZyBjb25faW47CisJ
dW5zaWduZWQgbG9uZyBjb25fb3V0X2hhbmRsZTsKKwl1bnNpZ25lZCBsb25nIGNvbl9vdXQ7CisJ
dW5zaWduZWQgbG9uZyBzdGRlcnJfaGFuZGxlOworCXVuc2lnbmVkIGxvbmcgc3RkZXJyOworCWVm
aV9ydW50aW1lX3NlcnZpY2VzX3QgKnJ1bnRpbWU7CisJdW5zaWduZWQgbG9uZyBib290dGltZTsK
Kwl1bnNpZ25lZCBsb25nIG5yX3RhYmxlczsKKwl1bnNpZ25lZCBsb25nIHRhYmxlczsKIH0gZWZp
X3N5c3RlbV90YWJsZV90OwogCitzdHJ1Y3QgZWZpX21lbW9yeV9tYXAgeworCWVmaV9tZW1vcnlf
ZGVzY190ICpwaHlzX21hcDsKKwllZmlfbWVtb3J5X2Rlc2NfdCAqbWFwOworCWludCBucl9tYXA7
Cit9OworCiAvKgogICogQWxsIHJ1bnRpbWUgYWNjZXNzIHRvIEVGSSBnb2VzIHRocm91Z2ggdGhp
cyBzdHJ1Y3R1cmU6CiAgKi8KQEAgLTIyOSw2ICsyNTEsNyBAQAogCXZvaWQgKnNhbF9zeXN0YWI7
CQkvKiBTQUwgc3lzdGVtIHRhYmxlICovCiAJdm9pZCAqYm9vdF9pbmZvOwkJLyogYm9vdCBpbmZv
IHRhYmxlICovCiAJdm9pZCAqaGNkcDsJCQkvKiBIQ0RQIHRhYmxlICovCisJdm9pZCAqdWdhOwkJ
CS8qIFVHQSB0YWJsZSAqLwogCWVmaV9nZXRfdGltZV90ICpnZXRfdGltZTsKIAllZmlfc2V0X3Rp
bWVfdCAqc2V0X3RpbWU7CiAJZWZpX2dldF93YWtldXBfdGltZV90ICpnZXRfd2FrZXVwX3RpbWU7
CkBAIC0yMzgsNiArMjYxLDcgQEAKIAllZmlfc2V0X3ZhcmlhYmxlX3QgKnNldF92YXJpYWJsZTsK
IAllZmlfZ2V0X25leHRfaGlnaF9tb25vX2NvdW50X3QgKmdldF9uZXh0X2hpZ2hfbW9ub19jb3Vu
dDsKIAllZmlfcmVzZXRfc3lzdGVtX3QgKnJlc2V0X3N5c3RlbTsKKwllZmlfc2V0X3ZpcnR1YWxf
YWRkcmVzc19tYXBfdCAqc2V0X3ZpcnR1YWxfYWRkcmVzc19tYXA7CiB9IGVmaTsKIAogc3RhdGlj
IGlubGluZSBpbnQKQEAgLTI2Myw4ICsyODcsMTUgQEAKIGV4dGVybiB2b2lkIGVmaV9nZXR0aW1l
b2ZkYXkgKHN0cnVjdCB0aW1lc3BlYyAqdHMpOwogZXh0ZXJuIHZvaWQgZWZpX2VudGVyX3ZpcnR1
YWxfbW9kZSAodm9pZCk7CS8qIHN3aXRjaCBFRkkgdG8gdmlydHVhbCBtb2RlLCBpZiBwb3NzaWJs
ZSAqLwogZXh0ZXJuIHU2NCBlZmlfZ2V0X2lvYmFzZSAodm9pZCk7CitleHRlcm4gdm9pZCBwcmlu
dF9lZmlfbWVtbWFwKHZvaWQpOwogZXh0ZXJuIHUzMiBlZmlfbWVtX3R5cGUgKHVuc2lnbmVkIGxv
bmcgcGh5c19hZGRyKTsKIGV4dGVybiB1NjQgZWZpX21lbV9hdHRyaWJ1dGVzICh1bnNpZ25lZCBs
b25nIHBoeXNfYWRkcik7CitleHRlcm4gdm9pZCBlZmlfaW5pdGlhbGl6ZV9pb21lbV9yZXNvdXJj
ZXMoc3RydWN0IHJlc291cmNlICpjb2RlX3Jlc291cmNlLCAKKwkJCQkJICAgc3RydWN0IHJlc291
cmNlICpkYXRhX3Jlc291cmNlKTsKK2V4dGVybiBlZmlfc3RhdHVzX3QgcGh5c19lZmlfZ2V0X3Rp
bWUoZWZpX3RpbWVfdCAqdG0sIGVmaV90aW1lX2NhcF90ICp0Yyk7CisKK2V4dGVybiBzdHJ1Y3Qg
ZWZpX21lbW9yeV9tYXBfc3RydWN0IGVmaV9tZW1vcnlfbWFwOworZXh0ZXJuIGludCBlZmlfZW5h
YmxlZDsKIAogLyoKICAqIFZhcmlhYmxlIEF0dHJpYnV0ZXMKQEAgLTI3Myw3ICszMDQsNiBAQAog
I2RlZmluZSBFRklfVkFSSUFCTEVfQk9PVFNFUlZJQ0VfQUNDRVNTIDB4MDAwMDAwMDAwMDAwMDAw
MgogI2RlZmluZSBFRklfVkFSSUFCTEVfUlVOVElNRV9BQ0NFU1MgICAgIDB4MDAwMDAwMDAwMDAw
MDAwNAogCi0KIC8qCiAgKiBlZmlfZGlyIGlzIGFsbG9jYXRlZCBpbiBhcmNoL2lhNjQva2VybmVs
L2VmaS5jLgogICovCmRpZmYgLXVyTiBsaW51eC0yLjYuMC10ZXN0MS9pbml0L21haW4uYyBsaW51
eC0yLjYuMC10ZXN0MS1lZmkvaW5pdC9tYWluLmMKLS0tIGxpbnV4LTIuNi4wLXRlc3QxL2luaXQv
bWFpbi5jCTIwMDMtMDctMTMgMjA6MzE6MjAuMDAwMDAwMDAwIC0wNzAwCisrKyBsaW51eC0yLjYu
MC10ZXN0MS1lZmkvaW5pdC9tYWluLmMJMjAwMy0wNy0xNCAxMTozNDoyNy4wMDAwMDAwMDAgLTA3
MDAKQEAgLTM4LDYgKzM4LDcgQEAKICNpbmNsdWRlIDxsaW51eC9tb2R1bGVwYXJhbS5oPgogI2lu
Y2x1ZGUgPGxpbnV4L3dyaXRlYmFjay5oPgogI2luY2x1ZGUgPGxpbnV4L2NwdS5oPgorI2luY2x1
ZGUgPGxpbnV4L2VmaS5oPgogCiAjaW5jbHVkZSA8YXNtL2lvLmg+CiAjaW5jbHVkZSA8YXNtL2J1
Z3MuaD4KQEAgLTQzNyw2ICs0MzgsOCBAQAogCXBpZG1hcF9pbml0KCk7CiAJcGd0YWJsZV9jYWNo
ZV9pbml0KCk7CiAJcHRlX2NoYWluX2luaXQoKTsKKwlpZiAoZWZpX2VuYWJsZWQpCisJCWVmaV9l
bnRlcl92aXJ0dWFsX21vZGUoKTsKIAlmb3JrX2luaXQobnVtX3BoeXNwYWdlcyk7CiAJcHJvY19j
YWNoZXNfaW5pdCgpOwogCWJ1ZmZlcl9pbml0KCk7Cg==

------_=_NextPart_001_01C34CC6.826CCBE6--
