Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1161116AbWG1LdV@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1161116AbWG1LdV (ORCPT <rfc822;willy@w.ods.org>);
	Fri, 28 Jul 2006 07:33:21 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751368AbWG1LdV
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Fri, 28 Jul 2006 07:33:21 -0400
Received: from cantor2.suse.de ([195.135.220.15]:8328 "EHLO mx2.suse.de")
	by vger.kernel.org with ESMTP id S1751079AbWG1LdU (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 28 Jul 2006 07:33:20 -0400
Date: Fri, 28 Jul 2006 13:33:10 +0200
Message-ID: <s5hmzaunevd.wl%tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Denis Vlasenko <vda.linux@googlemail.com>
Cc: Andi Kleen <ak@suse.de>, PeiSen Hou <pshou@realtek.com.tw>,
       linux-sound@vger.kernel.org, alsa-devel@alsa-project.org,
       linux-kernel@vger.kernel.org
Subject: Re: Sound problems with snd_hda on x86_64
In-Reply-To: <200607281247.11986.vda.linux@googlemail.com>
References: <200607281216.25214.vda.linux@googlemail.com>
	<s5hr706nhtr.wl%tiwai@suse.de>
	<200607281247.11986.vda.linux@googlemail.com>
User-Agent: Wanderlust/2.12.0 (Your Wildest Dreams) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.7 (=?ISO-8859-4?Q?Sanj=F2?=) APEL/10.6 MULE XEmacs/21.5 (beta25)
 (eggplant) (+CVS-20060326) (i386-suse-linux)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

At Fri, 28 Jul 2006 12:47:11 +0200,
Denis Vlasenko wrote:
> 
> On Friday 28 July 2006 12:29, Takashi Iwai wrote:
> > > Which is, in turn, is caused by this code:
> > > 
> > > --- linux-2.6.17.6.org/sound/core/pcm_compat.c	2006-07-15 21:00:43.000000000 +0200
> > > +++ linux-2.6.17.6.src/sound/core/pcm_compat.c	2006-07-28 00:35:10.000000000 +0200
> > > @@ -478,6 +478,8 @@ static long snd_pcm_ioctl_compat(struct 
> > >  	 * mmap of PCM status/control records because of the size
> > >  	 * incompatibility.
> > >  	 */
> > > +printk("substream->no_mmap_ctrl = 1 in %s:%s line %d\n", __FILE__, __FUNCTION__, __LINE__);
> > > +dump_stack();
> > >  	substream->no_mmap_ctrl = 1;
> > >  
> > >  	switch (cmd) {
> > > 
> > > It's puzzling. Even a 486 processor, can do 64-bit operations (using cmpxchg8)
> > > on memory-mapped areas, why does code disallows mmap for 64-bit CPUs but allows
> > > for 32-bit ones?
> > 
> > On the contrary, the driver disallows mmap for 32bit task on 64bit
> > architecture.  This is because the size of the mapped record is
> > different between 32bit and 64bit architectures, so it cannot be
> > shared.
> 
> Why artsd attempts mmap at all then?

The app must try mmap.  From the application side, you can't know
whether you're 32bit-emulation mode or it's really on 32bit
architecture.  And, mmap is usually done automatically via alsa-lib
plugin for optimization or soft-mixing purpose.

> Why it thinks that
> /dev/snd/pcmC0D0p is mmap-able when it is not?

Dunno.  pcm_compat.c is only for 32bit context on 64bit architecture.
The 64bit program will never go there.


Takashi
