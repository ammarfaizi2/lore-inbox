Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1751233AbWI2KsI@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751233AbWI2KsI (ORCPT <rfc822;willy@w.ods.org>);
	Fri, 29 Sep 2006 06:48:08 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751241AbWI2KsH
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Fri, 29 Sep 2006 06:48:07 -0400
Received: from mx2.suse.de ([195.135.220.15]:2282 "EHLO mx2.suse.de")
	by vger.kernel.org with ESMTP id S1751233AbWI2KsE (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Fri, 29 Sep 2006 06:48:04 -0400
Date: Fri, 29 Sep 2006 12:48:02 +0200
Message-ID: <s5hmz8j3q59.wl%tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Karsten Wiese <annabellesgarden@yahoo.de>
Cc: linux-kernel@vger.kernel.org, mingo@elte.hu,
       alsa-devel@lists.sourceforge.net
Subject: Re: [PATCH] Reset file->f_op in snd_card_file_remove(). Take 2
In-Reply-To: <200609282228.02611.annabellesgarden@yahoo.de>
References: <200609282228.02611.annabellesgarden@yahoo.de>
User-Agent: Wanderlust/2.12.0 (Your Wildest Dreams) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.7 (=?ISO-8859-4?Q?Sanj=F2?=) APEL/10.6 MULE XEmacs/21.5 (beta25)
 (eggplant) (+CVS-20060326) (i386-suse-linux)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

At Thu, 28 Sep 2006 22:28:02 +0200,
Karsten Wiese wrote:
> 
> Hi
> 
> It oopses with 2.6.18-rt4 + alsa-kernel-1.0.13rc3 now.
> I wrote before, 2.6.18-rt3 + alsa-driver-1.0.13rc3 would be ok,
> but its not. bug showed again reliably under memory-pressure.
> 
>       Karsten
> 
> ===
> 
> Reset file->f_op in snd_card_file_remove(). Take 2
> 
> 
> i think what happens here is:
> 
>   us428control runs, kernel has allocated a struct file for /dev/hwC1D0.
> 
>   usb disconnect
> 
>   snd_usb_usx2y calls snd_card_disconnect,
>   tells us428control to exit.
> 
>   snd_card_disconnect replaces /dev/hwC1D0's file->f_op
>   with a kmalloc()ed version, that would only allow releases.
> 
>   us428control starts exiting
> 
>   __fput is called with struct file for /dev/hwC1D0.
> 
>   snd_card_file_remove() is called, alsa notices struct file
>   for /dev/hwC1D0 is about to be closed.
>   with patch below, file->f_op would be set NULL now.
> 
>   snd_usb_usx2y's free()s snd_card instance and /dev/hwC1D0's
>   file->f_ops, those that would only allow releases.
> 
>   for reason I would like to know,
>   __fput is called again with struct file for /dev/hwC1D0
>   from us428control's do_exit().
>   __fput see's file->f_op is still set.
>   Without patch and under memory pressure, file->f_op can
>   point to anything now.
> 
> 
> Signed-off-by: Karsten Wiese <annabellesgarden@yahoo.de>

I guess this bug is fixed by Florin's patch below, juding from your
explanation.  Could you check it?


Takashi

Subject: [PATCH] Dereference after free in snd_hwdep_release()
From: Florin Malita <fmalita@gmail.com>
Date: Thu, 28 Sep 2006 19:45:50 -0400

snd_card_file_remove() may free hw->card so we can't dereference
hw->card->module after that.

Coverity ID 1420.

Signed-off-by: Florin Malita <fmalita@gmail.com>
---

diff --git a/sound/core/hwdep.c b/sound/core/hwdep.c
index 9aa9d94..46b4768 100644
--- a/sound/core/hwdep.c
+++ b/sound/core/hwdep.c
@@ -158,6 +158,7 @@ static int snd_hwdep_release(struct inod
 {
 	int err = -ENXIO;
 	struct snd_hwdep *hw = file->private_data;
+	struct module *mod = hw->card->module;
 	mutex_lock(&hw->open_mutex);
 	if (hw->ops.release) {
 		err = hw->ops.release(hw, file);
@@ -167,7 +168,7 @@ static int snd_hwdep_release(struct inod
 		hw->used--;
 	snd_card_file_remove(hw->card, file);
 	mutex_unlock(&hw->open_mutex);
-	module_put(hw->card->module);
+	module_put(mod);
 	return err;
 }
 
