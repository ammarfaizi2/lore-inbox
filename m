Return-Path: <linux-kernel-owner+willy=40w.ods.org-S261972AbULHAv0@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261972AbULHAv0 (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 7 Dec 2004 19:51:26 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261975AbULHAv0
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 7 Dec 2004 19:51:26 -0500
Received: from fmr06.intel.com ([134.134.136.7]:52969 "EHLO
	caduceus.jf.intel.com") by vger.kernel.org with ESMTP
	id S261972AbULHAug (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 7 Dec 2004 19:50:36 -0500
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----_=_NextPart_001_01C4DCBF.B23CDC61"
Subject: [Compatibilty patch] sigtimedwait
Date: Wed, 8 Dec 2004 08:48:56 +0800
Message-ID: <894E37DECA393E4D9374E0ACBBE7427013C9FB@pdsmsx402.ccr.corp.intel.com>
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator: 
Thread-Topic: [Compatibilty patch] sigtimedwait
Thread-Index: AcTcv7FDJhRdSXslTW6pAGYAFqeLig==
From: "Zou, Nanhai" <nanhai.zou@intel.com>
To: <linux-kernel@vger.kernel.org>
Cc: "Andrew Morton" <akpm@osdl.org>, "Luck, Tony" <tony.luck@intel.com>,
       "Andi Kleen" <ak@suse.de>, <ralf@linux-mips.org>, <paulus@au.ibm.com>,
       "Martin Schwidefsky" <schwidefsky@de.ibm.com>, <Davem@davemloft.net>
X-OriginalArrivalTime: 08 Dec 2004 00:48:56.0843 (UTC) FILETIME=[B2B72DB0:01C4DCBF]
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.

------_=_NextPart_001_01C4DCBF.B23CDC61
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable


This patch is to fix a bug in sys32_rt_sigtimedwait on IA64, X86_64 and
PPC64.
They do a compare of siginfo.si_code when copying siginfo to userspace
compat_siginfo_t structure.
The compare is wrong because siginfo.si_code is already cast to short at
this moment.

This bug will hang ipctest program in linux-ha heartbeat package.

This patch also merges all 6 32 bit layer sys_rt_sigtimedwait in IA64,
X86_64, PPC64, Sparc64, S390 and MIPS into 1 compat_rt_sigtimedwait.

I have only tested it on X86_64 and IA64.
It looks a bit weird for=20
#ifdef  __MIPSEL__ in generic code.=20
But I don't have any better idea for this.

Signed-off-by: Zou Nan hai <Nanhai.zou@intel.com>
Zou Nan hai

------_=_NextPart_001_01C4DCBF.B23CDC61
Content-Type: application/octet-stream;
	name="compat-sigtimedwait.patch"
Content-Transfer-Encoding: base64
Content-Description: compat-sigtimedwait.patch
Content-Disposition: attachment;
	filename="compat-sigtimedwait.patch"

ZGlmZiAtTnJhdXAgYS9hcmNoL2lhNjQvaWEzMi9pYTMyX2VudHJ5LlMgYi9hcmNoL2lhNjQvaWEz
Mi9pYTMyX2VudHJ5LlMKLS0tIGEvYXJjaC9pYTY0L2lhMzIvaWEzMl9lbnRyeS5TCTIwMDQtMTIt
MDYgMTM6MDQ6NDkuMDAwMDAwMDAwICswODAwCisrKyBiL2FyY2gvaWE2NC9pYTMyL2lhMzJfZW50
cnkuUwkyMDA0LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCArMDgwMApAQCAtMzg3LDcgKzM4Nyw3
IEBAIGlhMzJfc3lzY2FsbF90YWJsZToKIAlkYXRhOCBzeXMzMl9ydF9zaWdhY3Rpb24KIAlkYXRh
OCBzeXMzMl9ydF9zaWdwcm9jbWFzayAvKiAxNzUgKi8KIAlkYXRhOCBzeXNfcnRfc2lncGVuZGlu
ZwotCWRhdGE4IHN5czMyX3J0X3NpZ3RpbWVkd2FpdAorCWRhdGE4IGNvbXBhdF9ydF9zaWd0aW1l
ZHdhaXQKIAlkYXRhOCBzeXMzMl9ydF9zaWdxdWV1ZWluZm8KIAlkYXRhOCBzeXMzMl9ydF9zaWdz
dXNwZW5kCiAJZGF0YTggc3lzMzJfcHJlYWQJICAvKiAxODAgKi8KZGlmZiAtTnJhdXAgYS9hcmNo
L2lhNjQvaWEzMi9pYTMycHJpdi5oIGIvYXJjaC9pYTY0L2lhMzIvaWEzMnByaXYuaAotLS0gYS9h
cmNoL2lhNjQvaWEzMi9pYTMycHJpdi5oCTIwMDQtMTItMDYgMTM6MDQ6MjQuMDAwMDAwMDAwICsw
ODAwCisrKyBiL2FyY2gvaWE2NC9pYTMyL2lhMzJwcml2LmgJMjAwNC0xMi0wNyAwNzowMzo0Mi4w
MDAwMDAwMDAgKzA4MDAKQEAgLTU1OSwxMCArNTU5LDYgQEAgc3RydWN0IHVzZXJfcmVnc19zdHJ1
Y3QzMiB7CiBleHRlcm4gaW50IHNhdmVfaWEzMl9mcHN0YXRlIChzdHJ1Y3QgdGFza19zdHJ1Y3Qg
Kiwgc3RydWN0IGlhMzJfdXNlcl9pMzg3X3N0cnVjdCBfX3VzZXIgKik7CiBleHRlcm4gaW50IHNh
dmVfaWEzMl9mcHhzdGF0ZSAoc3RydWN0IHRhc2tfc3RydWN0ICosIHN0cnVjdCBpYTMyX3VzZXJf
Znhzcl9zdHJ1Y3QgX191c2VyICopOwogCi0vKiBQcm90b3R5cGVzIGZvciB1c2UgaW4gc3lzX2lh
MzIuYyAqLwotaW50IGNvcHlfc2lnaW5mb190b191c2VyMzIgKHNpZ2luZm9fdDMyIF9fdXNlciAq
dG8sIHNpZ2luZm9fdCAqZnJvbSk7Ci1pbnQgY29weV9zaWdpbmZvX2Zyb21fdXNlcjMyIChzaWdp
bmZvX3QgKnRvLCBzaWdpbmZvX3QzMiBfX3VzZXIgKmZyb20pOwotCiAjZW5kaWYgLyogIUNPTkZJ
R19JQTMyX1NVUFBPUlQgKi8KIAogI2VuZGlmIC8qIF9BU01fSUE2NF9JQTMyX1BSSVZfSCAqLwpk
aWZmIC1OcmF1cCBhL2FyY2gvaWE2NC9pYTMyL2lhMzJfc2lnbmFsLmMgYi9hcmNoL2lhNjQvaWEz
Mi9pYTMyX3NpZ25hbC5jCi0tLSBhL2FyY2gvaWE2NC9pYTMyL2lhMzJfc2lnbmFsLmMJMjAwNC0x
MC0xOSAwNTo1MzowNi4wMDAwMDAwMDAgKzA4MDAKKysrIGIvYXJjaC9pYTY0L2lhMzIvaWEzMl9z
aWduYWwuYwkyMDA0LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCArMDgwMApAQCAtNTg5LDMzICs1
ODksNiBAQCBzeXMzMl9ydF9zaWdwcm9jbWFzayAoaW50IGhvdywgY29tcGF0X3NpCiB9CiAKIGFz
bWxpbmthZ2UgbG9uZwotc3lzMzJfcnRfc2lndGltZWR3YWl0IChjb21wYXRfc2lnc2V0X3QgX191
c2VyICp1dGhlc2UsIHNpZ2luZm9fdDMyIF9fdXNlciAqdWluZm8sCi0JCSAgICAgICBzdHJ1Y3Qg
Y29tcGF0X3RpbWVzcGVjIF9fdXNlciAqdXRzLCB1bnNpZ25lZCBpbnQgc2lnc2V0c2l6ZSkKLXsK
LQltbV9zZWdtZW50X3Qgb2xkX2ZzID0gZ2V0X2ZzKCk7Ci0Jc3RydWN0IHRpbWVzcGVjIHQ7Ci0J
c2lnaW5mb190IGluZm87Ci0Jc2lnc2V0X3QgczsKLQlpbnQgcmV0OwotCi0JaWYgKGNvcHlfZnJv
bV91c2VyKCZzLnNpZywgdXRoZXNlLCBzaXplb2YoY29tcGF0X3NpZ3NldF90KSkpCi0JCXJldHVy
biAtRUZBVUxUOwotCWlmICh1dHMgJiYgZ2V0X2NvbXBhdF90aW1lc3BlYygmdCwgdXRzKSkKLQkJ
cmV0dXJuIC1FRkFVTFQ7Ci0Jc2V0X2ZzKEtFUk5FTF9EUyk7Ci0JcmV0ID0gc3lzX3J0X3NpZ3Rp
bWVkd2FpdCgoc2lnc2V0X3QgX191c2VyICopICZzLAotCQkJCSAgdWluZm8gPyAoc2lnaW5mb190
IF9fdXNlciAqKSAmaW5mbyA6IE5VTEwsCi0JCQkJICB1dHMgPyAoc3RydWN0IHRpbWVzcGVjIF9f
dXNlciAqKSAmdCA6IE5VTEwsCi0JCQkJICBzaWdzZXRzaXplKTsKLQlzZXRfZnMob2xkX2ZzKTsK
LQlpZiAocmV0ID49IDAgJiYgdWluZm8pIHsKLQkJaWYgKGNvcHlfc2lnaW5mb190b191c2VyMzIo
dWluZm8sICZpbmZvKSkKLQkJCXJldHVybiAtRUZBVUxUOwotCX0KLQlyZXR1cm4gcmV0OwotfQot
Ci1hc21saW5rYWdlIGxvbmcKIHN5czMyX3J0X3NpZ3F1ZXVlaW5mbyAoaW50IHBpZCwgaW50IHNp
Zywgc2lnaW5mb190MzIgX191c2VyICp1aW5mbykKIHsKIAltbV9zZWdtZW50X3Qgb2xkX2ZzID0g
Z2V0X2ZzKCk7CmRpZmYgLU5yYXVwIGEvYXJjaC9taXBzL2tlcm5lbC9zY2FsbDY0LW4zMi5TIGIv
YXJjaC9taXBzL2tlcm5lbC9zY2FsbDY0LW4zMi5TCi0tLSBhL2FyY2gvbWlwcy9rZXJuZWwvc2Nh
bGw2NC1uMzIuUwkyMDA0LTEyLTA2IDEzOjA0OjUwLjAwMDAwMDAwMCArMDgwMAorKysgYi9hcmNo
L21pcHMva2VybmVsL3NjYWxsNjQtbjMyLlMJMjAwNC0xMi0wNyAwNzowMzo0Mi4wMDAwMDAwMDAg
KzA4MDAKQEAgLTI0Myw3ICsyNDMsNyBAQCBFWFBPUlQoc3lzbjMyX2NhbGxfdGFibGUpCiAJUFRS
CXN5c19jYXBnZXQKIAlQVFIJc3lzX2NhcHNldAogCVBUUglzeXMzMl9ydF9zaWdwZW5kaW5nCQkv
KiA2MTI1ICovCi0JUFRSCXN5czMyX3J0X3NpZ3RpbWVkd2FpdAorCVBUUgljb21wYXRfcnRfc2ln
dGltZWR3YWl0CiAJUFRSCXN5czMyX3J0X3NpZ3F1ZXVlaW5mbwogCVBUUglzeXMzMl9ydF9zaWdz
dXNwZW5kCiAJUFRSCXN5czMyX3NpZ2FsdHN0YWNrCmRpZmYgLU5yYXVwIGEvYXJjaC9taXBzL2tl
cm5lbC9zY2FsbDY0LW8zMi5TIGIvYXJjaC9taXBzL2tlcm5lbC9zY2FsbDY0LW8zMi5TCi0tLSBh
L2FyY2gvbWlwcy9rZXJuZWwvc2NhbGw2NC1vMzIuUwkyMDA0LTEyLTA2IDEzOjA0OjUwLjAwMDAw
MDAwMCArMDgwMAorKysgYi9hcmNoL21pcHMva2VybmVsL3NjYWxsNjQtbzMyLlMJMjAwNC0xMi0w
NyAwNzowMzo0Mi4wMDAwMDAwMDAgKzA4MDAKQEAgLTQyMCw3ICs0MjAsNyBAQCBzeXNfY2FsbF90
YWJsZToKIAlQVFIJc3lzMzJfcnRfc2lnYWN0aW9uCiAJUFRSCXN5czMyX3J0X3NpZ3Byb2NtYXNr
IAkJLyogNDE5NSAqLwogCVBUUglzeXMzMl9ydF9zaWdwZW5kaW5nCi0JUFRSCXN5czMyX3J0X3Np
Z3RpbWVkd2FpdAorCVBUUgljb21wYXRfcnRfc2lndGltZWR3YWl0CiAJUFRSCXN5czMyX3J0X3Np
Z3F1ZXVlaW5mbwogCVBUUglzeXMzMl9ydF9zaWdzdXNwZW5kCiAJUFRSCXN5czMyX3ByZWFkCQkJ
LyogNDIwMCAqLwpkaWZmIC1OcmF1cCBhL2FyY2gvbWlwcy9rZXJuZWwvc2lnbmFsMzIuYyBiL2Fy
Y2gvbWlwcy9rZXJuZWwvc2lnbmFsMzIuYwotLS0gYS9hcmNoL21pcHMva2VybmVsL3NpZ25hbDMy
LmMJMjAwNC0xMi0wNiAxMzowNDo1MC4wMDAwMDAwMDAgKzA4MDAKKysrIGIvYXJjaC9taXBzL2tl
cm5lbC9zaWduYWwzMi5jCTIwMDQtMTItMDcgMDc6MDM6NDIuMDAwMDAwMDAwICswODAwCkBAIC0z
OTMsNyArMzkzLDcgQEAgc3RydWN0IHJ0X3NpZ2ZyYW1lMzIgewogCXN0cnVjdCB1Y29udGV4dDMy
IHJzX3VjOwogfTsKIAotc3RhdGljIGludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHNpZ2luZm9f
dDMyICp0bywgc2lnaW5mb190ICpmcm9tKQoraW50IGNvcHlfc2lnaW5mb190b191c2VyMzIoc2ln
aW5mb190MzIgKnRvLCBzaWdpbmZvX3QgKmZyb20pCiB7CiAJaW50IGVycjsKIApAQCAtODkwLDk3
ICs4OTAsNiBAQCBhc21saW5rYWdlIGludCBzeXMzMl9ydF9zaWdwZW5kaW5nKGNvbXBhCiAJcmV0
dXJuIHJldDsKIH0KIAotYXNtbGlua2FnZSBpbnQgc3lzMzJfcnRfc2lndGltZWR3YWl0KGNvbXBh
dF9zaWdzZXRfdCAqdXRoZXNlLAotCXNpZ2luZm9fdDMyICp1aW5mbywgc3RydWN0IGNvbXBhdF90
aW1lc3BlYyAqdXRzLAotCWNvbXBhdF90aW1lX3Qgc2lnc2V0c2l6ZSkKLXsKLQlpbnQgcmV0LCBz
aWc7Ci0Jc2lnc2V0X3QgdGhlc2U7Ci0JY29tcGF0X3NpZ3NldF90IHRoZXNlMzI7Ci0Jc3RydWN0
IHRpbWVzcGVjIHRzOwotCXNpZ2luZm9fdCBpbmZvOwotCWxvbmcgdGltZW91dCA9IDA7Ci0KLQkv
KgotCSAqIEFzIHRoZSByZXN1bHQgb2YgYSBicmFpbmZhcnRpbmcgY29tcGV0aXRpb24gYSBmZXcg
eWVhcnMgYWdvIHRoZQotCSAqIHNpemUgb2Ygc2lnc2V0X3QgZm9yIHRoZSAzMi1iaXQga2VybmVs
IHdhcyBjaG9vc2VuIHRvIGJlIDEyOCBiaXRzCi0JICogYnV0IG5vdGhpbmcgc28gZmFyIGlzIGFj
dHVhbGx5IHVzaW5nIHRoYXQgbWFueSwgNjQgYXJlIGVub3VnaC4gIFNvCi0JICogZm9yIG5vdyB3
ZSBqdXN0IGRyb3AgdGhlIGhpZ2ggYml0cy4KLQkgKi8KLQlpZiAoY29weV9mcm9tX3VzZXIgKCZ0
aGVzZTMyLCB1dGhlc2UsIHNpemVvZihjb21wYXRfb2xkX3NpZ3NldF90KSkpCi0JCXJldHVybiAt
RUZBVUxUOwotCi0Jc3dpdGNoIChfTlNJR19XT1JEUykgewotI2lmZGVmIF9fTUlQU0VCX18KLQlj
YXNlIDQ6IHRoZXNlLnNpZ1szXSA9IHRoZXNlMzIuc2lnWzZdIHwgKCgobG9uZyl0aGVzZTMyLnNp
Z1s3XSkgPDwgMzIpOwotCWNhc2UgMzogdGhlc2Uuc2lnWzJdID0gdGhlc2UzMi5zaWdbNF0gfCAo
KChsb25nKXRoZXNlMzIuc2lnWzVdKSA8PCAzMik7Ci0JY2FzZSAyOiB0aGVzZS5zaWdbMV0gPSB0
aGVzZTMyLnNpZ1syXSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbM10pIDw8IDMyKTsKLQljYXNlIDE6
IHRoZXNlLnNpZ1swXSA9IHRoZXNlMzIuc2lnWzBdIHwgKCgobG9uZyl0aGVzZTMyLnNpZ1sxXSkg
PDwgMzIpOwotI2VuZGlmCi0jaWZkZWYgX19NSVBTRUxfXwotCWNhc2UgNDogdGhlc2Uuc2lnWzNd
ID0gdGhlc2UzMi5zaWdbN10gfCAoKChsb25nKXRoZXNlMzIuc2lnWzZdKSA8PCAzMik7Ci0JY2Fz
ZSAzOiB0aGVzZS5zaWdbMl0gPSB0aGVzZTMyLnNpZ1s1XSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdb
NF0pIDw8IDMyKTsKLQljYXNlIDI6IHRoZXNlLnNpZ1sxXSA9IHRoZXNlMzIuc2lnWzNdIHwgKCgo
bG9uZyl0aGVzZTMyLnNpZ1syXSkgPDwgMzIpOwotCWNhc2UgMTogdGhlc2Uuc2lnWzBdID0gdGhl
c2UzMi5zaWdbMV0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzBdKSA8PCAzMik7Ci0jZW5kaWYKLQl9
Ci0KLQkvKgotCSAqIEludmVydCB0aGUgc2V0IG9mIGFsbG93ZWQgc2lnbmFscyB0byBnZXQgdGhv
c2Ugd2UKLQkgKiB3YW50IHRvIGJsb2NrLgotCSAqLwotCXNpZ2RlbHNldG1hc2soJnRoZXNlLCBz
aWdtYXNrKFNJR0tJTEwpfHNpZ21hc2soU0lHU1RPUCkpOwotCXNpZ25vdHNldCgmdGhlc2UpOwot
Ci0JaWYgKHV0cykgewotCQlpZiAoZ2V0X3VzZXIgKHRzLnR2X3NlYywgJnV0cy0+dHZfc2VjKSB8
fAotCQkgICAgZ2V0X3VzZXIgKHRzLnR2X25zZWMsICZ1dHMtPnR2X25zZWMpKQotCQkJcmV0dXJu
IC1FSU5WQUw7Ci0JCWlmICh0cy50dl9uc2VjID49IDEwMDAwMDAwMDBMIHx8IHRzLnR2X25zZWMg
PCAwCi0JCSAgICB8fCB0cy50dl9zZWMgPCAwKQotCQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0J
c3Bpbl9sb2NrX2lycSgmY3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0Jc2lnID0gZGVxdWV1
ZV9zaWduYWwoY3VycmVudCwgJnRoZXNlLCAmaW5mbyk7Ci0JaWYgKCFzaWcpIHsKLQkJLyogTm9u
ZSByZWFkeSAtLSB0ZW1wb3JhcmlseSB1bmJsb2NrIHRob3NlIHdlJ3JlIGludGVyZXN0ZWQKLQkJ
ICAgaW4gc28gdGhhdCB3ZSdsbCBiZSBhd2FrZW5lZCB3aGVuIHRoZXkgYXJyaXZlLiAgKi8KLQkJ
c2lnc2V0X3Qgb2xkYmxvY2tlZCA9IGN1cnJlbnQtPmJsb2NrZWQ7Ci0JCXNpZ2FuZHNldHMoJmN1
cnJlbnQtPmJsb2NrZWQsICZjdXJyZW50LT5ibG9ja2VkLCAmdGhlc2UpOwotCQlyZWNhbGNfc2ln
cGVuZGluZygpOwotCQlzcGluX3VubG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2sp
OwotCi0JCXRpbWVvdXQgPSBNQVhfU0NIRURVTEVfVElNRU9VVDsKLQkJaWYgKHV0cykKLQkJCXRp
bWVvdXQgPSAodGltZXNwZWNfdG9famlmZmllcygmdHMpCi0JCQkJICAgKyAodHMudHZfc2VjIHx8
IHRzLnR2X25zZWMpKTsKLQotCQljdXJyZW50LT5zdGF0ZSA9IFRBU0tfSU5URVJSVVBUSUJMRTsK
LQkJdGltZW91dCA9IHNjaGVkdWxlX3RpbWVvdXQodGltZW91dCk7Ci0KLQkJc3Bpbl9sb2NrX2ly
cSgmY3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0JCXNpZyA9IGRlcXVldWVfc2lnbmFsKGN1
cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCQljdXJyZW50LT5ibG9ja2VkID0gb2xkYmxvY2tlZDsK
LQkJcmVjYWxjX3NpZ3BlbmRpbmcoKTsKLQl9Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdXJyZW50LT5z
aWdoYW5kLT5zaWdsb2NrKTsKLQotCWlmIChzaWcpIHsKLQkJcmV0ID0gc2lnOwotCQlpZiAodWlu
Zm8pIHsKLQkJCWlmIChjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHVpbmZvLCAmaW5mbykpCi0JCQkJ
cmV0ID0gLUVGQVVMVDsKLQkJfQotCX0gZWxzZSB7Ci0JCXJldCA9IC1FQUdBSU47Ci0JCWlmICh0
aW1lb3V0KQotCQkJcmV0ID0gLUVJTlRSOwotCX0KLQotCXJldHVybiByZXQ7Ci19Ci0KIGFzbWxp
bmthZ2UgaW50IHN5czMyX3J0X3NpZ3F1ZXVlaW5mbyhpbnQgcGlkLCBpbnQgc2lnLCBzaWdpbmZv
X3QzMiAqdWluZm8pCiB7CiAJc2lnaW5mb190IGluZm87CmRpZmYgLU5yYXVwIGEvYXJjaC9wcGM2
NC9rZXJuZWwvbWlzYy5TIGIvYXJjaC9wcGM2NC9rZXJuZWwvbWlzYy5TCi0tLSBhL2FyY2gvcHBj
NjQva2VybmVsL21pc2MuUwkyMDA0LTEyLTA2IDEzOjA0OjUwLjAwMDAwMDAwMCArMDgwMAorKysg
Yi9hcmNoL3BwYzY0L2tlcm5lbC9taXNjLlMJMjAwNC0xMi0wNyAwNzowMzo0Mi4wMDAwMDAwMDAg
KzA4MDAKQEAgLTg3MCw3ICs4NzAsNyBAQCBfR0xPQkFMKHN5c19jYWxsX3RhYmxlMzIpCiAJLmxs
b25nIC5zeXMzMl9ydF9zaWdhY3Rpb24KIAkubGxvbmcgLnN5czMyX3J0X3NpZ3Byb2NtYXNrCiAJ
Lmxsb25nIC5zeXMzMl9ydF9zaWdwZW5kaW5nICAgICAvKiAxNzUgKi8KLQkubGxvbmcgLnN5czMy
X3J0X3NpZ3RpbWVkd2FpdAorCS5sbG9uZyAuY29tcGF0X3J0X3NpZ3RpbWVkd2FpdAogCS5sbG9u
ZyAuc3lzMzJfcnRfc2lncXVldWVpbmZvCiAJLmxsb25nIC5wcGMzMl9ydF9zaWdzdXNwZW5kCiAJ
Lmxsb25nIC5zeXMzMl9wcmVhZDY0CmRpZmYgLU5yYXVwIGEvYXJjaC9wcGM2NC9rZXJuZWwvc2ln
bmFsMzIuYyBiL2FyY2gvcHBjNjQva2VybmVsL3NpZ25hbDMyLmMKLS0tIGEvYXJjaC9wcGM2NC9r
ZXJuZWwvc2lnbmFsMzIuYwkyMDA0LTEyLTA2IDEzOjA0OjI1LjAwMDAwMDAwMCArMDgwMAorKysg
Yi9hcmNoL3BwYzY0L2tlcm5lbC9zaWduYWwzMi5jCTIwMDQtMTItMDcgMDc6MDM6NDIuMDAwMDAw
MDAwICswODAwCkBAIC03MSw3ICs3MSw3IEBAIHN0cnVjdCBzaWdyZWdzMzIgewogICoKICAqLwog
c3RydWN0IHJ0X3NpZ2ZyYW1lMzIgewotCXN0cnVjdCBjb21wYXRfc2lnaW5mbwlpbmZvOworCXNp
Z2luZm9fdDMyCWluZm87CiAJc3RydWN0IHVjb250ZXh0MzIJdWM7CiAJLyoKIAkgKiBQcm9ncmFt
cyB1c2luZyB0aGUgcnM2MDAwL3hjb2ZmIGFiaSBjYW4gc2F2ZSB1cCB0byAxOSBncApAQCAtMzQy
LDcgKzM0Miw2IEBAIGxvbmcgc3lzMzJfc2lnYWN0aW9uKGludCBzaWcsIHN0cnVjdCBvbGQKICAq
ICAgICAgIHNpZ3BlbmRpbmcgICAgICAgICAgICAgICBzeXMzMl9ydF9zaWdwZW5kaW5nCiAgKiAg
ICAgICBzaWdwcm9jbWFzayAgICAgICAgICAgICAgc3lzMzJfcnRfc2lncHJvY21hc2sKICAqICAg
ICAgIHNpZ3JldHVybiAgICAgICAgICAgICAgICBzeXMzMl9ydF9zaWdyZXR1cm4KLSAqICAgICAg
IHNpZ3RpbWVkd2FpdCAgICAgICAgICAgICBzeXMzMl9ydF9zaWd0aW1lZHdhaXQKICAqICAgICAg
IHNpZ3F1ZXVlaW5mbyAgICAgICAgICAgICBzeXMzMl9ydF9zaWdxdWV1ZWluZm8KICAqICAgICAg
IHNpZ3N1c3BlbmQgICAgICAgICAgICAgICBzeXMzMl9ydF9zaWdzdXNwZW5kCiAgKgpAQCAtNDQ2
LDcgKzQ0NSw3IEBAIGxvbmcgc3lzMzJfcnRfc2lncGVuZGluZyhjb21wYXRfc2lnc2V0X3QKIH0K
IAogCi1zdGF0aWMgbG9uZyBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKGNvbXBhdF9zaWdpbmZvX3Qg
X191c2VyICpkLCBzaWdpbmZvX3QgKnMpCitsb25nIGNvcHlfc2lnaW5mb190b191c2VyMzIoc3Ry
dWN0IHNpZ2luZm8zMiBfX3VzZXIgKmQsIHNpZ2luZm9fdCAqcykKIHsKIAlsb25nIGVycjsKIApA
QCAtNTAxLDM1ICs1MDAsNiBAQCBzdGF0aWMgbG9uZyBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKGNv
bXBhCiAJcmV0dXJuIGVycjsKIH0KIAotbG9uZyBzeXMzMl9ydF9zaWd0aW1lZHdhaXQoY29tcGF0
X3NpZ3NldF90IF9fdXNlciAqdXRoZXNlLCBjb21wYXRfc2lnaW5mb190IF9fdXNlciAqdWluZm8s
Ci0JCXN0cnVjdCBjb21wYXRfdGltZXNwZWMgX191c2VyICp1dHMsIGNvbXBhdF9zaXplX3Qgc2ln
c2V0c2l6ZSkKLXsKLQlzaWdzZXRfdCBzOwotCWNvbXBhdF9zaWdzZXRfdCBzMzI7Ci0Jc3RydWN0
IHRpbWVzcGVjIHQ7Ci0JaW50IHJldDsKLQltbV9zZWdtZW50X3Qgb2xkX2ZzID0gZ2V0X2ZzKCk7
Ci0Jc2lnaW5mb190IGluZm87Ci0KLQlpZiAoY29weV9mcm9tX3VzZXIoJnMzMiwgdXRoZXNlLCBz
aXplb2YoY29tcGF0X3NpZ3NldF90KSkpCi0JCXJldHVybiAtRUZBVUxUOwotCXNpZ3NldF9mcm9t
X2NvbXBhdCgmcywgJnMzMik7Ci0JaWYgKHV0cyAmJiBnZXRfY29tcGF0X3RpbWVzcGVjKCZ0LCB1
dHMpKQotCQlyZXR1cm4gLUVGQVVMVDsKLQlzZXRfZnMoS0VSTkVMX0RTKTsKLQkvKiBUaGUgX191
c2VyIHBvaW50ZXIgY2FzdHMgYXJlIHZhbGlkIGJlY2F1c2Ugb2YgdGhlIHNldF9mcygpICovCi0J
cmV0ID0gc3lzX3J0X3NpZ3RpbWVkd2FpdCgoc2lnc2V0X3QgX191c2VyICopICZzLAotCQkJdWlu
Zm8gPyAoc2lnaW5mb190IF9fdXNlciAqKSAmaW5mbyA6IE5VTEwsCi0JCQl1dHMgPyAoc3RydWN0
IHRpbWVzcGVjIF9fdXNlciAqKSAmdCA6IE5VTEwsCi0JCQlzaWdzZXRzaXplKTsKLQlzZXRfZnMo
b2xkX2ZzKTsKLQlpZiAocmV0ID49IDAgJiYgdWluZm8pIHsKLQkJaWYgKGNvcHlfc2lnaW5mb190
b191c2VyMzIodWluZm8sICZpbmZvKSkKLQkJCXJldHVybiAtRUZBVUxUOwotCX0KLQlyZXR1cm4g
cmV0OwotfQotCiAvKgogICogTm90ZTogaXQgaXMgbmVjZXNzYXJ5IHRvIHRyZWF0IHBpZCBhbmQg
c2lnIGFzIHVuc2lnbmVkIGludHMsIHdpdGggdGhlCiAgKiBjb3JyZXNwb25kaW5nIGNhc3QgdG8g
YSBzaWduZWQgaW50IHRvIGluc3VyZSB0aGF0IHRoZSBwcm9wZXIgY29udmVyc2lvbgpAQCAtNTM3
LDcgKzUwNyw3IEBAIGxvbmcgc3lzMzJfcnRfc2lndGltZWR3YWl0KGNvbXBhdF9zaWdzZXQKICAq
IChtc3IgaW4gMzItYml0IG1vZGUpIGFuZCB0aGUgcmVnaXN0ZXIgcmVwcmVzZW50YXRpb24gb2Yg
YSBzaWduZWQgaW50CiAgKiAobXNyIGluIDY0LWJpdCBtb2RlKSBpcyBwZXJmb3JtZWQuCiAgKi8K
LWxvbmcgc3lzMzJfcnRfc2lncXVldWVpbmZvKHUzMiBwaWQsIHUzMiBzaWcsIGNvbXBhdF9zaWdp
bmZvX3QgX191c2VyICp1aW5mbykKK2xvbmcgc3lzMzJfcnRfc2lncXVldWVpbmZvKHUzMiBwaWQs
IHUzMiBzaWcsIHNpZ2luZm9fdDMyIF9fdXNlciAqdWluZm8pCiB7CiAJc2lnaW5mb190IGluZm87
CiAJaW50IHJldDsKZGlmZiAtTnJhdXAgYS9hcmNoL3MzOTAva2VybmVsL2NvbXBhdF9saW51eC5j
IGIvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfbGludXguYwotLS0gYS9hcmNoL3MzOTAva2VybmVs
L2NvbXBhdF9saW51eC5jCTIwMDQtMTItMDYgMTM6MDQ6MjUuMDAwMDAwMDAwICswODAwCisrKyBi
L2FyY2gvczM5MC9rZXJuZWwvY29tcGF0X2xpbnV4LmMJMjAwNC0xMi0wNyAwNzowMzo0Mi4wMDAw
MDAwMDAgKzA4MDAKQEAgLTYzNCw5MCArNjM0LDYgQEAgYXNtbGlua2FnZSBsb25nIHN5czMyX3J0
X3NpZ3BlbmRpbmcoY29tcAogCXJldHVybiByZXQ7CiB9CiAKLWV4dGVybiBpbnQKLWNvcHlfc2ln
aW5mb190b191c2VyMzIoc2lnaW5mb190MzIgKnRvLCBzaWdpbmZvX3QgKmZyb20pOwotCi1hc21s
aW5rYWdlIGxvbmcKLXN5czMyX3J0X3NpZ3RpbWVkd2FpdChjb21wYXRfc2lnc2V0X3QgKnV0aGVz
ZSwgc2lnaW5mb190MzIgKnVpbmZvLAotCQkgICAgICBzdHJ1Y3QgY29tcGF0X3RpbWVzcGVjICp1
dHMsIHNpemVfdCBzaWdzZXRzaXplKQotewotCWludCByZXQsIHNpZzsKLQlzaWdzZXRfdCB0aGVz
ZTsKLQljb21wYXRfc2lnc2V0X3QgdGhlc2UzMjsKLQlzdHJ1Y3QgdGltZXNwZWMgdHM7Ci0Jc2ln
aW5mb190IGluZm87Ci0JbG9uZyB0aW1lb3V0ID0gMDsKLQotCS8qIFhYWDogRG9uJ3QgcHJlY2x1
ZGUgaGFuZGxpbmcgZGlmZmVyZW50IHNpemVkIHNpZ3NldF90J3MuICAqLwotCWlmIChzaWdzZXRz
aXplICE9IHNpemVvZihzaWdzZXRfdCkpCi0JCXJldHVybiAtRUlOVkFMOwotCi0JaWYgKGNvcHlf
ZnJvbV91c2VyICgmdGhlc2UzMiwgdXRoZXNlLCBzaXplb2YoY29tcGF0X3NpZ3NldF90KSkpCi0J
CXJldHVybiAtRUZBVUxUOwotCi0Jc3dpdGNoIChfTlNJR19XT1JEUykgewotCWNhc2UgNDogdGhl
c2Uuc2lnWzNdID0gdGhlc2UzMi5zaWdbNl0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzddKSA8PCAz
Mik7Ci0JY2FzZSAzOiB0aGVzZS5zaWdbMl0gPSB0aGVzZTMyLnNpZ1s0XSB8ICgoKGxvbmcpdGhl
c2UzMi5zaWdbNV0pIDw8IDMyKTsKLQljYXNlIDI6IHRoZXNlLnNpZ1sxXSA9IHRoZXNlMzIuc2ln
WzJdIHwgKCgobG9uZyl0aGVzZTMyLnNpZ1szXSkgPDwgMzIpOwotCWNhc2UgMTogdGhlc2Uuc2ln
WzBdID0gdGhlc2UzMi5zaWdbMF0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzFdKSA8PCAzMik7Ci0J
fQotCQkKLQkvKgotCSAqIEludmVydCB0aGUgc2V0IG9mIGFsbG93ZWQgc2lnbmFscyB0byBnZXQg
dGhvc2Ugd2UKLQkgKiB3YW50IHRvIGJsb2NrLgotCSAqLwotCXNpZ2RlbHNldG1hc2soJnRoZXNl
LCBzaWdtYXNrKFNJR0tJTEwpfHNpZ21hc2soU0lHU1RPUCkpOwotCXNpZ25vdHNldCgmdGhlc2Up
OwotCi0JaWYgKHV0cykgewotCQlpZiAoZ2V0X2NvbXBhdF90aW1lc3BlYygmdHMsIHV0cykpCi0J
CQlyZXR1cm4gLUVJTlZBTDsKLQkJaWYgKHRzLnR2X25zZWMgPj0gMTAwMDAwMDAwMEwgfHwgdHMu
dHZfbnNlYyA8IDAKLQkJICAgIHx8IHRzLnR2X3NlYyA8IDApCi0JCQlyZXR1cm4gLUVJTlZBTDsK
LQl9Ci0KLQlzcGluX2xvY2tfaXJxKCZjdXJyZW50LT5zaWdoYW5kLT5zaWdsb2NrKTsKLQlzaWcg
PSBkZXF1ZXVlX3NpZ25hbChjdXJyZW50LCAmdGhlc2UsICZpbmZvKTsKLQlpZiAoIXNpZykgewot
CQkvKiBOb25lIHJlYWR5IC0tIHRlbXBvcmFyaWx5IHVuYmxvY2sgdGhvc2Ugd2UncmUgaW50ZXJl
c3RlZAotCQkgICBpbiBzbyB0aGF0IHdlJ2xsIGJlIGF3YWtlbmVkIHdoZW4gdGhleSBhcnJpdmUu
ICAqLwotCQljdXJyZW50LT5yZWFsX2Jsb2NrZWQgPSBjdXJyZW50LT5ibG9ja2VkOwotCQlzaWdh
bmRzZXRzKCZjdXJyZW50LT5ibG9ja2VkLCAmY3VycmVudC0+YmxvY2tlZCwgJnRoZXNlKTsKLQkJ
cmVjYWxjX3NpZ3BlbmRpbmcoKTsKLQkJc3Bpbl91bmxvY2tfaXJxKCZjdXJyZW50LT5zaWdoYW5k
LT5zaWdsb2NrKTsKLQotCQl0aW1lb3V0ID0gTUFYX1NDSEVEVUxFX1RJTUVPVVQ7Ci0JCWlmICh1
dHMpCi0JCQl0aW1lb3V0ID0gKHRpbWVzcGVjX3RvX2ppZmZpZXMoJnRzKQotCQkJCSAgICsgKHRz
LnR2X3NlYyB8fCB0cy50dl9uc2VjKSk7Ci0KLQkJY3VycmVudC0+c3RhdGUgPSBUQVNLX0lOVEVS
UlVQVElCTEU7Ci0JCXRpbWVvdXQgPSBzY2hlZHVsZV90aW1lb3V0KHRpbWVvdXQpOwotCi0JCXNw
aW5fbG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwotCQlzaWcgPSBkZXF1ZXVl
X3NpZ25hbChjdXJyZW50LCAmdGhlc2UsICZpbmZvKTsKLQkJY3VycmVudC0+YmxvY2tlZCA9IGN1
cnJlbnQtPnJlYWxfYmxvY2tlZDsKLQkJc2lnaW5pdHNldCgmY3VycmVudC0+cmVhbF9ibG9ja2Vk
LCAwKTsKLQkJcmVjYWxjX3NpZ3BlbmRpbmcoKTsKLQl9Ci0Jc3Bpbl91bmxvY2tfaXJxKCZjdXJy
ZW50LT5zaWdoYW5kLT5zaWdsb2NrKTsKLQotCWlmIChzaWcpIHsKLQkJcmV0ID0gc2lnOwotCQlp
ZiAodWluZm8pIHsKLQkJCWlmIChjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHVpbmZvLCAmaW5mbykp
Ci0JCQkJcmV0ID0gLUVGQVVMVDsKLQkJfQotCX0gZWxzZSB7Ci0JCXJldCA9IC1FQUdBSU47Ci0J
CWlmICh0aW1lb3V0KQotCQkJcmV0ID0gLUVJTlRSOwotCX0KLQotCXJldHVybiByZXQ7Ci19Ci0K
IGFzbWxpbmthZ2UgbG9uZwogc3lzMzJfcnRfc2lncXVldWVpbmZvKGludCBwaWQsIGludCBzaWcs
IHNpZ2luZm9fdDMyIF9fdXNlciAqdWluZm8pCiB7CmRpZmYgLU5yYXVwIGEvYXJjaC9zMzkwL2tl
cm5lbC9jb21wYXRfbGludXguaCBiL2FyY2gvczM5MC9rZXJuZWwvY29tcGF0X2xpbnV4LmgKLS0t
IGEvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfbGludXguaAkyMDA0LTEwLTE5IDA1OjU0OjM5LjAw
MDAwMDAwMCArMDgwMAorKysgYi9hcmNoL3MzOTAva2VybmVsL2NvbXBhdF9saW51eC5oCTIwMDQt
MTItMDcgMDc6MDM6NDIuMDAwMDAwMDAwICswODAwCkBAIC0yMTQsNyArMjE0LDQgQEAgc3RydWN0
IHNpZ2V2ZW50MzIgewogCX0gX3NpZ2V2X3VuOwogfTsKIAotZXh0ZXJuIGludCBjb3B5X3NpZ2lu
Zm9fdG9fdXNlcjMyKHNpZ2luZm9fdDMyIF9fdXNlciAqdG8sIHNpZ2luZm9fdCAqZnJvbSk7Ci1l
eHRlcm4gaW50IGNvcHlfc2lnaW5mb19mcm9tX3VzZXIzMihzaWdpbmZvX3QgKnRvLCBzaWdpbmZv
X3QzMiBfX3VzZXIgKmZyb20pOwotCiAjZW5kaWYgLyogX0FTTV9TMzkwWF9TMzkwX0ggKi8KZGlm
ZiAtTnJhdXAgYS9hcmNoL3MzOTAva2VybmVsL2NvbXBhdF93cmFwcGVyLlMgYi9hcmNoL3MzOTAv
a2VybmVsL2NvbXBhdF93cmFwcGVyLlMKLS0tIGEvYXJjaC9zMzkwL2tlcm5lbC9jb21wYXRfd3Jh
cHBlci5TCTIwMDQtMTItMDYgMTM6MDQ6NTAuMDAwMDAwMDAwICswODAwCisrKyBiL2FyY2gvczM5
MC9rZXJuZWwvY29tcGF0X3dyYXBwZXIuUwkyMDA0LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCAr
MDgwMApAQCAtODQwLDEzICs4NDAsMTMgQEAgc3lzMzJfcnRfc2lncGVuZGluZ193cmFwcGVyOgog
CWxsZ2ZyCSVyMywlcjMJCQkjIHNpemVfdAogCWpnCXN5czMyX3J0X3NpZ3BlbmRpbmcJIyBicmFu
Y2ggdG8gc3lzdGVtIGNhbGwKIAotCS5nbG9ibCAgc3lzMzJfcnRfc2lndGltZWR3YWl0X3dyYXBw
ZXIgCi1zeXMzMl9ydF9zaWd0aW1lZHdhaXRfd3JhcHBlcjoKKwkuZ2xvYmwgIGNvbXBhdF9ydF9z
aWd0aW1lZHdhaXRfd3JhcHBlcgorY29tcGF0X3J0X3NpZ3RpbWVkd2FpdF93cmFwcGVyOgogCWxs
Z3RyCSVyMiwlcjIJCQkjIGNvbnN0IHNpZ3NldF9lbXUzMV90ICoKIAlsbGd0cgklcjMsJXIzCQkJ
IyBzaWdpbmZvX2VtdTMxX3QgKgogCWxsZ3RyCSVyNCwlcjQJCQkjIGNvbnN0IHN0cnVjdCBjb21w
YXRfdGltZXNwZWMgKgogCWxsZ2ZyCSVyNSwlcjUJCQkjIHNpemVfdAotCWpnCXN5czMyX3J0X3Np
Z3RpbWVkd2FpdAkjIGJyYW5jaCB0byBzeXN0ZW0gY2FsbAorCWpnCWNvbXBhdF9ydF9zaWd0aW1l
ZHdhaXQJIyBicmFuY2ggdG8gc3lzdGVtIGNhbGwKIAogCS5nbG9ibCAgc3lzMzJfcnRfc2lncXVl
dWVpbmZvX3dyYXBwZXIgCiBzeXMzMl9ydF9zaWdxdWV1ZWluZm9fd3JhcHBlcjoKZGlmZiAtTnJh
dXAgYS9hcmNoL3MzOTAva2VybmVsL3N5c2NhbGxzLlMgYi9hcmNoL3MzOTAva2VybmVsL3N5c2Nh
bGxzLlMKLS0tIGEvYXJjaC9zMzkwL2tlcm5lbC9zeXNjYWxscy5TCTIwMDQtMTAtMTkgMDU6NTM6
MTMuMDAwMDAwMDAwICswODAwCisrKyBiL2FyY2gvczM5MC9rZXJuZWwvc3lzY2FsbHMuUwkyMDA0
LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCArMDgwMApAQCAtMTg1LDcgKzE4NSw3IEBAIFNZU0NB
TEwoc3lzX3J0X3NpZ3JldHVybl9nbHVlLHN5c19ydF9zaWcKIFNZU0NBTEwoc3lzX3J0X3NpZ2Fj
dGlvbixzeXNfcnRfc2lnYWN0aW9uLHN5czMyX3J0X3NpZ2FjdGlvbl93cmFwcGVyKQogU1lTQ0FM
TChzeXNfcnRfc2lncHJvY21hc2ssc3lzX3J0X3NpZ3Byb2NtYXNrLHN5czMyX3J0X3NpZ3Byb2Nt
YXNrX3dyYXBwZXIpCS8qIDE3NSAqLwogU1lTQ0FMTChzeXNfcnRfc2lncGVuZGluZyxzeXNfcnRf
c2lncGVuZGluZyxzeXMzMl9ydF9zaWdwZW5kaW5nX3dyYXBwZXIpCi1TWVNDQUxMKHN5c19ydF9z
aWd0aW1lZHdhaXQsc3lzX3J0X3NpZ3RpbWVkd2FpdCxzeXMzMl9ydF9zaWd0aW1lZHdhaXRfd3Jh
cHBlcikKK1NZU0NBTEwoc3lzX3J0X3NpZ3RpbWVkd2FpdCxzeXNfcnRfc2lndGltZWR3YWl0LGNv
bXBhdF9ydF9zaWd0aW1lZHdhaXRfd3JhcHBlcikKIFNZU0NBTEwoc3lzX3J0X3NpZ3F1ZXVlaW5m
byxzeXNfcnRfc2lncXVldWVpbmZvLHN5czMyX3J0X3NpZ3F1ZXVlaW5mb193cmFwcGVyKQogU1lT
Q0FMTChzeXNfcnRfc2lnc3VzcGVuZF9nbHVlLHN5c19ydF9zaWdzdXNwZW5kX2dsdWUsc3lzMzJf
cnRfc2lnc3VzcGVuZF9nbHVlKQogU1lTQ0FMTChzeXNfcHJlYWQ2NCxzeXNfcHJlYWQ2NCxzeXMz
Ml9wcmVhZDY0X3dyYXBwZXIpCQkvKiAxODAgKi8KZGlmZiAtTnJhdXAgYS9hcmNoL3NwYXJjNjQv
a2VybmVsL3N5c19zcGFyYzMyLmMgYi9hcmNoL3NwYXJjNjQva2VybmVsL3N5c19zcGFyYzMyLmMK
LS0tIGEvYXJjaC9zcGFyYzY0L2tlcm5lbC9zeXNfc3BhcmMzMi5jCTIwMDQtMTItMDYgMTM6MDQ6
MjUuMDAwMDAwMDAwICswODAwCisrKyBiL2FyY2gvc3BhcmM2NC9rZXJuZWwvc3lzX3NwYXJjMzIu
YwkyMDA0LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCArMDgwMApAQCAtMTA0NCw5MSArMTA0NCw2
IEBAIGFzbWxpbmthZ2UgbG9uZyBzeXMzMl9ydF9zaWdwZW5kaW5nKGNvbXAKIAlyZXR1cm4gcmV0
OwogfQogCi1hc21saW5rYWdlIGxvbmcgc3lzMzJfcnRfc2lndGltZWR3YWl0KGNvbXBhdF9zaWdz
ZXRfdCBfX3VzZXIgKnV0aGVzZSwKLQkJCQkgICAgICBzdHJ1Y3Qgc2lnaW5mbzMyIF9fdXNlciAq
dWluZm8sCi0JCQkJICAgICAgc3RydWN0IGNvbXBhdF90aW1lc3BlYyBfX3VzZXIgKnV0cywKLQkJ
CQkgICAgICBjb21wYXRfc2l6ZV90IHNpZ3NldHNpemUpCi17Ci0JaW50IHJldCwgc2lnOwotCXNp
Z3NldF90IHRoZXNlOwotCWNvbXBhdF9zaWdzZXRfdCB0aGVzZTMyOwotCXN0cnVjdCB0aW1lc3Bl
YyB0czsKLQlzaWdpbmZvX3QgaW5mbzsKLQlsb25nIHRpbWVvdXQgPSAwOwotCi0JLyogWFhYOiBE
b24ndCBwcmVjbHVkZSBoYW5kbGluZyBkaWZmZXJlbnQgc2l6ZWQgc2lnc2V0X3Qncy4gICovCi0J
aWYgKHNpZ3NldHNpemUgIT0gc2l6ZW9mKHNpZ3NldF90KSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0K
LQlpZiAoY29weV9mcm9tX3VzZXIgKCZ0aGVzZTMyLCB1dGhlc2UsIHNpemVvZihjb21wYXRfc2ln
c2V0X3QpKSkKLQkJcmV0dXJuIC1FRkFVTFQ7Ci0KLQlzd2l0Y2ggKF9OU0lHX1dPUkRTKSB7Ci0J
Y2FzZSA0OiB0aGVzZS5zaWdbM10gPSB0aGVzZTMyLnNpZ1s2XSB8ICgoKGxvbmcpdGhlc2UzMi5z
aWdbN10pIDw8IDMyKTsKLQljYXNlIDM6IHRoZXNlLnNpZ1syXSA9IHRoZXNlMzIuc2lnWzRdIHwg
KCgobG9uZyl0aGVzZTMyLnNpZ1s1XSkgPDwgMzIpOwotCWNhc2UgMjogdGhlc2Uuc2lnWzFdID0g
dGhlc2UzMi5zaWdbMl0gfCAoKChsb25nKXRoZXNlMzIuc2lnWzNdKSA8PCAzMik7Ci0JY2FzZSAx
OiB0aGVzZS5zaWdbMF0gPSB0aGVzZTMyLnNpZ1swXSB8ICgoKGxvbmcpdGhlc2UzMi5zaWdbMV0p
IDw8IDMyKTsKLQl9Ci0JCQotCS8qCi0JICogSW52ZXJ0IHRoZSBzZXQgb2YgYWxsb3dlZCBzaWdu
YWxzIHRvIGdldCB0aG9zZSB3ZQotCSAqIHdhbnQgdG8gYmxvY2suCi0JICovCi0Jc2lnZGVsc2V0
bWFzaygmdGhlc2UsIHNpZ21hc2soU0lHS0lMTCl8c2lnbWFzayhTSUdTVE9QKSk7Ci0Jc2lnbm90
c2V0KCZ0aGVzZSk7Ci0KLQlpZiAodXRzKSB7Ci0JCWlmIChnZXRfY29tcGF0X3RpbWVzcGVjKCZ0
cywgdXRzKSkKLQkJCXJldHVybiAtRUlOVkFMOwotCQlpZiAodHMudHZfbnNlYyA+PSAxMDAwMDAw
MDAwTCB8fCB0cy50dl9uc2VjIDwgMAotCQkgICAgfHwgdHMudHZfc2VjIDwgMCkKLQkJCXJldHVy
biAtRUlOVkFMOwotCX0KLQotCXNwaW5fbG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xv
Y2spOwotCXNpZyA9IGRlcXVldWVfc2lnbmFsKGN1cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCWlm
ICghc2lnKSB7Ci0JCXRpbWVvdXQgPSBNQVhfU0NIRURVTEVfVElNRU9VVDsKLQkJaWYgKHV0cykK
LQkJCXRpbWVvdXQgPSAodGltZXNwZWNfdG9famlmZmllcygmdHMpCi0JCQkJICAgKyAodHMudHZf
c2VjIHx8IHRzLnR2X25zZWMpKTsKLQotCQlpZiAodGltZW91dCkgewotCQkJLyogTm9uZSByZWFk
eSAtLSB0ZW1wb3JhcmlseSB1bmJsb2NrIHRob3NlIHdlJ3JlCi0JCQkgKiBpbnRlcmVzdGVkIHdo
aWxlIHdlIGFyZSBzbGVlcGluZyBpbiBzbyB0aGF0IHdlJ2xsCi0JCQkgKiBiZSBhd2FrZW5lZCB3
aGVuIHRoZXkgYXJyaXZlLiAgKi8KLQkJCWN1cnJlbnQtPnJlYWxfYmxvY2tlZCA9IGN1cnJlbnQt
PmJsb2NrZWQ7Ci0JCQlzaWdhbmRzZXRzKCZjdXJyZW50LT5ibG9ja2VkLCAmY3VycmVudC0+Ymxv
Y2tlZCwgJnRoZXNlKTsKLQkJCXJlY2FsY19zaWdwZW5kaW5nKCk7Ci0JCQlzcGluX3VubG9ja19p
cnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2spOwotCi0JCQljdXJyZW50LT5zdGF0ZSA9IFRB
U0tfSU5URVJSVVBUSUJMRTsKLQkJCXRpbWVvdXQgPSBzY2hlZHVsZV90aW1lb3V0KHRpbWVvdXQp
OwotCi0JCQlzcGluX2xvY2tfaXJxKCZjdXJyZW50LT5zaWdoYW5kLT5zaWdsb2NrKTsKLQkJCXNp
ZyA9IGRlcXVldWVfc2lnbmFsKGN1cnJlbnQsICZ0aGVzZSwgJmluZm8pOwotCQkJY3VycmVudC0+
YmxvY2tlZCA9IGN1cnJlbnQtPnJlYWxfYmxvY2tlZDsKLQkJCXNpZ2luaXRzZXQoJmN1cnJlbnQt
PnJlYWxfYmxvY2tlZCwgMCk7Ci0JCQlyZWNhbGNfc2lncGVuZGluZygpOwotCQl9Ci0JfQotCXNw
aW5fdW5sb2NrX2lycSgmY3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7Ci0KLQlpZiAoc2lnKSB7
Ci0JCXJldCA9IHNpZzsKLQkJaWYgKHVpbmZvKSB7Ci0JCQlpZiAoY29weV9zaWdpbmZvX3RvX3Vz
ZXIzMih1aW5mbywgJmluZm8pKQotCQkJCXJldCA9IC1FRkFVTFQ7Ci0JCX0KLQl9IGVsc2Ugewot
CQlyZXQgPSAtRUFHQUlOOwotCQlpZiAodGltZW91dCkKLQkJCXJldCA9IC1FSU5UUjsKLQl9Ci0K
LQlyZXR1cm4gcmV0OwotfQotCiBhc21saW5rYWdlIGxvbmcgY29tcGF0X3N5c19ydF9zaWdxdWV1
ZWluZm8oaW50IHBpZCwgaW50IHNpZywKIAkJCQkJICAgc3RydWN0IHNpZ2luZm8zMiBfX3VzZXIg
KnVpbmZvKQogewpkaWZmIC1OcmF1cCBhL2FyY2gvc3BhcmM2NC9rZXJuZWwvc3lzdGJscy5TIGIv
YXJjaC9zcGFyYzY0L2tlcm5lbC9zeXN0YmxzLlMKLS0tIGEvYXJjaC9zcGFyYzY0L2tlcm5lbC9z
eXN0YmxzLlMJMjAwNC0xMi0wNiAxMzowNDo1MC4wMDAwMDAwMDAgKzA4MDAKKysrIGIvYXJjaC9z
cGFyYzY0L2tlcm5lbC9zeXN0YmxzLlMJMjAwNC0xMi0wNyAwNzowMzo0Mi4wMDAwMDAwMDAgKzA4
MDAKQEAgLTQxLDcgKzQxLDcgQEAgc3lzX2NhbGxfdGFibGUzMjoKIC8qOTAqLwkud29yZCBzeXNf
ZHVwMiwgc3lzX3NldGZzdWlkLCBjb21wYXRfc3lzX2ZjbnRsLCBzeXMzMl9zZWxlY3QsIHN5c19z
ZXRmc2dpZAogCS53b3JkIHN5c19mc3luYywgc3lzMzJfc2V0cHJpb3JpdHksIHN5c19uaXNfc3lz
Y2FsbCwgc3lzX25pc19zeXNjYWxsLCBzeXNfbmlzX3N5c2NhbGwKIC8qMTAwKi8gLndvcmQgc3lz
MzJfZ2V0cHJpb3JpdHksIHN5czMyX3J0X3NpZ3JldHVybiwgc3lzMzJfcnRfc2lnYWN0aW9uLCBz
eXMzMl9ydF9zaWdwcm9jbWFzaywgc3lzMzJfcnRfc2lncGVuZGluZwotCS53b3JkIHN5czMyX3J0
X3NpZ3RpbWVkd2FpdCwgc3lzMzJfcnRfc2lncXVldWVpbmZvLCBzeXMzMl9ydF9zaWdzdXNwZW5k
LCBzeXNfc2V0cmVzdWlkLCBzeXNfZ2V0cmVzdWlkCisJLndvcmQgY29tcGF0X3J0X3NpZ3RpbWVk
d2FpdCwgc3lzMzJfcnRfc2lncXVldWVpbmZvLCBzeXMzMl9ydF9zaWdzdXNwZW5kLCBzeXNfc2V0
cmVzdWlkLCBzeXNfZ2V0cmVzdWlkCiAvKjExMCovCS53b3JkIHN5c19zZXRyZXNnaWQsIHN5c19n
ZXRyZXNnaWQsIHN5c19zZXRyZWdpZCwgc3lzX25pc19zeXNjYWxsLCBzeXNfbmlzX3N5c2NhbGwK
IAkud29yZCBzeXMzMl9nZXRncm91cHMsIHN5czMyX2dldHRpbWVvZmRheSwgc3lzMzJfZ2V0cnVz
YWdlLCBzeXNfbmlzX3N5c2NhbGwsIHN5c19nZXRjd2QKIC8qMTIwKi8JLndvcmQgY29tcGF0X3N5
c19yZWFkdiwgY29tcGF0X3N5c193cml0ZXYsIHN5czMyX3NldHRpbWVvZmRheSwgc3lzMzJfZmNo
b3duMTYsIHN5c19mY2htb2QKZGlmZiAtTnJhdXAgYS9hcmNoL3g4Nl82NC9pYTMyL2lhMzJlbnRy
eS5TIGIvYXJjaC94ODZfNjQvaWEzMi9pYTMyZW50cnkuUwotLS0gYS9hcmNoL3g4Nl82NC9pYTMy
L2lhMzJlbnRyeS5TCTIwMDQtMTItMDYgMTM6MDQ6NTAuMDAwMDAwMDAwICswODAwCisrKyBiL2Fy
Y2gveDg2XzY0L2lhMzIvaWEzMmVudHJ5LlMJMjAwNC0xMi0wNyAwNzowMzo0Mi4wMDAwMDAwMDAg
KzA4MDAKQEAgLTQ3OSw3ICs0NzksNyBAQCBpYTMyX3N5c19jYWxsX3RhYmxlOgogCS5xdWFkIHN5
czMyX3J0X3NpZ2FjdGlvbgogCS5xdWFkIHN5czMyX3J0X3NpZ3Byb2NtYXNrCS8qIDE3NSAqLwog
CS5xdWFkIHN5czMyX3J0X3NpZ3BlbmRpbmcKLQkucXVhZCBzeXMzMl9ydF9zaWd0aW1lZHdhaXQK
KwkucXVhZCBjb21wYXRfcnRfc2lndGltZWR3YWl0CiAJLnF1YWQgc3lzMzJfcnRfc2lncXVldWVp
bmZvCiAJLnF1YWQgc3R1YjMyX3J0X3NpZ3N1c3BlbmQKIAkucXVhZCBzeXMzMl9wcmVhZAkJLyog
MTgwICovCmRpZmYgLU5yYXVwIGEvYXJjaC94ODZfNjQvaWEzMi9pYTMyX3NpZ25hbC5jIGIvYXJj
aC94ODZfNjQvaWEzMi9pYTMyX3NpZ25hbC5jCi0tLSBhL2FyY2gveDg2XzY0L2lhMzIvaWEzMl9z
aWduYWwuYwkyMDA0LTEwLTE5IDA1OjU1OjI4LjAwMDAwMDAwMCArMDgwMAorKysgYi9hcmNoL3g4
Nl82NC9pYTMyL2lhMzJfc2lnbmFsLmMJMjAwNC0xMi0wNyAwNzowMzo0Mi4wMDAwMDAwMDAgKzA4
MDAKQEAgLTQ0LDcgKzQ0LDcgQEAKIGFzbWxpbmthZ2UgaW50IGRvX3NpZ25hbChzdHJ1Y3QgcHRf
cmVncyAqcmVncywgc2lnc2V0X3QgKm9sZHNldCk7CiB2b2lkIHNpZ25hbF9mYXVsdChzdHJ1Y3Qg
cHRfcmVncyAqcmVncywgdm9pZCBfX3VzZXIgKmZyYW1lLCBjaGFyICp3aGVyZSk7CiAKLWludCBp
YTMyX2NvcHlfc2lnaW5mb190b191c2VyKHNpZ2luZm9fdDMyIF9fdXNlciAqdG8sIHNpZ2luZm9f
dCAqZnJvbSkKK2ludCBjb3B5X3NpZ2luZm9fdG9fdXNlcjMyKHNpZ2luZm9fdDMyIF9fdXNlciAq
dG8sIHNpZ2luZm9fdCAqZnJvbSkKIHsKIAlpbnQgZXJyOwogCWlmICghYWNjZXNzX29rIChWRVJJ
RllfV1JJVEUsIHRvLCBzaXplb2Yoc2lnaW5mb190MzIpKSkKQEAgLTk1LDcgKzk1LDcgQEAgaW50
IGlhMzJfY29weV9zaWdpbmZvX3RvX3VzZXIoc2lnaW5mb190MwogCXJldHVybiBlcnI7CiB9CiAK
LWludCBpYTMyX2NvcHlfc2lnaW5mb19mcm9tX3VzZXIoc2lnaW5mb190ICp0bywgc2lnaW5mb190
MzIgX191c2VyICpmcm9tKQoraW50IGNvcHlfc2lnaW5mb19mcm9tX3VzZXIzMihzaWdpbmZvX3Qg
KnRvLCBzaWdpbmZvX3QzMiBfX3VzZXIgKmZyb20pCiB7CiAJaW50IGVycjsKIAl1MzIgcHRyMzI7
CkBAIC01MzYsNyArNTM2LDcgQEAgdm9pZCBpYTMyX3NldHVwX3J0X2ZyYW1lKGludCBzaWcsIHN0
cnVjdAogCX0KIAllcnIgfD0gX19wdXRfdXNlcigodTMyKSh1NjQpJmZyYW1lLT5pbmZvLCAmZnJh
bWUtPnBpbmZvKTsKIAllcnIgfD0gX19wdXRfdXNlcigodTMyKSh1NjQpJmZyYW1lLT51YywgJmZy
YW1lLT5wdWMpOwotCWVyciB8PSBpYTMyX2NvcHlfc2lnaW5mb190b191c2VyKCZmcmFtZS0+aW5m
bywgaW5mbyk7CisJZXJyIHw9IGNvcHlfc2lnaW5mb190b191c2VyMzIoJmZyYW1lLT5pbmZvLCBp
bmZvKTsKIAlpZiAoZXJyKQogCQlnb3RvIGdpdmVfc2lnc2VndjsKIApkaWZmIC1OcmF1cCBhL2Fy
Y2gveDg2XzY0L2lhMzIvc3lzX2lhMzIuYyBiL2FyY2gveDg2XzY0L2lhMzIvc3lzX2lhMzIuYwot
LS0gYS9hcmNoL3g4Nl82NC9pYTMyL3N5c19pYTMyLmMJMjAwNC0xMi0wNiAxMzowNDo1MC4wMDAw
MDAwMDAgKzA4MDAKKysrIGIvYXJjaC94ODZfNjQvaWEzMi9zeXNfaWEzMi5jCTIwMDQtMTItMDcg
MDc6MDM6NDIuMDAwMDAwMDAwICswODAwCkBAIC02MjgsNDUgKzYyOCw2IEBAIHN5czMyX3J0X3Np
Z3BlbmRpbmcoY29tcGF0X3NpZ3NldF90IF9fdXMKIAlyZXR1cm4gcmV0OwogfQogCi0KLWFzbWxp
bmthZ2UgbG9uZwotc3lzMzJfcnRfc2lndGltZWR3YWl0KGNvbXBhdF9zaWdzZXRfdCBfX3VzZXIg
KnV0aGVzZSwgc2lnaW5mb190MzIgX191c2VyICp1aW5mbywKLQkJICAgICAgc3RydWN0IGNvbXBh
dF90aW1lc3BlYyBfX3VzZXIgKnV0cywgY29tcGF0X3NpemVfdCBzaWdzZXRzaXplKQotewotCXNp
Z3NldF90IHM7Ci0JY29tcGF0X3NpZ3NldF90IHMzMjsKLQlzdHJ1Y3QgdGltZXNwZWMgdDsKLQlp
bnQgcmV0OwotCW1tX3NlZ21lbnRfdCBvbGRfZnMgPSBnZXRfZnMoKTsKLQlzaWdpbmZvX3QgaW5m
bzsKLQkJCi0JaWYgKGNvcHlfZnJvbV91c2VyICgmczMyLCB1dGhlc2UsIHNpemVvZihjb21wYXRf
c2lnc2V0X3QpKSkKLQkJcmV0dXJuIC1FRkFVTFQ7Ci0Jc3dpdGNoIChfTlNJR19XT1JEUykgewot
CWNhc2UgNDogcy5zaWdbM10gPSBzMzIuc2lnWzZdIHwgKCgobG9uZylzMzIuc2lnWzddKSA8PCAz
Mik7Ci0JY2FzZSAzOiBzLnNpZ1syXSA9IHMzMi5zaWdbNF0gfCAoKChsb25nKXMzMi5zaWdbNV0p
IDw8IDMyKTsKLQljYXNlIDI6IHMuc2lnWzFdID0gczMyLnNpZ1syXSB8ICgoKGxvbmcpczMyLnNp
Z1szXSkgPDwgMzIpOwotCWNhc2UgMTogcy5zaWdbMF0gPSBzMzIuc2lnWzBdIHwgKCgobG9uZylz
MzIuc2lnWzFdKSA8PCAzMik7Ci0JfQotCWlmICh1dHMgJiYgZ2V0X2NvbXBhdF90aW1lc3BlYygm
dCwgdXRzKSkKLQkJcmV0dXJuIC1FRkFVTFQ7Ci0JaWYgKHVpbmZvKSB7Ci0JCS8qIHN0b3AgZGF0
YSBsZWFrIHRvIHVzZXIgc3BhY2UgaW4gY2FzZSBvZiBzdHJ1Y3R1cmUgZmlsbCBtaXNtYXRjaAot
CQkgKiBiZXR3ZWVuIHN5c19ydF9zaWd0aW1lZHdhaXQgJiBpYTMyX2NvcHlfc2lnaW5mb190b191
c2VyLgotCQkgKi8KLQkJbWVtc2V0KCZpbmZvLCAwLCBzaXplb2YoaW5mbykpOwotCX0KLQlzZXRf
ZnMgKEtFUk5FTF9EUyk7Ci0JcmV0ID0gc3lzX3J0X3NpZ3RpbWVkd2FpdCgmcywgdWluZm8gPyAm
aW5mbyA6IE5VTEwsIHV0cyA/ICZ0IDogTlVMTCwKLQkJCXNpZ3NldHNpemUpOwotCXNldF9mcyAo
b2xkX2ZzKTsKLQlpZiAocmV0ID49IDAgJiYgdWluZm8pIHsKLQkJaWYgKGlhMzJfY29weV9zaWdp
bmZvX3RvX3VzZXIodWluZm8sICZpbmZvKSkKLQkJCXJldHVybiAtRUZBVUxUOwotCX0KLQlyZXR1
cm4gcmV0OwotfQotCiBhc21saW5rYWdlIGxvbmcKIHN5czMyX3J0X3NpZ3F1ZXVlaW5mbyhpbnQg
cGlkLCBpbnQgc2lnLCBzaWdpbmZvX3QzMiBfX3VzZXIgKnVpbmZvKQogewpAQCAtNjc0LDcgKzYz
NSw3IEBAIHN5czMyX3J0X3NpZ3F1ZXVlaW5mbyhpbnQgcGlkLCBpbnQgc2lnLCAKIAlpbnQgcmV0
OwogCW1tX3NlZ21lbnRfdCBvbGRfZnMgPSBnZXRfZnMoKTsKIAkKLQlpZiAoaWEzMl9jb3B5X3Np
Z2luZm9fZnJvbV91c2VyKCZpbmZvLCB1aW5mbykpCisJaWYgKGNvcHlfc2lnaW5mb19mcm9tX3Vz
ZXIzMigmaW5mbywgdWluZm8pKQogCQlyZXR1cm4gLUVGQVVMVDsKIAlzZXRfZnMgKEtFUk5FTF9E
Uyk7CiAJcmV0ID0gc3lzX3J0X3NpZ3F1ZXVlaW5mbyhwaWQsIHNpZywgJmluZm8pOwpAQCAtMTAy
Miw3ICs5ODMsNyBAQCBhc21saW5rYWdlIGxvbmcgc3lzMzJfd2FpdGlkKGludCB3aGljaCwgCiAK
IAlCVUdfT04oaW5mby5zaV9jb2RlICYgX19TSV9NQVNLKTsKIAlpbmZvLnNpX2NvZGUgfD0gX19T
SV9DSExEOwotCXJldHVybiBpYTMyX2NvcHlfc2lnaW5mb190b191c2VyKHVpbmZvLCAmaW5mbyk7
CisJcmV0dXJuIGNvcHlfc2lnaW5mb190b191c2VyMzIodWluZm8sICZpbmZvKTsKIH0KIAogLyoK
ZGlmZiAtTnJhdXAgYS9mcy9jb21wYXQuYyBiL2ZzL2NvbXBhdC5jCi0tLSBhL2ZzL2NvbXBhdC5j
CTIwMDQtMTItMDYgMTM6MDQ6NTUuMDAwMDAwMDAwICswODAwCisrKyBiL2ZzL2NvbXBhdC5jCTIw
MDQtMTItMDcgMDc6MDU6NTcuMDAwMDAwMDAwICswODAwCkBAIC0xNjY1LDYgKzE2NjUsNyBAQCBv
dXRfbm9mZHM6CiAJcmV0dXJuIHJldDsKIH0KIAorCiAjaWYgZGVmaW5lZChDT05GSUdfTkZTRCkg
fHwgZGVmaW5lZChDT05GSUdfTkZTRF9NT0RVTEUpCiAvKiBTdHVmZiBmb3IgTkZTIHNlcnZlciBz
eXNjYWxscy4uLiAqLwogc3RydWN0IGNvbXBhdF9uZnNjdGxfc3ZjIHsKZGlmZiAtTnJhdXAgYS9p
bmNsdWRlL2FzbS1wcGM2NC9wcGMzMi5oIGIvaW5jbHVkZS9hc20tcHBjNjQvcHBjMzIuaAotLS0g
YS9pbmNsdWRlL2FzbS1wcGM2NC9wcGMzMi5oCTIwMDQtMTAtMTkgMDU6NTQ6MDcuMDAwMDAwMDAw
ICswODAwCisrKyBiL2luY2x1ZGUvYXNtLXBwYzY0L3BwYzMyLmgJMjAwNC0xMi0wNyAwNzowMzo0
Mi4wMDAwMDAwMDAgKzA4MDAKQEAgLTE2LDcgKzE2LDcgQEAKIAogLyogVGhlc2UgYXJlIGhlcmUg
dG8gc3VwcG9ydCAzMi1iaXQgc3lzY2FsbHMgb24gYSA2NC1iaXQga2VybmVsLiAqLwogCi10eXBl
ZGVmIHN0cnVjdCBjb21wYXRfc2lnaW5mbyB7Cit0eXBlZGVmIHN0cnVjdCBzaWdpbmZvMzIgewog
CWludCBzaV9zaWdubzsKIAlpbnQgc2lfZXJybm87CiAJaW50IHNpX2NvZGU7CkBAIC02NSw3ICs2
NSw3IEBAIHR5cGVkZWYgc3RydWN0IGNvbXBhdF9zaWdpbmZvIHsKIAkJCWludCBfZmQ7CiAJCX0g
X3NpZ3BvbGw7CiAJfSBfc2lmaWVsZHM7Ci19IGNvbXBhdF9zaWdpbmZvX3Q7Cit9IHNpZ2luZm9f
MzJ0OwogCiAjZGVmaW5lIF9fb2xkX3NpZ2FjdGlvbjMyCW9sZF9zaWdhY3Rpb24zMgogCmRpZmYg
LU5yYXVwIGEvaW5jbHVkZS9hc20tc3BhcmM2NC9zaWdpbmZvLmggYi9pbmNsdWRlL2FzbS1zcGFy
YzY0L3NpZ2luZm8uaAotLS0gYS9pbmNsdWRlL2FzbS1zcGFyYzY0L3NpZ2luZm8uaAkyMDA0LTEw
LTE5IDA1OjU0OjQwLjAwMDAwMDAwMCArMDgwMAorKysgYi9pbmNsdWRlL2FzbS1zcGFyYzY0L3Np
Z2luZm8uaAkyMDA0LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCArMDgwMApAQCAtNTYsOSArNTYs
NiBAQCB0eXBlZGVmIHN0cnVjdCBzaWdldmVudDMyIHsKIAl9IF9zaWdldl91bjsKIH0gc2lnZXZl
bnRfdDMyOwogCi1leHRlcm4gaW50IGNvcHlfc2lnaW5mb190b191c2VyMzIoc3RydWN0IHNpZ2lu
Zm8zMiBfX3VzZXIgKnRvLCBzaWdpbmZvX3QgKmZyb20pOwotZXh0ZXJuIGludCBjb3B5X3NpZ2lu
Zm9fdG9fa2VybmVsMzIoc2lnaW5mb190ICp0bywgc3RydWN0IHNpZ2luZm8zMiBfX3VzZXIgKmZy
b20pOwotCiAjZW5kaWYgLyogQ09ORklHX0NPTVBBVCAqLwogCiAjZW5kaWYgLyogX19LRVJORUxf
XyAqLwpkaWZmIC1OcmF1cCBhL2luY2x1ZGUvYXNtLXg4Nl82NC9pYTMyLmggYi9pbmNsdWRlL2Fz
bS14ODZfNjQvaWEzMi5oCi0tLSBhL2luY2x1ZGUvYXNtLXg4Nl82NC9pYTMyLmgJMjAwNC0xMC0x
OSAwNTo1NTowNy4wMDAwMDAwMDAgKzA4MDAKKysrIGIvaW5jbHVkZS9hc20teDg2XzY0L2lhMzIu
aAkyMDA0LTEyLTA3IDA3OjAzOjQyLjAwMDAwMDAwMCArMDgwMApAQCAtMTY1LDggKzE2NSw2IEBA
IHN0cnVjdCBzaWdpbmZvX3Q7CiBpbnQgZG9fZ2V0X3RocmVhZF9hcmVhKHN0cnVjdCB0aHJlYWRf
c3RydWN0ICp0LCBzdHJ1Y3QgdXNlcl9kZXNjIF9fdXNlciAqaW5mbyk7CiBpbnQgZG9fc2V0X3Ro
cmVhZF9hcmVhKHN0cnVjdCB0aHJlYWRfc3RydWN0ICp0LCBzdHJ1Y3QgdXNlcl9kZXNjIF9fdXNl
ciAqaW5mbyk7CiBpbnQgaWEzMl9jaGlsZF90bHMoc3RydWN0IHRhc2tfc3RydWN0ICpwLCBzdHJ1
Y3QgcHRfcmVncyAqY2hpbGRyZWdzKTsKLWludCBpYTMyX2NvcHlfc2lnaW5mb19mcm9tX3VzZXIo
c2lnaW5mb190ICp0bywgc2lnaW5mb190MzIgX191c2VyICpmcm9tKTsKLWludCBpYTMyX2NvcHlf
c2lnaW5mb190b191c2VyKHNpZ2luZm9fdDMyIF9fdXNlciAqdG8sIHNpZ2luZm9fdCAqZnJvbSk7
CiAjZW5kaWYKIAogI2VuZGlmIC8qICFDT05GSUdfSUEzMl9TVVBQT1JUICovCmRpZmYgLU5yYXVw
IGEvaW5jbHVkZS9saW51eC9jb21wYXQuaCBiL2luY2x1ZGUvbGludXgvY29tcGF0LmgKLS0tIGEv
aW5jbHVkZS9saW51eC9jb21wYXQuaAkyMDA0LTEyLTA2IDEzOjA0OjMzLjAwMDAwMDAwMCArMDgw
MAorKysgYi9pbmNsdWRlL2xpbnV4L2NvbXBhdC5oCTIwMDQtMTItMDcgMDc6MDM6NDIuMDAwMDAw
MDAwICswODAwCkBAIC0xNDMsNiArMTQzLDggQEAgbG9uZyBjb21wYXRfZ2V0X2JpdG1hcCh1bnNp
Z25lZCBsb25nICptYQogCQkgICAgICAgdW5zaWduZWQgbG9uZyBiaXRtYXBfc2l6ZSk7CiBsb25n
IGNvbXBhdF9wdXRfYml0bWFwKGNvbXBhdF91bG9uZ190IF9fdXNlciAqdW1hc2ssIHVuc2lnbmVk
IGxvbmcgKm1hc2ssCiAJCSAgICAgICB1bnNpZ25lZCBsb25nIGJpdG1hcF9zaXplKTsKLQorc3Ry
dWN0IHNpZ2luZm8zMjsKK2ludCBjb3B5X3NpZ2luZm9fZnJvbV91c2VyMzIoc2lnaW5mb190ICp0
bywgc3RydWN0IHNpZ2luZm8zMiBfX3VzZXIgKmZyb20pOworaW50IGNvcHlfc2lnaW5mb190b191
c2VyMzIoc3RydWN0IHNpZ2luZm8zMiBfX3VzZXIgKnRvLCBzaWdpbmZvX3QgKmZyb20pOwogI2Vu
ZGlmIC8qIENPTkZJR19DT01QQVQgKi8KICNlbmRpZiAvKiBfTElOVVhfQ09NUEFUX0ggKi8KZGlm
ZiAtTnJhdXAgYS9rZXJuZWwvY29tcGF0LmMgYi9rZXJuZWwvY29tcGF0LmMKLS0tIGEva2VybmVs
L2NvbXBhdC5jCTIwMDQtMTItMDYgMTM6MDQ6NTcuMDAwMDAwMDAwICswODAwCisrKyBiL2tlcm5l
bC9jb21wYXQuYwkyMDA0LTEyLTA3IDA3OjA2OjExLjAwMDAwMDAwMCArMDgwMApAQCAtNjgyLDYg
KzY4Miw5MiBAQCBsb25nIGNvbXBhdF9wdXRfYml0bWFwKGNvbXBhdF91bG9uZ190IF9fCiAJcmV0
dXJuIDA7CiB9CiAKK3ZvaWQKK3NpZ3NldF9mcm9tX2NvbXBhdCAoc2lnc2V0X3QgKnNldCwgY29t
cGF0X3NpZ3NldF90ICpjb21wYXQpCit7CisJc3dpdGNoIChfTlNJR19XT1JEUykgeworI2lmIGRl
ZmluZWQgKF9fTUlQU0VMX18pCisJY2FzZSA0OiBzZXQtPnNpZ1szXSA9IGNvbXBhdC0+c2lnWzdd
IHwgKCgobG9uZyljb21wYXQtPnNpZ1s2XSkgPDwgMzIgKTsKKwljYXNlIDM6IHNldC0+c2lnWzJd
ID0gY29tcGF0LT5zaWdbNV0gfCAoKChsb25nKWNvbXBhdC0+c2lnWzRdKSA8PCAzMiApOworCWNh
c2UgMjogc2V0LT5zaWdbMV0gPSBjb21wYXQtPnNpZ1szXSB8ICgoKGxvbmcpY29tcGF0LT5zaWdb
Ml0pIDw8IDMyICk7CisJY2FzZSAxOiBzZXQtPnNpZ1swXSA9IGNvbXBhdC0+c2lnWzFdIHwgKCgo
bG9uZyljb21wYXQtPnNpZ1swXSkgPDwgMzIgKTsKKyNlbHNlCisJY2FzZSA0OiBzZXQtPnNpZ1sz
XSA9IGNvbXBhdC0+c2lnWzZdIHwgKCgobG9uZyljb21wYXQtPnNpZ1s3XSkgPDwgMzIgKTsKKwlj
YXNlIDM6IHNldC0+c2lnWzJdID0gY29tcGF0LT5zaWdbNF0gfCAoKChsb25nKWNvbXBhdC0+c2ln
WzVdKSA8PCAzMiApOworCWNhc2UgMjogc2V0LT5zaWdbMV0gPSBjb21wYXQtPnNpZ1syXSB8ICgo
KGxvbmcpY29tcGF0LT5zaWdbM10pIDw8IDMyICk7CisJY2FzZSAxOiBzZXQtPnNpZ1swXSA9IGNv
bXBhdC0+c2lnWzBdIHwgKCgobG9uZyljb21wYXQtPnNpZ1sxXSkgPDwgMzIgKTsKKyNlbmRpZgor
CX0KK30KKworYXNtbGlua2FnZSBsb25nCitjb21wYXRfcnRfc2lndGltZWR3YWl0IChjb21wYXRf
c2lnc2V0X3QgX191c2VyICp1dGhlc2UsCisJCXN0cnVjdCBzaWdpbmZvMzIgX191c2VyICp1aW5m
bywKKwkJc3RydWN0IGNvbXBhdF90aW1lc3BlYyBfX3VzZXIgKnV0cywgY29tcGF0X3NpemVfdCBz
aWdzZXRzaXplKQoreworCWNvbXBhdF9zaWdzZXRfdCBzMzI7CisJc2lnc2V0X3QgczsKKwlpbnQg
c2lnOworCXN0cnVjdCB0aW1lc3BlYyB0OworCXNpZ2luZm9fdCBpbmZvOworCWxvbmcgcmV0LCB0
aW1lb3V0ID0gMDsKKworCWlmIChzaWdzZXRzaXplICE9IHNpemVvZihzaWdzZXRfdCkpCisJCXJl
dHVybiAtRUlOVkFMOworCisJaWYgKGNvcHlfZnJvbV91c2VyKCZzMzIsIHV0aGVzZSwgc2l6ZW9m
KGNvbXBhdF9zaWdzZXRfdCkpKQorCQlyZXR1cm4gLUVGQVVMVDsKKwlzaWdzZXRfZnJvbV9jb21w
YXQoJnMsICZzMzIpOworCXNpZ2RlbHNldG1hc2soJnMsc2lnbWFzayhTSUdLSUxMKXxzaWdtYXNr
KFNJR1NUT1ApKTsKKwlzaWdub3RzZXQoJnMpOworCisJaWYgKHV0cykgeworCQlpZiAoZ2V0X2Nv
bXBhdF90aW1lc3BlYyAoJnQsIHV0cykpCisJCQlyZXR1cm4gLUVGQVVMVDsKKwkJaWYgKHQudHZf
bnNlYyA+PSAxMDAwMDAwMDAwTCB8fCB0LnR2X25zZWMgPCAwCisJCQkJfHwgdC50dl9zZWMgPCAw
KQorCQkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJc3Bpbl9sb2NrX2lycSgmY3VycmVudC0+c2ln
aGFuZC0+c2lnbG9jayk7CisJc2lnID0gZGVxdWV1ZV9zaWduYWwoY3VycmVudCwgJnMsICZpbmZv
KTsKKwlpZiAoIXNpZykgeworCQl0aW1lb3V0ID0gTUFYX1NDSEVEVUxFX1RJTUVPVVQ7CisJCWlm
ICh1dHMpCisJCQl0aW1lb3V0ID0gdGltZXNwZWNfdG9famlmZmllcygmdCkKKwkJCQkrKHQudHZf
c2VjIHx8IHQudHZfbnNlYyk7CisJCWlmICh0aW1lb3V0KSB7CisJCQljdXJyZW50LT5yZWFsX2Js
b2NrZWQgPSBjdXJyZW50LT5ibG9ja2VkOworCQkJc2lnYW5kc2V0cygmY3VycmVudC0+YmxvY2tl
ZCwgJmN1cnJlbnQtPmJsb2NrZWQsICZzKTsKKworCQkJcmVjYWxjX3NpZ3BlbmRpbmcoKTsKKwkJ
CXNwaW5fdW5sb2NrX2lycSgmY3VycmVudC0+c2lnaGFuZC0+c2lnbG9jayk7CisKKwkJCWN1cnJl
bnQtPnN0YXRlID0gVEFTS19JTlRFUlJVUFRJQkxFOworCQkJdGltZW91dCA9IHNjaGVkdWxlX3Rp
bWVvdXQodGltZW91dCk7CisKKwkJCXNwaW5fbG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNp
Z2xvY2spOworCQkJc2lnID0gZGVxdWV1ZV9zaWduYWwoY3VycmVudCwgJnMsICZpbmZvKTsKKwkJ
CWN1cnJlbnQtPmJsb2NrZWQgPSBjdXJyZW50LT5yZWFsX2Jsb2NrZWQ7CisJCQlzaWdpbml0c2V0
KCZjdXJyZW50LT5yZWFsX2Jsb2NrZWQsIDApOworCQkJcmVjYWxjX3NpZ3BlbmRpbmcoKTsKKwkJ
fQorCX0KKwlzcGluX3VubG9ja19pcnEoJmN1cnJlbnQtPnNpZ2hhbmQtPnNpZ2xvY2spOworCisJ
aWYgKHNpZykgeworCQlyZXQgPSBzaWc7CisJCWlmICh1aW5mbykgeworCQkJaWYgKGNvcHlfc2ln
aW5mb190b191c2VyMzIodWluZm8sICZpbmZvKSkKKwkJCQlyZXQgPSAtRUZBVUxUOworCQl9CisJ
fWVsc2UgeworCQlyZXQgPSB0aW1lb3V0Py1FSU5UUjotRUFHQUlOOworCX0KKwlyZXR1cm4gcmV0
OworCit9CisKICNpZmRlZiBfX0FSQ0hfV0FOVF9DT01QQVRfU1lTX1RJTUUKIAogLyogY29tcGF0
X3RpbWVfdCBpcyBhIDMyIGJpdCAibG9uZyIgYW5kIG5lZWRzIHRvIGdldCBjb252ZXJ0ZWQuICov
Cg==

------_=_NextPart_001_01C4DCBF.B23CDC61--
