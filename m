Return-Path: <linux-kernel-owner+willy=40w.ods.org-S263740AbUGADGA@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S263740AbUGADGA (ORCPT <rfc822;willy@w.ods.org>);
	Wed, 30 Jun 2004 23:06:00 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S263761AbUGADFx
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 30 Jun 2004 23:05:53 -0400
Received: from sv1.valinux.co.jp ([210.128.90.2]:24205 "EHLO sv1.valinux.co.jp")
	by vger.kernel.org with ESMTP id S263740AbUGADFo (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 30 Jun 2004 23:05:44 -0400
Date: Thu, 01 Jul 2004 12:05:43 +0900
From: IWAMOTO Toshihiro <iwamoto@valinux.co.jp>
To: Dave Hansen <haveblue@us.ibm.com>
Cc: IWAMOTO Toshihiro <iwamoto@valinux.co.jp>,
       Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
       lhms <lhms-devel@lists.sourceforge.net>, linux-mm <linux-mm@kvack.org>
Subject: Re: [Lhms-devel] new memory hotremoval patch
In-Reply-To: <1088640671.5265.1017.camel@nighthawk>
References: <20040630111719.EBACF70A92@sv1.valinux.co.jp>
	<1088640671.5265.1017.camel@nighthawk>
User-Agent: Wanderlust/2.10.1 (Watching The Wheels) SEMI/1.14.6 (Maruoka) FLIM/1.14.6 (Marutamachi) APEL/10.6 Emacs/21.3 (i386-pc-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Message-Id: <20040701030543.8CE8F70A92@sv1.valinux.co.jp>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

At Wed, 30 Jun 2004 17:11:11 -0700,
Dave Hansen wrote:
> 
> On Wed, 2004-06-30 at 04:17, IWAMOTO Toshihiro wrote:
> > Due to struct page changes, page->mapping == NULL predicate can no
> > longer be used for detecting cancellation of an anonymous page
> > remapping operation.  So the PG_again bit is being used again.
> > It may be still possible to kill the PG_again bit, but the priority is
> > rather low.
> 
> But, you reintroduced it everywhere, including file-backed pages, not
> just for anonymous pages?  Why was this necessary?

Which PG_again check are you talking about?
I think BUG_ON()s in file backed page codes should be kept for now.

For swap pages, one possibility to reserve a special swap entry
constant (SWAP_AGAIN) and check page->private instead of PageAgain
check, but I'm not sure if this is a good idea.

#define	SWAP_AGAIN	~0UL

...

static int do_swap_page(struct mm_struct * mm,
        struct vm_area_struct * vma, unsigned long address,
        pte_t *page_table, pmd_t *pmd, pte_t orig_pte, int write_access)
{
...
again:
        page = lookup_swap_cache(entry);
...
        mark_page_accessed(page);
        lock_page(page);
        if (page->private == SWAP_AGAIN) {
		...
		goto again;
	}

--
IWAMOTO Toshihiro
