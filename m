Return-Path: <linux-kernel-owner+willy=40w.ods.org-S964965AbVIUV3R@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S964965AbVIUV3R (ORCPT <rfc822;willy@w.ods.org>);
	Wed, 21 Sep 2005 17:29:17 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S964968AbVIUV3R
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 21 Sep 2005 17:29:17 -0400
Received: from mf01.sitadelle.com ([212.94.174.68]:4764 "EHLO smtp.cegetel.net")
	by vger.kernel.org with ESMTP id S964965AbVIUV3Q (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Wed, 21 Sep 2005 17:29:16 -0400
Message-ID: <4331D0A9.3080801@cosmosbay.com>
Date: Wed, 21 Sep 2005 23:29:13 +0200
From: Eric Dumazet <dada1@cosmosbay.com>
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: fr, en
MIME-Version: 1.0
To: linux-kernel@vger.kernel.org, netfilter-devel@lists.netfilter.org,
       netdev@vger.kernel.org
Cc: Andi Kleen <ak@suse.de>
Subject: [PATCH 1/3] netfilter : 3 patches to boost ip_tables performance
References: <432EF0C5.5090908@cosmosbay.com> <200509191948.55333.ak@suse.de> <432FDAC5.3040801@cosmosbay.com> <200509201830.20689.ak@suse.de> <433082DE.3060308@cosmosbay.com> <43308324.70403@cosmosbay.com>
In-Reply-To: <43308324.70403@cosmosbay.com>
Content-Type: multipart/mixed;
 boundary="------------030503000403080601080704"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.
--------------030503000403080601080704
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit

Patch 1/3

1) No more one rwlock_t protecting the 'curtain'

One major bottleneck on SMP machines is the fact that one rwlock
is taken in ipt_do_table() entry and exit. That 2 atomic operations are
the killer, and even if multiple readers can work together on the same table
(using read_lock_bh()), the cache line containing rwlock still must be
taken exclusively by each CPU at entry/exit of ipt_do_table().

As existing code already use separate copies of the data for each cpu, it is
very easy to convert the central rwlock to separate rwlocks, allocated
percpu (and NUMA aware).

When a cpu enters ipt_do_table(), it can locks its local copy, touching a
cache line that is not used by other cpus. Further operations are done on
'local' copy of the data.

When a sum of all counters must be done, we can write_lock each part at a
time, instead of locking all the parts, reducing the lock contention.

Note1 : I also optimized get_counters(), using a SET_COUNTER() for the first 
cpu, avoiding a memset() and ADD_COUNTER() if SMP on other cpus.

Signed-off-by: Eric Dumazet <dada1@cosmosbay.com>

--------------030503000403080601080704
Content-Type: text/plain;
 name="patch_ip_tables_numa.1"
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename="patch_ip_tables_numa.1"

LS0tIGxpbnV4LTIuNi9pbmNsdWRlL2xpbnV4L25ldGZpbHRlcl9pcHY0L2lwX3RhYmxlcy5o
CTIwMDUtMDktMTMgMDU6MTI6MDkuMDAwMDAwMDAwICswMjAwCisrKyBsaW51eC0yLjYtZWQv
aW5jbHVkZS9saW51eC9uZXRmaWx0ZXJfaXB2NC9pcF90YWJsZXMuaAkyMDA1LTA5LTIxIDE3
OjQyOjA3LjAwMDAwMDAwMCArMDIwMApAQCAtNDQ1LDcgKzQ0NSwxMSBAQAogCXVuc2lnbmVk
IGludCB2YWxpZF9ob29rczsKIAogCS8qIExvY2sgZm9yIHRoZSBjdXJ0YWluICovCisjaWZk
ZWYgQ09ORklHX1NNUAorCXJ3bG9ja190ICpsb2NrX3A7IC8qIG9uZSBsb2NrIHBlciBjcHUg
Ki8KKyNlbHNlCiAJcndsb2NrX3QgbG9jazsKKyNlbmRpZgogCiAJLyogTWFuIGJlaGluZCB0
aGUgY3VydGFpbi4uLiAqLwogCXN0cnVjdCBpcHRfdGFibGVfaW5mbyAqcHJpdmF0ZTsKLS0t
IGxpbnV4LTIuNi4xNC1yYzEucDEvbmV0L2lwdjQvbmV0ZmlsdGVyL2lwX25hdF9ydWxlLmMJ
MjAwNS0wOS0xMyAwNToxMjowOS4wMDAwMDAwMDAgKzAyMDAKKysrIGxpbnV4LTIuNi4xNC1y
YzEvbmV0L2lwdjQvbmV0ZmlsdGVyL2lwX25hdF9ydWxlLmMJMjAwNS0wOS0yMSAxNzo0NDow
MS4wMDAwMDAwMDAgKzAyMDAKQEAgLTkzLDcgKzkzLDYgQEAKIHN0YXRpYyBzdHJ1Y3QgaXB0
X3RhYmxlIG5hdF90YWJsZSA9IHsKIAkubmFtZQkJPSAibmF0IiwKIAkudmFsaWRfaG9va3MJ
PSBOQVRfVkFMSURfSE9PS1MsCi0JLmxvY2sJCT0gUldfTE9DS19VTkxPQ0tFRCwKIAkubWUJ
CT0gVEhJU19NT0RVTEUsCiB9OwogCi0tLSBsaW51eC0yLjYuMTQtcmMxLnAxL25ldC9pcHY0
L25ldGZpbHRlci9pcHRhYmxlX2ZpbHRlci5jCTIwMDUtMDktMTMgMDU6MTI6MDkuMDAwMDAw
MDAwICswMjAwCisrKyBsaW51eC0yLjYuMTQtcmMxL25ldC9pcHY0L25ldGZpbHRlci9pcHRh
YmxlX2ZpbHRlci5jCTIwMDUtMDktMjEgMTc6NDU6MjAuMDAwMDAwMDAwICswMjAwCkBAIC03
Nyw3ICs3Nyw2IEBACiBzdGF0aWMgc3RydWN0IGlwdF90YWJsZSBwYWNrZXRfZmlsdGVyID0g
ewogCS5uYW1lCQk9ICJmaWx0ZXIiLAogCS52YWxpZF9ob29rcwk9IEZJTFRFUl9WQUxJRF9I
T09LUywKLQkubG9jawkJPSBSV19MT0NLX1VOTE9DS0VELAogCS5tZQkJPSBUSElTX01PRFVM
RQogfTsKIAotLS0gbGludXgtMi42LjE0LXJjMS5wMS9uZXQvaXB2NC9uZXRmaWx0ZXIvaXB0
YWJsZV9tYW5nbGUuYwkyMDA1LTA5LTEzIDA1OjEyOjA5LjAwMDAwMDAwMCArMDIwMAorKysg
bGludXgtMi42LjE0LXJjMS9uZXQvaXB2NC9uZXRmaWx0ZXIvaXB0YWJsZV9tYW5nbGUuYwky
MDA1LTA5LTIxIDE3OjQ1OjIwLjAwMDAwMDAwMCArMDIwMApAQCAtMTA3LDcgKzEwNyw2IEBA
CiBzdGF0aWMgc3RydWN0IGlwdF90YWJsZSBwYWNrZXRfbWFuZ2xlciA9IHsKIAkubmFtZQkJ
PSAibWFuZ2xlIiwKIAkudmFsaWRfaG9va3MJPSBNQU5HTEVfVkFMSURfSE9PS1MsCi0JLmxv
Y2sJCT0gUldfTE9DS19VTkxPQ0tFRCwKIAkubWUJCT0gVEhJU19NT0RVTEUsCiB9OwogCi0t
LSBsaW51eC0yLjYuMTQtcmMxLnAxL25ldC9pcHY0L25ldGZpbHRlci9pcHRhYmxlX3Jhdy5j
CTIwMDUtMDktMTMgMDU6MTI6MDkuMDAwMDAwMDAwICswMjAwCisrKyBsaW51eC0yLjYuMTQt
cmMxL25ldC9pcHY0L25ldGZpbHRlci9pcHRhYmxlX3Jhdy5jCTIwMDUtMDktMjEgMTc6NDU6
MjAuMDAwMDAwMDAwICswMjAwCkBAIC04Miw3ICs4Miw2IEBACiBzdGF0aWMgc3RydWN0IGlw
dF90YWJsZSBwYWNrZXRfcmF3ID0geyAKIAkubmFtZSA9ICJyYXciLCAKIAkudmFsaWRfaG9v
a3MgPSAgUkFXX1ZBTElEX0hPT0tTLCAKLQkubG9jayA9IFJXX0xPQ0tfVU5MT0NLRUQsIAog
CS5tZSA9IFRISVNfTU9EVUxFCiB9OwogCi0tLSBsaW51eC0yLjYuMTQtcmMxLnAxL25ldC9p
cHY0L25ldGZpbHRlci9pcF90YWJsZXMuYwkyMDA1LTA5LTE5IDE5OjU2OjEyLjAwMDAwMDAw
MCArMDIwMAorKysgbGludXgtMi42LjE0LXJjMS9uZXQvaXB2NC9uZXRmaWx0ZXIvaXBfdGFi
bGVzLmMJMjAwNS0wOS0yMSAyMzo0OToxMy4wMDAwMDAwMDAgKzAyMDAKQEAgLTExMCw2ICsx
MTAsNyBAQAogc3RhdGljIExJU1RfSEVBRChpcHRfdGFyZ2V0KTsKIHN0YXRpYyBMSVNUX0hF
QUQoaXB0X21hdGNoKTsKIHN0YXRpYyBMSVNUX0hFQUQoaXB0X3RhYmxlcyk7CisjZGVmaW5l
IFNFVF9DT1VOVEVSKGMsYixwKSBkbyB7IChjKS5iY250ID0gKGIpOyAoYykucGNudCA9IChw
KTsgfSB3aGlsZSgwKQogI2RlZmluZSBBRERfQ09VTlRFUihjLGIscCkgZG8geyAoYykuYmNu
dCArPSAoYik7IChjKS5wY250ICs9IChwKTsgfSB3aGlsZSgwKQogCiAjaWZkZWYgQ09ORklH
X1NNUApAQCAtMjczLDYgKzI3NCw5IEBACiAJY29uc3QgY2hhciAqaW5kZXYsICpvdXRkZXY7
CiAJdm9pZCAqdGFibGVfYmFzZTsKIAlzdHJ1Y3QgaXB0X2VudHJ5ICplLCAqYmFjazsKKyNp
ZmRlZiBDT05GSUdfU01QCisJcndsb2NrX3QgKmxvY2tfcDsKKyNlbmRpZgogCiAJLyogSW5p
dGlhbGl6YXRpb24gKi8KIAlpcCA9ICgqcHNrYiktPm5oLmlwaDsKQEAgLTI4Nyw3ICsyOTEs
MTggQEAKIAkgKiBtYXRjaCBpdC4gKi8KIAlvZmZzZXQgPSBudG9ocyhpcC0+ZnJhZ19vZmYp
ICYgSVBfT0ZGU0VUOwogCisjaWZkZWYgQ09ORklHX1NNUAorCS8qCisJICogV2UgZXhwYW5k
IHJlYWRfbG9ja19iaCgpIGhlcmUgYmVjYXVzZSB3ZSBuZWVkIHRvIGdldAorCSAqIHRoZSBh
ZGRyZXNzIG9mIHRoaXMgY3B1IHJ3bG9ja190CisJICovCisJbG9jYWxfYmhfZGlzYWJsZSgp
OworCXByZWVtcHRfZGlzYWJsZSgpOworCWxvY2tfcCA9IHBlcl9jcHVfcHRyKHRhYmxlLT5s
b2NrX3AsIHNtcF9wcm9jZXNzb3JfaWQoKSk7CisJX3Jhd19yZWFkX2xvY2sobG9ja19wKTsK
KyNlbHNlCiAJcmVhZF9sb2NrX2JoKCZ0YWJsZS0+bG9jayk7CisjZW5kaWYKIAlJUF9ORl9B
U1NFUlQodGFibGUtPnZhbGlkX2hvb2tzICYgKDEgPDwgaG9vaykpOwogCXRhYmxlX2Jhc2Ug
PSAodm9pZCAqKXRhYmxlLT5wcml2YXRlLT5lbnRyaWVzCiAJCSsgVEFCTEVfT0ZGU0VUKHRh
YmxlLT5wcml2YXRlLCBzbXBfcHJvY2Vzc29yX2lkKCkpOwpAQCAtMzk2LDcgKzQxMSwxMSBA
QAogI2lmZGVmIENPTkZJR19ORVRGSUxURVJfREVCVUcKIAkoKHN0cnVjdCBpcHRfZW50cnkg
Kil0YWJsZV9iYXNlKS0+Y29tZWZyb20gPSAweGRlYWQ1N2FjOwogI2VuZGlmCisjaWZkZWYg
Q09ORklHX1NNUAorCXJlYWRfdW5sb2NrX2JoKGxvY2tfcCk7CisjZWxzZQogCXJlYWRfdW5s
b2NrX2JoKCZ0YWJsZS0+bG9jayk7CisjZW5kaWYKIAogI2lmZGVmIERFQlVHX0FMTE9XX0FM
TAogCXJldHVybiBORl9BQ0NFUFQ7CkBAIC05MzAsNiArOTQ5LDMwIEBACiAJcmV0dXJuIHJl
dDsKIH0KIAorc3RhdGljIHZvaWQgaXB0X3RhYmxlX2dsb2JhbF9sb2NrKHN0cnVjdCBpcHRf
dGFibGUgKnRhYmxlKQoreworI2lmZGVmIENPTkZJR19TTVAKKwlpbnQgY3B1OworCWZvcl9l
YWNoX2NwdShjcHUpIHsKKwkJd3JpdGVfbG9ja19iaChwZXJfY3B1X3B0cih0YWJsZS0+bG9j
a19wLCBjcHUpKTsKKwl9CisjZWxzZQorCXdyaXRlX2xvY2tfYmgoJnRhYmxlLT5sb2NrKTsK
KyNlbmRpZgorfQorCitzdGF0aWMgdm9pZCBpcHRfdGFibGVfZ2xvYmFsX3VubG9jayhzdHJ1
Y3QgaXB0X3RhYmxlICp0YWJsZSkKK3sKKyNpZmRlZiBDT05GSUdfU01QCisJaW50IGNwdTsK
Kwlmb3JfZWFjaF9jcHUoY3B1KSB7CisJCXdyaXRlX3VubG9ja19iaChwZXJfY3B1X3B0cih0
YWJsZS0+bG9ja19wLCBjcHUpKTsKKwl9CisjZWxzZQorCXdyaXRlX3VubG9ja19iaCgmdGFi
bGUtPmxvY2spOworI2VuZGlmCit9CisKIHN0YXRpYyBzdHJ1Y3QgaXB0X3RhYmxlX2luZm8g
KgogcmVwbGFjZV90YWJsZShzdHJ1Y3QgaXB0X3RhYmxlICp0YWJsZSwKIAkgICAgICB1bnNp
Z25lZCBpbnQgbnVtX2NvdW50ZXJzLApAQCAtOTU0LDI0ICs5OTcsMjUgQEAKICNlbmRpZgog
CiAJLyogRG8gdGhlIHN1YnN0aXR1dGlvbi4gKi8KLQl3cml0ZV9sb2NrX2JoKCZ0YWJsZS0+
bG9jayk7CisJaXB0X3RhYmxlX2dsb2JhbF9sb2NrKHRhYmxlKTsKIAkvKiBDaGVjayBpbnNp
ZGUgbG9jazogaXMgdGhlIG9sZCBudW1iZXIgY29ycmVjdD8gKi8KIAlpZiAobnVtX2NvdW50
ZXJzICE9IHRhYmxlLT5wcml2YXRlLT5udW1iZXIpIHsKIAkJZHVwcmludGYoIm51bV9jb3Vu
dGVycyAhPSB0YWJsZS0+cHJpdmF0ZS0+bnVtYmVyICgldS8ldSlcbiIsCiAJCQkgbnVtX2Nv
dW50ZXJzLCB0YWJsZS0+cHJpdmF0ZS0+bnVtYmVyKTsKLQkJd3JpdGVfdW5sb2NrX2JoKCZ0
YWJsZS0+bG9jayk7CisJCWlwdF90YWJsZV9nbG9iYWxfdW5sb2NrKHRhYmxlKTsKIAkJKmVy
cm9yID0gLUVBR0FJTjsKIAkJcmV0dXJuIE5VTEw7CiAJfQogCW9sZGluZm8gPSB0YWJsZS0+
cHJpdmF0ZTsKIAl0YWJsZS0+cHJpdmF0ZSA9IG5ld2luZm87CiAJbmV3aW5mby0+aW5pdGlh
bF9lbnRyaWVzID0gb2xkaW5mby0+aW5pdGlhbF9lbnRyaWVzOwotCXdyaXRlX3VubG9ja19i
aCgmdGFibGUtPmxvY2spOworCWlwdF90YWJsZV9nbG9iYWxfdW5sb2NrKHRhYmxlKTsKIAog
CXJldHVybiBvbGRpbmZvOwogfQogCiAvKiBHZXRzIGNvdW50ZXJzLiAqLworI2lmZGVmIENP
TkZJR19TTVAKIHN0YXRpYyBpbmxpbmUgaW50CiBhZGRfZW50cnlfdG9fY291bnRlcihjb25z
dCBzdHJ1Y3QgaXB0X2VudHJ5ICplLAogCQkgICAgIHN0cnVjdCBpcHRfY291bnRlcnMgdG90
YWxbXSwKQEAgLTk4MiwyMiArMTAyNiw3MSBAQAogCSgqaSkrKzsKIAlyZXR1cm4gMDsKIH0K
KyNlbmRpZgorc3RhdGljIGlubGluZSBpbnQKK3NldF9lbnRyeV90b19jb3VudGVyKGNvbnN0
IHN0cnVjdCBpcHRfZW50cnkgKmUsCisJCSAgICAgc3RydWN0IGlwdF9jb3VudGVycyB0b3Rh
bFtdLAorCQkgICAgIHVuc2lnbmVkIGludCAqaSkKK3sKKwlTRVRfQ09VTlRFUih0b3RhbFsq
aV0sIGUtPmNvdW50ZXJzLmJjbnQsIGUtPmNvdW50ZXJzLnBjbnQpOworCisJKCppKSsrOwor
CXJldHVybiAwOworfQogCisvKgorICogaWYgdGFibGUgaXMgTlVMTCwgbm8gbG9ja2luZyBz
aG91bGQgYmUgZG9uZQorICovCiBzdGF0aWMgdm9pZAotZ2V0X2NvdW50ZXJzKGNvbnN0IHN0
cnVjdCBpcHRfdGFibGVfaW5mbyAqdCwKK2dldF9jb3VudGVycyhzdHJ1Y3QgaXB0X3RhYmxl
ICp0YWJsZSwKKwkJY29uc3Qgc3RydWN0IGlwdF90YWJsZV9pbmZvICp0LAogCSAgICAgc3Ry
dWN0IGlwdF9jb3VudGVycyBjb3VudGVyc1tdKQogewotCXVuc2lnbmVkIGludCBjcHU7CiAJ
dW5zaWduZWQgaW50IGk7CisjaWZkZWYgQ09ORklHX1NNUAorCXVuc2lnbmVkIGludCBjcHU7
CisJdW5zaWduZWQgaW50IGN1cmNwdTsKKworCWN1cmNwdSA9IGdldF9jcHUoKTsKKworCWlm
ICh0YWJsZSkKKwkJd3JpdGVfbG9ja19iaChwZXJfY3B1X3B0cih0YWJsZS0+bG9ja19wLCBj
dXJjcHUpKTsKKwlpID0gMDsKKwlJUFRfRU5UUllfSVRFUkFURSh0LT5lbnRyaWVzICsgVEFC
TEVfT0ZGU0VUKHQsIGN1cmNwdSksCisJCQkgIHQtPnNpemUsCisJCQkgIHNldF9lbnRyeV90
b19jb3VudGVyLAorCQkJICBjb3VudGVycywKKwkJCSAgJmkpOworCWlmICh0YWJsZSkKKwkJ
d3JpdGVfdW5sb2NrX2JoKHBlcl9jcHVfcHRyKHRhYmxlLT5sb2NrX3AsIGN1cmNwdSkpOwog
Ci0JZm9yIChjcHUgPSAwOyBjcHUgPCBudW1fcG9zc2libGVfY3B1cygpOyBjcHUrKykgewor
CWZvcl9lYWNoX2NwdShjcHUpIHsKKwkJaWYgKGNwdSA9PSBjdXJjcHUpCisJCQljb250aW51
ZTsKKwkJaWYgKHRhYmxlKQorCQkJd3JpdGVfbG9ja19iaChwZXJfY3B1X3B0cih0YWJsZS0+
bG9ja19wLCBjcHUpKTsKIAkJaSA9IDA7CiAJCUlQVF9FTlRSWV9JVEVSQVRFKHQtPmVudHJp
ZXMgKyBUQUJMRV9PRkZTRVQodCwgY3B1KSwKIAkJCQkgIHQtPnNpemUsCiAJCQkJICBhZGRf
ZW50cnlfdG9fY291bnRlciwKIAkJCQkgIGNvdW50ZXJzLAogCQkJCSAgJmkpOworCQlpZiAo
dGFibGUpCisJCQl3cml0ZV91bmxvY2tfYmgocGVyX2NwdV9wdHIodGFibGUtPmxvY2tfcCwg
Y3B1KSk7CiAJfQorCXB1dF9jcHUoKTsKKyNlbHNlCisJaWYgKHRhYmxlKQorCQl3cml0ZV9s
b2NrX2JoKCZ0YWJsZS0+bG9jayk7CisJaSA9IDA7CisJSVBUX0VOVFJZX0lURVJBVEUodC0+
ZW50cmllcywKKwkJCSAgdC0+c2l6ZSwKKwkJCSAgc2V0X2VudHJ5X3RvX2NvdW50ZXIsCisJ
CQkgIGNvdW50ZXJzLAorCQkJICAmaSk7CisJaWYgKHRhYmxlKQorCQl3cml0ZV91bmxvY2tf
YmgoJnRhYmxlLT5sb2NrKTsKKyNlbmRpZgogfQogCiBzdGF0aWMgaW50CkBAIC0xMDIwLDEw
ICsxMTEzLDcgQEAKIAkJcmV0dXJuIC1FTk9NRU07CiAKIAkvKiBGaXJzdCwgc3VtIGNvdW50
ZXJzLi4uICovCi0JbWVtc2V0KGNvdW50ZXJzLCAwLCBjb3VudGVyc2l6ZSk7Ci0Jd3JpdGVf
bG9ja19iaCgmdGFibGUtPmxvY2spOwotCWdldF9jb3VudGVycyh0YWJsZS0+cHJpdmF0ZSwg
Y291bnRlcnMpOwotCXdyaXRlX3VubG9ja19iaCgmdGFibGUtPmxvY2spOworCWdldF9jb3Vu
dGVycyh0YWJsZSwgdGFibGUtPnByaXZhdGUsIGNvdW50ZXJzKTsKIAogCS8qIC4uLiB0aGVu
IGNvcHkgZW50aXJlIHRoaW5nIGZyb20gQ1BVIDAuLi4gKi8KIAlpZiAoY29weV90b191c2Vy
KHVzZXJwdHIsIHRhYmxlLT5wcml2YXRlLT5lbnRyaWVzLCB0b3RhbF9zaXplKSAhPSAwKSB7
CkBAIC0xMTgzLDcgKzEyNzMsNyBAQAogCQltb2R1bGVfcHV0KHQtPm1lKTsKIAogCS8qIEdl
dCB0aGUgb2xkIGNvdW50ZXJzLiAqLwotCWdldF9jb3VudGVycyhvbGRpbmZvLCBjb3VudGVy
cyk7CisJZ2V0X2NvdW50ZXJzKE5VTEwsIG9sZGluZm8sIGNvdW50ZXJzKTsKIAkvKiBEZWNy
ZWFzZSBtb2R1bGUgdXNhZ2UgY291bnRzIGFuZCBmcmVlIHJlc291cmNlICovCiAJSVBUX0VO
VFJZX0lURVJBVEUob2xkaW5mby0+ZW50cmllcywgb2xkaW5mby0+c2l6ZSwgY2xlYW51cF9l
bnRyeSxOVUxMKTsKIAl2ZnJlZShvbGRpbmZvKTsKQEAgLTEyMzUsNiArMTMyNSw5IEBACiAJ
c3RydWN0IGlwdF9jb3VudGVyc19pbmZvIHRtcCwgKnBhZGRjOwogCXN0cnVjdCBpcHRfdGFi
bGUgKnQ7CiAJaW50IHJldCA9IDA7CisjaWZkZWYgQ09ORklHX1NNUAorCXJ3bG9ja190ICps
b2NrcDsKKyNlbmRpZgogCiAJaWYgKGNvcHlfZnJvbV91c2VyKCZ0bXAsIHVzZXIsIHNpemVv
Zih0bXApKSAhPSAwKQogCQlyZXR1cm4gLUVGQVVMVDsKQEAgLTEyNTcsNyArMTM1MCwxMiBA
QAogCQlnb3RvIGZyZWU7CiAJfQogCisjaWZkZWYgQ09ORklHX1NNUAorCWxvY2twID0gcGVy
X2NwdV9wdHIodC0+bG9ja19wLCBnZXRfY3B1KCkpOworCXdyaXRlX2xvY2tfYmgobG9ja3Ap
OworI2Vsc2UKIAl3cml0ZV9sb2NrX2JoKCZ0LT5sb2NrKTsKKyNlbmRpZgogCWlmICh0LT5w
cml2YXRlLT5udW1iZXIgIT0gcGFkZGMtPm51bV9jb3VudGVycykgewogCQlyZXQgPSAtRUlO
VkFMOwogCQlnb3RvIHVubG9ja191cF9mcmVlOwpAQCAtMTI3MCw3ICsxMzY4LDEyIEBACiAJ
CQkgIHBhZGRjLT5jb3VudGVycywKIAkJCSAgJmkpOwogIHVubG9ja191cF9mcmVlOgorI2lm
ZGVmIENPTkZJR19TTVAKKwl3cml0ZV91bmxvY2tfYmgobG9ja3ApOworCXB1dF9jcHUoKTsK
KyNlbHNlCiAJd3JpdGVfdW5sb2NrX2JoKCZ0LT5sb2NrKTsKKyNlbmRpZgogCXVwKCZpcHRf
bXV0ZXgpOwogCW1vZHVsZV9wdXQodC0+bWUpOwogIGZyZWU6CkBAIC0xNDU2LDcgKzE1NTks
MTcgQEAKIAlzdHJ1Y3QgaXB0X3RhYmxlX2luZm8gKm5ld2luZm87CiAJc3RhdGljIHN0cnVj
dCBpcHRfdGFibGVfaW5mbyBib290c3RyYXAKIAkJPSB7IDAsIDAsIDAsIHsgMCB9LCB7IDAg
fSwgeyB9IH07Ci0KKyNpZmRlZiBDT05GSUdfU01QCisJaW50IGNwdTsKKwlpZiAoIXRhYmxl
LT5sb2NrX3ApIHsKKwkJaWYgKCh0YWJsZS0+bG9ja19wID0gYWxsb2NfcGVyY3B1KHJ3bG9j
a190KSkgPT0gTlVMTCkKKwkJCXJldHVybiAtRU5PTUVNOworCX0KKwlmb3JfZWFjaF9jcHUo
Y3B1KQorCQlyd2xvY2tfaW5pdChwZXJfY3B1X3B0cih0YWJsZS0+bG9ja19wLCBjcHUpKTsK
KyNlbHNlCisJcndsb2NrX2luaXQoJnRhYmxlLT5sb2NrKTsKKyNlbmRpZgogCW5ld2luZm8g
PSB2bWFsbG9jKHNpemVvZihzdHJ1Y3QgaXB0X3RhYmxlX2luZm8pCiAJCQkgICsgU01QX0FM
SUdOKHJlcGwtPnNpemUpICogbnVtX3Bvc3NpYmxlX2NwdXMoKSk7CiAJaWYgKCFuZXdpbmZv
KQpAQCAtMTQ5Nyw3ICsxNjEwLDYgQEAKIAkvKiBzYXZlIG51bWJlciBvZiBpbml0aWFsIGVu
dHJpZXMgKi8KIAl0YWJsZS0+cHJpdmF0ZS0+aW5pdGlhbF9lbnRyaWVzID0gdGFibGUtPnBy
aXZhdGUtPm51bWJlcjsKIAotCXJ3bG9ja19pbml0KCZ0YWJsZS0+bG9jayk7CiAJbGlzdF9w
cmVwZW5kKCZpcHRfdGFibGVzLCB0YWJsZSk7CiAKICB1bmxvY2s6CkBAIC0xNTE5LDYgKzE2
MzEsMTAgQEAKIAlJUFRfRU5UUllfSVRFUkFURSh0YWJsZS0+cHJpdmF0ZS0+ZW50cmllcywg
dGFibGUtPnByaXZhdGUtPnNpemUsCiAJCQkgIGNsZWFudXBfZW50cnksIE5VTEwpOwogCXZm
cmVlKHRhYmxlLT5wcml2YXRlKTsKKyNpZmRlZiBDT05GSUdfU01QCisJZnJlZV9wZXJjcHUo
dGFibGUtPmxvY2tfcCk7CisJdGFibGUtPmxvY2tfcCA9IE5VTEw7CisjZW5kaWYKIH0KIAog
LyogUmV0dXJucyAxIGlmIHRoZSBwb3J0IGlzIG1hdGNoZWQgYnkgdGhlIHJhbmdlLCAwIG90
aGVyd2lzZSAqLwo=
--------------030503000403080601080704--
