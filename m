Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S265191AbUATG0k (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 20 Jan 2004 01:26:40 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S265193AbUATG0k
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 20 Jan 2004 01:26:40 -0500
Received: from citrine.spiritone.com ([216.99.193.133]:14558 "EHLO
	citrine.spiritone.com") by vger.kernel.org with ESMTP
	id S265191AbUATG0b (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 20 Jan 2004 01:26:31 -0500
Date: Mon, 19 Jan 2004 22:25:23 -0800
From: "Martin J. Bligh" <mbligh@aracnet.com>
To: Jack Steiner <steiner@sgi.com>, jes@trained-monkey.org,
       linux-kernel@vger.kernel.org
cc: Jesse Barnes <jbarnes@sgi.com>
Subject: Re: [patch] increse MAX_NR_MEMBLKS to same as MAX_NUMNODES on NUMA
Message-ID: <11450000.1074579922@[10.10.2.4]>
In-Reply-To: <20040120031222.GA15435@sgi.com>
References: <E1AiZ5h-00043I-00@jaguar.mkp.net> <4990000.1074542883@[10.10.2.4]> <20040119224535.GA12728@sgi.com> <20040120022452.GA27294@sgi.com> <20040120031222.GA15435@sgi.com>
X-Mailer: Mulberry/2.2.1 (Linux/x86)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="==========1815739384=========="
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

--==========1815739384==========
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

> On Mon, Jan 19, 2004 at 06:24:52PM -0800, Jesse Barnes wrote:
>> On Mon, Jan 19, 2004 at 04:45:35PM -0600, Jack Steiner wrote:
>> > On Mon, Jan 19, 2004 at 12:08:04PM -0800, Martin J. Bligh wrote:
>> > > > Since we now support # of CPUs > BITS_PER_LONG with cpumask_t it would
>> > > > be nice to be able to support more than BITS_PER_LONG memory blocks.
>> > > 
>> > > Nothing uses them. We're probably better off just removing them altogether.
>> > 
>> > I dont understand.
>> > node_memblk[] is used on IA64 in arch/ia64/mm/discontig.c (& other places too).
>> 
>> I think Martin is referring to the memblk_*line() functions and the fact
>> that memblks are exported via sysfs to userspace.  That API hasn't
>> proven very useful so far since it's really waiting for memory hot
>> add/remove.  Of course, we'll still need structures to support that for
>> the low level arch specific discontig code, so any patch that killed
>> memblks in sysfs and elsewhere would have to take that into account...
>> (In particular, node_memblk[] is filled out by the ACPI SRAT parsing
>> code and use for discontig init and physical->node id conversion.)
>> 
>> Jesse
> 
> OK, that makes sense.

Could one of you test this patch for me? Probably just a build would do fine.

Thanks,

M.

--==========1815739384==========
Content-Type: application/octet-stream; name=no_memblk
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=no_memblk; size=14724

ZGlmZiAtYXVycE4gLVggL2hvbWUvZmxldGNoLy5kaWZmLmV4Y2x1ZGUgdmlyZ2luL2FyY2gvaTM4
Ni9tYWNoLWRlZmF1bHQvdG9wb2xvZ3kuYyBub19tZW1ibGsvYXJjaC9pMzg2L21hY2gtZGVmYXVs
dC90b3BvbG9neS5jCi0tLSB2aXJnaW4vYXJjaC9pMzg2L21hY2gtZGVmYXVsdC90b3BvbG9neS5j
CU1vbiBEZWMgMjMgMjM6MDE6NDUgMjAwMgorKysgbm9fbWVtYmxrL2FyY2gvaTM4Ni9tYWNoLWRl
ZmF1bHQvdG9wb2xvZ3kuYwlNb24gSmFuIDE5IDIxOjQ2OjAwIDIwMDQKQEAgLTM0LDEwICszNCw4
IEBAIHN0cnVjdCBpMzg2X2NwdSBjcHVfZGV2aWNlc1tOUl9DUFVTXTsKICNpZmRlZiBDT05GSUdf
TlVNQQogI2luY2x1ZGUgPGxpbnV4L21tem9uZS5oPgogI2luY2x1ZGUgPGFzbS9ub2RlLmg+Ci0j
aW5jbHVkZSA8YXNtL21lbWJsay5oPgogCiBzdHJ1Y3QgaTM4Nl9ub2RlIG5vZGVfZGV2aWNlc1tN
QVhfTlVNTk9ERVNdOwotc3RydWN0IGkzODZfbWVtYmxrIG1lbWJsa19kZXZpY2VzW01BWF9OUl9N
RU1CTEtTXTsKIAogc3RhdGljIGludCBfX2luaXQgdG9wb2xvZ3lfaW5pdCh2b2lkKQogewpAQCAt
NDcsOCArNDUsNiBAQCBzdGF0aWMgaW50IF9faW5pdCB0b3BvbG9neV9pbml0KHZvaWQpCiAJCWFy
Y2hfcmVnaXN0ZXJfbm9kZShpKTsKIAlmb3IgKGkgPSAwOyBpIDwgTlJfQ1BVUzsgaSsrKQogCQlp
ZiAoY3B1X3Bvc3NpYmxlKGkpKSBhcmNoX3JlZ2lzdGVyX2NwdShpKTsKLQlmb3IgKGkgPSAwOyBp
IDwgbnVtX29ubGluZV9tZW1ibGtzKCk7IGkrKykKLQkJYXJjaF9yZWdpc3Rlcl9tZW1ibGsoaSk7
CiAJcmV0dXJuIDA7CiB9CiAKZGlmZiAtYXVycE4gLVggL2hvbWUvZmxldGNoLy5kaWZmLmV4Y2x1
ZGUgdmlyZ2luL2FyY2gvaTM4Ni9tYWNoLWVzNzAwMC90b3BvbG9neS5jIG5vX21lbWJsay9hcmNo
L2kzODYvbWFjaC1lczcwMDAvdG9wb2xvZ3kuYwotLS0gdmlyZ2luL2FyY2gvaTM4Ni9tYWNoLWVz
NzAwMC90b3BvbG9neS5jCVR1ZSBKdW4gMTcgMjA6NTg6NTEgMjAwMworKysgbm9fbWVtYmxrL2Fy
Y2gvaTM4Ni9tYWNoLWVzNzAwMC90b3BvbG9neS5jCU1vbiBKYW4gMTkgMjE6NDY6MzIgMjAwNApA
QCAtMzQsMTAgKzM0LDggQEAgc3RydWN0IGkzODZfY3B1IGNwdV9kZXZpY2VzW05SX0NQVVNdOwog
I2lmZGVmIENPTkZJR19OVU1BCiAjaW5jbHVkZSA8bGludXgvbW16b25lLmg+CiAjaW5jbHVkZSA8
YXNtL25vZGUuaD4KLSNpbmNsdWRlIDxhc20vbWVtYmxrLmg+CiAKIHN0cnVjdCBpMzg2X25vZGUg
bm9kZV9kZXZpY2VzW01BWF9OVU1OT0RFU107Ci1zdHJ1Y3QgaTM4Nl9tZW1ibGsgbWVtYmxrX2Rl
dmljZXNbTUFYX05SX01FTUJMS1NdOwogCiBzdGF0aWMgaW50IF9faW5pdCB0b3BvbG9neV9pbml0
KHZvaWQpCiB7CkBAIC00Nyw4ICs0NSw2IEBAIHN0YXRpYyBpbnQgX19pbml0IHRvcG9sb2d5X2lu
aXQodm9pZCkKIAkJYXJjaF9yZWdpc3Rlcl9ub2RlKGkpOwogCWZvciAoaSA9IDA7IGkgPCBOUl9D
UFVTOyBpKyspCiAJCWlmIChjcHVfcG9zc2libGUoaSkpIGFyY2hfcmVnaXN0ZXJfY3B1KGkpOwot
CWZvciAoaSA9IDA7IGkgPCBudW1fb25saW5lX21lbWJsa3MoKTsgaSsrKQotCQlhcmNoX3JlZ2lz
dGVyX21lbWJsayhpKTsKIAlyZXR1cm4gMDsKIH0KIApkaWZmIC1hdXJwTiAtWCAvaG9tZS9mbGV0
Y2gvLmRpZmYuZXhjbHVkZSB2aXJnaW4vYXJjaC9pYTY0L21tL251bWEuYyBub19tZW1ibGsvYXJj
aC9pYTY0L21tL251bWEuYwotLS0gdmlyZ2luL2FyY2gvaWE2NC9tbS9udW1hLmMJTW9uIE5vdiAx
NyAxODoyOTo0OCAyMDAzCisrKyBub19tZW1ibGsvYXJjaC9pYTY0L21tL251bWEuYwlNb24gSmFu
IDE5IDIxOjU2OjA2IDIwMDQKQEAgLTEzLDE0ICsxMywxMiBAQAogI2luY2x1ZGUgPGxpbnV4L2Nv
bmZpZy5oPgogI2luY2x1ZGUgPGxpbnV4L2NwdS5oPgogI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5o
PgotI2luY2x1ZGUgPGxpbnV4L21lbWJsay5oPgogI2luY2x1ZGUgPGxpbnV4L21tLmg+CiAjaW5j
bHVkZSA8bGludXgvbm9kZS5oPgogI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KICNpbmNsdWRlIDxs
aW51eC9ib290bWVtLmg+CiAjaW5jbHVkZSA8YXNtL251bWEuaD4KIAotc3RhdGljIHN0cnVjdCBt
ZW1ibGsgKnN5c2ZzX21lbWJsa3M7CiBzdGF0aWMgc3RydWN0IG5vZGUgKnN5c2ZzX25vZGVzOwog
c3RhdGljIHN0cnVjdCBjcHUgKnN5c2ZzX2NwdXM7CiAKQEAgLTYyLDE4ICs2MCw4IEBAIHN0YXRp
YyBpbnQgX19pbml0IHRvcG9sb2d5X2luaXQodm9pZCkKIAl9CiAJbWVtc2V0KHN5c2ZzX25vZGVz
LCAwLCBzaXplb2Yoc3RydWN0IG5vZGUpICogbnVtbm9kZXMpOwogCi0Jc3lzZnNfbWVtYmxrcyA9
IGttYWxsb2Moc2l6ZW9mKHN0cnVjdCBtZW1ibGspICogbnVtX21lbWJsa3MsCi0JCQkJR0ZQX0tF
Uk5FTCk7Ci0JaWYgKCFzeXNmc19tZW1ibGtzKSB7Ci0JCWtmcmVlKHN5c2ZzX25vZGVzKTsKLQkJ
ZXJyID0gLUVOT01FTTsKLQkJZ290byBvdXQ7Ci0JfQotCW1lbXNldChzeXNmc19tZW1ibGtzLCAw
LCBzaXplb2Yoc3RydWN0IG1lbWJsaykgKiBudW1fbWVtYmxrcyk7Ci0KIAlzeXNmc19jcHVzID0g
a21hbGxvYyhzaXplb2Yoc3RydWN0IGNwdSkgKiBOUl9DUFVTLCBHRlBfS0VSTkVMKTsKIAlpZiAo
IXN5c2ZzX2NwdXMpIHsKLQkJa2ZyZWUoc3lzZnNfbWVtYmxrcyk7CiAJCWtmcmVlKHN5c2ZzX25v
ZGVzKTsKIAkJZXJyID0gLUVOT01FTTsKIAkJZ290byBvdXQ7CkBAIC04MiwxMSArNzAsNiBAQCBz
dGF0aWMgaW50IF9faW5pdCB0b3BvbG9neV9pbml0KHZvaWQpCiAKIAlmb3IgKGkgPSAwOyBpIDwg
bnVtbm9kZXM7IGkrKykKIAkJaWYgKChlcnIgPSByZWdpc3Rlcl9ub2RlKCZzeXNmc19ub2Rlc1tp
XSwgaSwgMCkpKQotCQkJZ290byBvdXQ7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgbnVtX21lbWJsa3M7
IGkrKykKLQkJaWYgKChlcnIgPSByZWdpc3Rlcl9tZW1ibGsoJnN5c2ZzX21lbWJsa3NbaV0sIGks
Ci0JCQkJCSAgICZzeXNmc19ub2Rlc1ttZW1ibGtfdG9fbm9kZShpKV0pKSkKIAkJCWdvdG8gb3V0
OwogCiAJZm9yIChpID0gMDsgaSA8IE5SX0NQVVM7IGkrKykKZGlmZiAtYXVycE4gLVggL2hvbWUv
ZmxldGNoLy5kaWZmLmV4Y2x1ZGUgdmlyZ2luL2RyaXZlcnMvYmFzZS9NYWtlZmlsZSBub19tZW1i
bGsvZHJpdmVycy9iYXNlL01ha2VmaWxlCi0tLSB2aXJnaW4vZHJpdmVycy9iYXNlL01ha2VmaWxl
CVR1ZSBTZXAgIDIgMDk6NTU6NDQgMjAwMworKysgbm9fbWVtYmxrL2RyaXZlcnMvYmFzZS9NYWtl
ZmlsZQlNb24gSmFuIDE5IDIxOjU2OjM1IDIwMDQKQEAgLTUsNCArNSw0IEBAIG9iai15CQkJOj0g
Y29yZS5vIHN5cy5vIGludGVyZmFjZS5vIGJ1cy4KIAkJCSAgIGNwdS5vIGZpcm13YXJlLm8gaW5p
dC5vIG1hcC5vCiBvYmoteQkJCSs9IHBvd2VyLwogb2JqLSQoQ09ORklHX0ZXX0xPQURFUikJKz0g
ZmlybXdhcmVfY2xhc3Mubwotb2JqLSQoQ09ORklHX05VTUEpCSs9IG5vZGUubyAgbWVtYmxrLm8K
K29iai0kKENPTkZJR19OVU1BKQkrPSBub2RlLm8KZGlmZiAtYXVycE4gLVggL2hvbWUvZmxldGNo
Ly5kaWZmLmV4Y2x1ZGUgdmlyZ2luL2RyaXZlcnMvYmFzZS9tZW1ibGsuYyBub19tZW1ibGsvZHJp
dmVycy9iYXNlL21lbWJsay5jCi0tLSB2aXJnaW4vZHJpdmVycy9iYXNlL21lbWJsay5jCU1vbiBO
b3YgMTcgMTg6Mjg6MTAgMjAwMworKysgbm9fbWVtYmxrL2RyaXZlcnMvYmFzZS9tZW1ibGsuYwlX
ZWQgRGVjIDMxIDE2OjAwOjAwIDE5NjkKQEAgLTEsNDMgKzAsMCBAQAotLyoKLSAqIGRyaXZlcnMv
YmFzZS9tZW1ibGsuYyAtIGJhc2ljIE1lbW9yeSBCbG9jayBjbGFzcyBzdXBwb3J0Ci0gKi8KLQot
I2luY2x1ZGUgPGxpbnV4L21vZHVsZS5oPgotI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KLSNpbmNs
dWRlIDxsaW51eC9tZW1ibGsuaD4KLSNpbmNsdWRlIDxsaW51eC9ub2RlLmg+Ci0jaW5jbHVkZSA8
bGludXgvdG9wb2xvZ3kuaD4KLQotCi1zdGF0aWMgc3RydWN0IHN5c2Rldl9jbGFzcyBtZW1ibGtf
Y2xhc3MgPSB7Ci0Jc2V0X2tzZXRfbmFtZSgibWVtYmxrIiksCi19OwotCi0vKgotICogcmVnaXN0
ZXJfbWVtYmxrIC0gU2V0dXAgYSBkcml2ZXJmcyBkZXZpY2UgZm9yIGEgTWVtQmxrCi0gKiBAbnVt
IC0gTWVtQmxrIG51bWJlciB0byB1c2Ugd2hlbiBjcmVhdGluZyB0aGUgZGV2aWNlLgotICoKLSAq
IEluaXRpYWxpemUgYW5kIHJlZ2lzdGVyIHRoZSBNZW1CbGsgZGV2aWNlLgotICovCi1pbnQgX19p
bml0IHJlZ2lzdGVyX21lbWJsayhzdHJ1Y3QgbWVtYmxrICptZW1ibGssIGludCBudW0sIHN0cnVj
dCBub2RlICpyb290KQotewotCWludCBlcnJvcjsKLQotCW1lbWJsay0+bm9kZV9pZCA9IG1lbWJs
a190b19ub2RlKG51bSk7Ci0JbWVtYmxrLT5zeXNkZXYuY2xzID0gJm1lbWJsa19jbGFzcywKLQlt
ZW1ibGstPnN5c2Rldi5pZCA9IG51bTsKLQotCWVycm9yID0gc3lzX2RldmljZV9yZWdpc3Rlcigm
bWVtYmxrLT5zeXNkZXYpOwotCWlmICghZXJyb3IpIAotCQllcnJvciA9IHN5c2ZzX2NyZWF0ZV9s
aW5rKCZyb290LT5zeXNkZXYua29iaiwKLQkJCQkJICAmbWVtYmxrLT5zeXNkZXYua29iaiwKLQkJ
CQkJICBrb2JqZWN0X25hbWUoJm1lbWJsay0+c3lzZGV2LmtvYmopKTsKLQlyZXR1cm4gZXJyb3I7
Ci19Ci0KLQotaW50IF9faW5pdCByZWdpc3Rlcl9tZW1ibGtfdHlwZSh2b2lkKQotewotCXJldHVy
biBzeXNkZXZfY2xhc3NfcmVnaXN0ZXIoJm1lbWJsa19jbGFzcyk7Ci19Ci1wb3N0Y29yZV9pbml0
Y2FsbChyZWdpc3Rlcl9tZW1ibGtfdHlwZSk7CmRpZmYgLWF1cnBOIC1YIC9ob21lL2ZsZXRjaC8u
ZGlmZi5leGNsdWRlIHZpcmdpbi9pbmNsdWRlL2FzbS1hbHBoYS90b3BvbG9neS5oIG5vX21lbWJs
ay9pbmNsdWRlL2FzbS1hbHBoYS90b3BvbG9neS5oCi0tLSB2aXJnaW4vaW5jbHVkZS9hc20tYWxw
aGEvdG9wb2xvZ3kuaAlUaHUgRmViIDEzIDExOjA4OjEzIDIwMDMKKysrIG5vX21lbWJsay9pbmNs
dWRlL2FzbS1hbHBoYS90b3BvbG9neS5oCU1vbiBKYW4gMTkgMjE6NTg6MzYgMjAwNApAQCAtNDAs
OSArNDAsNiBAQCBzdGF0aWMgaW5saW5lIGludCBub2RlX3RvX2NwdW1hc2soaW50IG5vCiAJcmV0
dXJuIG5vZGVfY3B1X21hc2s7CiB9CiAKLSMgZGVmaW5lIG5vZGVfdG9fbWVtYmxrKG5vZGUpCQko
bm9kZSkKLSMgZGVmaW5lIG1lbWJsa190b19ub2RlKG1lbWJsaykJKG1lbWJsaykKLQogLyogQ3Jv
c3Mtbm9kZSBsb2FkIGJhbGFuY2luZyBpbnRlcnZhbC4gKi8KICMgZGVmaW5lIE5PREVfQkFMQU5D
RV9SQVRFIDEwCiAKZGlmZiAtYXVycE4gLVggL2hvbWUvZmxldGNoLy5kaWZmLmV4Y2x1ZGUgdmly
Z2luL2luY2x1ZGUvYXNtLWdlbmVyaWMvdG9wb2xvZ3kuaCBub19tZW1ibGsvaW5jbHVkZS9hc20t
Z2VuZXJpYy90b3BvbG9neS5oCi0tLSB2aXJnaW4vaW5jbHVkZS9hc20tZ2VuZXJpYy90b3BvbG9n
eS5oCVdlZCBNYXIgIDUgMDc6Mzc6MDYgMjAwMworKysgbm9fbWVtYmxrL2luY2x1ZGUvYXNtLWdl
bmVyaWMvdG9wb2xvZ3kuaAlNb24gSmFuIDE5IDIxOjU2OjU5IDIwMDQKQEAgLTMyLDkgKzMyLDYg
QEAKICNpZm5kZWYgY3B1X3RvX25vZGUKICNkZWZpbmUgY3B1X3RvX25vZGUoY3B1KQkoMCkKICNl
bmRpZgotI2lmbmRlZiBtZW1ibGtfdG9fbm9kZQotI2RlZmluZSBtZW1ibGtfdG9fbm9kZShtZW1i
bGspCSgwKQotI2VuZGlmCiAjaWZuZGVmIHBhcmVudF9ub2RlCiAjZGVmaW5lIHBhcmVudF9ub2Rl
KG5vZGUpCSgwKQogI2VuZGlmCkBAIC00Myw5ICs0MCw2IEBACiAjZW5kaWYKICNpZm5kZWYgbm9k
ZV90b19maXJzdF9jcHUKICNkZWZpbmUgbm9kZV90b19maXJzdF9jcHUobm9kZSkJKDApCi0jZW5k
aWYKLSNpZm5kZWYgbm9kZV90b19tZW1ibGsKLSNkZWZpbmUgbm9kZV90b19tZW1ibGsobm9kZSkJ
KDApCiAjZW5kaWYKICNpZm5kZWYgcGNpYnVzX3RvX2NwdW1hc2sKICNkZWZpbmUgcGNpYnVzX3Rv
X2NwdW1hc2soYnVzKQkoY3B1X29ubGluZV9tYXApCmRpZmYgLWF1cnBOIC1YIC9ob21lL2ZsZXRj
aC8uZGlmZi5leGNsdWRlIHZpcmdpbi9pbmNsdWRlL2FzbS1pMzg2L21lbWJsay5oIG5vX21lbWJs
ay9pbmNsdWRlL2FzbS1pMzg2L21lbWJsay5oCi0tLSB2aXJnaW4vaW5jbHVkZS9hc20taTM4Ni9t
ZW1ibGsuaAlTYXQgSnVuIDE0IDE4OjM3OjM1IDIwMDMKKysrIG5vX21lbWJsay9pbmNsdWRlL2Fz
bS1pMzg2L21lbWJsay5oCVdlZCBEZWMgMzEgMTY6MDA6MDAgMTk2OQpAQCAtMSwyMyArMCwwIEBA
Ci0jaWZuZGVmIF9BU01fSTM4Nl9NRU1CTEtfSF8KLSNkZWZpbmUgX0FTTV9JMzg2X01FTUJMS19I
XwotCi0jaW5jbHVkZSA8bGludXgvZGV2aWNlLmg+Ci0jaW5jbHVkZSA8bGludXgvbW16b25lLmg+
Ci0jaW5jbHVkZSA8bGludXgvbWVtYmxrLmg+Ci0jaW5jbHVkZSA8bGludXgvdG9wb2xvZ3kuaD4K
LQotI2luY2x1ZGUgPGFzbS9ub2RlLmg+Ci0KLXN0cnVjdCBpMzg2X21lbWJsayB7Ci0Jc3RydWN0
IG1lbWJsayBtZW1ibGs7Ci19OwotZXh0ZXJuIHN0cnVjdCBpMzg2X21lbWJsayBtZW1ibGtfZGV2
aWNlc1tNQVhfTlJfTUVNQkxLU107Ci0KLXN0YXRpYyBpbmxpbmUgaW50IGFyY2hfcmVnaXN0ZXJf
bWVtYmxrKGludCBudW0pewotCWludCBwX25vZGUgPSBtZW1ibGtfdG9fbm9kZShudW0pOwotCi0J
cmV0dXJuIHJlZ2lzdGVyX21lbWJsaygmbWVtYmxrX2RldmljZXNbbnVtXS5tZW1ibGssIG51bSwg
Ci0JCQkJJm5vZGVfZGV2aWNlc1twX25vZGVdLm5vZGUpOwotfQotCi0jZW5kaWYgLyogX0FTTV9J
Mzg2X01FTUJMS19IXyAqLwpkaWZmIC1hdXJwTiAtWCAvaG9tZS9mbGV0Y2gvLmRpZmYuZXhjbHVk
ZSB2aXJnaW4vaW5jbHVkZS9hc20taTM4Ni90b3BvbG9neS5oIG5vX21lbWJsay9pbmNsdWRlL2Fz
bS1pMzg2L3RvcG9sb2d5LmgKLS0tIHZpcmdpbi9pbmNsdWRlL2FzbS1pMzg2L3RvcG9sb2d5LmgJ
VHVlIFNlcCAgMiAwOTo1NTo1MyAyMDAzCisrKyBub19tZW1ibGsvaW5jbHVkZS9hc20taTM4Ni90
b3BvbG9neS5oCU1vbiBKYW4gMTkgMjE6NTg6NTYgMjAwNApAQCAtNDMsOSArNDMsNiBAQCBzdGF0
aWMgaW5saW5lIGludCBjcHVfdG9fbm9kZShpbnQgY3B1KQogCXJldHVybiBjcHVfMl9ub2RlW2Nw
dV07CiB9CiAKLS8qIFJldHVybnMgdGhlIG51bWJlciBvZiB0aGUgbm9kZSBjb250YWluaW5nIE1l
bUJsayAnbWVtYmxrJyAqLwotI2RlZmluZSBtZW1ibGtfdG9fbm9kZShtZW1ibGspIChtZW1ibGsp
Ci0KIC8qIFJldHVybnMgdGhlIG51bWJlciBvZiB0aGUgbm9kZSBjb250YWluaW5nIE5vZGUgJ25v
ZGUnLiAgVGhpcyBhcmNoaXRlY3R1cmUgaXMgZmxhdCwgCiAgICBzbyBpdCBpcyBhIHByZXR0eSBz
aW1wbGUgZnVuY3Rpb24hICovCiAjZGVmaW5lIHBhcmVudF9ub2RlKG5vZGUpIChub2RlKQpAQCAt
NjIsOSArNTksNiBAQCBzdGF0aWMgaW5saW5lIGludCBub2RlX3RvX2ZpcnN0X2NwdShpbnQgCiAJ
Y3B1bWFza190IG1hc2sgPSBub2RlX3RvX2NwdW1hc2sobm9kZSk7CiAJcmV0dXJuIGZpcnN0X2Nw
dShtYXNrKTsKIH0KLQotLyogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHRoZSBmaXJzdCBNZW1CbGsg
b24gTm9kZSAnbm9kZScgKi8KLSNkZWZpbmUgbm9kZV90b19tZW1ibGsobm9kZSkgKG5vZGUpCiAK
IC8qIFJldHVybnMgdGhlIG51bWJlciBvZiB0aGUgbm9kZSBjb250YWluaW5nIFBDSSBidXMgJ2J1
cycgKi8KIHN0YXRpYyBpbmxpbmUgY3B1bWFza190IHBjaWJ1c190b19jcHVtYXNrKGludCBidXMp
CmRpZmYgLWF1cnBOIC1YIC9ob21lL2ZsZXRjaC8uZGlmZi5leGNsdWRlIHZpcmdpbi9pbmNsdWRl
L2FzbS1pYTY0L21tem9uZS5oIG5vX21lbWJsay9pbmNsdWRlL2FzbS1pYTY0L21tem9uZS5oCi0t
LSB2aXJnaW4vaW5jbHVkZS9hc20taWE2NC9tbXpvbmUuaAlNb24gTm92IDE3IDE4OjI5OjQzIDIw
MDMKKysrIG5vX21lbWJsay9pbmNsdWRlL2FzbS1pYTY0L21tem9uZS5oCU1vbiBKYW4gMTkgMjE6
NTg6MDAgMjAwNApAQCAtMjAsMTEgKzIwLDkgQEAKICNpZmRlZiBDT05GSUdfSUE2NF9ESUcgLyog
RElHIHN5c3RlbXMgYXJlIHNtYWxsICovCiAjIGRlZmluZSBNQVhfUEhZU05PREVfSUQJOAogIyBk
ZWZpbmUgTlJfTk9ERVMJCTgKLSMgZGVmaW5lIE5SX01FTUJMS1MJCShOUl9OT0RFUyAqIDMyKQog
I2Vsc2UgLyogc24yIGlzIHRoZSBiaWdnZXN0IGNhc2UsIHNvIHdlIHVzZSB0aGF0IGlmICFESUcg
Ki8KICMgZGVmaW5lIE1BWF9QSFlTTk9ERV9JRAkyMDQ4CiAjIGRlZmluZSBOUl9OT0RFUwkJMjU2
Ci0jIGRlZmluZSBOUl9NRU1CTEtTCQkoTlJfTk9ERVMpCiAjZW5kaWYKIAogZXh0ZXJuIHVuc2ln
bmVkIGxvbmcgbWF4X2xvd19wZm47CmRpZmYgLWF1cnBOIC1YIC9ob21lL2ZsZXRjaC8uZGlmZi5l
eGNsdWRlIHZpcmdpbi9pbmNsdWRlL2FzbS1pYTY0L3RvcG9sb2d5Lmggbm9fbWVtYmxrL2luY2x1
ZGUvYXNtLWlhNjQvdG9wb2xvZ3kuaAotLS0gdmlyZ2luL2luY2x1ZGUvYXNtLWlhNjQvdG9wb2xv
Z3kuaAlXZWQgSnVsICAyIDIxOjU5OjEyIDIwMDMKKysrIG5vX21lbWJsay9pbmNsdWRlL2FzbS1p
YTY0L3RvcG9sb2d5LmgJTW9uIEphbiAxOSAyMTo1MzowMCAyMDA0CkBAIC0yOSwxNSArMjksNiBA
QAogI2RlZmluZSBub2RlX3RvX2NwdW1hc2sobm9kZSkgKG5vZGVfdG9fY3B1X21hc2tbbm9kZV0p
CiAKIC8qCi0gKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgdGhlIG5vZGUgY29udGFpbmluZyBNZW1C
bGsgJ21lbWJsaycKLSAqLwotI2lmZGVmIENPTkZJR19BQ1BJX05VTUEKLSNkZWZpbmUgbWVtYmxr
X3RvX25vZGUobWVtYmxrKSAobm9kZV9tZW1ibGtbbWVtYmxrXS5uaWQpCi0jZWxzZQotI2RlZmlu
ZSBtZW1ibGtfdG9fbm9kZShtZW1ibGspIChtZW1ibGspCi0jZW5kaWYKLQotLyoKICAqIFJldHVy
bnMgdGhlIG51bWJlciBvZiB0aGUgbm9kZSBjb250YWluaW5nIE5vZGUgJ25pZCcuCiAgKiBOb3Qg
aW1wbGVtZW50ZWQgaGVyZS4gTXVsdGktbGV2ZWwgaGllcmFyY2hpZXMgZGV0ZWN0ZWQgd2l0aAog
ICogdGhlIGhlbHAgb2Ygbm9kZV9kaXN0YW5jZSgpLgpAQCAtNDgsMTIgKzM5LDYgQEAKICAqIFJl
dHVybnMgdGhlIG51bWJlciBvZiB0aGUgZmlyc3QgQ1BVIG9uIE5vZGUgJ25vZGUnLgogICovCiAj
ZGVmaW5lIG5vZGVfdG9fZmlyc3RfY3B1KG5vZGUpIChfX2Zmcyhub2RlX3RvX2NwdW1hc2sobm9k
ZSkpKQotCi0vKgotICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHRoZSBmaXJzdCBNZW1CbGsgb24g
Tm9kZSAnbm9kZScKLSAqIFNob3VsZCBiZSBmaXhlZCB3aGVuIElBNjQgZGlzY29udGlnbWVtIGdv
ZXMgaW4uCi0gKi8KLSNkZWZpbmUgbm9kZV90b19tZW1ibGsobm9kZSkgKG5vZGUpCiAKIC8qIENy
b3NzLW5vZGUgbG9hZCBiYWxhbmNpbmcgaW50ZXJ2YWwuICovCiAjZGVmaW5lIE5PREVfQkFMQU5D
RV9SQVRFIDEwCmRpZmYgLWF1cnBOIC1YIC9ob21lL2ZsZXRjaC8uZGlmZi5leGNsdWRlIHZpcmdp
bi9pbmNsdWRlL2FzbS1wcGM2NC90b3BvbG9neS5oIG5vX21lbWJsay9pbmNsdWRlL2FzbS1wcGM2
NC90b3BvbG9neS5oCi0tLSB2aXJnaW4vaW5jbHVkZS9hc20tcHBjNjQvdG9wb2xvZ3kuaAlNb24g
Tm92IDE3IDE4OjI4OjU4IDIwMDMKKysrIG5vX21lbWJsay9pbmNsdWRlL2FzbS1wcGM2NC90b3Bv
bG9neS5oCU1vbiBKYW4gMTkgMjE6NTA6NDAgMjAwNApAQCAtMjAsOCArMjAsNiBAQCBzdGF0aWMg
aW5saW5lIGludCBjcHVfdG9fbm9kZShpbnQgY3B1KQogCXJldHVybiBub2RlOwogfQogCi0jZGVm
aW5lIG1lbWJsa190b19ub2RlKG1lbWJsaykJKG1lbWJsaykKLQogI2RlZmluZSBwYXJlbnRfbm9k
ZShub2RlKQkobm9kZSkKIAogc3RhdGljIGlubGluZSBjcHVtYXNrX3Qgbm9kZV90b19jcHVtYXNr
KGludCBub2RlKQpAQCAtMzUsOCArMzMsNiBAQCBzdGF0aWMgaW5saW5lIGludCBub2RlX3RvX2Zp
cnN0X2NwdShpbnQgCiAJdG1wID0gbm9kZV90b19jcHVtYXNrKG5vZGUpOwogCXJldHVybiBmaXJz
dF9jcHUodG1wKTsKIH0KLQotI2RlZmluZSBub2RlX3RvX21lbWJsayhub2RlKQkobm9kZSkKIAog
I2RlZmluZSBwY2lidXNfdG9fY3B1bWFzayhidXMpCShjcHVfb25saW5lX21hcCkKIApkaWZmIC1h
dXJwTiAtWCAvaG9tZS9mbGV0Y2gvLmRpZmYuZXhjbHVkZSB2aXJnaW4vaW5jbHVkZS9hc20teDg2
XzY0L3RvcG9sb2d5Lmggbm9fbWVtYmxrL2luY2x1ZGUvYXNtLXg4Nl82NC90b3BvbG9neS5oCi0t
LSB2aXJnaW4vaW5jbHVkZS9hc20teDg2XzY0L3RvcG9sb2d5LmgJTW9uIERlYyAgOCAwOTo1NTo1
MyAyMDAzCisrKyBub19tZW1ibGsvaW5jbHVkZS9hc20teDg2XzY0L3RvcG9sb2d5LmgJTW9uIEph
biAxOSAyMTo1ODoxOCAyMDA0CkBAIC0xNSwxMSArMTUsOSBAQCBleHRlcm4gaW50IGZha2Vfbm9k
ZTsKIGV4dGVybiB1bnNpZ25lZCBsb25nIGNwdV9vbmxpbmVfbWFwOwogCiAjZGVmaW5lIGNwdV90
b19ub2RlKGNwdSkJCShmYWtlX25vZGUgPyAwIDogKGNwdSkpCi0jZGVmaW5lIG1lbWJsa190b19u
b2RlKG1lbWJsaykgCShmYWtlX25vZGUgPyAwIDogKG1lbWJsaykpCiAjZGVmaW5lIHBhcmVudF9u
b2RlKG5vZGUpCQkobm9kZSkKICNkZWZpbmUgbm9kZV90b19maXJzdF9jcHUobm9kZSkgCShmYWtl
X25vZGUgPyAwIDogKG5vZGUpKQogI2RlZmluZSBub2RlX3RvX2NwdW1hc2sobm9kZSkJKGZha2Vf
bm9kZSA/IGNwdV9vbmxpbmVfbWFwIDogKDFVTCA8PCAobm9kZSkpKQotI2RlZmluZSBub2RlX3Rv
X21lbWJsayhub2RlKQkJKG5vZGUpCiAKIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwY2li
dXNfdG9fY3B1bWFzayhpbnQgYnVzKQogewpkaWZmIC1hdXJwTiAtWCAvaG9tZS9mbGV0Y2gvLmRp
ZmYuZXhjbHVkZSB2aXJnaW4vaW5jbHVkZS9saW51eC9tZW1ibGsuaCBub19tZW1ibGsvaW5jbHVk
ZS9saW51eC9tZW1ibGsuaAotLS0gdmlyZ2luL2luY2x1ZGUvbGludXgvbWVtYmxrLmgJU3VuIE5v
diAxNyAyMDoyOTo1NiAyMDAyCisrKyBub19tZW1ibGsvaW5jbHVkZS9saW51eC9tZW1ibGsuaAlX
ZWQgRGVjIDMxIDE2OjAwOjAwIDE5NjkKQEAgLTEsMzIgKzAsMCBAQAotLyoKLSAqIGluY2x1ZGUv
bGludXgvbWVtYmxrLmggLSBnZW5lcmljIG1lbWJsayBkZWZpbml0aW9uCi0gKgotICogVGhpcyBp
cyBtYWlubHkgZm9yIHRvcG9sb2dpY2FsIHJlcHJlc2VudGF0aW9uLiBXZSBkZWZpbmUgdGhlIAot
ICogYmFzaWMgJ3N0cnVjdCBtZW1ibGsnIGhlcmUsIHdoaWNoIGNhbiBiZSBlbWJlZGRlZCBpbiBw
ZXItYXJjaCAKLSAqIGRlZmluaXRpb25zIG9mIG1lbW9yeSBibG9ja3MuCi0gKgotICogQmFzaWMg
aGFuZGxpbmcgb2YgdGhlIGRldmljZXMgaXMgZG9uZSBpbiBkcml2ZXJzL2Jhc2UvbWVtYmxrLmMK
LSAqIGFuZCBzeXN0ZW0gZGV2aWNlcyBhcmUgaGFuZGxlZCBpbiBkcml2ZXJzL2Jhc2Uvc3lzLmMu
IAotICoKLSAqIE1lbUJsa3MgYXJlIGV4cG9ydGVkIHZpYSBkcml2ZXJmcyBpbiB0aGUgY2xhc3Mv
bWVtYmxrL2RldmljZXMvCi0gKiBkaXJlY3RvcnkuIAotICoKLSAqIFBlci1tZW1ibGsgaW50ZXJm
YWNlcyBjYW4gYmUgaW1wbGVtZW50ZWQgdXNpbmcgYSBzdHJ1Y3QgZGV2aWNlX2ludGVyZmFjZS4g
Ci0gKiBTZWUgdGhlIGZvbGxvd2luZyBmb3IgaG93IHRvIGRvIHRoaXM6IAotICogLSBkcml2ZXJz
L2Jhc2UvaW50Zi5jIAotICogLSBEb2N1bWVudGF0aW9uL2RyaXZlci1tb2RlbC9pbnRlcmZhY2Uu
dHh0Ci0gKi8KLSNpZm5kZWYgX0xJTlVYX01FTUJMS19IXwotI2RlZmluZSBfTElOVVhfTUVNQkxL
X0hfCi0KLSNpbmNsdWRlIDxsaW51eC9kZXZpY2UuaD4KLSNpbmNsdWRlIDxsaW51eC9ub2RlLmg+
Ci0KLXN0cnVjdCBtZW1ibGsgewotCWludCBub2RlX2lkOwkJLyogVGhlIG5vZGUgd2hpY2ggY29u
dGFpbnMgdGhlIE1lbUJsayAqLwotCXN0cnVjdCBzeXNfZGV2aWNlIHN5c2RldjsKLX07Ci0KLWV4
dGVybiBpbnQgcmVnaXN0ZXJfbWVtYmxrKHN0cnVjdCBtZW1ibGsgKiwgaW50LCBzdHJ1Y3Qgbm9k
ZSAqKTsKLQotI2VuZGlmIC8qIF9MSU5VWF9NRU1CTEtfSF8gKi8KZGlmZiAtYXVycE4gLVggL2hv
bWUvZmxldGNoLy5kaWZmLmV4Y2x1ZGUgdmlyZ2luL2luY2x1ZGUvbGludXgvbW16b25lLmggbm9f
bWVtYmxrL2luY2x1ZGUvbGludXgvbW16b25lLmgKLS0tIHZpcmdpbi9pbmNsdWRlL2xpbnV4L21t
em9uZS5oCUZyaSBKYW4gIDkgMTc6NDA6MDggMjAwNAorKysgbm9fbWVtYmxrL2luY2x1ZGUvbGlu
dXgvbW16b25lLmgJTW9uIEphbiAxOSAyMTo0OTozMyAyMDA0CkBAIC0yODgsMTIgKzI4OCw2IEBA
IHN0cnVjdCBmaWxlOwogaW50IG1pbl9mcmVlX2tieXRlc19zeXNjdGxfaGFuZGxlcihzdHJ1Y3Qg
Y3RsX3RhYmxlICosIGludCwgc3RydWN0IGZpbGUgKiwgCiAJCQkJCSAgdm9pZCAqLCBzaXplX3Qg
Kik7CiAKLSNpZmRlZiBDT05GSUdfTlVNQQotI2RlZmluZSBNQVhfTlJfTUVNQkxLUwlCSVRTX1BF
Ul9MT05HIC8qIE1heCBudW1iZXIgb2YgTWVtb3J5IEJsb2NrcyAqLwotI2Vsc2UgLyogIUNPTkZJ
R19OVU1BICovCi0jZGVmaW5lIE1BWF9OUl9NRU1CTEtTCTEKLSNlbmRpZiAvKiBDT05GSUdfTlVN
QSAqLwotCiAjaW5jbHVkZSA8bGludXgvdG9wb2xvZ3kuaD4KIC8qIFJldHVybnMgdGhlIG51bWJl
ciBvZiB0aGUgY3VycmVudCBOb2RlLiAqLwogI2RlZmluZSBudW1hX25vZGVfaWQoKQkJKGNwdV90
b19ub2RlKHNtcF9wcm9jZXNzb3JfaWQoKSkpCkBAIC0zMjksNyArMzIzLDYgQEAgZXh0ZXJuIHN0
cnVjdCBwZ2xpc3RfZGF0YSBjb250aWdfcGFnZV9kYQogI2VuZGlmCiAKIGV4dGVybiBERUNMQVJF
X0JJVE1BUChub2RlX29ubGluZV9tYXAsIE1BWF9OVU1OT0RFUyk7Ci1leHRlcm4gREVDTEFSRV9C
SVRNQVAobWVtYmxrX29ubGluZV9tYXAsIE1BWF9OUl9NRU1CTEtTKTsKIAogI2lmIGRlZmluZWQo
Q09ORklHX0RJU0NPTlRJR01FTSkgfHwgZGVmaW5lZChDT05GSUdfTlVNQSkKIApAQCAtMzQ3LDIw
ICszNDAsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBudW1fb25saW5lX25vCiAJcmV0
dXJuIG51bTsKIH0KIAotI2RlZmluZSBtZW1ibGtfb25saW5lKG1lbWJsaykJCXRlc3RfYml0KG1l
bWJsaywgbWVtYmxrX29ubGluZV9tYXApCi0jZGVmaW5lIG1lbWJsa19zZXRfb25saW5lKG1lbWJs
aykJc2V0X2JpdChtZW1ibGssIG1lbWJsa19vbmxpbmVfbWFwKQotI2RlZmluZSBtZW1ibGtfc2V0
X29mZmxpbmUobWVtYmxrKQljbGVhcl9iaXQobWVtYmxrLCBtZW1ibGtfb25saW5lX21hcCkKLXN0
YXRpYyBpbmxpbmUgdW5zaWduZWQgaW50IG51bV9vbmxpbmVfbWVtYmxrcyh2b2lkKQotewotCWlu
dCBpLCBudW0gPSAwOwotCi0JZm9yKGkgPSAwOyBpIDwgTUFYX05SX01FTUJMS1M7IGkrKyl7Ci0J
CWlmIChtZW1ibGtfb25saW5lKGkpKQotCQkJbnVtKys7Ci0JfQotCXJldHVybiBudW07Ci19Ci0K
ICNlbHNlIC8qICFDT05GSUdfRElTQ09OVElHTUVNICYmICFDT05GSUdfTlVNQSAqLwogCiAjZGVm
aW5lIG5vZGVfb25saW5lKG5vZGUpIFwKQEAgLTM3MCwxNCArMzQ5LDYgQEAgc3RhdGljIGlubGlu
ZSB1bnNpZ25lZCBpbnQgbnVtX29ubGluZV9tZQogI2RlZmluZSBub2RlX3NldF9vZmZsaW5lKG5v
ZGUpIFwKIAkoeyBCVUdfT04oKG5vZGUpICE9IDApOyBjbGVhcl9iaXQobm9kZSwgbm9kZV9vbmxp
bmVfbWFwKTsgfSkKICNkZWZpbmUgbnVtX29ubGluZV9ub2RlcygpCTEKLQotI2RlZmluZSBtZW1i
bGtfb25saW5lKG1lbWJsaykgXAotCSh7IEJVR19PTigobWVtYmxrKSAhPSAwKTsgdGVzdF9iaXQo
bWVtYmxrLCBtZW1ibGtfb25saW5lX21hcCk7IH0pCi0jZGVmaW5lIG1lbWJsa19zZXRfb25saW5l
KG1lbWJsaykgXAotCSh7IEJVR19PTigobWVtYmxrKSAhPSAwKTsgc2V0X2JpdChtZW1ibGssIG1l
bWJsa19vbmxpbmVfbWFwKTsgfSkKLSNkZWZpbmUgbWVtYmxrX3NldF9vZmZsaW5lKG1lbWJsaykg
XAotCSh7IEJVR19PTigobWVtYmxrKSAhPSAwKTsgY2xlYXJfYml0KG1lbWJsaywgbWVtYmxrX29u
bGluZV9tYXApOyB9KQotI2RlZmluZSBudW1fb25saW5lX21lbWJsa3MoKQkJMQogCiAjZW5kaWYg
LyogQ09ORklHX0RJU0NPTlRJR01FTSB8fCBDT05GSUdfTlVNQSAqLwogI2VuZGlmIC8qICFfX0FT
U0VNQkxZX18gKi8KZGlmZiAtYXVycE4gLVggL2hvbWUvZmxldGNoLy5kaWZmLmV4Y2x1ZGUgdmly
Z2luL21tL3BhZ2VfYWxsb2MuYyBub19tZW1ibGsvbW0vcGFnZV9hbGxvYy5jCi0tLSB2aXJnaW4v
bW0vcGFnZV9hbGxvYy5jCUZyaSBKYW4gIDkgMTc6NDA6MTAgMjAwNAorKysgbm9fbWVtYmxrL21t
L3BhZ2VfYWxsb2MuYwlNb24gSmFuIDE5IDIxOjU5OjI2IDIwMDQKQEAgLTM1LDcgKzM1LDYgQEAK
ICNpbmNsdWRlIDxhc20vdGxiZmx1c2guaD4KIAogREVDTEFSRV9CSVRNQVAobm9kZV9vbmxpbmVf
bWFwLCBNQVhfTlVNTk9ERVMpOwotREVDTEFSRV9CSVRNQVAobWVtYmxrX29ubGluZV9tYXAsIE1B
WF9OUl9NRU1CTEtTKTsKIHN0cnVjdCBwZ2xpc3RfZGF0YSAqcGdkYXRfbGlzdDsKIHVuc2lnbmVk
IGxvbmcgdG90YWxyYW1fcGFnZXM7CiB1bnNpZ25lZCBsb25nIHRvdGFsaGlnaF9wYWdlczsKQEAg
LTEzOTAsNyArMTM4OSw2IEBAIHZvaWQgX19pbml0IGZyZWVfYXJlYV9pbml0X25vZGUoaW50IG5p
ZCwKIAlwZ2RhdC0+bm9kZV9tZW1fbWFwID0gbm9kZV9tZW1fbWFwOwogCiAJZnJlZV9hcmVhX2lu
aXRfY29yZShwZ2RhdCwgem9uZXNfc2l6ZSwgemhvbGVzX3NpemUpOwotCW1lbWJsa19zZXRfb25s
aW5lKG5vZGVfdG9fbWVtYmxrKG5pZCkpOwogCiAJY2FsY3VsYXRlX3pvbmVfYml0bWFwKHBnZGF0
LCB6b25lc19zaXplKTsKIH0K

--==========1815739384==========--

