Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S263632AbTKRPc1 (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 18 Nov 2003 10:32:27 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S263638AbTKRPc1
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 18 Nov 2003 10:32:27 -0500
Received: from gaia.cela.pl ([213.134.162.11]:34309 "EHLO gaia.cela.pl")
	by vger.kernel.org with ESMTP id S263632AbTKRPb5 (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 18 Nov 2003 10:31:57 -0500
Date: Tue, 18 Nov 2003 16:31:43 +0100 (CET)
From: Maciej Zenczykowski <maze@cela.pl>
To: Jan-Benedict Glaw <jbglaw@lug-owl.de>
cc: linux-kernel@vger.kernel.org, <michael@lug-owl.de>, <mw@microdata-pos.de>
Subject: Re: Announce: ndiswrapper
In-Reply-To: <20031118144921.GE1037@lug-owl.de>
Message-ID: <Pine.LNX.4.44.0311181618010.29639-200000@gaia.cela.pl>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="-2032858206-1436789949-1069169503=:29639"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

---2032858206-1436789949-1069169503=:29639
Content-Type: TEXT/PLAIN; charset=US-ASCII

> > Speaking of io-trace has anyone actually done this?  I'm working on a 
> 
> It's actually not all that simple. Some CPUs do have direct inb/outb
> instructions that are not syscalls. So you either have to single-step
> all the program and look at it's execution path, or you'd run it as a
> notmal user and handle the privilege penetration then luser starts
> inb'ing:) A coworker of me has done that with a DOS driver, doing such
> IO tracing for the dosemu it was running it.
> 
> Maybe he cares to explain it in detail...
> 
> MfG, JBG

Well I have a working patch for linux x86 strace 4.5 (mostly needs 
cleanup) which implements IO-trace for non-mmaped IO by causing protection 
violations on IO instructions.  Normally you'd call ioperm/iopl to get at 
the hardware this is intercepted, noted on the side and _not_ passed to 
the kernel.  All IO accesses from now on cause SIGSEGV's - which I procede 
to printf and emulate.

I'm still not decided on whether this should be done entirely in 
user-space (there are issues...) or partially or even mostly in kernel.

I'm attaching a patch for strace 4.5 (from sourceforge), you'll need to 
patch and then likely run aclocal and automake before configure and make.
It currently only works for x86 linux non-string IO instructions for plain 
non-segmented 32bit code (which is probably 99% of x86 IO not covered by 
dosemu).  Attach/detach don't work (fully), so you'll want to strace -I a 
program from the very beginning :)  I've run SVGATextMode through it and 
it works, haven't tried it but the Xserver would likely work as well 
(although that would probably require far more disk space in tmp then I 
have :)).  If you're strace'ing IO which access the video card it is 
probably smart to redirect stderr to a file to keep the kernel from 
accessing the video card at the same time (locking during strace is 
impossible).

Any comments? Feedback and ideas are welcome...

Cheers,

MaZe.

---2032858206-1436789949-1069169503=:29639
Content-Type: TEXT/PLAIN; charset=US-ASCII; name="iostrace45mz.diff"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.LNX.4.44.0311181631430.29639@gaia.cela.pl>
Content-Description: 
Content-Disposition: attachment; filename="iostrace45mz.diff"

ZGlmZiAtdXJOIHN0cmFjZS00LjUvZGVmcy5oIHN0cmFjZS00LjVtei9kZWZz
LmgNCi0tLSBzdHJhY2UtNC41L2RlZnMuaAkyMDAzLTA4LTIxIDExOjU4OjAw
LjAwMDAwMDAwMCArMDIwMA0KKysrIHN0cmFjZS00LjVtei9kZWZzLmgJMjAw
My0xMS0xNSAxNjowODoyNS4wMDAwMDAwMDAgKzAxMDANCkBAIC0yODQsNiAr
Mjg0LDE0IEBADQogCWludCBuY2xvbmVfdGhyZWFkczsJLyogIyBvZiBuY2hp
bGRyZW4gd2l0aCBDTE9ORV9USFJFQUQgKi8NCiAJaW50IG5jbG9uZV9kZXRh
Y2hlZDsJLyogIyBvZiBuY2hpbGRyZW4gd2l0aCBDTE9ORV9ERVRBQ0hFRCAq
Lw0KIAlpbnQgbmNsb25lX3dhaXRpbmc7CS8qIGNsb25lIHRocmVhZHMgaW4g
d2FpdDQgKFRDQl9TVVNQRU5ERUQpICovDQorI2lmZGVmIEkzODYJDQorCWlu
dCBpb3Njbm87DQorCWludCBpb3JldHZhbDsNCisJaW50IGlvcGw7DQorCWNo
YXIgY2FwX3Jhd2lvOw0KKyNkZWZpbmUgTUFYX0lPUEVSTSAxMDI0DQorCXVu
c2lnbmVkIGNoYXIgaW9fYml0bWFwW01BWF9JT1BFUk0gLyA4ICsgMV07DQor
I2VuZGlmDQogI2VuZGlmDQogCQkJCS8qICgxc3QgYXJnIG9mIHdhaXQ0KCkp
ICovDQogCWxvbmcgYmFkZHI7CQkvKiBgQnJlYWtwb2ludCcgYWRkcmVzcyAq
Lw0KQEAgLTM5NSw3ICs0MDMsNyBAQA0KIGV4dGVybiBzdHJ1Y3QgdGNiICoq
dGNidGFiOw0KIGV4dGVybiBpbnQgcXVhbF9mbGFnc1tdOw0KIGV4dGVybiBp
bnQgZGVidWcsIGZvbGxvd2ZvcmssIGZvbGxvd3Zmb3JrOw0KLWV4dGVybiBp
bnQgcmZsYWcsIHRmbGFnLCBkdGltZSwgY2ZsYWcsIHhmbGFnLCBxZmxhZzsN
CitleHRlcm4gaW50IHJmbGFnLCB0ZmxhZywgZHRpbWUsIGNmbGFnLCBpb2Zs
YWcsIHhmbGFnLCBxZmxhZzsNCiBleHRlcm4gaW50IGFjb2x1bW47DQogZXh0
ZXJuIGNoYXIgKm91dGZuYW1lOw0KIGV4dGVybiB1bnNpZ25lZCBpbnQgbnBy
b2NzLCB0Y2J0YWJzaXplOw0KQEAgLTQ1Niw2ICs0NjQsOSBAQA0KIGV4dGVy
biB2b2lkIHRwcmludF9pb3YgUCgoc3RydWN0IHRjYiAqLCBpbnQsIGxvbmcp
KTsNCiANCiAjaWZkZWYgTElOVVgNCisjaWZkZWYgSTM4Ng0KK2V4dGVybiBp
bnQgaW50ZXJuYWxfaW9lbXUgUCgoc3RydWN0IHRjYiAqKSk7DQorI2VuZGlm
DQogZXh0ZXJuIGludCBpbnRlcm5hbF9jbG9uZSBQKChzdHJ1Y3QgdGNiICop
KTsNCiAjZW5kaWYNCiBleHRlcm4gaW50IGludGVybmFsX2ZvcmsgUCgoc3Ry
dWN0IHRjYiAqKSk7DQpkaWZmIC11ck4gc3RyYWNlLTQuNS9pb19lbXUuYyBz
dHJhY2UtNC41bXovaW9fZW11LmMNCi0tLSBzdHJhY2UtNC41L2lvX2VtdS5j
CTE5NzAtMDEtMDEgMDE6MDA6MDAuMDAwMDAwMDAwICswMTAwDQorKysgc3Ry
YWNlLTQuNW16L2lvX2VtdS5jCTIwMDMtMTEtMTUgMTk6MDc6MDguMDAwMDAw
MDAwICswMTAwDQpAQCAtMCwwICsxLDE5OSBAQA0KKy8qDQorICogQ29weXJp
Z2h0IChjKSAyMDAzIE1hY2llaiBaZW5jenlrb3dza2kgPG1hemVAY2VsYS5w
bD4NCisgKiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KKyAqDQorICogUmVkaXN0
cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywg
d2l0aCBvciB3aXRob3V0DQorICogbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0
dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zDQor
ICogYXJlIG1ldDoNCisgKiAxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNl
IGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodA0KKyAqICAg
IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xs
b3dpbmcgZGlzY2xhaW1lci4NCisgKiAyLiBSZWRpc3RyaWJ1dGlvbnMgaW4g
YmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdo
dA0KKyAqICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5k
IHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUNCisgKiAgICBkb2N1
bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0
aCB0aGUgZGlzdHJpYnV0aW9uLg0KKyAqIDMuIFRoZSBuYW1lIG9mIHRoZSBh
dXRob3IgbWF5IG5vdCBiZSB1c2VkIHRvIGVuZG9yc2Ugb3IgcHJvbW90ZSBw
cm9kdWN0cw0KKyAqICAgIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdp
dGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLg0KKyAq
DQorICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQVVUSE9S
IGBgQVMgSVMnJyBBTkQgQU5ZIEVYUFJFU1MgT1INCisgKiBJTVBMSUVEIFdB
UlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUg
SU1QTElFRCBXQVJSQU5USUVTDQorICogT0YgTUVSQ0hBTlRBQklMSVRZIEFO
RCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xB
SU1FRC4NCisgKiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SIEJFIExJ
QUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsDQorICogSU5DSURFTlRB
TCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFH
RVMgKElOQ0xVRElORywgQlVUDQorICogTk9UIExJTUlURUQgVE8sIFBST0NV
UkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1Mg
T0YgVVNFLA0KKyAqIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElO
VEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWQ0KKyAqIFRI
RU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklD
VCBMSUFCSUxJVFksIE9SIFRPUlQNCisgKiAoSU5DTFVESU5HIE5FR0xJR0VO
Q0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRI
RSBVU0UgT0YNCisgKiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQg
T0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLg0KKyAqDQorICoJ
JElkOiBpb19lbXUuYyx2IDEuMDAgMjAwMy8xMC8xNSAxNzozNjozNyBtYXpl
IEV4cCAkDQorICovDQorDQorI2luY2x1ZGUgImRlZnMuaCINCisNCisjaWYg
ZGVmaW5lZChMSU5VWCkgJiYgZGVmaW5lZChJMzg2KQ0KKw0KKy8qDQorI2lu
Y2x1ZGUgPHN0ZGxpYi5oPg0KKyNpbmNsdWRlIDxzdHJpbmcuaD4NCisjaW5j
bHVkZSA8c3RkaW8uaD4NCisjaW5jbHVkZSA8ZXJybm8uaD4NCisjaW5jbHVk
ZSA8dW5pc3RkLmg+DQorI2luY2x1ZGUgPGFzbS91bmlzdGQuaD4NCisjaW5j
bHVkZSA8c3lzL3B0cmFjZS5oPg0KKyovDQorI2luY2x1ZGUgPGxpbnV4L3B0
cmFjZS5oPg0KKy8qDQorI2luY2x1ZGUgPHN5cy90eXBlcy5oPg0KKyNpbmNs
dWRlIDxzeXMvcmVzb3VyY2UuaD4NCisjaW5jbHVkZSA8c3lzL3dhaXQuaD4N
CisjaW5jbHVkZSA8c3lzL2lvLmg+DQorKi8NCisNCit0eXBlZGVmIGludCBi
b29sOw0KKyNkZWZpbmUgZmFsc2UgKChib29sKTApDQorI2RlZmluZSB0cnVl
ICAoKGJvb2wpMSkNCisNCit0eXBlZGVmICAgc2lnbmVkIGNoYXIgICBpbnQ4
Ow0KK3R5cGVkZWYgICBzaWduZWQgc2hvcnQgIGludDE2Ow0KK3R5cGVkZWYg
ICBzaWduZWQgaW50ICAgIGludDMyOw0KK3R5cGVkZWYgdW5zaWduZWQgY2hh
ciAgdWludDg7DQordHlwZWRlZiB1bnNpZ25lZCBzaG9ydCB1aW50MTY7DQor
dHlwZWRlZiB1bnNpZ25lZCBpbnQgICB1aW50MzI7DQorDQorc3RydWN0IHVz
ZXJfcmVncyB7DQorICB1bmlvbiB7DQorICAgIHN0cnVjdCB7IHVpbnQzMiBl
YngsICAgICAgICAgICAgICBlY3gsICAgICAgICAgICAgICBlZHg7ICAgICAg
ICAgICAgICB9Ow0KKyAgICBzdHJ1Y3QgeyB1aW50MTYgYngsICAgICB4Yngs
ICAgICAgY3gsICAgICB4Y3gsICAgICAgZHgsICAgICB4ZHg7ICAgICAgfTsN
CisgICAgc3RydWN0IHsgdWludDggIGJsLCBiaCwgeGJsLCB4YmgsIGNsLCBj
aCwgeGNsLCB4Y2gsIGRsLCBkaCwgeGRsLCB4ZGg7IH07DQorICB9Ow0KKyAg
dW5pb24gew0KKyAgICBzdHJ1Y3QgeyB1aW50MzIgZXNpLCAgICAgICAgICAg
ICAgZWRpLCAgICAgICAgICAgICAgZWJwOyAgICAgICAgICAgICAgIH07DQor
ICAgIHN0cnVjdCB7IHVpbnQxNiBzaSwgICAgIHhzaSwgICAgICBkaSwgICAg
IHhkaSwgICAgICBicCwgICAgIHhicDsgICAgICAgfTsNCisgIH07DQorICB1
bmlvbiB7DQorICAgIHN0cnVjdCB7IHVpbnQzMiBlYXg7ICAgICAgICAgICAg
ICB9Ow0KKyAgICBzdHJ1Y3QgeyB1aW50MTYgYXgsICAgICB4YXg7ICAgICAg
fTsNCisgICAgc3RydWN0IHsgdWludDggIGFsLCBhaCwgeGFsLCB4YWg7IH07
DQorICB9Ow0KKyAgdWludDE2IGRzLCB4ZHMsIGVzLCB4ZXMsIGZzLCB4ZnMs
IGdzLCB4Z3M7DQorICB1bmlvbiB7DQorICAgIHN0cnVjdCB7IHVpbnQzMiBf
ZWF4LCAgICAgICAgICAgICAgICAgZWlwOyAgICAgfTsNCisgICAgc3RydWN0
IHsgdWludDE2IF9heCwgICAgICBfeGF4LCAgICAgICBpcCwgeGlwOyB9OyAN
CisgICAgc3RydWN0IHsgdWludDggIF9hbCwgX2FoLCBfeGFsLCBfeGFoOyB9
Ow0KKyAgfTsNCisgIHVpbnQxNiBjcywgeGNzOw0KKyAgdW5pb24gew0KKyAg
ICBzdHJ1Y3QgeyB1aW50MzIgZWZsYWdzLCAgICAgICAgZXNwOyAgICAgfTsN
CisgICAgc3RydWN0IHsgdWludDE2IGZsYWdzLCB4ZmxhZ3MsIHNwLCB4c3A7
IH07DQorICB9Ow0KKyAgdWludDE2IHNzLCB4c3M7DQorfTsNCisNCitzdGF0
aWMgaW5saW5lIHZvaWQgb3V0X2IgKHVpbnQxNiBwb3J0LCB1aW50OCAgKiB2
KSB7IGFzbSB2b2xhdGlsZSAoIm91dGJcdCViMCwgJXcxIiA6IDogImEiICgq
diksICJOZCIgKHBvcnQpKTsgfTsNCitzdGF0aWMgaW5saW5lIHZvaWQgb3V0
X3cgKHVpbnQxNiBwb3J0LCB1aW50MTYgKiB2KSB7IGFzbSB2b2xhdGlsZSAo
Im91dHdcdCV3MCwgJXcxIiA6IDogImEiICgqdiksICJOZCIgKHBvcnQpKTsg
fTsNCitzdGF0aWMgaW5saW5lIHZvaWQgb3V0X2wgKHVpbnQxNiBwb3J0LCB1
aW50MzIgKiB2KSB7IGFzbSB2b2xhdGlsZSAoIm91dGxcdCUwLCAldzEiICA6
IDogImEiICgqdiksICJOZCIgKHBvcnQpKTsgfTsNCisNCitzdGF0aWMgaW5s
aW5lIHZvaWQgaW5fYiAgKHVpbnQxNiBwb3J0LCB1aW50OCAgKiB2KSB7IGFz
bSB2b2xhdGlsZSAoImluYlx0JXcxLCAlYjAiICA6ICI9YSIgKCp2KSA6ICJO
ZCIgKHBvcnQpKTsgfTsNCitzdGF0aWMgaW5saW5lIHZvaWQgaW5fdyAgKHVp
bnQxNiBwb3J0LCB1aW50MTYgKiB2KSB7IGFzbSB2b2xhdGlsZSAoImlud1x0
JXcxLCAldzAiICA6ICI9YSIgKCp2KSA6ICJOZCIgKHBvcnQpKTsgfTsNCitz
dGF0aWMgaW5saW5lIHZvaWQgaW5fbCAgKHVpbnQxNiBwb3J0LCB1aW50MzIg
KiB2KSB7IGFzbSB2b2xhdGlsZSAoImlubFx0JXcxLCAlMCIgICA6ICI9YSIg
KCp2KSA6ICJOZCIgKHBvcnQpKTsgfTsNCisNCitib29sIHZhbGlkX3BvcnQg
KHN0cnVjdCB0Y2IgKnRjcCwgdWludDE2IHBvcnQsIGludCBtYXNrKSB7DQor
ICBpZiAodGNwLT5pb3BsID09IDMpIHJldHVybiB0cnVlOw0KKyAgaWYgKCAo
KCoodWludDE2KikmdGNwLT5pb19iaXRtYXBbcG9ydCA+PiAzXSkgPj4gKHBv
cnQgJiA3KSkgJiBtYXNrICkgcmV0dXJuIGZhbHNlOw0KKyAgcmV0dXJuIHRy
dWU7DQorfTsNCisjZGVmaW5lIHZhbGlkOChQKSAgdmFsaWRfcG9ydCgoUCks
IDEpDQorI2RlZmluZSB2YWxpZDE2KFApIHZhbGlkX3BvcnQoKFApLCAzKQ0K
KyNkZWZpbmUgdmFsaWQzMihQKSB2YWxpZF9wb3J0KChQKSwgNykNCisNCit1
aW50MzIgbWFza1tdID0geyAwLCAweEZGLCAweEZGRkYsIDB4RkZGRkZGLCAw
eEZGRkZGRkZGIH07DQorDQorc3RhdGljIGludCBlbXVsYXRlX2lvIChzdHJ1
Y3QgdGNiICp0Y3ApIHsNCisgIHN0cnVjdCB1c2VyX3JlZ3MgcmVnczsNCisg
IHB0cmFjZShQVFJBQ0VfR0VUUkVHUywgdGNwLT5waWQsIDAsIChpbnQpJnJl
Z3MpOw0KKyAgaW50IHNlZyA9IDA7DQorICBib29sIGdyMSA9IDAsIGdyMiA9
IDAsIGdyMyA9IDAsIGdyNCA9IDA7DQorICBib29sIG9wMzIgPSAxLCBhZDMy
ID0gMTsgLyogISEhIEFTU1VNRVMgMzJCSVQgQ09ERSAhISEgKi8NCisgIGJv
b2wgbG9jayA9IDAsIHJlcG5lID0gMCwgcmVwZSA9IDA7DQorICBpbnQgcHAg
PSAwOw0KKyAgdWludDggaW5zbiwgcGFyYW07DQorICANCitsb29wOg0KKyNk
ZWZpbmUgQ09ERTgoUCkgKCh1aW50OCkocHRyYWNlKFBUUkFDRV9QRUVLVEVY
VCwgdGNwLT5waWQsIChjaGFyKikoUCksIDApKSkNCisgIGluc24gPSBDT0RF
OChyZWdzLmVpcCArIHBwKTsgKytwcDsNCisgIHBhcmFtID0gQ09ERTgocmVn
cy5laXAgKyBwcCk7DQorDQorICBzd2l0Y2ggKGluc24pIHsNCisjZGVmaW5l
IGRwcmludGYoLi4uKQ0KKyAgICBjYXNlIDB4MjY6IGRwcmludGYoIkVTOiAi
KTsgICAgaWYgKGdyMSsrKSBnb3RvIGVycm9yOyBzZWcgPSBFUzsgZ290byBs
b29wOw0KKyAgICBjYXNlIDB4MkU6IGRwcmludGYoIkNTOiAiKTsgICAgaWYg
KGdyMSsrKSBnb3RvIGVycm9yOyBzZWcgPSBDUzsgZ290byBsb29wOw0KKyAg
ICBjYXNlIDB4MzY6IGRwcmludGYoIlNTOiAiKTsgICAgaWYgKGdyMSsrKSBn
b3RvIGVycm9yOyBzZWcgPSBTUzsgZ290byBsb29wOw0KKyAgICBjYXNlIDB4
M0U6IGRwcmludGYoIkRTOiAiKTsgICAgaWYgKGdyMSsrKSBnb3RvIGVycm9y
OyBzZWcgPSBEUzsgZ290byBsb29wOw0KKyAgICBjYXNlIDB4NjQ6IGRwcmlu
dGYoIkZTOiAiKTsgICAgaWYgKGdyMSsrKSBnb3RvIGVycm9yOyBzZWcgPSBG
UzsgZ290byBsb29wOw0KKyAgICBjYXNlIDB4NjU6IGRwcmludGYoIkdTOiAi
KTsgICAgaWYgKGdyMSsrKSBnb3RvIGVycm9yOyBzZWcgPSBHUzsgZ290byBs
b29wOw0KKyAgICBjYXNlIDB4NjY6IGRwcmludGYoIihvcDMyKSAiKTsgaWYg
KGdyMisrKSBnb3RvIGVycm9yOyBvcDMyIF49IDE7IGdvdG8gbG9vcDsNCisg
ICAgY2FzZSAweDY3OiBkcHJpbnRmKCIoYWQzMikgIik7IGlmIChncjMrKykg
Z290byBlcnJvcjsgYWQzMiBePSAxOyBnb3RvIGxvb3A7DQorICAgIGNhc2Ug
MHhGMDogZHByaW50ZigibG9jayAiICApOyBpZiAoZ3I0KyspIGdvdG8gZXJy
b3I7IGxvY2sgID0gMTsgZ290byBsb29wOw0KKyAgICBjYXNlIDB4RjI6IGRw
cmludGYoInJlcG5lICIgKTsgaWYgKGdyNCsrKSBnb3RvIGVycm9yOyByZXBu
ZSA9IDE7IGdvdG8gbG9vcDsNCisgICAgY2FzZSAweEYzOiBkcHJpbnRmKCJy
ZXAoZSkgIik7IGlmIChncjQrKykgZ290byBlcnJvcjsgcmVwZSAgPSAxOyBn
b3RvIGxvb3A7DQorI3VuZGVmIGRwcmludGYNCisNCisgICAgLyogRElTQUJM
RS9FTkFCTEUgSU5URVJSVVBUUyAtIElHTk9SRSEgKi8NCisgICAgY2FzZSAw
eEZBOiBpZiAoZ3IxIHx8IGdyMiB8fCBncjMgfHwgZ3I0KSBnb3RvIGVycm9y
OyB0cHJpbnRmKCJjbGkiKTsgZ290byBvazsNCisgICAgY2FzZSAweEZCOiBp
ZiAoZ3IxIHx8IGdyMiB8fCBncjMgfHwgZ3I0KSBnb3RvIGVycm9yOyB0cHJp
bnRmKCJzdGkiKTsgZ290byBvazsNCisNCisgICAgLyogU1RSSU5HIEkvTyAt
IFVOSU1QTEVNRU5URUQgKi8NCisgICAgY2FzZSAweDZDOiBpZiAoZ3IxIHx8
IGxvY2sgfHwgcmVwbmUpIGdvdG8gZXJyb3I7IHRwcmludGYoImluc2IiKTsg
Z290byBlcnJvcjsNCisgICAgY2FzZSAweDZEOiBpZiAoZ3IxIHx8IGxvY2sg
fHwgcmVwbmUpIGdvdG8gZXJyb3I7IHRwcmludGYoImluc3cvbCIpOyBnb3Rv
IGVycm9yOw0KKyAgICBjYXNlIDB4NkU6IGlmICggICAgICAgbG9jayB8fCBy
ZXBuZSkgZ290byBlcnJvcjsgdHByaW50Zigib3V0c2IiKTsgZ290byBlcnJv
cjsNCisgICAgY2FzZSAweDZGOiBpZiAoICAgICAgIGxvY2sgfHwgcmVwbmUp
IGdvdG8gZXJyb3I7IHRwcmludGYoIm91dHN3L2wiKTsgZ290byBlcnJvcjsN
CisNCisjZGVmaW5lIHNpbXVsYXRlX2luKHN6bywgc3phLCBwb3J0KSBcDQor
dHByaW50ZigiaW4lYygweCUwKlgpID0gIiwgIjBidzNsIltzem9dLCBzemEr
c3phLCBwb3J0KTsgXA0KK2lmICghdmFsaWRfcG9ydCh0Y3AsIHBvcnQsICgx
IDw8IHN6bykgLSAxICkpIHsgdHByaW50ZigiRVJST1IiKTsgZ290byBlcnJv
cjsgfTsgXA0KK2lmIChzem8gPT0gMSkgaW5fYihwb3J0LCAmcmVncy5hbCk7
IFwNCitpZiAoc3pvID09IDIpIGluX3cocG9ydCwgJnJlZ3MuYXgpOyBcDQor
aWYgKHN6byA9PSA0KSBpbl9sKHBvcnQsICZyZWdzLmVheCk7IFwNCit0cHJp
bnRmKCIweCUwKlgiLCBzem8rc3pvLCByZWdzLmVheCAmIG1hc2tbc3pvXSk7
IFwNCitnb3RvIG9rOw0KKw0KKyNkZWZpbmUgc2ltdWxhdGVfb3V0KHN6bywg
c3phLCBwb3J0KSBcDQordHByaW50Zigib3V0JWMoMHglMCpYLCAweCUwKlgp
IiwgIjBidzNsIltzem9dLCBzemErc3phLCBwb3J0LCBzem8rc3pvLCByZWdz
LmVheCAmIG1hc2tbc3pvXSk7IFwNCitpZiAoIXZhbGlkX3BvcnQodGNwLCBw
b3J0LCAoMSA8PCBzem8pIC0gMSApKSB7IHRwcmludGYoIiA9PiBFUlJPUiIp
OyBnb3RvIGVycm9yOyB9OyBcDQoraWYgKHN6byA9PSAxKSBvdXRfYihwb3J0
LCAmcmVncy5hbCk7IFwNCitpZiAoc3pvID09IDIpIG91dF93KHBvcnQsICZy
ZWdzLmF4KTsgXA0KK2lmIChzem8gPT0gNCkgb3V0X2wocG9ydCwgJnJlZ3Mu
ZWF4KTsgXA0KK2dvdG8gb2s7DQorDQorICAgIC8qIE5PUk1BTCBJL08gKi8N
CisgICAgY2FzZSAweEU0OiBpZiAoZ3IxIHx8IGdyMyB8fCBncjQpIGdvdG8g
ZXJyb3I7IHBwKys7IHNpbXVsYXRlX2luICggICAgICAgICAgIDEsIDEsIHBh
cmFtKTsNCisgICAgY2FzZSAweEU1OiBpZiAoZ3IxIHx8IGdyMyB8fCBncjQp
IGdvdG8gZXJyb3I7IHBwKys7IHNpbXVsYXRlX2luIChvcDMyID8gNCA6IDIs
IDEsIHBhcmFtKTsNCisgICAgY2FzZSAweEU2OiBpZiAoZ3IxIHx8IGdyMyB8
fCBncjQpIGdvdG8gZXJyb3I7IHBwKys7IHNpbXVsYXRlX291dCggICAgICAg
ICAgIDEsIDEsIHBhcmFtKTsNCisgICAgY2FzZSAweEU3OiBpZiAoZ3IxIHx8
IGdyMyB8fCBncjQpIGdvdG8gZXJyb3I7IHBwKys7IHNpbXVsYXRlX291dChv
cDMyID8gNCA6IDIsIDEsIHBhcmFtKTsNCisgICAgY2FzZSAweEVDOiBpZiAo
Z3IxIHx8IGdyMyB8fCBncjQpIGdvdG8gZXJyb3I7ICAgICAgIHNpbXVsYXRl
X2luICggICAgICAgICAgIDEsIDIsIHJlZ3MuZHgpOw0KKyAgICBjYXNlIDB4
RUQ6IGlmIChncjEgfHwgZ3IzIHx8IGdyNCkgZ290byBlcnJvcjsgICAgICAg
c2ltdWxhdGVfaW4gKG9wMzIgPyA0IDogMiwgMiwgcmVncy5keCk7DQorICAg
IGNhc2UgMHhFRTogaWYgKGdyMSB8fCBncjMgfHwgZ3I0KSBnb3RvIGVycm9y
OyAgICAgICBzaW11bGF0ZV9vdXQoICAgICAgICAgICAxLCAyLCByZWdzLmR4
KTsNCisgICAgY2FzZSAweEVGOiBpZiAoZ3IxIHx8IGdyMyB8fCBncjQpIGdv
dG8gZXJyb3I7ICAgICAgIHNpbXVsYXRlX291dChvcDMyID8gNCA6IDIsIDIs
IHJlZ3MuZHgpOw0KKw0KKyN1bmRlZiBzaW11bGF0ZV9vdXQNCisjdW5kZWYg
c2ltdWxhdGVfaW4NCisNCisgICAgLyogQU5ZVEhJTkcgRUxTRSBJUyBCQUQg
Ki8NCisgICAgZGVmYXVsdDogZ290byBlcnJvcjsNCisgIH07DQorb2s6DQor
ICByZWdzLmVpcCArPSBwcDsNCisgIHB0cmFjZShQVFJBQ0VfU0VUUkVHUywg
dGNwLT5waWQsIDAsIChpbnQpJnJlZ3MpOw0KKyAgcmV0dXJuIHBwOw0KK2Vy
cm9yOg0KKyAgcmV0dXJuIDA7DQorfTsNCisNCitpbnQgaW50ZXJuYWxfaW9l
bXUgKHN0cnVjdCB0Y2IgKnRjcCkgew0KKyAgaW50IHJlczsNCisgIHByaW50
bGVhZGVyKHRjcCk7DQorICByZXMgPSBlbXVsYXRlX2lvKHRjcCk7DQorICBw
cmludHRyYWlsZXIodGNwKTsNCisgIHJldHVybiByZXM7DQorfTsNCisNCisj
ZW5kaWYNCmRpZmYgLXVyTiBzdHJhY2UtNC41L2xpbnV4L2R1bW15Lmggc3Ry
YWNlLTQuNW16L2xpbnV4L2R1bW15LmgNCi0tLSBzdHJhY2UtNC41L2xpbnV4
L2R1bW15LmgJMjAwMy0wNi0yNyAyMzoyMDoxMC4wMDAwMDAwMDAgKzAyMDAN
CisrKyBzdHJhY2UtNC41bXovbGludXgvZHVtbXkuaAkyMDAzLTExLTE1IDEz
OjI4OjAxLjAwMDAwMDAwMCArMDEwMA0KQEAgLTI4LDEwICsyOCwxMyBAQA0K
ICAqCSRJZDogZHVtbXkuaCx2IDEuMTIgMjAwMy8wNi8yNyAyMToyMDoxMCBy
b2xhbmQgRXhwICQNCiAgKi8NCiANCi0vKiBzdGlsbCB1bmZpbmlzaGVkICov
DQorLyogcG9zc2libHkgc2ltdWxhdGVkIGZvciBJTy10cmFjZSBvbiB4ODYg
Ki8NCisjaWZuZGVmIEkzODYNCiAjZGVmaW5lCXN5c19pb3Blcm0JCXByaW50
YXJncw0KLSNkZWZpbmUJc3lzX3N5c2xvZwkJcHJpbnRhcmdzDQogI2RlZmlu
ZQlzeXNfaW9wbAkJcHJpbnRhcmdzDQorI2VuZGlmDQorLyogc3RpbGwgdW5m
aW5pc2hlZCAqLw0KKyNkZWZpbmUJc3lzX3N5c2xvZwkJcHJpbnRhcmdzDQog
I2RlZmluZQlzeXNfdm04Nm9sZAkJcHJpbnRhcmdzDQogI2RlZmluZQlzeXNf
Z2V0X2tlcm5lbF9zeW1zCXByaW50YXJncw0KICNkZWZpbmUJc3lzX2JkZmx1
c2gJCXByaW50YXJncw0KZGlmZiAtdXJOIHN0cmFjZS00LjUvTWFrZWZpbGUu
YW0gc3RyYWNlLTQuNW16L01ha2VmaWxlLmFtDQotLS0gc3RyYWNlLTQuNS9N
YWtlZmlsZS5hbQkyMDAzLTAzLTMxIDAyOjU5OjE4LjAwMDAwMDAwMCArMDIw
MA0KKysrIHN0cmFjZS00LjVtei9NYWtlZmlsZS5hbQkyMDAzLTExLTE1IDE3
OjM4OjA2LjAwMDAwMDAwMCArMDEwMA0KQEAgLTE1LDcgKzE1LDcgQEANCiBz
dHJhY2VfU09VUkNFUyA9IHN0cmFjZS5jIHN5c2NhbGwuYyB1dGlsLmMgZGVz
Yy5jIGZpbGUuYyBpcGMuYyBcDQogCQkgaW8uYyBpb2N0bC5jIG1lbS5jIG5l
dC5jIHByb2Nlc3MuYyBiam0uYyBcDQogCQkgcmVzb3VyY2UuYyBzaWduYWwu
YyBzb2NrLmMgc3lzdGVtLmMgdGVybS5jIHRpbWUuYyBcDQotCQkgcHJvYy5j
IHN0cmVhbS5jDQorCQkgcHJvYy5jIHN0cmVhbS5jIGlvX2VtdS5jDQogbm9p
bnN0X0hFQURFUlMgPSBkZWZzLmgNCiANCiBFWFRSQV9ESVNUID0gJChtYW5f
TUFOUykgZXJybm9lbnQuc2ggc2lnbmFsZW50LnNoIHN5c2NhbGxlbnQuc2gg
aW9jdGxzb3J0LmMgXA0KZGlmZiAtdXJOIHN0cmFjZS00LjUvc3RyYWNlLmMg
c3RyYWNlLTQuNW16L3N0cmFjZS5jDQotLS0gc3RyYWNlLTQuNS9zdHJhY2Uu
YwkyMDAzLTA2LTEwIDA1OjA1OjUzLjAwMDAwMDAwMCArMDIwMA0KKysrIHN0
cmFjZS00LjVtei9zdHJhY2UuYwkyMDAzLTExLTE1IDE4OjU0OjU1LjAwMDAw
MDAwMCArMDEwMA0KQEAgLTMsNiArMyw3IEBADQogICogQ29weXJpZ2h0IChj
KSAxOTkzIEJyYW5rbyBMYW5rZXN0ZXIgPGJyYW5rb0BoYWNrdGljLm5sPg0K
ICAqIENvcHlyaWdodCAoYykgMTk5MywgMTk5NCwgMTk5NSwgMTk5NiBSaWNr
IFNsYWRrZXkgPGpyc0B3b3JsZC5zdGQuY29tPg0KICAqIENvcHlyaWdodCAo
YykgMTk5Ni0xOTk5IFdpY2hlcnQgQWtrZXJtYW4gPHdpY2hlcnRAY2lzdHJv
bi5ubD4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDMgTWFjaWVqIFplbmN6eWtv
d3NraSA8bWF6ZUBjZWxhLnBsPiBMaW51eCB4ODYgSU8gdHJhY2UNCiAgKiBB
bGwgcmlnaHRzIHJlc2VydmVkLg0KICAqDQogICogUmVkaXN0cmlidXRpb24g
YW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3
aXRob3V0DQpAQCAtNDksNiArNTAsMTAgQEANCiAjIGluY2x1ZGUgPGFzbS9w
dHJhY2Vfb2Zmc2V0cy5oPg0KICNlbmRpZg0KIA0KKyNpZiBkZWZpbmVkKGxp
bnV4KSAmJiBkZWZpbmVkKEkzODYpDQorIyBpbmNsdWRlIDxzeXMvaW8uaD4N
CisjZW5kaWYNCisNCiAjaWZkZWYgVVNFX1BST0NGUw0KICNpbmNsdWRlIDxw
b2xsLmg+DQogI2VuZGlmDQpAQCAtNjQsNyArNjksNyBAQA0KIA0KIGludCBk
ZWJ1ZyA9IDAsIGZvbGxvd2ZvcmsgPSAwLCBmb2xsb3d2Zm9yayA9IDAsIGlu
dGVyYWN0aXZlID0gMDsNCiBpbnQgcmZsYWcgPSAwLCB0ZmxhZyA9IDAsIGR0
aW1lID0gMCwgY2ZsYWcgPSAwOw0KLWludCBpZmxhZyA9IDAsIHhmbGFnID0g
MCwgcWZsYWcgPSAwOw0KK2ludCBpZmxhZyA9IDAsIGlvZmxhZyA9IDAsIHhm
bGFnID0gMCwgcWZsYWcgPSAwOw0KIGludCBwZmxhZ19zZWVuID0gMDsNCiAN
CiAvKiBTb21ldGltZXMgd2Ugd2FudCB0byBwcmludCBvbmx5IHN1Y2NlZWRp
bmcgc3lzY2FsbHMuICovDQpAQCAtMTMzLDMzICsxMzgsMzYgQEANCiBGSUxF
ICpvZnA7DQogaW50IGV4aXR2YWw7DQogew0KLQlmcHJpbnRmKG9mcCwgIlwN
Ci11c2FnZTogc3RyYWNlIFstZGZmaGlxcnR0dFR2Vnh4XSBbLWEgY29sdW1u
XSBbLWUgZXhwcl0gLi4uIFstbyBmaWxlXVxuXA0KLSAgICAgICAgICAgICAg
Wy1wIHBpZF0gLi4uIFstcyBzdHJzaXplXSBbLXUgdXNlcm5hbWVdIFstRSB2
YXI9dmFsXSAuLi5cblwNCi0gICAgICAgICAgICAgIFtjb21tYW5kIFthcmcg
Li4uXV1cblwNCi0gICBvcjogc3RyYWNlIC1jIFstZSBleHByXSAuLi4gWy1P
IG92ZXJoZWFkXSBbLVMgc29ydGJ5XSBbLUUgdmFyPXZhbF0gLi4uXG5cDQot
ICAgICAgICAgICAgICBbY29tbWFuZCBbYXJnIC4uLl1dXG5cDQotLWMgLS0g
Y291bnQgdGltZSwgY2FsbHMsIGFuZCBlcnJvcnMgZm9yIGVhY2ggc3lzY2Fs
bCBhbmQgcmVwb3J0IHN1bW1hcnlcblwNCi0tZiAtLSBmb2xsb3cgZm9ya3Ms
IC1mZiAtLSB3aXRoIG91dHB1dCBpbnRvIHNlcGFyYXRlIGZpbGVzXG5cDQot
LUYgLS0gYXR0ZW1wdCB0byBmb2xsb3cgdmZvcmtzLCAtaCAtLSBwcmludCBo
ZWxwIG1lc3NhZ2VcblwNCi0taSAtLSBwcmludCBpbnN0cnVjdGlvbiBwb2lu
dGVyIGF0IHRpbWUgb2Ygc3lzY2FsbFxuXA0KLS1xIC0tIHN1cHByZXNzIG1l
c3NhZ2VzIGFib3V0IGF0dGFjaGluZywgZGV0YWNoaW5nLCBldGMuXG5cDQot
LXIgLS0gcHJpbnQgcmVsYXRpdmUgdGltZXN0YW1wLCAtdCAtLSBhYnNvbHV0
ZSB0aW1lc3RhbXAsIC10dCAtLSB3aXRoIHVzZWNzXG5cDQotLVQgLS0gcHJp
bnQgdGltZSBzcGVudCBpbiBlYWNoIHN5c2NhbGwsIC1WIC0tIHByaW50IHZl
cnNpb25cblwNCi0tdiAtLSB2ZXJib3NlIG1vZGU6IHByaW50IHVuYWJicmV2
aWF0ZWQgYXJndiwgc3RhdCwgdGVybWlvW3NdLCBldGMuIGFyZ3NcblwNCi0t
eCAtLSBwcmludCBub24tYXNjaWkgc3RyaW5ncyBpbiBoZXgsIC14eCAtLSBw
cmludCBhbGwgc3RyaW5ncyBpbiBoZXhcblwNCi0tYSBjb2x1bW4gLS0gYWxp
Z25tZW50IENPTFVNTiBmb3IgcHJpbnRpbmcgc3lzY2FsbCByZXN1bHRzIChk
ZWZhdWx0ICVkKVxuXA0KLS1lIGV4cHIgLS0gYSBxdWFsaWZ5aW5nIGV4cHJl
c3Npb246IG9wdGlvbj1bIV1hbGwgb3Igb3B0aW9uPVshXXZhbDFbLHZhbDJd
Li4uXG5cDQotICAgb3B0aW9uczogdHJhY2UsIGFiYnJldiwgdmVyYm9zZSwg
cmF3LCBzaWduYWwsIHJlYWQsIG9yIHdyaXRlXG5cDQotLW8gZmlsZSAtLSBz
ZW5kIHRyYWNlIG91dHB1dCB0byBGSUxFIGluc3RlYWQgb2Ygc3RkZXJyXG5c
DQotLU8gb3ZlcmhlYWQgLS0gc2V0IG92ZXJoZWFkIGZvciB0cmFjaW5nIHN5
c2NhbGxzIHRvIE9WRVJIRUFEIHVzZWNzXG5cDQotLXAgcGlkIC0tIHRyYWNl
IHByb2Nlc3Mgd2l0aCBwcm9jZXNzIGlkIFBJRCwgbWF5IGJlIHJlcGVhdGVk
XG5cDQotLXMgc3Ryc2l6ZSAtLSBsaW1pdCBsZW5ndGggb2YgcHJpbnQgc3Ry
aW5ncyB0byBTVFJTSVpFIGNoYXJzIChkZWZhdWx0ICVkKVxuXA0KLS1TIHNv
cnRieSAtLSBzb3J0IHN5c2NhbGwgY291bnRzIGJ5OiB0aW1lLCBjYWxscywg
bmFtZSwgbm90aGluZyAoZGVmYXVsdCAlcylcblwNCi0tdSB1c2VybmFtZSAt
LSBydW4gY29tbWFuZCBhcyB1c2VybmFtZSBoYW5kbGluZyBzZXR1aWQgYW5k
L29yIHNldGdpZFxuXA0KLS1FIHZhcj12YWwgLS0gcHV0IHZhcj12YWwgaW4g
dGhlIGVudmlyb25tZW50IGZvciBjb21tYW5kXG5cDQotLUUgdmFyIC0tIHJl
bW92ZSB2YXIgZnJvbSB0aGUgZW52aXJvbm1lbnQgZm9yIGNvbW1hbmRcblwN
Ci0iIC8qIHRoaXMgaXMgYnJva2VuLCBzbyBkb24ndCBkb2N1bWVudCBpdA0K
KwlmcHJpbnRmKG9mcCwNCisidXNhZ2U6IHN0cmFjZSBbLWRmZmhpcXJ0dHRU
dlZ4eF0gWy1hIGNvbHVtbl0gWy1lIGV4cHJdIC4uLiBbLW8gZmlsZV1cbiIN
CisiICAgICAgICAgICAgICBbLXAgcGlkXSAuLi4gWy1zIHN0cnNpemVdIFst
dSB1c2VybmFtZV0gWy1FIHZhcj12YWxdIC4uLlxuIg0KKyIgICAgICAgICAg
ICAgIFtjb21tYW5kIFthcmcgLi4uXV1cbiINCisiICAgb3I6IHN0cmFjZSAt
YyBbLWUgZXhwcl0gLi4uIFstTyBvdmVyaGVhZF0gWy1TIHNvcnRieV0gWy1F
IHZhcj12YWxdIC4uLlxuIg0KKyIgICAgICAgICAgICAgIFtjb21tYW5kIFth
cmcgLi4uXV1cbiINCisiLWMgLS0gY291bnQgdGltZSwgY2FsbHMsIGFuZCBl
cnJvcnMgZm9yIGVhY2ggc3lzY2FsbCBhbmQgcmVwb3J0IHN1bW1hcnlcbiIN
CisiLWYgLS0gZm9sbG93IGZvcmtzLCAtZmYgLS0gd2l0aCBvdXRwdXQgaW50
byBzZXBhcmF0ZSBmaWxlc1xuIg0KKyItRiAtLSBhdHRlbXB0IHRvIGZvbGxv
dyB2Zm9ya3MsIC1oIC0tIHByaW50IGhlbHAgbWVzc2FnZVxuIg0KKyItaSAt
LSBwcmludCBpbnN0cnVjdGlvbiBwb2ludGVyIGF0IHRpbWUgb2Ygc3lzY2Fs
bFxuIg0KKyNpZiBkZWZpbmVkKExJTlVYKSAmJiBkZWZpbmVkKEkzODYpDQor
Ii1JIC0tIHBlcmZvcm0gSU8gaW5zdHJ1Y3Rpb24gdHJhY2VpbmcgKGV4cGVy
aW1lbnRhbCwgZG9lc24ndCB3b3JrIHdpdGggYXR0YWNoL2RldGFjaClcbiIN
CisjZW5kaWYNCisiLXEgLS0gc3VwcHJlc3MgbWVzc2FnZXMgYWJvdXQgYXR0
YWNoaW5nLCBkZXRhY2hpbmcsIGV0Yy5cbiINCisiLXIgLS0gcHJpbnQgcmVs
YXRpdmUgdGltZXN0YW1wLCAtdCAtLSBhYnNvbHV0ZSB0aW1lc3RhbXAsIC10
dCAtLSB3aXRoIHVzZWNzXG4iDQorIi1UIC0tIHByaW50IHRpbWUgc3BlbnQg
aW4gZWFjaCBzeXNjYWxsLCAtViAtLSBwcmludCB2ZXJzaW9uXG4iDQorIi12
IC0tIHZlcmJvc2UgbW9kZTogcHJpbnQgdW5hYmJyZXZpYXRlZCBhcmd2LCBz
dGF0LCB0ZXJtaW9bc10sIGV0Yy4gYXJnc1xuIg0KKyIteCAtLSBwcmludCBu
b24tYXNjaWkgc3RyaW5ncyBpbiBoZXgsIC14eCAtLSBwcmludCBhbGwgc3Ry
aW5ncyBpbiBoZXhcbiINCisiLWEgY29sdW1uIC0tIGFsaWdubWVudCBDT0xV
TU4gZm9yIHByaW50aW5nIHN5c2NhbGwgcmVzdWx0cyAoZGVmYXVsdCAlZClc
biINCisiLWUgZXhwciAtLSBhIHF1YWxpZnlpbmcgZXhwcmVzc2lvbjogb3B0
aW9uPVshXWFsbCBvciBvcHRpb249WyFddmFsMVssdmFsMl0uLi5cbiINCisi
ICAgb3B0aW9uczogdHJhY2UsIGFiYnJldiwgdmVyYm9zZSwgcmF3LCBzaWdu
YWwsIHJlYWQsIG9yIHdyaXRlXG4iDQorIi1vIGZpbGUgLS0gc2VuZCB0cmFj
ZSBvdXRwdXQgdG8gRklMRSBpbnN0ZWFkIG9mIHN0ZGVyclxuIg0KKyItTyBv
dmVyaGVhZCAtLSBzZXQgb3ZlcmhlYWQgZm9yIHRyYWNpbmcgc3lzY2FsbHMg
dG8gT1ZFUkhFQUQgdXNlY3NcbiINCisiLXAgcGlkIC0tIHRyYWNlIHByb2Nl
c3Mgd2l0aCBwcm9jZXNzIGlkIFBJRCwgbWF5IGJlIHJlcGVhdGVkXG4iDQor
Ii1zIHN0cnNpemUgLS0gbGltaXQgbGVuZ3RoIG9mIHByaW50IHN0cmluZ3Mg
dG8gU1RSU0laRSBjaGFycyAoZGVmYXVsdCAlZClcbiINCisiLVMgc29ydGJ5
IC0tIHNvcnQgc3lzY2FsbCBjb3VudHMgYnk6IHRpbWUsIGNhbGxzLCBuYW1l
LCBub3RoaW5nIChkZWZhdWx0ICVzKVxuIg0KKyItdSB1c2VybmFtZSAtLSBy
dW4gY29tbWFuZCBhcyB1c2VybmFtZSBoYW5kbGluZyBzZXR1aWQgYW5kL29y
IHNldGdpZFxuIg0KKyItRSB2YXI9dmFsIC0tIHB1dCB2YXI9dmFsIGluIHRo
ZSBlbnZpcm9ubWVudCBmb3IgY29tbWFuZFxuIg0KKyItRSB2YXIgLS0gcmVt
b3ZlIHZhciBmcm9tIHRoZSBlbnZpcm9ubWVudCBmb3IgY29tbWFuZFxuIg0K
KyAvKiB0aGlzIGlzIGJyb2tlbiwgc28gZG9uJ3QgZG9jdW1lbnQgaXQNCiAt
eiAtLSBwcmludCBvbmx5IHN1Y2NlZWRpbmcgc3lzY2FsbHNcblwNCiAgICov
DQogLCBERUZBVUxUX0FDT0xVTU4sIERFRkFVTFRfU1RSTEVOLCBERUZBVUxU
X1NPUlRCWSk7DQpAQCAtMjA1LDcgKzIxMyw3IEBADQogCXNldF9zb3J0Ynko
REVGQVVMVF9TT1JUQlkpOw0KIAlzZXRfcGVyc29uYWxpdHkoREVGQVVMVF9Q
RVJTT05BTElUWSk7DQogCXdoaWxlICgoYyA9IGdldG9wdChhcmdjLCBhcmd2
LA0KLQkJIitjZGZGaGlxcnRUdlZ4emE6ZTpvOk86cDpzOlM6dTpFOiIpKSAh
PSBFT0YpIHsNCisJCSIrY2RmRmhpSXFydFR2Vnh6YTplOm86TzpwOnM6Uzp1
OkU6IikpICE9IEVPRikgew0KIAkJc3dpdGNoIChjKSB7DQogCQljYXNlICdj
JzoNCiAJCQljZmxhZysrOw0KQEAgLTIyNiw2ICsyMzQsOSBAQA0KIAkJY2Fz
ZSAnaSc6DQogCQkJaWZsYWcrKzsNCiAJCQlicmVhazsNCisJCWNhc2UgJ0kn
Og0KKwkJCWlvZmxhZysrOyAvKiBvbmx5IGFjdHVhbGx5IHdvcmtzIG9uIEkz
ODYgKi8NCisJCQlicmVhazsNCiAJCWNhc2UgJ3EnOg0KIAkJCXFmbGFnKys7
DQogCQkJYnJlYWs7DQpAQCAtNTgxLDYgKzU5MiwxNCBAQA0KIAlzaWdhY3Rp
b24oU0lHQ0hMRCwgJnNhLCBOVUxMKTsNCiAjZW5kaWYgLyogVVNFX1BST0NG
UyAqLw0KIA0KKyNpZiBkZWZpbmVkKExJTlVYKSAmJiBkZWZpbmVkKEkzODYp
DQorCWlmIChpb2ZsYWcgJiYgaW9wbCgzKSA8IDApIHsNCisJCXBlcnJvcigi
c3RyYWNlOiBpb3BsIik7DQorCQljbGVhbnVwKCk7DQorCQlleGl0KDEpOw0K
Kwl9DQorI2VuZGlmDQorDQogCWlmICh0cmFjZSgpIDwgMCkNCiAJCWV4aXQo
MSk7DQogCWNsZWFudXAoKTsNCkBAIC02MzAsNiArNjQ5LDEzIEBADQogCQkJ
dGNwLT5uY2xvbmVfdGhyZWFkcyA9IHRjcC0+bmNsb25lX2RldGFjaGVkID0g
MDsNCiAJCQl0Y3AtPm5jbG9uZV93YWl0aW5nID0gMDsNCiAjZW5kaWYNCisj
aWYgZGVmaW5lZChMSU5VWCkgJiYgZGVmaW5lZChJMzg2KQ0KKwkJCXRjcC0+
Y2FwX3Jhd2lvID0gMTsgLypGSVhNRSovDQorCQkJdGNwLT5pb3Njbm8gPSAw
Ow0KKwkJCXRjcC0+aW9yZXR2YWwgPSAwOw0KKwkJCXRjcC0+aW9wbCA9IDM7
IC8qRklYTUVfTUFaRSBvbiBmb3JrIHNob3VsZCBpbmhlcml0Ki8NCisJCQlt
ZW1zZXQodGNwLT5pb19iaXRtYXAsIC0xLCBzaXplb2YodGNwLT5pb19iaXRt
YXApKTsgLypBUyBBQk9WRSovDQorI2VuZGlmDQogCQkJdGNwLT5mbGFncyA9
IFRDQl9JTlVTRSB8IFRDQl9TVEFSVFVQOw0KIAkJCXRjcC0+b3V0ZiA9IG91
dGY7IC8qIEluaXRpYWxpc2UgdG8gY3VycmVudCBvdXQgZmlsZSAqLw0KIAkJ
CXRjcC0+c3RpbWUudHZfc2VjID0gMDsNCkBAIC0yMTA4LDYgKzIxMzQsMTkg
QEANCiAJCQkJfQ0KIAkJCQljb250aW51ZTsNCiAJCQl9DQorI2lmIGRlZmlu
ZWQgKExJTlVYKSAmJiBkZWZpbmVkIChJMzg2KQ0KKwkJCWlmIChpb2ZsYWcg
JiYgV1NUT1BTSUcoc3RhdHVzKSA9PSBTSUdTRUdWKSB7DQorCQkJCWlmIChp
bnRlcm5hbF9pb2VtdSh0Y3ApKSB7DQorCQkJCQlpZiAocHRyYWNlKFBUUkFD
RV9TWVNDQUxMLCBwaWQsIChjaGFyICopIDEsIDApIDwgMCkgew0KKwkJCQkJ
CXBlcnJvcigidHJhY2U6IHB0cmFjZShQVFJBQ0VfU1lTQ0FMTCwgLi4uKSIp
Ow0KKwkJCQkJCWNsZWFudXAoKTsNCisJCQkJCQlyZXR1cm4gLTE7DQorCQkJ
CQl9DQorCQkJCSAgICAgICAgdGNwLT5mbGFncyAmPSB+VENCX1NVU1BFTkRF
RDsNCisJCQkJCWNvbnRpbnVlOw0KKwkJCQl9DQorCQkJfQ0KKyNlbmRpZg0K
IAkJCWlmICghY2ZsYWcNCiAJCQkgICAgJiYgKHF1YWxfZmxhZ3NbV1NUT1BT
SUcoc3RhdHVzKV0gJiBRVUFMX1NJR05BTCkpIHsNCiAJCQkJdW5zaWduZWQg
bG9uZyBhZGRyID0gMCwgcGMgPSAwOw0KZGlmZiAtdXJOIHN0cmFjZS00LjUv
c3lzY2FsbC5jIHN0cmFjZS00LjVtei9zeXNjYWxsLmMNCi0tLSBzdHJhY2Ut
NC41L3N5c2NhbGwuYwkyMDAzLTA5LTI1IDAwOjIyOjQxLjAwMDAwMDAwMCAr
MDIwMA0KKysrIHN0cmFjZS00LjVtei9zeXNjYWxsLmMJMjAwMy0xMS0xNSAx
NzozOTowOS4wMDAwMDAwMDAgKzAxMDANCkBAIC02LDYgKzYsNyBAQA0KICAq
IENvcHlyaWdodCAoYykgMTk5OSBJQk0gRGV1dHNjaGxhbmQgRW50d2lja2x1
bmcgR21iSCwgSUJNIENvcnBvcmF0aW9uDQogICogICAgICAgICAgICAgICAg
ICAgICBMaW51eCBmb3IgczM5MCBwb3J0IGJ5IEQuSi4gQmFycm93DQogICog
ICAgICAgICAgICAgICAgICAgIDxiYXJyb3dfZGpAbWFpbC55YWhvby5jb20s
ZGpiYXJyb3dAZGUuaWJtLmNvbT4NCisgKiBDb3B5cmlnaHQgKGMpIDIwMDMg
TWFjaWVqIFplbmN6eWtvd3NraSA8bWF6ZUBjZWxhLnBsPiBMaW51eCB4ODYg
SU8gdHJhY2UNCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICAqDQogICog
UmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBm
b3Jtcywgd2l0aCBvciB3aXRob3V0DQpAQCAtMjExMSw2ICsyMTEyLDE0IEBA
DQogCWlmIChyZXMgIT0gMSkNCiAJCXJldHVybiByZXM7DQogDQorI2lmIGRl
ZmluZWQoTElOVVgpICYmIGRlZmluZWQoSTM4NikNCisJaWYgKHRjcC0+aW9z
Y25vKSB7DQorCQl0Y3AtPnNjbm8gPSB0Y3AtPmlvc2NubzsNCisJCXRjcC0+
aW9zY25vID0gMDsNCisJCWZvcmNlX3Jlc3VsdCh0Y3AsIDAsIHRjcC0+aW9y
ZXR2YWwpOw0KKwl9DQorI2VuZGlmDQorDQogCWlmICh0Y3AtPmZsYWdzICYg
VENCX0lOU1lTQ0FMTCkgew0KIAkJbG9uZyB1X2Vycm9yOw0KIAkJcmVzID0g
Z2V0X2Vycm9yKHRjcCk7DQpAQCAtMjE2MSw3ICsyMTcwLDcgQEANCiAJCQl0
Y3AtPmZsYWdzICY9IH5UQ0JfSU5TWVNDQUxMOw0KIAkJCXJldHVybiAwOw0K
IAkJfQ0KLQ0KKwkJDQogCQlpZiAodGNwLT5zY25vID49IG5zeXNjYWxscyB8
fCB0Y3AtPnNjbm8gPCAwDQogCQkgICAgfHwgKHF1YWxfZmxhZ3NbdGNwLT5z
Y25vXSAmIFFVQUxfUkFXKSkNCiAJCQlzeXNfcmVzID0gcHJpbnRhcmdzKHRj
cCk7DQpAQCAtMjQxMyw2ICsyNDIyLDYxIEBADQogCXJldHVybiAwOw0KIH0N
CiANCisjaWYgZGVmaW5lZChMSU5VWCkgJiYgZGVmaW5lZChJMzg2KQ0KK2lu
dA0KK3N5c19pb3BsKHRjcCkNCitzdHJ1Y3QgdGNiICp0Y3A7DQorew0KKwlw
cmludGFyZ3ModGNwKTsNCisJaWYgKGlvZmxhZyAmJiAhKHRjcC0+ZmxhZ3Mg
JiBUQ0JfSU5TWVNDQUxMKSApIHsNCisJCWludCByZXM7IHVuc2lnbmVkIGxl
dmVsID0gdGNwLT51X2FyZ1swXTsNCisJCQ0KKwkJcmVzID0gLUVJTlZBTDsN
CisJCWlmIChsZXZlbCA+IDMpIGdvdG8gb3V0Ow0KKwkJLyogVHJ5aW5nIHRv
IGdhaW4gbW9yZSBwcml2aWxlZ2VzPyAqLw0KKwkJcmVzID0gLUVQRVJNOw0K
KwkJaWYgKGxldmVsID4gdGNwLT5pb3BsKSBpZiAoIXRjcC0+Y2FwX3Jhd2lv
KSBnb3RvIG91dDsNCisJCXJlcyA9IDA7DQorCQl0Y3AtPmlvcGwgPSBsZXZl
bDsNCisJICAgIG91dDoNCisJCXRjcC0+aW9yZXR2YWwgPSByZXM7DQorCQl0
Y3AtPmlvc2NubyA9IHRjcC0+c2NubzsNCisJCS8qIGlnbm9yZSB0aGUgc3lz
Y2FsbCAqLw0KKwkJdGNwLT5zY25vID0gMDsNCisJCXB0cmFjZShQVFJBQ0Vf
UE9LRVVTRVIsIHRjcC0+cGlkLCAoY2hhciopKDQqT1JJR19FQVgpLCAwKTsN
CisJfQ0KKwlyZXR1cm4gMDsNCit9DQorDQoraW50DQorc3lzX2lvcGVybSh0
Y3ApDQorc3RydWN0IHRjYiAqdGNwOw0KK3sNCisJcHJpbnRhcmdzKHRjcCk7
DQorCWlmIChpb2ZsYWcgJiYgISh0Y3AtPmZsYWdzICYgVENCX0lOU1lTQ0FM
TCkgKSB7DQorCQlpbnQgcmVzLCBpOw0KKwkJdW5zaWduZWQgZnJvbSA9IHRj
cC0+dV9hcmdbMF0sIG51bSA9IHRjcC0+dV9hcmdbMV0sIHR1cm5fb24gPSB0
Y3AtPnVfYXJnWzJdOw0KKwkJcmVzID0gLUVJTlZBTDsNCisJCWlmICgoZnJv
bSArIG51bSA8PSBmcm9tKSB8fCAoZnJvbSArIG51bSA+IE1BWF9JT1BFUk0p
KSBnb3RvIG91dDsNCisJCXJlcyA9IC1FUEVSTTsNCisJCWlmICh0dXJuX29u
ICYmICF0Y3AtPmNhcF9yYXdpbykgZ290byBvdXQ7DQorDQorCQlyZXMgPSAw
OyAvKiBkb2Vzbid0IGhhdmUgdG8gYmUgZmFzdCAqLw0KKwkJZm9yIChpID0g
ZnJvbTsgaSA8IGZyb20gKyBudW07IGkrKykgew0KKwkJCWlmICh0dXJuX29u
KSB0Y3AtPmlvX2JpdG1hcFtpID4+IDNdICY9IH4oIDEgPDwgKGkgJiA3KSAp
Ow0KKwkJCWVsc2UgICAgICAgICB0Y3AtPmlvX2JpdG1hcFtpID4+IDNdIHw9
ICAoIDEgPDwgKGkgJiA3KSApOw0KKwkJfTsNCisJICAgIG91dDoNCisJCXRj
cC0+aW9yZXR2YWwgPSByZXM7DQorCSAgICAgICAgdGNwLT5pb3Njbm8gPSB0
Y3AtPnNjbm87DQorCSAgICAgICAgLyogaWdub3JlIHRoZSBzeXNjYWxsICov
DQorCQl0Y3AtPnNjbm8gPSAwOw0KKwkgICAgICAgIHB0cmFjZShQVFJBQ0Vf
UE9LRVVTRVIsIHRjcC0+cGlkLCAoY2hhciopKDQqT1JJR19FQVgpLCAwKTsN
CisJfQ0KKwlyZXR1cm4gMDsNCit9DQorI2VuZGlmDQorDQogbG9uZw0KIGdl
dHJ2YWwyKHRjcCkNCiBzdHJ1Y3QgdGNiICp0Y3A7DQo=
---2032858206-1436789949-1069169503=:29639--
