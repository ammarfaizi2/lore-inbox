Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S263172AbTJZO1t (ORCPT <rfc822;willy@w.ods.org>);
	Sun, 26 Oct 2003 09:27:49 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S263173AbTJZO1t
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Sun, 26 Oct 2003 09:27:49 -0500
Received: from p060080.ppp.asahi-net.or.jp ([221.113.60.80]:42999 "EHLO
	mitou.ysato.dip.jp") by vger.kernel.org with ESMTP id S263172AbTJZO1r
	(ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Sun, 26 Oct 2003 09:27:47 -0500
Date: Sun, 26 Oct 2003 23:27:42 +0900
Message-ID: <m2ad7o8469.wl%ysato@users.sourceforge.jp>
From: Yoshinori Sato <ysato@users.sourceforge.jp>
To: Linus Torvalds <torvalds@osdl.org>
Cc: linux kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: [PATCH] h8/300 support update
User-Agent: Wanderlust/2.11.7 (Wonderwall) SEMI/1.14.5 (Awara-Onsen) LIMIT/1.14.7 (Fujiidera) APEL/10.6 Emacs/21.3 (i386-pc-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.5 - "Awara-Onsen")
Content-Type: multipart/mixed;
 boundary="Multipart_Sun_Oct_26_23:27:42_2003-1"
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

--Multipart_Sun_Oct_26_23:27:42_2003-1
Content-Type: text/plain; charset=US-ASCII

- add 'sched_clock'
- delete smplock.h

-- 
Yoshinori Sato
<ysato@users.sourceforge.jp>


--Multipart_Sun_Oct_26_23:27:42_2003-1
Content-Type: application/octet-stream; type=patch
Content-Disposition: attachment; filename="linux-2.6.0-test9.diff"
Content-Transfer-Encoding: 7bit

diff -Nru linux-2.6.0-test9/arch/h8300/kernel/time.c linux-2.6.0-test9-h8300/arch/h8300/kernel/time.c
--- linux-2.6.0-test9/arch/h8300/kernel/time.c	2003-10-17 00:07:45.000000000 +0900
+++ linux-2.6.0-test9-h8300/arch/h8300/kernel/time.c	2003-10-26 21:24:31.000000000 +0900
@@ -143,3 +143,10 @@
 }
 
 EXPORT_SYMBOL(do_settimeofday);
+
+unsigned long long sched_clock(void)
+{
+	return (unsigned long long)jiffies * (1000000000 / HZ);
+
+}
diff -Nru linux-2.6.0-test9/include/asm-h8300/smplock.h linux-2.6.0-test9-h8300/include/asm-h8300/smplock.h
--- linux-2.6.0-test9/include/asm-h8300/smplock.h	2003-08-23 09:00:15.000000000 +0900
+++ linux-2.6.0-test9-h8300/include/asm-h8300/smplock.h	1970-01-01 09:00:00.000000000 +0900
@@ -1,51 +0,0 @@
-/*
- * <asm/smplock.h>
- *
- * Default SMP lock implementation
- */
-#include <linux/interrupt.h>
-#include <linux/spinlock.h>
-
-extern spinlock_t kernel_flag;
-
-#define kernel_locked()		spin_is_locked(&kernel_flag)
-
-/*
- * Release global kernel lock and global interrupt lock
- */
-#define release_kernel_lock(task, cpu) \
-do { \
-	if (task->lock_depth >= 0) \
-		spin_unlock(&kernel_flag); \
-	release_irqlock(cpu); \
-	__sti(); \
-} while (0)
-
-/*
- * Re-acquire the kernel lock
- */
-#define reacquire_kernel_lock(task) \
-do { \
-	if (task->lock_depth >= 0) \
-		spin_lock(&kernel_flag); \
-} while (0)
-
-
-/*
- * Getting the big kernel lock.
- *
- * This cannot happen asynchronously,
- * so we only need to worry about other
- * CPU's.
- */
-extern __inline__ void lock_kernel(void)
-{
-	if (!++current->lock_depth)
-		spin_lock(&kernel_flag);
-}
-
-extern __inline__ void unlock_kernel(void)
-{
-	if (--current->lock_depth < 0)
-		spin_unlock(&kernel_flag);
-}

--Multipart_Sun_Oct_26_23:27:42_2003-1--
