Return-Path: <linux-kernel-owner+willy=40w.ods.org-S1030515AbWKOOyJ@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1030515AbWKOOyJ (ORCPT <rfc822;willy@w.ods.org>);
	Wed, 15 Nov 2006 09:54:09 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1030525AbWKOOyI
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Wed, 15 Nov 2006 09:54:08 -0500
Received: from public.id2-vpn.continvity.gns.novell.com ([195.33.99.129]:12695
	"EHLO emea1-mh.id2.novell.com") by vger.kernel.org with ESMTP
	id S1030515AbWKOOyG (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Wed, 15 Nov 2006 09:54:06 -0500
Message-Id: <455B3868.76E4.0078.0@novell.com>
X-Mailer: Novell GroupWise Internet Agent 7.0.1 
Date: Wed, 15 Nov 2006 14:55:20 +0000
From: "Jan Beulich" <jbeulich@novell.com>
To: <linux-kernel@vger.kernel.org>
Subject: [PATCH] i386: clear_fixmap() should not use set_pte()
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

While not strictly required with the current code (as the upper half of
page table entries generated by __set_fixmap() cannot be non-zero due
to the second parameter of this function being 'unsigned long'), the
use of set_pte() in __set_fixmap() in the context of clear_fixmap() is
still improper with CONFIG_X86_PAE (see the respective comment in
include/asm-i386/pgtable-3level.h) and would turn into a bug if that
second parameter ever gets changed to a 64-bit type.

Signed-off-by: Jan Beulich <jbeulich@novell.com>

--- linux-2.6.19-rc5/arch/i386/mm/pgtable.c	2006-11-08 09:21:37.000000000 +0100
+++ 2.6.19-rc5-i386-clear_fixmap/arch/i386/mm/pgtable.c	2006-11-06 12:13:29.000000000 +0100
@@ -95,8 +95,11 @@ static void set_pte_pfn(unsigned long va
 		return;
 	}
 	pte = pte_offset_kernel(pmd, vaddr);
-	/* <pfn,flags> stored as-is, to permit clearing entries */
-	set_pte(pte, pfn_pte(pfn, flags));
+	if (pgprot_val(flags))
+		/* <pfn,flags> stored as-is, to permit clearing entries */
+		set_pte(pte, pfn_pte(pfn, flags));
+	else
+		pte_clear(&init_mm, vaddr, pte);
 
 	/*
 	 * It's enough to flush this one mapping.


