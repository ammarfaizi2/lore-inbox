Return-Path: <linux-kernel-owner+willy=40w.ods.org-S269822AbUH0Aa0@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S269822AbUH0Aa0 (ORCPT <rfc822;willy@w.ods.org>);
	Thu, 26 Aug 2004 20:30:26 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S269795AbUH0A3m
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Thu, 26 Aug 2004 20:29:42 -0400
Received: from mx1.redhat.com ([66.187.233.31]:28838 "EHLO mx1.redhat.com")
	by vger.kernel.org with ESMTP id S269823AbUH0AXU (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 26 Aug 2004 20:23:20 -0400
From: David Howells <dhowells@redhat.com>
To: torvalds@osdl.org, akpm@osdl.org
cc: linux-kernel@vger.kernel.org, steved@redhat.com, dwmw2@redhat.com
Subject: [PATCH] CacheFS - general filesystem cache
User-Agent: EMH/1.14.1 SEMI/1.14.5 (Awara-Onsen) FLIM/1.14.5 (Demachiyanagi) APEL/10.6 Emacs/21.3 (i386-redhat-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.5 - "Awara-Onsen")
Content-Type: text/plain; charset=US-ASCII
Date: Fri, 27 Aug 2004 01:23:03 +0100
Message-ID: <17777.1093566183@redhat.com>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org


Hi Linus, Andrew,

I've packaged my generic filesystem cache filesystem into patches and also
produced patches for my AFS filesystem to use it. Work is also in progress to
alter the NFS client use this interface too, and I think the ISO9660
filesystem could also benefit.

I've put a tarball of them on my Red Hat webpage because one of them is rather
large. If you grab:

	http://people.redhat.com/~dhowells/cachefs/cachefs-patches.tar.bz2

You'll find the following patches contained therein:

    (1) cachefs-nullfileptr-2681mm4.diff

	Fix a bug introduced into do_generic_mapping_read() by which a file
	pointer becomes required. I had arranged things so that it was
	optional so that I could call it directly on an inode.

    (2) cachefs-rastateinit-2681mm4.diff

	Revert the change made to file_ra_state_init() that removed the symbol
	export that I'd put in, and also make it fully initialise the state
	again.

	This was also done so that do_generic_mapping_read() could be called
	directly on an inode.

    (3) cachefs-fs-2681mm4.diff

	The cachefs filesystem source and interface header file.

    (4) cachefs-doc-2681mm4.diff

	Documentation about using cachefs.

    (5) cachefs-wppageop-2681mm4.diff

	Add a notification operation to the address space that gets invoked
	when a read-only protected page is about to be made writable. I've
	shown this to Rik van Riel who seems happy with it.

	Using a combination of (5) and (6), I can have cachefs write a netfs
	page into the cache in the background whilst the netfs readpage
	completes and passes the now unlocked page back to userspace.

	Previously, the netfs readpage function had to be synchronous with
	respect to writing the page to disc. Now it can use this callback and
	prepare_write() to synchronise upon the page being modified in the
	page cache before it gets DMA'd to cachefs's disc block.

	David Woodhouse is also interested in using this to do lazy
	reservations in JFFS2 shared writable mapping support.

    (6) cachefs-fspagesync-2681mm4.diff

	This adds another page flag for intra-filesystem synchronisation, to
	operate in a manner similar to PG_writeback.

	I've made my AFS client use this to indicate that a page has now been
	written to the backing cache and can now be safely modified.

    (7) cachefs-afs-2681mm4.diff

	This changes my AFS client so that it can make use of cachefs.

Signed-Off-By: David Howells <dhowells@redhat.com>

I've also put a utility on my webpage for dumping the cachefs update journal
contents:

	http://people.redhat.com/~dhowells/cachefs/dump-journal.c

It just needs the fs/cachefs/cachefs-int.h header file placing in the same
directory to compile.

David
