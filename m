Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S268906AbRG0Rl7>; Fri, 27 Jul 2001 13:41:59 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S268908AbRG0Rlt>; Fri, 27 Jul 2001 13:41:49 -0400
Received: from ACAP-DEV.NAS.CMU.EDU ([128.2.6.63]:49670 "EHLO
	acap-dev.nas.cmu.edu") by vger.kernel.org with ESMTP
	id <S268906AbRG0Rli>; Fri, 27 Jul 2001 13:41:38 -0400
Date: Fri, 27 Jul 2001 13:41:40 -0400
Message-Id: <200107271741.f6RHfe8U010593@acap-dev.nas.cmu.edu>
From: Lawrence Greenfield <leg+@andrew.cmu.edu>
X-Mailer: BatIMail version 3.2
To: Alan Cox <alan@lxorguk.ukuu.org.uk>
Cc: linux-kernel@vger.kernel.org
In-Reply-To: <E15QAon-00061p-00@the-village.bc.nu>
Subject: Re: ext3-2.4-0.9.4
In-Reply-To: <E15QAon-00061p-00@the-village.bc.nu>
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org
Original-Recipient: rfc822;linux-kernel-outgoing

   Date: Fri, 27 Jul 2001 17:50:29 +0100 (BST)
   Cc: linux-kernel@vger.kernel.org
   From: Alan Cox <alan@lxorguk.ukuu.org.uk>

[...]
   > Thus why all reasonably paranoid MTAs and other mail programs say "use
   > chattr +S on ext2"---we need ordered metadata writes.

   And then your IDE disk gets you anyway. Also if you write metadata first 
   then you risk delivering email to the wrong person instead. 

These are tangential issues.  Not everybody uses IDE disks.  I'm not
asking for things that are impossible.  Just because sometimes the
hardware screws you isn't a good reason for not trying to do the right
thing.

The application can avoid the wrong file problem by zeroing out data
before releasing it to the OS to reallocate.

   > You want to help performance?  Give us an fsync() that works on
   > multiple file descriptors at once, or an async fsync() call.  Don't
   > make us fight the OS on getting data to disk.

   And what pray does an asynchronous fsync do. It seems to be a nop to me.

An async fsync allows me to issue multiple fsyncs and then wait for
all of them to complete, hopefully in the same framework that I would
do async I/O (but that's an argument for another day).

   Doing reliabile transactions on disk is a hard problem. That is why oracle
   and friends have spent many man years of research on this kind of problem. 
   Current unix mailers do the smoke mirrors and prayer bit to reduce the
   probability a little that is all, regardless of fs and os.

Isn't the point of the operating system to try to make it as easy as
possible to do these things correctly?

Otherwise you force anyone who wants to write a reliable application
(be it e-mail or not) to go to Oracle and one wonders why fsync() is
even implemented.

Larry

