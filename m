Return-Path: <linux-kernel-owner+willy=40w.ods.org-S265118AbUFAQ0Y@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S265118AbUFAQ0Y (ORCPT <rfc822;willy@w.ods.org>);
	Tue, 1 Jun 2004 12:26:24 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S265117AbUFAQX7
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 1 Jun 2004 12:23:59 -0400
Received: from cantor.suse.de ([195.135.220.2]:61353 "EHLO Cantor.suse.de")
	by vger.kernel.org with ESMTP id S265045AbUFAQVa (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Tue, 1 Jun 2004 12:21:30 -0400
Date: Tue, 01 Jun 2004 18:18:50 +0200
Message-ID: <s5h3c5fqmj9.wl@alsa2.suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Pavel Machek <pavel@suse.cz>
Cc: Arjan van de Ven <arjanv@redhat.com>, greg@kroah.com,
       linux-kernel@vger.kernel.org
Subject: Re: Resume enhancement: restore pci config space
In-Reply-To: <20040601160234.GB1899@atrey.karlin.mff.cuni.cz>
References: <20040526203524.GF2057@devserv.devel.redhat.com>
	<20040530184031.GF997@openzaurus.ucw.cz>
	<20040531133834.GA5834@devserv.devel.redhat.com>
	<s5hllj7qt7g.wl@alsa2.suse.de>
	<1086102397.7500.2.camel@laptop.fenrus.com>
	<s5hbrk3qoxw.wl@alsa2.suse.de>
	<20040601153800.GA22986@devserv.devel.redhat.com>
	<20040601160234.GB1899@atrey.karlin.mff.cuni.cz>
User-Agent: Wanderlust/2.10.1 (Watching The Wheels) SEMI/1.14.5 (Awara-Onsen) FLIM/1.14.5 (Demachiyanagi) APEL/10.6 MULE XEmacs/21.4 (patch 13) (Rational FORTRAN) (i386-suse-linux)
MIME-Version: 1.0 (generated by SEMI 1.14.5 - "Awara-Onsen")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

At Tue, 1 Jun 2004 18:02:34 +0200,
Pavel Machek wrote:
> 
> [It seems to me like ALSA can't easily put NULL into suspend/resume
> fields, because they have additional layer of abstraction between them
> and kernel.]

It does indeed.  ALSA provides the "common" PCI suspend/resume
callbacks, which call the internal suspend/resume callbacks.
It's for handling the power status from the external program, too.

These are defined as SND_PCI_PM_CALLBACKS.  If CONFIG_PM is not set,
it's expanded to empty.  So, typically the code looks like the
following:

static struct pci_driver driver = {
	.name = "Intel ICH",
	.id_table = snd_intel8x0_ids,
	.probe = snd_intel8x0_probe,
	.remove = __devexit_p(snd_intel8x0_remove),
	SND_PCI_PM_CALLBACKS
};


Takashi
