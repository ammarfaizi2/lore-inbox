Return-Path: <linux-kernel-owner+willy=40w.ods.org-S261916AbVHALfJ@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261916AbVHALfJ (ORCPT <rfc822;willy@w.ods.org>);
	Mon, 1 Aug 2005 07:35:09 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262120AbVHALfJ
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Mon, 1 Aug 2005 07:35:09 -0400
Received: from [202.125.86.130] ([202.125.86.130]:60360 "EHLO
	ns2.astrainfonets.net") by vger.kernel.org with ESMTP
	id S261916AbVHALfB (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Mon, 1 Aug 2005 07:35:01 -0400
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----_=_NextPart_001_01C5968D.0410407A"
Subject: RE: Unable to mount the SD card formatted using the DIGITAL CAMREA on Linux box
Date: Mon, 1 Aug 2005 17:01:00 +0530
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Message-ID: <C349E772C72290419567CFD84C26E01704213C@mail.esn.co.in>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: Unable to mount the SD card formatted using the DIGITAL CAMREA on Linux box
thread-index: AcWUaKVdGxOJK5y0QqG8d5NqQeDIAQCHnp9A
From: "Mukund JB." <mukundjb@esntechnologies.co.in>
To: "linux-os \(Dick Johnson\)" <linux-os@analogic.com>
Cc: "Lennart Sorensen" <lsorense@csclub.uwaterloo.ca>,
       "Srinivas G." <srinivasg@esntechnologies.co.in>,
       "linux-kernel-Mailing-list" <linux-kernel@vger.kernel.org>
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.

------_=_NextPart_001_01C5968D.0410407A
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

Dear all,

Below are my driver messages logged at initialization time & sfdisk call
time.=20

when module is initialized................

TIFM INFO | TI init Routine Invoked!
ReportMediaModel: ( SD card Details)
  Size            =3D 14 [MB]
  mwCylinders       =3D 450
  mwHeadCount       =3D 2
  mwSectorsPerTrack =3D 32

When the ioctl is invoked through the "sfdisk -lV /dev/tfa0"

TIFM INFO | <tifm_ioctl> invoked!=20
TIFM INFO | dev no. [ 0 ] sock no. [ 0 ]
TIFM INFO | <GetGeometry_ioctl> geo.cylinders =3D 450
TIFM INFO | <GetGeometry_ioctl> geo.heads =3D 2
TIFM INFO | <GetGeometry_ioctl> geo.sectors =3D 32
TIFM INFO | <GetGeometry_ioctl> geo.start =3D 0

This means that I am giving the proper details to the user program but
the sfdisk is printing it wrong (probably manipulation).

And when I try to mount ......

mount /dev/tfa0 /mnt
FAT: bogus number of reserved sectors
Mount: you must specify the filesystem type=20

mount -tvfat /dev/tfa0 /mnt
FAT: bogus number of reserved sectors
Mount: wrong fs type, bad option, bas superblock on /dev/tfa0,
	 or too many mounted file systems

I have gone through the mount.c code in order to understand where I am
exactly failing.=20
mount is failing in guess_fstype_and_mount() in do_mount_syscall after
issuing the mount sys call.
I am attaching the source code of mount functionality which may be on
some help to u in u8ndertaing why exactly its failing.

Regards,
Mukund Jampala




>-----Original Message-----
>From: linux-os (Dick Johnson) [mailto:linux-os@analogic.com]
>Sent: Friday, July 29, 2005 11:39 PM
>To: Mukund JB.
>Cc: Lennart Sorensen; Srinivas G.; linux-kernel-Mailing-list
>Subject: RE: Unable to mount the SD card formatted using the DIGITAL
CAMREA
>on Linux box
>
>
>On Fri, 29 Jul 2005, linux-os (Dick Johnson) wrote:
>
>>
>>
>> camera formatted info
>> ----------------------
>> Disk /dev/tfa0: 448 cylinders, 2 heads, 32 sectors/track
>> Units =3D cylinders of 32768 bytes, blocks of 1024 bytes, counting =
from
0
>>
>>    Device Boot Start     End   #cyls    #blocks   Id  System
>> /dev/tfa0p1   *      0+    449     450-     14371+   1  FAT12
>> /dev/tfa0p2          0       -       0          0    0  Empty
>> /dev/tfa0p3          0       -       0          0    0  Empty
>> /dev/tfa0p4          0       -       0          0    0  Empty
>> Warning: partition 1 extends past end of disk
>>
>> If it's 488 cylinders, then it should start at 0 and end at 447,
>> not 449.
>>
>
>Sorry typo, 487, not 447.
>
>
>> It looks like some kind of driver error to begin with. The
>> fact that it sometimes works should be overlooked until the
>> driver returns the correct number of cylinders (the same
>> number that the formatting utility gets). Check to see if
>> your driver could return a different disk size under different
>> conditions.
>>
>> On Fri, 29 Jul 2005, Mukund JB. wrote:
>>
>>>
>>> Dear Lennart, Dick Johnson, Erik Mouw & All,
>>>
>>> Thanks for all ur precious support.
>>>
>>> The cannon camera (other devices too) formatted SD is indeed a
partition
>>> FAT12. When I said
>>> sfdisk -l, it showed the fs ID as 1. 1 is indeed the FAT12 fs ID.
>>>
>>> Attached are the logs for win and camera device sfdisk -Vl
/dev/tfa0.
>>>
>>> The SD card formatted in camera is partitioned FAT12 disk.
>>> Also, the SD card formatted in windows is partitioned FAT12 disk.
>>> (see the attachment)
>>>
>>> on ur suggestion I verified whether camera partition device has a
valid
>>> FS ID. I verified. It is FAT12. It is the same for windows
>>> formatted device. The FS ID of both the formats is 1. i.e. FAT12.
>>>
>>> I has notion that my driver is not supporting partition devices.
This
>>> makes this clean that my driver is supporting the partition devices
>>> (windows formatted SD). If both are partitioned where is the
difference?
>>>
>>>
>>> So, can someone please help me telling what else could be missing
that
>>> is creating this problem?
>>>
>>> Regards,
>>> Mukund Jampala
>>>
>>>
>>>> -----Original Message-----
>>>> From: linux-kernel-owner@vger.kernel.org [mailto:linux-kernel-
>>>> owner@vger.kernel.org] On Behalf Of Lennart Sorensen
>>>> Sent: Friday, July 29, 2005 7:08 PM
>>>> To: linux-os (Dick Johnson)
>>>> Cc: Srinivas G.; linux-kernel-Mailing-list
>>>> Subject: Re: Unable to mount the SD card formatted using the
DIGITAL
>>> CAMREA
>>>> on Linux box
>>>>
>>>> On Fri, Jul 29, 2005 at 08:02:14AM -0400, linux-os (Dick Johnson)
>>> wrote:
>>>>> Execute linux `fdisk` on the device. You may find that the
>>>>> ID byte is wrong.
>>>>>
>>>>> Also, why do you need a special block device driver? The SanDisk
>>>>> and CompacFlash devices should look like IDE drives.
>>>>
>>>> SD usually is secure digital (MMC compatible somewhat I believe).
It
>>>> does not provide IDE unlike CompactFlash.  SD uses a serial
interface
>>> if
>>>> I remember correctly.
>>>>
>>>> Len Sorensen
>>>> -
>>>> To unsubscribe from this list: send the line "unsubscribe
linux-kernel"
>>> in
>>>> the body of a message to majordomo@vger.kernel.org
>>>> More majordomo info at  http://vger.kernel.org/majordomo-info.html
>>>> Please read the FAQ at  http://www.tux.org/lkml/
>>>
>>
>> Cheers,
>> Dick Johnson
>> Penguin : Linux version 2.6.12 on an i686 machine (5537.79 BogoMips).
>> Warning : 98.36% of all statistics are fiction.
>> .
>> I apologize for the following. I tried to kill it with the above dot
:
>>
>> ****************************************************************
>> The information transmitted in this message is confidential and may
be
>privileged.  Any review, retransmission, dissemination, or other use of
>this information by persons or entities other than the intended
recipient
>is prohibited.  If you are not the intended recipient, please notify
>Analogic Corporation immediately - by replying to this message or by
>sending an email to DeliveryErrors@analogic.com - and destroy all
copies of
>this information, including any attachments, without reading or
disclosing
>them.
>>
>> Thank you.
>> -
>> To unsubscribe from this list: send the line "unsubscribe
linux-kernel"
>in
>> the body of a message to majordomo@vger.kernel.org
>> More majordomo info at  http://vger.kernel.org/majordomo-info.html
>> Please read the FAQ at  http://www.tux.org/lkml/
>>
>
>Cheers,
>Dick Johnson
>Penguin : Linux version 2.6.12 on an i686 machine (5537.79 BogoMips).
>Warning : 98.36% of all statistics are fiction.
>.
>I apologize for the following. I tried to kill it with the above dot :
>
>****************************************************************
>The information transmitted in this message is confidential and may be
>privileged.  Any review, retransmission, dissemination, or other use of
>this information by persons or entities other than the intended
recipient
>is prohibited.  If you are not the intended recipient, please notify
>Analogic Corporation immediately - by replying to this message or by
>sending an email to DeliveryErrors@analogic.com - and destroy all
copies of
>this information, including any attachments, without reading or
disclosing
>them.
>
>
>Thank you.

------_=_NextPart_001_01C5968D.0410407A
Content-Type: application/octet-stream;
	name="mount_guess_fstype.c"
Content-Transfer-Encoding: base64
Content-Description: mount_guess_fstype.c
Content-Disposition: attachment;
	filename="mount_guess_fstype.c"

LyoKICogVGh1IEp1bCAxNCAwNzozMjo0MCAxOTk0OiBmYWl0aEBjcy51bmMuZWR1IGFkZGVkIGNo
YW5nZXMgZnJvbSBBZGFtCiAqIEouIFJpY2h0ZXIgKGFkYW1AYWRhbS55Z2dkcmFzaWwuY29tKSBz
byB0aGF0IC9wcm9jL2ZpbGVzeXN0ZW1zIGlzIHVzZWQKICogaWYgbm8gLXQgb3B0aW9uIGlzIGdp
dmVuLiAgSSBtb2RpZmllZCBoaXMgcGF0Y2hlcyBzbyB0aGF0LCBpZgogKiAvcHJvYy9maWxlc3lz
dGVtcyBpcyBub3QgYXZhaWxhYmxlLCB0aGUgYmVoYXZpb3Igb2YgbW91bnQgaXMgdGhlIHNhbWUg
YXMKICogaXQgd2FzIHByZXZpb3VzbHkuCiAqCiAqIFdlZCBGZWIgOCAwOToyMzoxOCAxOTk1OiBN
aWtlIEdydXBlbmhvZmYgPGthc2htaXJAdW1pYWNzLlVNRC5FRFU+IGFkZGVkCiAqIGEgcHJvYmUg
b2YgdGhlIHN1cGVyYmxvY2sgZm9yIHRoZSB0eXBlIGJlZm9yZSAvcHJvYy9maWxlc3lzdGVtcyBp
cwogKiBjaGVja2VkLgogKgogKiBGcmkgQXByICA1IDAxOjEzOjMzIDE5OTY6IHF1aW5sYW5AYnVj
a25lbGwuZWR1LCBmaXhlZCB1cCBpc285NjYwIGF1dG9kZXRlY3QKICoKICogV2VkIE5vdiAgMTEg
MTE6MzM6NTUgMTk5ODogSy5HYXJsb2ZmQHBpbmcuZGUsIHRyeSAvZXRjL2ZpbGVzeXN0ZW1zIGJl
Zm9yZQogKiAvcHJvYy9maWxlc3lzdGVtcwogKiBbVGhpcyB3YXMgbWFpbmx5IGluIG9yZGVyIHRv
IHNwZWNpZnkgdmZhdCBiZWZvcmUgZmF0OyB0aGVzZSBkYXlzIHdlIG9mdGVuCiAqICBkZXRlY3Qg
KmZhdCBhbmQgdGhlbiBhc3N1bWUgdmZhdCwgc28gcGVyaGFwcyAvZXRjL2ZpbGVzeXN0ZW1zIGlz
bnQKICogIHNvIHVzZWZ1bCBhbnltb3JlLl0KICoKICogMTk5OS0wMi0yMiBBcmthZGl1c3ogTWm2
a2lld2ljeiA8bWlzaWVrQHBsZC5PUkcuUEw+CiAqIGFkZGVkIE5hdGl2ZSBMYW5ndWFnZSBTdXBw
b3J0CiAqCiAqIDIwMDAtMTItMDEgU2VwcCBXaWpuYW5kcyA8bXJyYXp6QGdhcmJhZ2UtY29kZXJ6
Lm5ldD4KICogYWRkZWQgcHJvYmVzIGZvciBjcmFtZnMsIGhmcywgaHBmcyBhbmQgYWRmcy4KICoK
ICogMjAwMS0xMC0yNiBUaW0gTGF1bmNoYnVyeQogKiBhZGRlZCBzeXN2IG1hZ2ljLgogKgogKiBh
ZWIgLSBtYW55IGNoYW5nZXMuCiAqCiAqLwoKI2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxz
dHJpbmcuaD4KI2luY2x1ZGUgPGZjbnRsLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8
dW5pc3RkLmg+CiNpbmNsdWRlIDxzeXMvc3RhdC5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNp
bmNsdWRlICJsaW51eF9mcy5oIgojaW5jbHVkZSAibW91bnRfZ3Vlc3NfZnN0eXBlLmgiCiNpbmNs
dWRlICJzdW5kcmllcy5oIgkJLyogZm9yIHhzdHJkdXAgKi8KI2luY2x1ZGUgIm5scy5oIgoKI2Rl
ZmluZSBFVENfRklMRVNZU1RFTVMJCSIvZXRjL2ZpbGVzeXN0ZW1zIgojZGVmaW5lIFBST0NfRklM
RVNZU1RFTVMJIi9wcm9jL2ZpbGVzeXN0ZW1zIgoKI2RlZmluZSBTSVpFKGEpIChzaXplb2YoYSkv
c2l6ZW9mKGFbMF0pKQoKLyogTW9zdCBmaWxlIHN5c3RlbSB0eXBlcyBjYW4gYmUgcmVjb2duaXpl
ZCBieSBhIGBtYWdpYycgbnVtYmVyCiAgIGluIHRoZSBzdXBlcmJsb2NrLiAgTm90ZSB0aGF0IHRo
ZSBvcmRlciBvZiB0aGUgdGVzdHMgaXMKICAgc2lnbmlmaWNhbnQ6IGJ5IGNvaW5jaWRlbmNlIGEg
ZmlsZXN5c3RlbSBjYW4gaGF2ZSB0aGUKICAgbWFnaWMgbnVtYmVycyBmb3Igc2V2ZXJhbCBmaWxl
IHN5c3RlbSB0eXBlcyBzaW11bHRhbmVvdXNseS4KICAgRm9yIGV4YW1wbGUsIHRoZSByb21mcyBt
YWdpYyBsaXZlcyBpbiB0aGUgMXN0IHNlY3RvcjsKICAgeGlhZnMgZG9lcyBub3QgdG91Y2ggdGhl
IDFzdCBzZWN0b3IgYW5kIGhhcyBpdHMgbWFnaWMgaW4KICAgdGhlIDJuZCBzZWN0b3I7IGV4dDIg
ZG9lcyBub3QgdG91Y2ggdGhlIGZpcnN0IHR3byBzZWN0b3JzLiAqLwoKc3RhdGljIGlubGluZSB1
bnNpZ25lZCBzaG9ydApzd2FwcGVkKHVuc2lnbmVkIHNob3J0IGEpIHsKICAgICByZXR1cm4gKGE+
PjgpIHwgKGE8PDgpOwp9CgovKgogICAgY2hhciAqZ3Vlc3NfZnN0eXBlKGNvbnN0IGNoYXIgKmRl
dmljZSk7CgogICAgUHJvYmVzIHRoZSBkZXZpY2UgYW5kIGF0dGVtcHRzIHRvIGRldGVybWluZSB0
aGUgdHlwZSBvZiBmaWxlc3lzdGVtCiAgICBjb250YWluZWQgd2l0aGluLgoKICAgIE9yaWdpbmFs
IHJvdXRpbmUgYnkgPGptb3JyaXNvQGJvZ29taXBzLnd3LnViYy5jYT47IG1hZGUgaW50byBhIGZ1
bmN0aW9uCiAgICBmb3IgbW91bnQoOCkgYnkgTWlrZSBHcnVwZW5ob2ZmIDxrYXNobWlyQHVtaWFj
cy51bWQuZWR1Pi4KICAgIENvcnJlY3RlZCB0aGUgdGVzdCBmb3IgeGlhZnMgLSBhZWIKICAgIFJl
YWQgdGhlIHN1cGVyYmxvY2sgb25seSBvbmNlIC0gYWViCiAgICBBZGRlZCBhIHZlcnkgd2VhayBo
ZXVyaXN0aWMgZm9yIHZmYXQgLSBhZWIKICAgIEFkZGVkIGlzbzk2NjAsIG1pbml4LXYyLCByb21m
cywgcW54NCwgdWRmLCB2eGZzLCBzd2FwIC0gYWViCiAgICBBZGRlZCBhIHRlc3QgZm9yIGhpZ2gg
c2llcnJhIChpc285NjYwKSAtIHF1aW5sYW5AYnVja25lbGwuZWR1CiAgICBBZGRlZCB1ZnMgZnJv
bSBhIHBhdGNoIGJ5IGpqLiBCdXQgbWF5YmUgdGhlcmUgYXJlIHNldmVyYWwgdHlwZXMgb2YgdWZz
PwogICAgQWRkZWQgbnRmcyBmcm9tIGEgcGF0Y2ggYnkgUmljaGFyZCBSdXNzb24uCiAgICBBZGRl
ZCB4ZnMgLSAyMDAwLTAzLTIxIE1hcnRpbiBLLiBQZXRlcnNlbiA8bWtwQGxpbnV4Y2FyZS5jb20+
CiAgICBBZGRlZCBjcmFtZnMsIGhmcywgaHBmcywgYWRmcyAtIFNlcHAgV2lqbmFuZHMgPG1ycmF6
ekBnYXJiYWdlLWNvZGVyei5uZXQ+CiAgICBBZGRlZCBleHQzIC0gQW5kcmV3IE1vcnRvbgogICAg
QWRkZWQgamZzIC0gQ2hyaXN0b3BoIEhlbGx3aWcKICAgIEFkZGVkIHN5c3YgLSBUaW0gTGF1bmNo
YnVyeQogICAgQWRkZWQgdWRmIC0gQnJ5Y2UgTmVzYml0dAoqLwpzdGF0aWMgY2hhcgoqbWFnaWNf
a25vd25bXSA9IHsKCSJhZGZzIiwgImJmcyIsICJjcmFtZnMiLCAiZXh0IiwgImV4dDIiLCAiZXh0
MyIsCgkiaGZzIiwgImhwZnMiLCAiaXNvOTY2MCIsICJqZnMiLCAibWluaXgiLCAibnRmcyIsCgki
cW54NCIsICJyZWlzZXJmcyIsICJyb21mcyIsICJzd2FwIiwgInN5c3YiLCAidWRmIiwgInVmcyIs
CgkidnhmcyIsICJ4ZnMiLCAieGlhZnMiCn07CgpzdGF0aWMgc3RydWN0IHRyaWVkIHsKCXN0cnVj
dCB0cmllZCAqbmV4dDsKCWNoYXIgKnR5cGU7Cn0gKnRyaWVkID0gTlVMTDsKCnN0YXRpYyBpbnQK
d2FzX3Rlc3RlZChjb25zdCBjaGFyICpmc3R5cGUpIHsKCWNoYXIgKiptOwoJc3RydWN0IHRyaWVk
ICp0OwoKCWZvciAobSA9IG1hZ2ljX2tub3duOyBtIC0gbWFnaWNfa25vd24gPCBTSVpFKG1hZ2lj
X2tub3duKTsgbSsrKQoJCWlmICghc3RyY21wKCptLCBmc3R5cGUpKQoJCQlyZXR1cm4gMTsKCWZv
ciAodCA9IHRyaWVkOyB0OyB0ID0gdC0+bmV4dCkgewoJCWlmICghc3RyY21wKHQtPnR5cGUsIGZz
dHlwZSkpCgkJCXJldHVybiAxOwoJfQoJcmV0dXJuIDA7Cn0KCnN0YXRpYyB2b2lkCnNldF90ZXN0
ZWQoY29uc3QgY2hhciAqZnN0eXBlKSB7CglzdHJ1Y3QgdHJpZWQgKnQgPSB4bWFsbG9jKHNpemVv
ZihzdHJ1Y3QgdHJpZWQpKTsKCgl0LT5uZXh0ID0gdHJpZWQ7Cgl0LT50eXBlID0geHN0cmR1cChm
c3R5cGUpOwoJdHJpZWQgPSB0Owp9CgpzdGF0aWMgdm9pZApmcmVlX3Rlc3RlZCh2b2lkKSB7Cglz
dHJ1Y3QgdHJpZWQgKnQsICp0dDsKCgl0ID0gdHJpZWQ7Cgl3aGlsZSh0KSB7CgkJZnJlZSh0LT50
eXBlKTsKCQl0dCA9IHQtPm5leHQ7CgkJZnJlZSh0KTsKCQl0ID0gdHQ7Cgl9Cgl0cmllZCA9IE5V
TEw7Cn0KCi8qCiAqIHVkZiBtYWdpYyAtIEkgZmluZCB0aGF0IHRyeWluZyB0byBtb3VudCBnYXJi
YWdlIGFzIGFuIHVkZiBmcwogKiBjYXVzZXMgYSB2ZXJ5IGxhcmdlIGtlcm5lbCBkZWxheSwgYWxt
b3N0IGtpbGxpbmcgdGhlIG1hY2hpbmUuCiAqIFNvLCB3ZSBkbyBub3QgdHJ5IHVkZiB1bmxlc3Mg
dGhlcmUgaXMgcG9zaXRpdmUgZXZpZGVuY2UgdGhhdCBpdAogKiBtaWdodCB3b3JrLiBTdHJpbmdz
IGJlbG93IHRha2VuIGZyb20gRUNNQSAxNjcuCiAqLwovKgogKiBJdCBzZWVtcyB0aGF0IGJlZm9y
ZSB1ZGYgMi4wMCB0aGUgdm9sdW1lIGRlc2NyaXB0b3Igd2FzIG5vdCB3ZWxsCiAqIGRlZmluZWQu
ICBGb3IgMi4wMCB5b3UncmUgc3VwcG9zZWQgdG8ga2VlcCBzY2FubmluZyByZWNvcmRzIHVudGls
CiAqIHlvdSBmaW5kIG9uZSBOT1QgaW4gdGhpcyBsaXN0LiAgKFNlZSBFQ01BIDIvOC4zLjEpLgog
Ki8Kc3RhdGljIGNoYXIKKnVkZl9tYWdpY1tdID0geyAiQkVBMDEiLCAiQk9PVDIiLCAiQ0QwMDEi
LCAiQ0RXMDIiLCAiTlNSMDIiLAoJCSAiTlNSMDMiLCAiVEVBMDEiIH07CgoKc3RhdGljIGludApt
YXlfYmVfdWRmKGNvbnN0IGNoYXIgKmlkKSB7CiAgICBjaGFyICoqbTsKCiAgICBmb3IgKG0gPSB1
ZGZfbWFnaWM7IG0gLSB1ZGZfbWFnaWMgPCBTSVpFKHVkZl9tYWdpYyk7IG0rKykKICAgICAgIGlm
ICghc3RybmNtcCgqbSwgaWQsIDUpKQoJICByZXR1cm4gMTsKICAgIHJldHVybiAwOwp9CgovKiB3
ZSBzYXcgIkNEMDAxIiAtIG1heSBiZSBpc285NjYwIG9yIHVkZiAtIEJyeWNlIE5lc2JpdHQgKi8K
c3RhdGljIGludAppc19yZWFsbHlfdWRmKGludCBmZCkgewoJaW50IGosIGJzOwoJc3RydWN0IGlz
b192b2x1bWVfZGVzY3JpcHRvciBpc29zYjsKCgkvKiBkZXRlcm1pbmUgdGhlIGJsb2NrIHNpemUg
Ynkgc2Nhbm5pbmcgaW4gMksgaW5jcmVtZW50cwoJICAgKGJsb2NrIHNpemVzIGxhcmdlciB0aGFu
IDJLIHdpbGwgYmUgbnVsbCBwYWRkZWQpICovCglmb3IgKGJzID0gMTsgYnMgPCAxNjsgYnMrKykg
ewoJCWxzZWVrKGZkLCBicyoyMDQ4KzMyNzY4LCBTRUVLX1NFVCk7CgkJaWYgKHJlYWQoZmQsIChj
aGFyICopJmlzb3NiLCBzaXplb2YoaXNvc2IpKSAhPSBzaXplb2YoaXNvc2IpKQoJCQlyZXR1cm4g
MDsKCQlpZiAoaXNvc2IuaWRbMF0pCgkJCWJyZWFrOwoJfQoKCS8qIFNjYW4gdXAgdG8gYW5vdGhl
ciA2NCBibG9ja3MgbG9va2luZyBmb3IgYWRkaXRpb25hbCBWU0QncyAqLwoJZm9yIChqID0gMTsg
aiA8IDY0OyBqKyspIHsKCQlpZiAoaiA+IDEpIHsKCQkJbHNlZWsoZmQsIGoqYnMqMjA0OCszMjc2
OCwgU0VFS19TRVQpOwoJCQlpZiAocmVhZChmZCwgKGNoYXIgKikmaXNvc2IsIHNpemVvZihpc29z
YikpCgkJCSAgICAhPSBzaXplb2YoaXNvc2IpKQoJCQkJcmV0dXJuIDA7CgkJfQoJCS8qIElmIHdl
IGZpbmQgTlNSMHggdGhlbiBjYWxsIGl0IHVkZjoKCQkgICBOU1IwMSBmb3IgVURGIDEuMDAKCQkg
ICBOU1IwMiBmb3IgVURGIDEuNTAKCQkgICBOU1IwMyBmb3IgVURGIDIuMDAgKi8KCQlpZiAoIXN0
cm5jbXAoaXNvc2IuaWQsICJOU1IwIiwgNCkpCgkJCXJldHVybiAxOwoJCWlmICghbWF5X2JlX3Vk
Zihpc29zYi5pZCkpCgkJCXJldHVybiAwOwoJfQoKCXJldHVybiAwOwp9CgpzdGF0aWMgaW50Cm1h
eV9iZV9zd2FwKGNvbnN0IGNoYXIgKnMpIHsKCXJldHVybiAoc3RybmNtcChzLTEwLCAiU1dBUC1T
UEFDRSIsIDEwKSA9PSAwIHx8CgkJc3RybmNtcChzLTEwLCAiU1dBUFNQQUNFMiIsIDEwKSA9PSAw
KTsKfQoKLyogcmF0aGVyIHdlYWsgbmVjZXNzYXJ5IGNvbmRpdGlvbiAqLwpzdGF0aWMgaW50Cm1h
eV9iZV9hZGZzKGNvbnN0IHVfY2hhciAqcykgewoJdV9jaGFyICpwOwoJaW50IHN1bTsKCglwID0g
KHVfY2hhciAqKSBzICsgNTExOwoJc3VtID0gMDsKCXdoaWxlKC0tcCAhPSBzKQoJCXN1bSA9IChz
dW0gPj4gOCkgKyAoc3VtICYgMHhmZikgKyAqcDsKCglyZXR1cm4gKHN1bSA9PSBwWzUxMV0pOwp9
CgpzdGF0aWMgaW50IGlzX3JlaXNlcmZzX21hZ2ljX3N0cmluZyAoc3RydWN0IHJlaXNlcmZzX3N1
cGVyX2Jsb2NrICogcnMpCnsKICAgIHJldHVybiAoIXN0cm5jbXAgKHJzLT5zX21hZ2ljLCBSRUlT
RVJGU19TVVBFUl9NQUdJQ19TVFJJTkcsIAoJCSAgICAgIHN0cmxlbiAoIFJFSVNFUkZTX1NVUEVS
X01BR0lDX1NUUklORykpIHx8CgkgICAgIXN0cm5jbXAgKHJzLT5zX21hZ2ljLCBSRUlTRVIyRlNf
U1VQRVJfTUFHSUNfU1RSSU5HLCAKCQkgICAgICBzdHJsZW4gKCBSRUlTRVIyRlNfU1VQRVJfTUFH
SUNfU1RSSU5HKSkpOwp9CgpjaGFyICoKZG9fZ3Vlc3NfZnN0eXBlKGNvbnN0IGNoYXIgKmRldmlj
ZSkgewogICAgaW50IGZkOwogICAgY2hhciAqdHlwZSA9IE5VTEw7CiAgICB1bmlvbiB7CglzdHJ1
Y3QgbWluaXhfc3VwZXJfYmxvY2sgbXM7CglzdHJ1Y3QgZXh0X3N1cGVyX2Jsb2NrIGVzOwoJc3Ry
dWN0IGV4dDJfc3VwZXJfYmxvY2sgZTJzOwoJc3RydWN0IHZ4ZnNfc3VwZXJfYmxvY2sgdnM7CiAg
ICB9IHNiOwkJCS8qIHN0dWZmIGF0IDEwMjQgKi8KICAgIHVuaW9uIHsKCXN0cnVjdCB4aWFmc19z
dXBlcl9ibG9jayB4aWFzYjsKCWNoYXIgcm9tZnNfbWFnaWNbOF07CgljaGFyIHFueDRmc19tYWdp
Y1sxMF07CS8qIGlnbm9yZSBmaXJzdCA0IGJ5dGVzICovCglsb25nIGJmc19tYWdpYzsKCXN0cnVj
dCBudGZzX3N1cGVyX2Jsb2NrIG50ZnNzYjsKCXN0cnVjdCBmYXRfc3VwZXJfYmxvY2sgZmF0c2I7
CglzdHJ1Y3QgeGZzX3N1cGVyX2Jsb2NrIHhmc2I7CglzdHJ1Y3QgY3JhbWZzX3N1cGVyX2Jsb2Nr
IGNyYW1mc3NiOwogICAgfSB4c2I7CiAgICBzdHJ1Y3QgdWZzX3N1cGVyX2Jsb2NrIHVmc3NiOwog
ICAgdW5pb24gewoJc3RydWN0IGlzb192b2x1bWVfZGVzY3JpcHRvciBpc287CglzdHJ1Y3QgaHNf
dm9sdW1lX2Rlc2NyaXB0b3IgaHM7CiAgICB9IGlzb3NiOwogICAgc3RydWN0IHJlaXNlcmZzX3N1
cGVyX2Jsb2NrIHJlaXNlcmZzc2I7CS8qIGJsb2NrIDY0IG9yIDggKi8KICAgIHN0cnVjdCBqZnNf
c3VwZXJfYmxvY2sgamZzc2I7CQkvKiBibG9jayAzMiAqLwogICAgc3RydWN0IGhmc19zdXBlcl9i
bG9jayBoZnNzYjsKICAgIHN0cnVjdCBocGZzX3N1cGVyX2Jsb2NrIGhwZnNzYjsKICAgIHN0cnVj
dCBhZGZzX3N1cGVyX2Jsb2NrIGFkZnNzYjsKICAgIHN0cnVjdCBzeXN2X3N1cGVyX2Jsb2NrIHN2
c2I7CiAgICBzdHJ1Y3Qgc3RhdCBzdGF0YnVmOwoKICAgIC8qIG9wZW5pbmcgYW5kIHJlYWRpbmcg
YW4gYXJiaXRyYXJ5IHVua25vd24gcGF0aCBjYW4gaGF2ZQogICAgICAgdW5kZXNpcmVkIHNpZGUg
ZWZmZWN0cyAtIGZpcnN0IGNoZWNrIHRoYXQgYGRldmljZScgcmVmZXJzCiAgICAgICB0byBhIGJs
b2NrIGRldmljZSBvciBvcmRpbmFyeSBmaWxlICovCiAgICBpZiAoc3RhdCAoZGV2aWNlLCAmc3Rh
dGJ1ZikgfHwKCSEoU19JU0JMSyhzdGF0YnVmLnN0X21vZGUpIHx8IFNfSVNSRUcoc3RhdGJ1Zi5z
dF9tb2RlKSkpCiAgICAgIHJldHVybiAwOwoKICAgIGZkID0gb3BlbihkZXZpY2UsIE9fUkRPTkxZ
KTsKICAgIGlmIChmZCA8IDApCiAgICAgIHJldHVybiAwOwoKICAgIC8qIGRvIHNlZWtzIGFuZCBy
ZWFkcyBpbiBkaXNrIG9yZGVyLCBvdGhlcndpc2UgYSB2ZXJ5IHNob3J0CiAgICAgICBwYXJ0aXRp
b24gbWF5IGNhdXNlIGEgZmFpbHVyZSBiZWNhdXNlIG9mIHJlYWQgZXJyb3IgKi8KCiAgICBpZiAo
IXR5cGUpIHsKCSAvKiBibG9jayAwICovCgkgaWYgKGxzZWVrKGZkLCAwLCBTRUVLX1NFVCkgIT0g
MAoJICAgICB8fCByZWFkKGZkLCAoY2hhciAqKSAmeHNiLCBzaXplb2YoeHNiKSkgIT0gc2l6ZW9m
KHhzYikpCgkgICAgICBnb3RvIHRyeV9pc285NjYwOwoJIC8qIEd5b3JneSBLb3Zlc2RpOiBub25l
IG9mIG15IHBob3RvY2RzIGhhcyBhIHJlYWRhYmxlIGJsb2NrIDAgKi8KCgkgaWYgKHhpYWZzbWFn
aWMoeHNiLnhpYXNiKSA9PSBfWElBRlNfU1VQRVJfTUFHSUMpCgkgICAgICB0eXBlID0gInhpYWZz
IjsKCSBlbHNlIGlmKCFzdHJuY21wKHhzYi5yb21mc19tYWdpYywgIi1yb20xZnMtIiwgOCkpCgkg
ICAgICB0eXBlID0gInJvbWZzIjsKCSBlbHNlIGlmKCFzdHJuY21wKHhzYi54ZnNiLnNfbWFnaWMs
IFhGU19TVVBFUl9NQUdJQywgNCkpCgkgICAgICB0eXBlID0gInhmcyI7CgkgZWxzZSBpZighc3Ry
bmNtcCh4c2IucW54NGZzX21hZ2ljKzQsICJRTlg0RlMiLCA2KSkKCSAgICAgIHR5cGUgPSAicW54
NCI7CgkgZWxzZSBpZih4c2IuYmZzX21hZ2ljID09IDB4MWJhZGZhY2UpCgkgICAgICB0eXBlID0g
ImJmcyI7CgkgZWxzZSBpZighc3RybmNtcCh4c2IubnRmc3NiLnNfbWFnaWMsIE5URlNfU1VQRVJf
TUFHSUMsCgkJCSAgc2l6ZW9mKHhzYi5udGZzc2Iuc19tYWdpYykpKQoJICAgICAgdHlwZSA9ICJu
dGZzIjsKCSBlbHNlIGlmKGNyYW1mc21hZ2ljKHhzYi5jcmFtZnNzYikgPT0gQ1JBTUZTX1NVUEVS
X01BR0lDIHx8CgkJIGNyYW1mc21hZ2ljKHhzYi5jcmFtZnNzYikgPT0gQ1JBTUZTX1NVUEVSX01B
R0lDX0JFKQoJICAgICAgdHlwZSA9ICJjcmFtZnMiOwoJIGVsc2UgaWYgKCghc3RybmNtcCh4c2Iu
ZmF0c2Iuc19vcywgIk1TRE9TIiwgNSkgfHwKCQkgICAhc3RybmNtcCh4c2IuZmF0c2Iuc19vcywg
Ik1TV0lOIiwgNSkgfHwKCQkgICAhc3RybmNtcCh4c2IuZmF0c2Iuc19vcywgIk1UT09MIiwgNSkg
fHwKCQkgICAhc3RybmNtcCh4c2IuZmF0c2Iuc19vcywgIklCTSIsIDMpIHx8CgkJICAgIXN0cm5j
bXAoeHNiLmZhdHNiLnNfb3MsICJEUkRPUyIsIDUpIHx8CgkJICAgIXN0cm5jbXAoeHNiLmZhdHNi
LnNfb3MsICJta2Rvc2ZzIiwgNykgfHwKCQkgICAhc3RybmNtcCh4c2IuZmF0c2Iuc19vcywgImtt
a2Rvc2ZzIiwgOCkgfHwKCQkgICAvKiBNaWNoYWwgU3ZlYzogY3JlYXRlZCBieSBmZGZvcm1hdCwg
b2xkIG1zZG9zIHV0aWxpdHkgZm9yCgkJICAgICAgZm9ybWF0dGluZyBsYXJnZSAoMS43KSBmbG9w
cHkgZGlza3MuICovCgkJICAgIXN0cm5jbXAoeHNiLmZhdHNiLnNfb3MsICJDSC1GT1IxOCIsIDgp
KQoJCSAgJiYgKCFzdHJuY21wKHhzYi5mYXRzYi5zX2ZzLCAiRkFUMTIgICAiLCA4KSB8fAoJCSAg
ICAgICFzdHJuY21wKHhzYi5mYXRzYi5zX2ZzLCAiRkFUMTYgICAiLCA4KSB8fAoJCSAgICAgICFz
dHJuY21wKHhzYi5mYXRzYi5zX2ZzMiwgIkZBVDMyICAgIiwgOCkpKQoJICAgICAgdHlwZSA9ICJ2
ZmF0IjsJLyogb25seSBndWVzc2luZyAtIG1pZ2h0IGFzIHdlbGwgYmUgZmF0IG9yIHVtc2RvcyAq
LwogICAgfQoKICAgIGlmICghdHlwZSkgewoJICAgIC8qIHNlY3RvciAxICovCgkgICAgaWYgKGxz
ZWVrKGZkLCA1MTIgLCBTRUVLX1NFVCkgIT0gNTEyCgkJfHwgcmVhZChmZCwgKGNoYXIgKikgJnN2
c2IsIHNpemVvZihzdnNiKSkgIT0gc2l6ZW9mKHN2c2IpKQoJCSAgICBnb3RvIGlvX2Vycm9yOwoJ
ICAgIGlmIChzeXN2bWFnaWMoc3ZzYikgPT0gU1lTVl9TVVBFUl9NQUdJQyApCgkJICAgIHR5cGUg
PSAic3lzdiI7CiAgICB9CgogICAgaWYgKCF0eXBlKSB7CgkvKiBibG9jayAxICovCglpZiAobHNl
ZWsoZmQsIDEwMjQsIFNFRUtfU0VUKSAhPSAxMDI0IHx8CgkgICAgcmVhZChmZCwgKGNoYXIgKikg
JnNiLCBzaXplb2Yoc2IpKSAhPSBzaXplb2Yoc2IpKQoJCWdvdG8gaW9fZXJyb3I7CgoJLyogZXh0
MiBoYXMgbWFnaWMgaW4gbGl0dGxlLWVuZGlhbiBvbiBkaXNrLCBzbyAic3dhcHBlZCIgaXMKCSAg
IHN1cGVyZmx1b3VzOyBob3dldmVyLCB0aGVyZSBoYXZlIGV4aXN0ZWQgc3RyYW5nZSBieXRlc3dh
cHBlZAoJICAgUFBDIGV4dDIgc3lzdGVtcyAqLwoJaWYgKGV4dDJtYWdpYyhzYi5lMnMpID09IEVY
VDJfU1VQRVJfTUFHSUMgfHwKCSAgICBleHQybWFnaWMoc2IuZTJzKSA9PSBFWFQyX1BSRV8wMkJf
TUFHSUMgfHwKCSAgICBleHQybWFnaWMoc2IuZTJzKSA9PSBzd2FwcGVkKEVYVDJfU1VQRVJfTUFH
SUMpKSB7CgkJdHlwZSA9ICJleHQyIjsKCgkgICAgIC8qIG1heWJlIGV2ZW4gZXh0Mz8gKi8KCSAg
ICAgaWYgKChhc3NlbWJsZTRsZShzYi5lMnMuc19mZWF0dXJlX2NvbXBhdCkKCQkgICYgRVhUM19G
RUFUVVJFX0NPTVBBVF9IQVNfSk9VUk5BTCkgJiYKCQkgYXNzZW1ibGU0bGUoc2IuZTJzLnNfam91
cm5hbF9pbnVtKSAhPSAwKQoJCSAgICAgdHlwZSA9ICJleHQzIjsJLyogImV4dDMsZXh0MiIgKi8K
CX0KCgllbHNlIGlmIChtaW5peG1hZ2ljKHNiLm1zKSA9PSBNSU5JWF9TVVBFUl9NQUdJQyB8fAoJ
CSBtaW5peG1hZ2ljKHNiLm1zKSA9PSBNSU5JWF9TVVBFUl9NQUdJQzIgfHwKCQkgbWluaXhtYWdp
YyhzYi5tcykgPT0gc3dhcHBlZChNSU5JWF9TVVBFUl9NQUdJQzIpIHx8CgkJIG1pbml4bWFnaWMo
c2IubXMpID09IE1JTklYMl9TVVBFUl9NQUdJQyB8fAoJCSBtaW5peG1hZ2ljKHNiLm1zKSA9PSBN
SU5JWDJfU1VQRVJfTUFHSUMyKQoJCXR5cGUgPSAibWluaXgiOwoKCWVsc2UgaWYgKGV4dG1hZ2lj
KHNiLmVzKSA9PSBFWFRfU1VQRVJfTUFHSUMpCgkJdHlwZSA9ICJleHQiOwoKCWVsc2UgaWYgKHZ4
ZnNtYWdpYyhzYi52cykgPT0gVlhGU19TVVBFUl9NQUdJQykKCQl0eXBlID0gInZ4ZnMiOwogICAg
fQoKICAgIGlmICghdHlwZSkgewoJLyogYmxvY2sgMSAqLwogICAgICAgIGlmIChsc2VlayhmZCwg
MHg0MDAsIFNFRUtfU0VUKSAhPSAweDQwMAogICAgICAgICAgICB8fCByZWFkKGZkLCAoY2hhciAq
KSAmaGZzc2IsIHNpemVvZihoZnNzYikpICE9IHNpemVvZihoZnNzYikpCiAgICAgICAgICAgICBn
b3RvIGlvX2Vycm9yOwoKICAgICAgICAvKiBhbHNvIGNoZWNrIGlmIGJsb2NrIHNpemUgaXMgZXF1
YWwgdG8gNTEyIGJ5dGVzLAoJICAgb3IgYSBtdWx0aXBsZS4gKEkgc2VlIDE1MzYgaGVyZS4pICov
CiAgICAgICAgaWYgKGhmc21hZ2ljKGhmc3NiKSA9PSBIRlNfU1VQRVJfTUFHSUMgJiYJLyogYWx3
YXlzIEJFICovCgkgICAgaGZzYmxrc2l6ZShoZnNzYikgIT0gMCAmJgoJICAgIChoZnNibGtzaXpl
KGhmc3NiKSAmIDB4MWZmKSA9PSAwKQogICAgICAgICAgICAgdHlwZSA9ICJoZnMiOwogICAgfQoK
ICAgIGlmICghdHlwZSkgewoJLyogYmxvY2sgMyAqLwogICAgICAgIGlmIChsc2VlayhmZCwgMHhj
MDAsIFNFRUtfU0VUKSAhPSAweGMwMAogICAgICAgICAgICB8fCByZWFkKGZkLCAoY2hhciAqKSAm
YWRmc3NiLCBzaXplb2YoYWRmc3NiKSkgIT0gc2l6ZW9mKGFkZnNzYikpCiAgICAgICAgICAgICBn
b3RvIGlvX2Vycm9yOwoKCS8qIG9ubHkgYSB3ZWFrIHRlc3QgKi8KICAgICAgICBpZiAobWF5X2Jl
X2FkZnMoKHVfY2hhciAqKSAmYWRmc3NiKQogICAgICAgICAgICAmJiAoYWRmc2Jsa3NpemUoYWRm
c3NiKSA+PSA4ICYmCiAgICAgICAgICAgICAgICBhZGZzYmxrc2l6ZShhZGZzc2IpIDw9IDEwKSkK
ICAgICAgICAgICAgIHR5cGUgPSAiYWRmcyI7CiAgICB9CgogICAgaWYgKCF0eXBlKSB7CgkgaW50
IG1hZzsKCgkgLyogYmxvY2sgOCAqLwoJIGlmIChsc2VlayhmZCwgODE5MiwgU0VFS19TRVQpICE9
IDgxOTIKCSAgICAgfHwgcmVhZChmZCwgKGNoYXIgKikgJnVmc3NiLCBzaXplb2YodWZzc2IpKSAh
PSBzaXplb2YodWZzc2IpKQoJICAgICAgZ290byBpb19lcnJvcjsKCgkgbWFnID0gdWZzbWFnaWMo
dWZzc2IpOwoJIGlmIChtYWcgPT0gVUZTX1NVUEVSX01BR0lDX0xFIHx8IG1hZyA9PSBVRlNfU1VQ
RVJfTUFHSUNfQkUpCgkgICAgICB0eXBlID0gInVmcyI7CiAgICB9CgogICAgaWYgKCF0eXBlKSB7
CgkvKiBibG9jayA4ICovCglpZiAobHNlZWsoZmQsIFJFSVNFUkZTX09MRF9ESVNLX09GRlNFVF9J
Tl9CWVRFUywgU0VFS19TRVQpICE9CgkJCQlSRUlTRVJGU19PTERfRElTS19PRkZTRVRfSU5fQllU
RVMKCSAgICB8fCByZWFkKGZkLCAoY2hhciAqKSAmcmVpc2VyZnNzYiwgc2l6ZW9mKHJlaXNlcmZz
c2IpKSAhPQoJCXNpemVvZihyZWlzZXJmc3NiKSkKCSAgICBnb3RvIGlvX2Vycm9yOwoJaWYgKGlz
X3JlaXNlcmZzX21hZ2ljX3N0cmluZygmcmVpc2VyZnNzYikpCgkgICAgdHlwZSA9ICJyZWlzZXJm
cyI7CiAgICB9CgogICAgaWYgKCF0eXBlKSB7CgkvKiBibG9jayA4ICovCiAgICAgICAgaWYgKGxz
ZWVrKGZkLCAweDIwMDAsIFNFRUtfU0VUKSAhPSAweDIwMDAKICAgICAgICAgICAgfHwgcmVhZChm
ZCwgKGNoYXIgKikgJmhwZnNzYiwgc2l6ZW9mKGhwZnNzYikpICE9IHNpemVvZihocGZzc2IpKQog
ICAgICAgICAgICAgZ290byBpb19lcnJvcjsKCiAgICAgICAgaWYgKGhwZnNtYWdpYyhocGZzc2Ip
ID09IEhQRlNfU1VQRVJfTUFHSUMpCiAgICAgICAgICAgICB0eXBlID0gImhwZnMiOwogICAgfQoK
ICAgIGlmICghdHlwZSkgewoJIC8qIGJsb2NrIDMyICovCgkgaWYgKGxzZWVrKGZkLCBKRlNfU1VQ
RVIxX09GRiwgU0VFS19TRVQpICE9IEpGU19TVVBFUjFfT0ZGCgkgICAgIHx8IHJlYWQoZmQsIChj
aGFyICopICZqZnNzYiwgc2l6ZW9mKGpmc3NiKSkgIT0gc2l6ZW9mKGpmc3NiKSkKCSAgICAgIGdv
dG8gaW9fZXJyb3I7CgkgaWYgKCFzdHJuY21wKGpmc3NiLnNfbWFnaWMsIEpGU19NQUdJQywgNCkp
CgkgICAgICB0eXBlID0gImpmcyI7CiAgICB9CgogICAgaWYgKCF0eXBlKSB7CgkgLyogYmxvY2sg
MzIgKi8KICAgIHRyeV9pc285NjYwOgoJIGlmIChsc2VlayhmZCwgMHg4MDAwLCBTRUVLX1NFVCkg
IT0gMHg4MDAwCgkgICAgIHx8IHJlYWQoZmQsIChjaGFyICopICZpc29zYiwgc2l6ZW9mKGlzb3Ni
KSkgIT0gc2l6ZW9mKGlzb3NiKSkKCSAgICAgIGdvdG8gaW9fZXJyb3I7CgoJIGlmIChzdHJuY21w
KGlzb3NiLmhzLmlkLCBIU19TVEFOREFSRF9JRCwgc2l6ZW9mKGlzb3NiLmhzLmlkKSkgPT0gMCkg
ewoJCSAvKiAiQ0RST00iICovCgkJIHR5cGUgPSAiaXNvOTY2MCI7CgkgfSBlbHNlIGlmIChzdHJu
Y21wKGlzb3NiLmlzby5pZCwgSVNPX1NUQU5EQVJEX0lELAoJCQkgIHNpemVvZihpc29zYi5pc28u
aWQpKSA9PSAwKSB7CgkJIC8qIENEMDAxICovCgkJIHR5cGUgPSAiaXNvOTY2MCI7CgkJIGlmIChp
c19yZWFsbHlfdWRmKGZkKSkKCQkJIHR5cGUgPSAidWRmIjsKCSB9IGVsc2UgaWYgKG1heV9iZV91
ZGYoaXNvc2IuaXNvLmlkKSkKCQkgdHlwZSA9ICJ1ZGYiOwogICAgfQoKICAgIGlmICghdHlwZSkg
ewoJLyogYmxvY2sgNjQgKi8KCWlmIChsc2VlayhmZCwgUkVJU0VSRlNfRElTS19PRkZTRVRfSU5f
QllURVMsIFNFRUtfU0VUKSAhPQoJCVJFSVNFUkZTX0RJU0tfT0ZGU0VUX0lOX0JZVEVTCgkgICAg
fHwgcmVhZChmZCwgKGNoYXIgKikgJnJlaXNlcmZzc2IsIHNpemVvZihyZWlzZXJmc3NiKSkgIT0K
CQlzaXplb2YocmVpc2VyZnNzYikpCgkgICAgZ290byBpb19lcnJvcjsKCWlmIChpc19yZWlzZXJm
c19tYWdpY19zdHJpbmcoJnJlaXNlcmZzc2IpKQoJICAgIHR5cGUgPSAicmVpc2VyZnMiOwogICAg
fQoKICAgIGlmICghdHlwZSkgewoJICAgIC8qIHBlcmhhcHMgdGhlIHVzZXIgdHJpZXMgdG8gbW91
bnQgdGhlIHN3YXAgc3BhY2UKCSAgICAgICBvbiBhIG5ldyBkaXNrOyB3YXJuIGhlciBiZWZvcmUg
c2hlIGRvZXMgbWtlMmZzIG9uIGl0ICovCgkgICAgaW50IHBhZ2VzaXplID0gZ2V0cGFnZXNpemUo
KTsKCSAgICBpbnQgcmQ7CgkgICAgY2hhciBidWZbMzI3NjhdOwoKCSAgICByZCA9IHBhZ2VzaXpl
OwoJICAgIGlmIChyZCA8IDgxOTIpCgkJICAgIHJkID0gODE5MjsKCSAgICBpZiAocmQgPiBzaXpl
b2YoYnVmKSkKCQkgICAgcmQgPSBzaXplb2YoYnVmKTsKCSAgICBpZiAobHNlZWsoZmQsIDAsIFNF
RUtfU0VUKSAhPSAwCgkJfHwgcmVhZChmZCwgYnVmLCByZCkgIT0gcmQpCgkJICAgIGdvdG8gaW9f
ZXJyb3I7CgkgICAgaWYgKG1heV9iZV9zd2FwKGJ1ZitwYWdlc2l6ZSkgfHwKCQltYXlfYmVfc3dh
cChidWYrNDA5NikgfHwgbWF5X2JlX3N3YXAoYnVmKzgxOTIpKQoJCSAgICB0eXBlID0gInN3YXAi
OwogICAgfQoKICAgIGNsb3NlIChmZCk7CiAgICByZXR1cm4odHlwZSk7Cgppb19lcnJvcjoKICAg
IGlmIChlcnJubykKCSBwZXJyb3IoZGV2aWNlKTsKICAgIGVsc2UKCSBmcHJpbnRmKHN0ZGVyciwg
XygibW91bnQ6IGVycm9yIHdoaWxlIGd1ZXNzaW5nIGZpbGVzeXN0ZW0gdHlwZVxuIikpOwogICAg
Y2xvc2UoZmQpOwogICAgcmV0dXJuIDA7Cn0KCmNoYXIgKgpndWVzc19mc3R5cGUoY29uc3QgY2hh
ciAqc3BlYykgewoJY2hhciAqdHlwZSA9IGRvX2d1ZXNzX2ZzdHlwZShzcGVjKTsKCWlmICh2ZXJi
b3NlKSB7CgkgICAgcHJpbnRmIChfKCJtb3VudDogeW91IGRpZG4ndCBzcGVjaWZ5IGEgZmlsZXN5
c3RlbSB0eXBlIGZvciAlc1xuIiksCgkJICAgIHNwZWMpOwoJICAgIGlmICghdHlwZSkKCSAgICAg
IHByaW50ZiAoXygiICAgICAgIEkgd2lsbCB0cnkgYWxsIHR5cGVzIG1lbnRpb25lZCBpbiAlcyBv
ciAlc1xuIiksCgkJICAgICAgRVRDX0ZJTEVTWVNURU1TLCBQUk9DX0ZJTEVTWVNURU1TKTsKCSAg
ICBlbHNlIGlmICghc3RyY21wKHR5cGUsICJzd2FwIikpCgkgICAgICBwcmludGYgKF8oIiAgICAg
ICBhbmQgaXQgbG9va3MgbGlrZSB0aGlzIGlzIHN3YXBzcGFjZVxuIikpOwoJICAgIGVsc2UKCSAg
ICAgIHByaW50ZiAoXygiICAgICAgIEkgd2lsbCB0cnkgdHlwZSAlc1xuIiksIHR5cGUpOwoJfQoJ
cmV0dXJuIHR5cGU7Cn0KCnN0YXRpYyBjaGFyICoKcHJvY2ZzbmV4dChGSUxFICpwcm9jZnMpIHsK
ICAgY2hhciBsaW5lWzEwMF07CiAgIGNoYXIgZnNuYW1lWzEwMF07CgogICB3aGlsZSAoZmdldHMo
bGluZSwgc2l6ZW9mKGxpbmUpLCBwcm9jZnMpKSB7CiAgICAgIGlmIChzc2NhbmYgKGxpbmUsICJu
b2RldiAlW15cbl1cbiIsIGZzbmFtZSkgPT0gMSkgY29udGludWU7CiAgICAgIGlmIChzc2NhbmYg
KGxpbmUsICIgJVteIFxuXVxuIiwgZnNuYW1lKSAhPSAxKSBjb250aW51ZTsKICAgICAgcmV0dXJu
IHN0cmR1cChmc25hbWUpOwogICB9CiAgIHJldHVybiAwOwp9CgovKiBPbmx5IHVzZSAvcHJvYy9m
aWxlc3lzdGVtcyBoZXJlLCB0aGlzIGlzIG1lYW50IHRvIHRlc3Qgd2hhdAogICB0aGUga2VybmVs
IGtub3dzIGFib3V0LCBzbyAvZXRjL2ZpbGVzeXN0ZW1zIGlzIGlycmVsZXZhbnQuCiAgIFJldHVy
bjogMTogeWVzLCAwOiBubywgLTE6IGNhbm5vdCBvcGVuIHByb2NmcyAqLwppbnQKaXNfaW5fcHJv
Y2ZzKGNvbnN0IGNoYXIgKnR5cGUpIHsKICAgIEZJTEUgKnByb2NmczsKICAgIGNoYXIgKmZzbmFt
ZTsKICAgIGludCByZXQgPSAtMTsKCiAgICBwcm9jZnMgPSBmb3BlbihQUk9DX0ZJTEVTWVNURU1T
LCAiciIpOwogICAgaWYgKHByb2NmcykgewoJcmV0ID0gMDsKCXdoaWxlICgoZnNuYW1lID0gcHJv
Y2ZzbmV4dChwcm9jZnMpKSAhPSBOVUxMKQoJICAgIGlmICghc3RyY21wKGZzbmFtZSwgdHlwZSkp
IHsKCQlyZXQgPSAxOwoJCWJyZWFrOwoJICAgIH0KCWZjbG9zZShwcm9jZnMpOwoJcHJvY2ZzID0g
TlVMTDsKICAgIH0KICAgIHJldHVybiByZXQ7Cn0KCi8qIFRyeSBhbGwgdHlwZXMgaW4gRklMRVNZ
U1RFTVMsIGV4Y2VwdCB0aG9zZSBpbiAqdHlwZXMsCiAgIGluIGNhc2UgKnR5cGVzIHN0YXJ0cyB3
aXRoICJubyIgKi8KLyogcmV0dXJuOiAwOiBPSywgLTE6IGVycm9yIGluIGVycm5vLCAxOiB0eXBl
IG5vdCBmb3VuZCAqLwovKiB3aGVuIDAgb3IgLTEgaXMgcmV0dXJuZWQsICp0eXBlcyBjb250YWlu
cyB0aGUgdHlwZSB1c2VkICovCi8qIHdoZW4gMSBpcyByZXR1cm5lZCwgKnR5cGVzIGlzIE5VTEwg
Ki8KaW50CnByb2Nmc2xvb3AoaW50ICgqbW91bnRfZm4pKHN0cnVjdCBtb3VudGFyZ3MgKiksIHN0
cnVjdCBtb3VudGFyZ3MgKmFyZ3MsCgkgICBjaGFyICoqdHlwZXMpIHsKCWNoYXIgKmZpbGVzWzJd
ID0geyBFVENfRklMRVNZU1RFTVMsIFBST0NfRklMRVNZU1RFTVMgfTsKCUZJTEUgKnByb2NmczsK
CWNoYXIgKmZzbmFtZTsKCWNoYXIgKm5vdHlwZXMgPSBOVUxMOwoJaW50IG5vID0gMDsKCWludCBy
ZXQgPSAxOwoJaW50IGVycnN2ID0gMDsKCWludCBpOwoKCWlmICgqdHlwZXMgJiYgIXN0cm5jbXAo
KnR5cGVzLCAibm8iLCAyKSkgewoJCW5vID0gMTsKCQlub3R5cGVzID0gKCp0eXBlcykgKyAyOwoJ
fQoJKnR5cGVzID0gTlVMTDsKCgkvKiBVc2UgUFJPQ19GSUxFU1lTVEVNUyBvbmx5IHdoZW4gRVRD
X0ZJTEVTWVNURU1TIGRvZXMgbm90IGV4aXN0LgoJICAgSW4gc29tZSBjYXNlcyB0cnlpbmcgYSBm
aWxlc3lzdGVtIHRoYXQgdGhlIGtlcm5lbCBrbm93cyBhYm91dAoJICAgb24gdGhlIHdyb25nIGRh
dGEgd2lsbCBjcmFzaCB0aGUga2VybmVsOyBpbiBzdWNoIGNhc2VzCgkgICBFVENfRklMRVNZU1RF
TVMgY2FuIGJlIHVzZWQgdG8gbGlzdCB0aGUgZmlsZXN5c3RlbXMgdGhhdCB3ZQoJICAgYXJlIGFs
bG93ZWQgdG8gdHJ5LCBhbmQgaW4gdGhlIG9yZGVyIHRoZXkgc2hvdWxkIGJlIHRyaWVkLgoJICAg
RW5kIEVUQ19GSUxFU1lTVEVNUyB3aXRoIGEgbGluZSBjb250YWluaW5nIGEgc2luZ2xlICcqJyBv
bmx5LAoJICAgaWYgUFJPQ19GSUxFU1lTVEVNUyBzaG91bGQgYmUgdHJpZWQgYWZ0ZXJ3YXJkcy4g
Ki8KCglmb3IgKGk9MDsgaTwyOyBpKyspIHsKCQlwcm9jZnMgPSBmb3BlbihmaWxlc1tpXSwgInIi
KTsKCQlpZiAoIXByb2NmcykKCQkJY29udGludWU7CgkJd2hpbGUgKChmc25hbWUgPSBwcm9jZnNu
ZXh0KHByb2NmcykpICE9IE5VTEwpIHsKCQkJaWYgKCFzdHJjbXAoZnNuYW1lLCAiKiIpKSB7CgkJ
CQlmY2xvc2UocHJvY2ZzKTsKCQkJCWdvdG8gbmV4dGk7CgkJCX0KCQkJaWYgKHdhc190ZXN0ZWQg
KGZzbmFtZSkpCgkJCQljb250aW51ZTsKCQkJaWYgKG5vICYmIG1hdGNoaW5nX3R5cGUoZnNuYW1l
LCBub3R5cGVzKSkKCQkJCWNvbnRpbnVlOwoJCQlzZXRfdGVzdGVkIChmc25hbWUpOwoJCQlhcmdz
LT50eXBlID0gZnNuYW1lOwoJCQlpZiAodmVyYm9zZSkgewoJCQkJcHJpbnRmKF8oIlRyeWluZyAl
c1xuIiksIGZzbmFtZSk7CgkJCQlmZmx1c2goc3Rkb3V0KTsKCQkJfQoJCQlpZiAoKCptb3VudF9m
bikgKGFyZ3MpID09IDApIHsKCQkJCSp0eXBlcyA9IGZzbmFtZTsKCQkJCXJldCA9IDA7CgkJCQli
cmVhazsKCQkJfSBlbHNlIGlmIChlcnJubyAhPSBFSU5WQUwgJiYKCQkJCSAgIGlzX2luX3Byb2Nm
cyhmc25hbWUpID09IDEpIHsKCQkJCSp0eXBlcyA9ICJndWVzcyI7CgkJCQlyZXQgPSAtMTsKCQkJ
CWVycnN2ID0gZXJybm87CgkJCQlicmVhazsKCQkJfQoJCX0KCQlmcmVlX3Rlc3RlZCgpOwoJCWZj
bG9zZShwcm9jZnMpOwoJCWVycm5vID0gZXJyc3Y7CgkJcmV0dXJuIHJldDsKCW5leHRpOjsKCX0K
CXJldHVybiAxOwp9Cg==

------_=_NextPart_001_01C5968D.0410407A
Content-Type: application/octet-stream;
	name="mount.c"
Content-Transfer-Encoding: base64
Content-Description: mount.c
Content-Disposition: attachment;
	filename="mount.c"

LyoKICogQSBtb3VudCg4KSBmb3IgTGludXggMC45OS4KICogbW91bnQuYyx2IDEuMS4xLjEgMTk5
My8xMS8xOCAwODo0MDo1MSBqcnMgRXhwCiAqCiAqIFdlZCBTZXAgMTQgMjI6NDM6MDAgMTk5NDog
TWl0Y2h1bSBEU291emEKICogKG1pdGNoQG1yYy1hcHBsaWVkLXBzeWNob2xvZ3kuY2FtYnJpZGdl
LmFjLnVrKSBhZGRlZCBzdXBwb3J0IGZvciBtb3VudGluZwogKiB0aGUgImxvb3AiIGRldmljZS4K
ICoKICogV2VkIFNlcCAxNCAyMjo1NToxMCAxOTk0OiBTYW5kZXIgdmFuIE1hbHNzZW4gKHN2bUBr
b3ptaXguaGFja3RpYy5ubCkKICogYWRkZWQgc3VwcG9ydCBmb3IgcmVtb3VudGluZyByZWFkb25s
eSBmaWxlIHN5c3RlbXMgcmVhZG9ubHkuCiAqCiAqIFdlZCBGZWIgIDggMTI6Mjc6MDAgMTk5NTog
QW5kcmllcy5Ccm91d2VyQGN3aS5ubCBmaXhlZCB1cCBlcnJvciBtZXNzYWdlcy4KICogU2F0IEp1
biAgMyAyMDo0NDozOCAxOTk1OiBQYXRjaGVzIGZyb20gQW5kcmllcy5Ccm91d2VyQGN3aS5ubCBh
cHBsaWVkLgogKiBUdWUgU2VwIDI2IDIyOjM4OjIwIDE5OTU6IGFlYkBjd2kubmwsIG1hbnkgY2hh
bmdlcwogKiBGcmkgRmViIDIzIDEzOjQ3OjAwIDE5OTY6IGFlYkBjd2kubmwsIGxvb3AgZGV2aWNl
IHJlbGF0ZWQgY2hhbmdlcwogKgogKiBTaW5jZSB0aGVuLCBtYW55IGNoYW5nZXMgLSBhZWIuCiAq
CiAqIFdlZCBPY3QgIDEgMjM6NTU6MjggMTk5NzogRGljayBTdHJlZWZsYW5kIDxkaWNrX3N0cmVl
ZmxhbmRAdGFza2luZy5jb20+CiAqIEltcGxlbWVudGVkIHRoZSAiYmciLCAiZmciIGFuZCAicmV0
cnkiIG1vdW50IG9wdGlvbnMgZm9yIE5GUy4KICoKICogVHVlIEF1ZyAgNCAxNTo1NDozMSAxOTk4
OiBhZWJAY3dpLm5sOgogKiBPcGVuIGZkIDAsMSwyIHNvIHRoYXQgcHJpbnRmJ3MgZG8gbm90IGNs
b2JiZXIgL2V0Yy9tdGFiIG9yIHNvLgogKiBNYW5nbGUgZmlsZW5hbWVzIHdpdGggZW1iZWRkZWQg
c3BhY2VzLiBBZGQgdWZzbWFnaWMuIEFkZCBsb2NraW5nLgogKiBBdm9pZCB1bm5lY2Vzc2FyeSBl
cnJvciBtZXNzYWdlcyBhYm91dCAvcHJvYy4KICogSW1wcm92ZSBzdXBwb3J0IGZvciBub25jYW5v
bmljYWwgbmFtZXMgaW4gL2V0Yy9mc3RhYi4KICogQWRkIHN1cHBvcnQgZm9yIHZvbHVtZSBsYWJl
bHMgYW5kIFVVSURzLgogKgogKiAxOTk5LTAyLTIyIEFya2FkaXVzeiBNabZraWV3aWN6IDxtaXNp
ZWtAcGxkLk9SRy5QTD4KICogLSBhZGRlZCBOYXRpdmUgTGFuZ3VhZ2UgU3VwcG9ydAogKiAxOTk5
LTAzLTIxIEFybmFsZG8gQ2FydmFsaG8gZGUgTWVsbyA8YWNtZUBjb25lY3RpdmEuY29tLmJyPgog
KiAtIGZpeGVkIHN0cmVycihlcnJubykgaW4gZ2V0dGV4dCBjYWxscwogKiAxOTk5LTA3LTA1IEhp
cm9rYXp1IFRha2FoYXNoaSA8aC10YWthaGFAc3NzLmFiay5uZWMuY28uanA+CiAqIC0gZml4ZWQg
dXNlIG9mIG5vdXNlciBvcHRpb24KICogMTk5OS0wOS0wOSBNaWNoYWVsIEsuIEpvaG5zb24gPGpv
aG5zb25tQHJlZGhhdC5jb20+CiAqIC0gYWRkZWQgYG93bmVyJyBtb3VudCBvcHRpb24KICogMjAw
MC0wNS0xMSBNYXJrIEEuIFBlbG9xdWluIDxwZWxvcXVpbkB1cy5pYm0uY29tPgogKiAtIGNoZWNr
X3NwZWNpYWxfbW91bnRwcm9nIG5vdyByZXR1cm5zIGNvcnJlY3Qgc3RhdHVzCiAqIDIwMDAtMTEt
MDggYWViOiBhY2NlcHQgbm9ubnVtZXJpYyB1aWQ9LCBnaWQ9IG9wdGlvbnMKICogMjAwMS0wNy0x
MyBNaWNoYWVsIEsuIEpvaG5zb24gPGpvaG5zb25tQHJlZGhhdC5jb20+CiAqIC0gaW1wbGVtZW50
ZWQgLWEgLU8KICovCgojaW5jbHVkZSA8dW5pc3RkLmg+CiNpbmNsdWRlIDxjdHlwZS5oPgojaW5j
bHVkZSA8ZXJybm8uaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8Z2V0b3B0Lmg+CiNp
bmNsdWRlIDxzdGRpby5oPgoKI2luY2x1ZGUgPHB3ZC5oPgojaW5jbHVkZSA8Z3JwLmg+CgojaW5j
bHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxzeXMvaW9jdGwuaD4KI2luY2x1ZGUgPHN5cy9z
dGF0Lmg+CiNpbmNsdWRlIDxzeXMvd2FpdC5oPgojaW5jbHVkZSA8c3lzL21vdW50Lmg+CgojaW5j
bHVkZSAibW91bnRfY29uc3RhbnRzLmgiCiNpbmNsdWRlICJzdW5kcmllcy5oIgojaW5jbHVkZSAi
bW50ZW50LmgiCiNpbmNsdWRlICJmc3RhYi5oIgojaW5jbHVkZSAibG9tb3VudC5oIgojaW5jbHVk
ZSAibG9vcC5oIgojaW5jbHVkZSAibGludXhfZnMuaCIJCS8qIGZvciBCTEtHRVRTSVpFICovCiNp
bmNsdWRlICJtb3VudF9ndWVzc19yb290ZGV2LmgiCiNpbmNsdWRlICJtb3VudF9ndWVzc19mc3R5
cGUuaCIKI2luY2x1ZGUgIm1vdW50X2J5X2xhYmVsLmgiCiNpbmNsdWRlICJnZXR1c2VybmFtZS5o
IgojaW5jbHVkZSAiZW52LmgiCiNpbmNsdWRlICJubHMuaCIKCiNkZWZpbmUgRE9fUFNfRklERExJ
TkcKCiNpZmRlZiBET19QU19GSURETElORwojaW5jbHVkZSAic2V0cHJvY3RpdGxlLmgiCiNlbmRp
ZgoKLyogVHJ1ZSBmb3IgZmFrZSBtb3VudCAoLWYpLiAgKi8Kc3RhdGljIGludCBmYWtlID0gMDsK
Ci8qIFRydWUgaWYgd2UgYXJlIGFsbG93ZWQgdG8gY2FsbCAvc2Jpbi9tb3VudC4ke0ZTVFlQRX0g
Ki8Kc3RhdGljIGludCBleHRlcm5hbF9hbGxvd2VkID0gMTsKCi8qIERvbid0IHdyaXRlIGEgZW50
cnkgaW4gL2V0Yy9tdGFiICgtbikuICAqLwpzdGF0aWMgaW50IG5vbXRhYiA9IDA7CgovKiBUcnVl
IGZvciBleHBsaWNpdCByZWFkb25seSAoLXIpLiAgKi8Kc3RhdGljIGludCByZWFkb25seSA9IDA7
CgovKiBOb256ZXJvIGZvciBjaGF0dHkgKC12KS4gICovCmludCB2ZXJib3NlID0gMDsKCi8qIERv
IHdlIGhhc2ggdGhlIHBhc3N3b3JkIG9yIG5vdCAqLwppbnQgaGFzaF9wYXNzd29yZCA9IDE7Cgov
KiBOb256ZXJvIGZvciBzbG9wcHkgKC1zKS4gICovCmludCBzbG9wcHkgPSAwOwoKLyogVHJ1ZSBm
b3IgZXhwbGljaXQgcmVhZC93cml0ZSAoLXcpLiAgKi8Kc3RhdGljIGludCByZWFkd3JpdGUgPSAw
OwoKLyogVHJ1ZSBmb3IgYWxsIG1vdW50ICgtYSkuICAqLwppbnQgbW91bnRfYWxsID0gMDsKCi8q
IFRydWUgZm9yIGZvcmsoKSBkdXJpbmcgYWxsIG1vdW50ICgtRikuICAqLwpzdGF0aWMgaW50IG9w
dGZvcmsgPSAwOwoKLyogQWRkIHZvbHVtZWxhYmVsIGluIGEgbGlzdGluZyBvZiBtb3VudGVkIGRl
dmljZXMgKC1sKS4gKi8Kc3RhdGljIGludCBsaXN0X3dpdGhfdm9sdW1lbGFiZWwgPSAwOwoKLyog
Tm9uemVybyBmb3IgbW91bnQgey0tYmluZHwtLXJlcGxhY2V8LS1iZWZvcmV8LS1hZnRlcnwtLW92
ZXJ8LS1tb3ZlfSAqLwpzdGF0aWMgaW50IG1vdW50dHlwZSA9IDA7CgovKiBUcnVlIGlmIHJ1aWQg
IT0gZXVpZC4gICovCnN0YXRpYyBpbnQgc3VpZCA9IDA7CgovKiBDb250YWlucyB0aGUgZmQgdG8g
cmVhZCB0aGUgcGFzc3BocmFzZSBmcm9tLCBpZiBhbnkuICovCnN0YXRpYyBpbnQgcGZkID0gLTE7
CgovKiBDb250YWlucyB0aGUgcHJlZmVycmVkIGtleXNpemUgaW4gYml0cyB3ZSB3YW50IHRvIHVz
ZSAqLwpzdGF0aWMgaW50IGtleXN6ID0gMDsKCi8qIE1hcCBmcm9tIC1vIGFuZCBmc3RhYiBvcHRp
b24gc3RyaW5ncyB0byB0aGUgZmxhZyBhcmd1bWVudCB0byBtb3VudCgyKS4gICovCnN0cnVjdCBv
cHRfbWFwIHsKICBjb25zdCBjaGFyICpvcHQ7CQkvKiBvcHRpb24gbmFtZSAqLwogIGludCAgc2tp
cDsJCQkvKiBza2lwIGluIG10YWIgb3B0aW9uIHN0cmluZyAqLwogIGludCAgaW52OwkJCS8qIHRy
dWUgaWYgZmxhZyB2YWx1ZSBzaG91bGQgYmUgaW52ZXJ0ZWQgKi8KICBpbnQgIG1hc2s7CQkJLyog
ZmxhZyBtYXNrIHZhbHVlICovCn07CgovKiBDdXN0b20gbW91bnQgb3B0aW9ucyBmb3Igb3VyIG93
biBwdXJwb3Nlcy4gICovCi8qIE1heWJlIHRoZXNlIHNob3VsZCBub3cgYmUgZnJlZWQgZm9yIGtl
cm5lbCB1c2UgYWdhaW4gKi8KI2RlZmluZSBNU19OT0FVVE8JMHg4MDAwMDAwMAojZGVmaW5lIE1T
X1VTRVJTCTB4NDAwMDAwMDAKI2RlZmluZSBNU19VU0VSCQkweDIwMDAwMDAwCiNkZWZpbmUgTVNf
T1dORVIJMHgxMDAwMDAwMAojZGVmaW5lIE1TX05FVERFVgkweDAwMDIwMDAwCiNkZWZpbmUgTVNf
TE9PUAkJMHgwMDAxMDAwMAoKLyogT3B0aW9ucyB0aGF0IHdlIGtlZXAgdGhlIG1vdW50IHN5c3Rl
bSBjYWxsIGZyb20gc2VlaW5nLiAgKi8KI2RlZmluZSBNU19OT1NZUwkoTVNfTk9BVVRPfE1TX1VT
RVJTfE1TX1VTRVJ8TVNfTkVUREVWfE1TX0xPT1ApCgovKiBPcHRpb25zIHRoYXQgd2Uga2VlcCBm
cm9tIGFwcGVhcmluZyBpbiB0aGUgb3B0aW9ucyBmaWVsZCBpbiB0aGUgbXRhYi4gICovCiNkZWZp
bmUgTVNfTk9NVEFCCShNU19SRU1PVU5UfE1TX05PQVVUT3xNU19VU0VSU3xNU19VU0VSKQoKLyog
T3B0aW9ucyB0aGF0IHdlIG1ha2Ugb3JkaW5hcnkgdXNlcnMgaGF2ZSBieSBkZWZhdWx0LiAgKi8K
I2RlZmluZSBNU19TRUNVUkUJKE1TX05PRVhFQ3xNU19OT1NVSUR8TVNfTk9ERVYpCgovKiBPcHRp
b25zIHRoYXQgd2UgbWFrZSBvd25lci1tb3VudGVkIGRldmljZXMgaGF2ZSBieSBkZWZhdWx0ICov
CiNkZWZpbmUgTVNfT1dORVJTRUNVUkUJKE1TX05PU1VJRHxNU19OT0RFVikKCnN0YXRpYyBjb25z
dCBzdHJ1Y3Qgb3B0X21hcCBvcHRfbWFwW10gPSB7CiAgeyAiZGVmYXVsdHMiLAkwLCAwLCAwCQl9
LAkvKiBkZWZhdWx0IG9wdGlvbnMgKi8KICB7ICJybyIsCTEsIDAsIE1TX1JET05MWQl9LAkvKiBy
ZWFkLW9ubHkgKi8KICB7ICJydyIsCTEsIDEsIE1TX1JET05MWQl9LAkvKiByZWFkLXdyaXRlICov
CiAgeyAiZXhlYyIsCTAsIDEsIE1TX05PRVhFQwl9LAkvKiBwZXJtaXQgZXhlY3V0aW9uIG9mIGJp
bmFyaWVzICovCiAgeyAibm9leGVjIiwJMCwgMCwgTVNfTk9FWEVDCX0sCS8qIGRvbid0IGV4ZWN1
dGUgYmluYXJpZXMgKi8KICB7ICJzdWlkIiwJMCwgMSwgTVNfTk9TVUlECX0sCS8qIGhvbm9yIHN1
aWQgZXhlY3V0YWJsZXMgKi8KICB7ICJub3N1aWQiLAkwLCAwLCBNU19OT1NVSUQJfSwJLyogZG9u
J3QgaG9ub3Igc3VpZCBleGVjdXRhYmxlcyAqLwogIHsgImRldiIsCTAsIDEsIE1TX05PREVWCX0s
CS8qIGludGVycHJldCBkZXZpY2UgZmlsZXMgICovCiAgeyAibm9kZXYiLAkwLCAwLCBNU19OT0RF
Vgl9LAkvKiBkb24ndCBpbnRlcnByZXQgZGV2aWNlcyAqLwogIHsgInN5bmMiLAkwLCAwLCBNU19T
WU5DSFJPTk9VU30sCS8qIHN5bmNocm9ub3VzIEkvTyAqLwogIHsgImFzeW5jIiwJMCwgMSwgTVNf
U1lOQ0hST05PVVN9LAkvKiBhc3luY2hyb25vdXMgSS9PICovCiAgeyAiZGlyc3luYyIsCTAsIDAs
IE1TX0RJUlNZTkN9LAkvKiBzeW5jaHJvbm91cyBkaXJlY3RvcnkgbW9kaWZpY2F0aW9ucyAqLwog
IHsgInJlbW91bnQiLCAgMCwgMCwgTVNfUkVNT1VOVH0sICAgICAgLyogQWx0ZXIgZmxhZ3Mgb2Yg
bW91bnRlZCBGUyAqLwogIHsgImJpbmQiLAkwLCAwLCBNU19CSU5EICAgfSwJLyogUmVtb3VudCBw
YXJ0IG9mIHRyZWUgZWxzZXdoZXJlICovCiAgeyAiYXV0byIsCTAsIDEsIE1TX05PQVVUTwl9LAkv
KiBDYW4gYmUgbW91bnRlZCB1c2luZyAtYSAqLwogIHsgIm5vYXV0byIsCTAsIDAsIE1TX05PQVVU
Twl9LAkvKiBDYW4gIG9ubHkgYmUgbW91bnRlZCBleHBsaWNpdGx5ICovCiAgeyAidXNlcnMiLAkw
LCAwLCBNU19VU0VSUwl9LAkvKiBBbGxvdyBvcmRpbmFyeSB1c2VyIHRvIG1vdW50ICovCiAgeyAi
bm91c2VycyIsCTAsIDEsIE1TX1VTRVJTCX0sCS8qIEZvcmJpZCBvcmRpbmFyeSB1c2VyIHRvIG1v
dW50ICovCiAgeyAidXNlciIsCTAsIDAsIE1TX1VTRVIJfSwJLyogQWxsb3cgb3JkaW5hcnkgdXNl
ciB0byBtb3VudCAqLwogIHsgIm5vdXNlciIsCTAsIDEsIE1TX1VTRVIJfSwJLyogRm9yYmlkIG9y
ZGluYXJ5IHVzZXIgdG8gbW91bnQgKi8KICB7ICJvd25lciIsCTAsIDAsIE1TX09XTkVSICB9LAkv
KiBMZXQgdGhlIG93bmVyIG9mIHRoZSBkZXZpY2UgbW91bnQgKi8KICB7ICJub293bmVyIiwJMCwg
MSwgTVNfT1dORVIgIH0sCS8qIERldmljZSBvd25lciBoYXMgbm8gc3BlY2lhbCBwcml2cyAqLwog
IHsgIl9uZXRkZXYiLAkwLCAwLCBNU19ORVRERVYgfSwJLyogRGV2aWNlIGFjY2Vzc2libGUgb25s
eSB2aWEgbmV0d29yayAqLwogIC8qIGFkZCBuZXcgb3B0aW9ucyBoZXJlICovCiNpZmRlZiBNU19O
T1NVQgogIHsgInN1YiIsCTAsIDEsIE1TX05PU1VCCX0sCS8qIGFsbG93IHN1Ym1vdW50cyAqLwog
IHsgIm5vc3ViIiwJMCwgMCwgTVNfTk9TVUIJfSwJLyogZG9uJ3QgYWxsb3cgc3VibW91bnRzICov
CiNlbmRpZgojaWZkZWYgTVNfU0lMRU5UCiAgeyAicXVpZXQiLAkwLCAwLCBNU19TSUxFTlQgICAg
fSwJLyogYmUgcXVpZXQgICovCiAgeyAibG91ZCIsCTAsIDEsIE1TX1NJTEVOVCAgICB9LAkvKiBw
cmludCBvdXQgbWVzc2FnZXMuICovCiNlbmRpZgojaWZkZWYgTVNfTUFORExPQ0sKICB7ICJtYW5k
IiwJMCwgMCwgTVNfTUFORExPQ0sgfSwJLyogQWxsb3cgbWFuZGF0b3J5IGxvY2tzIG9uIHRoaXMg
RlMgKi8KICB7ICJub21hbmQiLAkwLCAxLCBNU19NQU5ETE9DSyB9LAkvKiBGb3JiaWQgbWFuZGF0
b3J5IGxvY2tzIG9uIHRoaXMgRlMgKi8KI2VuZGlmCiAgeyAibG9vcCIsCTEsIDAsIE1TX0xPT1AJ
fSwJLyogdXNlIGEgbG9vcCBkZXZpY2UgKi8KI2lmZGVmIE1TX05PQVRJTUUKICB7ICJhdGltZSIs
CTAsIDEsIE1TX05PQVRJTUUgfSwJLyogVXBkYXRlIGFjY2VzcyB0aW1lICovCiAgeyAibm9hdGlt
ZSIsCTAsIDAsIE1TX05PQVRJTUUgfSwJLyogRG8gbm90IHVwZGF0ZSBhY2Nlc3MgdGltZSAqLwoj
ZW5kaWYKI2lmZGVmIE1TX05PRElSQVRJTUUKICB7ICJkaXJhdGltZSIsCTAsIDEsIE1TX05PRElS
QVRJTUUgfSwJLyogVXBkYXRlIGRpciBhY2Nlc3MgdGltZXMgKi8KICB7ICJub2RpcmF0aW1lIiwg
MCwgMCwgTVNfTk9ESVJBVElNRSB9LC8qIERvIG5vdCB1cGRhdGUgZGlyIGFjY2VzcyB0aW1lcyAq
LwojZW5kaWYKICB7IE5VTEwsCTAsIDAsIDAJCX0KfTsKCnN0YXRpYyBjaGFyICpvcHRfbG9vcGRl
diwgKm9wdF92ZnN0eXBlLCAqb3B0X29mZnNldCwgKm9wdF9lbmNyeXB0aW9uLAogICpvcHRfa2V5
Yml0cywgKm9wdF9ub2hhc2hwYXNzLCAqb3B0X3NwZWVkOwoKc3RhdGljIHN0cnVjdCBzdHJpbmdf
b3B0X21hcCB7CiAgY2hhciAqdGFnOwogIGludCBza2lwOwogIGNoYXIgKip2YWxwdHI7Cn0gc3Ry
aW5nX29wdF9tYXBbXSA9IHsKICB7ICJsb29wPSIsCTAsICZvcHRfbG9vcGRldiB9LAogIHsgInZm
cz0iLAkxLCAmb3B0X3Zmc3R5cGUgfSwKICB7ICJvZmZzZXQ9IiwJMCwgJm9wdF9vZmZzZXQgfSwK
ICB7ICJlbmNyeXB0aW9uPSIsIDAsICZvcHRfZW5jcnlwdGlvbiB9LAogIHsgImtleWJpdHM9Iiwg
MCwgJm9wdF9rZXliaXRzIH0sCiAgeyAibm9oYXNocGFzcyIsIDAsICZvcHRfbm9oYXNocGFzcyB9
LAogIHsgInNwZWVkPSIsIDAsICZvcHRfc3BlZWQgfSwKICB7IE5VTEwsIDAsIE5VTEwgfQp9OwoK
c3RhdGljIHZvaWQKY2xlYXJfc3RyaW5nX29wdHModm9pZCkgewoJc3RydWN0IHN0cmluZ19vcHRf
bWFwICptOwoKCWZvciAobSA9ICZzdHJpbmdfb3B0X21hcFswXTsgbS0+dGFnOyBtKyspCgkJKiht
LT52YWxwdHIpID0gTlVMTDsKfQoKc3RhdGljIGludApwYXJzZV9zdHJpbmdfb3B0KGNoYXIgKnMp
IHsKCXN0cnVjdCBzdHJpbmdfb3B0X21hcCAqbTsKCWludCBsdGg7CgoJZm9yIChtID0gJnN0cmlu
Z19vcHRfbWFwWzBdOyBtLT50YWc7IG0rKykgewoJCWx0aCA9IHN0cmxlbihtLT50YWcpOwoJCWlm
ICghc3RybmNtcChzLCBtLT50YWcsIGx0aCkpIHsKCQkJKihtLT52YWxwdHIpID0geHN0cmR1cChz
ICsgbHRoKTsKCQkJcmV0dXJuIDE7CgkJfQoJfQoJcmV0dXJuIDA7Cn0KCmludCBtb3VudF9xdWll
dD0wOwoKLyogUmVwb3J0IG9uIGEgc2luZ2xlIG1vdW50LiAgKi8Kc3RhdGljIHZvaWQKcHJpbnRf
b25lIChjb25zdCBzdHJ1Y3QgbW50ZW50ICptZSkgewogICAgIGlmIChtb3VudF9xdWlldCkKCSAg
cmV0dXJuOwogICAgIHByaW50ZiAoIiVzIG9uICVzIiwgbWUtPm1udF9mc25hbWUsIG1lLT5tbnRf
ZGlyKTsKICAgICBpZiAobWUtPm1udF90eXBlICE9IE5VTEwgJiYgKihtZS0+bW50X3R5cGUpICE9
ICdcMCcpCgkgIHByaW50ZiAoIiB0eXBlICVzIiwgbWUtPm1udF90eXBlKTsKICAgICBpZiAobWUt
Pm1udF9vcHRzICE9IE5VTEwpCgkgIHByaW50ZiAoIiAoJXMpIiwgbWUtPm1udF9vcHRzKTsKICAg
ICBpZiAobGlzdF93aXRoX3ZvbHVtZWxhYmVsKSB7CgkgICAgIGNvbnN0IGNoYXIgKmxhYmVsOwoJ
ICAgICBsYWJlbCA9IGdldF92b2x1bWVfbGFiZWxfYnlfc3BlYyhtZS0+bW50X2ZzbmFtZSk7Cgkg
ICAgIGlmIChsYWJlbCkKCQkgICAgIHByaW50ZiAoIiBbJXNdIiwgbGFiZWwpOwogICAgIH0KICAg
ICBwcmludGYgKCJcbiIpOwp9CgovKiBSZXBvcnQgb24gZXZlcnl0aGluZyBpbiBtdGFiIChvZiB0
aGUgc3BlY2lmaWVkIHR5cGVzIGlmIGFueSkuICAqLwpzdGF0aWMgaW50CnByaW50X2FsbCAoY2hh
ciAqdHlwZXMpIHsKICAgICBzdHJ1Y3QgbW50ZW50Y2huICptYywgKm1jMDsKCiAgICAgbWMwID0g
bXRhYl9oZWFkKCk7CiAgICAgZm9yIChtYyA9IG1jMC0+bnh0OyBtYyAmJiBtYyAhPSBtYzA7IG1j
ID0gbWMtPm54dCkgewoJICBpZiAobWF0Y2hpbmdfdHlwZSAobWMtPm0ubW50X3R5cGUsIHR5cGVz
KSkKCSAgICAgICBwcmludF9vbmUgKCYobWMtPm0pKTsKICAgICB9CiAgICAgZXhpdCAoMCk7Cn0K
CgovKgogKiBMb29rIGZvciBPUFQgaW4gb3B0X21hcCB0YWJsZSBhbmQgcmV0dXJuIG1hc2sgdmFs
dWUuCiAqIElmIE9QVCBpc24ndCBmb3VuZCwgdGFjayBpdCBvbnRvIGV4dHJhX29wdHMgKHdoaWNo
IGlzIG5vbi1OVUxMKS4KICogRm9yIHRoZSBvcHRpb25zIHVpZD0gYW5kIGdpZD0gcmVwbGFjZSB1
c2VyIG9yIGdyb3VwIG5hbWUgYnkgaXRzIHZhbHVlLgogKi8Kc3RhdGljIGlubGluZSB2b2lkCnBh
cnNlX29wdCAoY29uc3QgY2hhciAqb3B0LCBpbnQgKm1hc2ssIGNoYXIgKmV4dHJhX29wdHMpIHsK
CWNvbnN0IHN0cnVjdCBvcHRfbWFwICpvbTsKCglmb3IgKG9tID0gb3B0X21hcDsgb20tPm9wdCAh
PSBOVUxMOyBvbSsrKQoJCWlmIChzdHJlcSAob3B0LCBvbS0+b3B0KSkgewoJCQlpZiAob20tPmlu
dikKCQkJCSptYXNrICY9IH5vbS0+bWFzazsKCQkJZWxzZQoJCQkJKm1hc2sgfD0gb20tPm1hc2s7
CgkJCWlmICgob20tPm1hc2sgPT0gTVNfVVNFUiB8fCBvbS0+bWFzayA9PSBNU19VU0VSUykKCQkJ
ICAgICYmICFvbS0+aW52KQoJCQkJKm1hc2sgfD0gTVNfU0VDVVJFOwoJCQlpZiAoKG9tLT5tYXNr
ID09IE1TX09XTkVSKSAmJiAhb20tPmludikKCQkJCSptYXNrIHw9IE1TX09XTkVSU0VDVVJFOwoj
aWZkZWYgTVNfU0lMRU5UCgkJCWlmIChvbS0+bWFzayA9PSBNU19TSUxFTlQgJiYgb20tPmludikg
IHsKCQkJCW1vdW50X3F1aWV0ID0gMTsKCQkJCXZlcmJvc2UgPSAwOwoJCQl9CiNlbmRpZgoJCQly
ZXR1cm47CgkJfQoKCWlmICgqZXh0cmFfb3B0cykKCQlzdHJjYXQoZXh0cmFfb3B0cywgIiwiKTsK
CgkvKiBjb252ZXJ0IG5vbm51bWVyaWMgaWRzIHRvIG51bWVyaWMgKi8KCWlmICghc3RybmNtcChv
cHQsICJ1aWQ9IiwgNCkgJiYgIWlzZGlnaXQob3B0WzRdKSkgewoJCXN0cnVjdCBwYXNzd2QgKnB3
ID0gZ2V0cHduYW0ob3B0KzQpOwoJCWNoYXIgdWlkYnVmWzIwXTsKCgkJaWYgKHB3KSB7CgkJCXNw
cmludGYodWlkYnVmLCAidWlkPSVkIiwgcHctPnB3X3VpZCk7CgkJCXN0cmNhdChleHRyYV9vcHRz
LCB1aWRidWYpOwoJCQlyZXR1cm47CgkJfQoJfQoJaWYgKCFzdHJuY21wKG9wdCwgImdpZD0iLCA0
KSAmJiAhaXNkaWdpdChvcHRbNF0pKSB7CgkJc3RydWN0IGdyb3VwICpnciA9IGdldGdybmFtKG9w
dCs0KTsKCQljaGFyIGdpZGJ1ZlsyMF07CgoJCWlmIChncikgewoJCQlzcHJpbnRmKGdpZGJ1Ziwg
ImdpZD0lZCIsIGdyLT5ncl9naWQpOwoJCQlzdHJjYXQoZXh0cmFfb3B0cywgZ2lkYnVmKTsKCQkJ
cmV0dXJuOwoJCX0KCX0KCglzdHJjYXQoZXh0cmFfb3B0cywgb3B0KTsKfQogIAovKiBUYWtlIC1v
IG9wdGlvbnMgbGlzdCBhbmQgY29tcHV0ZSA0dGggYW5kIDV0aCBhcmdzIHRvIG1vdW50KDIpLiAg
ZmxhZ3MKICAgZ2V0cyB0aGUgc3RhbmRhcmQgb3B0aW9ucyAoaW5kaWNhdGVkIGJ5IGJpdHMpIGFu
ZCBleHRyYV9vcHRzIGFsbCB0aGUgcmVzdCAqLwpzdGF0aWMgdm9pZApwYXJzZV9vcHRzIChjaGFy
ICpvcHRzLCBpbnQgKmZsYWdzLCBjaGFyICoqZXh0cmFfb3B0cykgewoJY2hhciAqb3B0OwoKCSpm
bGFncyA9IDA7CgkqZXh0cmFfb3B0cyA9IE5VTEw7CgoJY2xlYXJfc3RyaW5nX29wdHMoKTsKCglp
ZiAob3B0cyAhPSBOVUxMKSB7CgkJKmV4dHJhX29wdHMgPSB4bWFsbG9jIChzdHJsZW4gKG9wdHMp
ICsgMSk7IAoJCSoqZXh0cmFfb3B0cyA9ICdcMCc7CgoJCWZvciAob3B0ID0gc3RydG9rIChvcHRz
LCAiLCIpOyBvcHQ7IG9wdCA9IHN0cnRvayAoTlVMTCwgIiwiKSkKCQkJaWYgKCFwYXJzZV9zdHJp
bmdfb3B0IChvcHQpKQoJCQkJcGFyc2Vfb3B0IChvcHQsIGZsYWdzLCAqZXh0cmFfb3B0cyk7Cgl9
CgoJaWYgKHJlYWRvbmx5KQoJCSpmbGFncyB8PSBNU19SRE9OTFk7CglpZiAocmVhZHdyaXRlKQoJ
CSpmbGFncyAmPSB+TVNfUkRPTkxZOwoJKmZsYWdzIHw9IG1vdW50dHlwZTsKfQoKLyogVHJ5IHRv
IGJ1aWxkIGEgY2Fub25pY2FsIG9wdGlvbnMgc3RyaW5nLiAgKi8Kc3RhdGljIGNoYXIgKgpmaXhf
b3B0c19zdHJpbmcgKGludCBmbGFncywgY29uc3QgY2hhciAqZXh0cmFfb3B0cywgY29uc3QgY2hh
ciAqdXNlcikgewoJY29uc3Qgc3RydWN0IG9wdF9tYXAgKm9tOwoJY29uc3Qgc3RydWN0IHN0cmlu
Z19vcHRfbWFwICptOwoJY2hhciAqbmV3X29wdHM7CgoJbmV3X29wdHMgPSAoZmxhZ3MgJiBNU19S
RE9OTFkpID8gInJvIiA6ICJydyI7Cglmb3IgKG9tID0gb3B0X21hcDsgb20tPm9wdCAhPSBOVUxM
OyBvbSsrKSB7CgkJaWYgKG9tLT5za2lwKQoJCQljb250aW51ZTsKCQlpZiAob20tPmludiB8fCAh
b20tPm1hc2sgfHwgKGZsYWdzICYgb20tPm1hc2spICE9IG9tLT5tYXNrKQoJCQljb250aW51ZTsK
CQluZXdfb3B0cyA9IHhzdHJjb25jYXQzKG5ld19vcHRzLCAiLCIsIG9tLT5vcHQpOwoJCWZsYWdz
ICY9IH5vbS0+bWFzazsKCX0KCWZvciAobSA9ICZzdHJpbmdfb3B0X21hcFswXTsgbS0+dGFnOyBt
KyspIHsKCQlpZiAoIW0tPnNraXAgJiYgKihtLT52YWxwdHIpKQoJCQluZXdfb3B0cyA9IHhzdHJj
b25jYXQ0KG5ld19vcHRzLCAiLCIsCgkJCQkJICAgICAgIG0tPnRhZywgKihtLT52YWxwdHIpKTsK
CX0KCWlmIChleHRyYV9vcHRzICYmICpleHRyYV9vcHRzKSB7CgkJbmV3X29wdHMgPSB4c3RyY29u
Y2F0MyhuZXdfb3B0cywgIiwiLCBleHRyYV9vcHRzKTsKCX0KCWlmICh1c2VyKSB7CgkJbmV3X29w
dHMgPSB4c3RyY29uY2F0MyhuZXdfb3B0cywgIix1c2VyPSIsIHVzZXIpOwoJfQoJcmV0dXJuIG5l
d19vcHRzOwp9CgpzdGF0aWMgaW50CmFscmVhZHkgKGNvbnN0IGNoYXIgKnNwZWMsIGNvbnN0IGNo
YXIgKm5vZGUpIHsKICAgIHN0cnVjdCBtbnRlbnRjaG4gKm1jOwogICAgaW50IHJldCA9IDE7Cgog
ICAgaWYgKChtYyA9IGdldG1udGZpbGUobm9kZSkpICE9IE5VTEwpCiAgICAgICAgZXJyb3IgKF8o
Im1vdW50OiBhY2NvcmRpbmcgdG8gbXRhYiwgJXMgaXMgYWxyZWFkeSBtb3VudGVkIG9uICVzIiks
CgkgICAgICAgbWMtPm0ubW50X2ZzbmFtZSwgbm9kZSk7CiAgICBlbHNlIGlmIChzcGVjICYmIHN0
cmNtcCAoc3BlYywgIm5vbmUiKSAmJgoJICAgICAobWMgPSBnZXRtbnRmaWxlKHNwZWMpKSAhPSBO
VUxMKQogICAgICAgIGVycm9yIChfKCJtb3VudDogYWNjb3JkaW5nIHRvIG10YWIsICVzIGlzIG1v
dW50ZWQgb24gJXMiKSwKCSAgICAgICBzcGVjLCBtYy0+bS5tbnRfZGlyKTsKICAgIGVsc2UKICAg
ICAgICByZXQgPSAwOwogICAgcmV0dXJuIHJldDsKfQoKLyogQ3JlYXRlIG10YWIgd2l0aCBhIHJv
b3QgZW50cnkuICAqLwpzdGF0aWMgdm9pZApjcmVhdGVfbXRhYiAodm9pZCkgewogIHN0cnVjdCBt
bnRlbnRjaG4gKmZzdGFiOwogIHN0cnVjdCBtbnRlbnQgbW50OwogIGludCBmbGFnczsKICBjaGFy
ICpleHRyYV9vcHRzOwogIG1udEZJTEUgKm1mcDsKCiAgbG9ja19tdGFiKCk7CgogIG1mcCA9IG15
X3NldG1udGVudCAoTU9VTlRFRCwgImErIik7CiAgaWYgKG1mcCA9PSBOVUxMIHx8IG1mcC0+bW50
ZW50X2ZwID09IE5VTEwpIHsKICAgIGludCBlcnJzdiA9IGVycm5vOwogICAgZGllIChFWF9GSUxF
SU8sIF8oIm1vdW50OiBjYW4ndCBvcGVuICVzIGZvciB3cml0aW5nOiAlcyIpLAoJIE1PVU5URUQs
IHN0cmVycm9yIChlcnJzdikpOwogIH0KCiAgLyogRmluZCB0aGUgcm9vdCBlbnRyeSBieSBsb29r
aW5nIGl0IHVwIGluIGZzdGFiICovCiAgaWYgKChmc3RhYiA9IGdldGZzZmlsZSAoIi8iKSkgfHwg
KGZzdGFiID0gZ2V0ZnNmaWxlICgicm9vdCIpKSkgewogICAgICBwYXJzZV9vcHRzICh4c3RyZHVw
IChmc3RhYi0+bS5tbnRfb3B0cyksICZmbGFncywgJmV4dHJhX29wdHMpOwogICAgICBtbnQubW50
X2RpciA9ICIvIjsKICAgICAgbW50Lm1udF9mc25hbWUgPSBjYW5vbmljYWxpemUgKGZzdGFiLT5t
Lm1udF9mc25hbWUpOwogICAgICBtbnQubW50X3R5cGUgPSBmc3RhYi0+bS5tbnRfdHlwZTsKICAg
ICAgbW50Lm1udF9vcHRzID0gZml4X29wdHNfc3RyaW5nIChmbGFncywgZXh0cmFfb3B0cywgTlVM
TCk7CiAgICAgIG1udC5tbnRfZnJlcSA9IG1udC5tbnRfcGFzc25vID0gMDsKCiAgICAgIGlmICht
eV9hZGRtbnRlbnQgKG1mcCwgJm1udCkgPT0gMSkgewogICAgICAgIGludCBlcnJzdiA9IGVycm5v
OwoJZGllIChFWF9GSUxFSU8sIF8oIm1vdW50OiBlcnJvciB3cml0aW5nICVzOiAlcyIpLAoJICAg
ICBNT1VOVEVELCBzdHJlcnJvciAoZXJyc3YpKTsKICAgICAgfQogIH0KICBpZiAoZmNobW9kIChm
aWxlbm8gKG1mcC0+bW50ZW50X2ZwKSwgU19JUlVTUnxTX0lXVVNSfFNfSVJHUlB8U19JUk9USCkg
PCAwKQogICAgaWYgKGVycm5vICE9IEVST0ZTKSB7CiAgICAgIGludCBlcnJzdiA9IGVycm5vOwog
ICAgICBkaWUgKEVYX0ZJTEVJTywgXygibW91bnQ6IGVycm9yIGNoYW5naW5nIG1vZGUgb2YgJXM6
ICVzIiksCgkgICBNT1VOVEVELCBzdHJlcnJvciAoZXJyc3YpKTsKICAgIH0KICBteV9lbmRtbnRl
bnQgKG1mcCk7CgogIHVubG9ja19tdGFiKCk7Cn0KCi8qIGNvdW50IHN1Y2Nlc3NmdWwgbW91bnQg
c3lzdGVtIGNhbGxzICovCnN0YXRpYyBpbnQgbW91bnRjb3VudCA9IDA7CgovKgogKiBkb19tb3Vu
dF9zeXNjYWxsKCkKICoJTW91bnQgYSBzaW5nbGUgZmlsZSBzeXN0ZW0uIEtlZXAgdHJhY2sgb2Yg
c3VjY2Vzc2VzLgogKiByZXR1cm5zOiAwOiBPSywgLTE6IGVycm9yIGluIGVycm5vCiAqLwpzdGF0
aWMgaW50CmRvX21vdW50X3N5c2NhbGwgKHN0cnVjdCBtb3VudGFyZ3MgKmFyZ3MpIHsKCWludCBm
bGFncyA9IGFyZ3MtPmZsYWdzOwoJaW50IHJldDsKCglpZiAoKGZsYWdzICYgTVNfTUdDX01TSykg
PT0gMCkKCQlmbGFncyB8PSBNU19NR0NfVkFMOwoKCXJldCA9IG1vdW50IChhcmdzLT5zcGVjLCBh
cmdzLT5ub2RlLCBhcmdzLT50eXBlLCBmbGFncywgYXJncy0+ZGF0YSk7CglpZiAocmV0ID09IDAp
CgkJbW91bnRjb3VudCsrOwoJcmV0dXJuIHJldDsKfQoKLyoKICogZ3Vlc3NfZnN0eXBlX2FuZF9t
b3VudCgpCiAqCU1vdW50IGEgc2luZ2xlIGZpbGUgc3lzdGVtLiBHdWVzcyB0aGUgdHlwZSB3aGVu
IHVua25vd24uCiAqIHJldHVybnM6IDA6IE9LLCAtMTogZXJyb3IgaW4gZXJybm8sIDE6IG90aGVy
IGVycm9yCiAqCWRvbid0IGV4aXQgb24gbm9uLWZhdGFsIGVycm9ycy4KICoJb24gcmV0dXJuIHR5
cGVzIGlzIGZpbGxlZCB3aXRoIHRoZSB0eXBlIHVzZWQuCiAqLwpzdGF0aWMgaW50Cmd1ZXNzX2Zz
dHlwZV9hbmRfbW91bnQgKGNoYXIgKnNwZWMsIGNoYXIgKm5vZGUsIGNoYXIgKip0eXBlcywKCQkJ
aW50IGZsYWdzLCBjaGFyICptb3VudF9vcHRzKSB7CiAgIHN0cnVjdCBtb3VudGFyZ3MgYXJncyA9
IHsgc3BlYywgbm9kZSwgTlVMTCwgZmxhZ3MgJiB+TVNfTk9TWVMsIG1vdW50X29wdHMgfTsKICAg
CiAgIGlmICgqdHlwZXMgJiYgc3RyY2FzZWNtcCAoKnR5cGVzLCAiYXV0byIpID09IDApCiAgICAg
ICp0eXBlcyA9IE5VTEw7CgogICBpZiAoISp0eXBlcyAmJiAoZmxhZ3MgJiAoTVNfQklORCB8IE1T
X01PVkUpKSkKICAgICAgKnR5cGVzID0gIm5vbmUiOwkJLyogcmFuZG9tLCBidXQgbm90ICJiaW5k
IiAqLwoKICAgaWYgKCEqdHlwZXMgJiYgIShmbGFncyAmIE1TX1JFTU9VTlQpKSB7CiAgICAgICp0
eXBlcyA9IGd1ZXNzX2ZzdHlwZShzcGVjKTsKICAgICAgaWYgKCp0eXBlcyAmJiAhc3RyY21wKCp0
eXBlcywgInN3YXAiKSkgewoJICBlcnJvcihfKCIlcyBsb29rcyBsaWtlIHN3YXBzcGFjZSAtIG5v
dCBtb3VudGVkIiksIHNwZWMpOwoJICAqdHlwZXMgPSBOVUxMOwoJICByZXR1cm4gMTsKICAgICAg
fQogICB9CgogICAvKiBBY2NlcHQgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiB0eXBlcywgYW5k
IHRyeSB0aGVtIG9uZSBieSBvbmUgKi8KICAgLyogQSBsaXN0IGxpa2UgIm5vbmZzLC4uIiBpbmRp
Y2F0ZXMgdHlwZXMgbm90IHRvIHVzZSAqLwogICBpZiAoKnR5cGVzICYmIHN0cm5jbXAoKnR5cGVz
LCAibm8iLCAyKSAmJiBpbmRleCgqdHlwZXMsJywnKSkgewogICAgICBjaGFyICp0ID0gc3RyZHVw
KCp0eXBlcyk7CiAgICAgIGNoYXIgKnA7CgogICAgICB3aGlsZSgocCA9IGluZGV4KHQsJywnKSkg
IT0gTlVMTCkgewoJICpwID0gMDsKCSBhcmdzLnR5cGUgPSAqdHlwZXMgPSB0OwoJIGlmKGRvX21v
dW50X3N5c2NhbGwgKCZhcmdzKSA9PSAwKQoJICAgIHJldHVybiAwOwoJIHQgPSBwKzE7CiAgICAg
IH0KICAgICAgLyogZG8gbGFzdCB0eXBlIGJlbG93ICovCiAgICAgICp0eXBlcyA9IHQ7CiAgIH0K
CiAgIGlmICgqdHlwZXMgfHwgKGZsYWdzICYgTVNfUkVNT1VOVCkpIHsKICAgICAgYXJncy50eXBl
ID0gKnR5cGVzOwogICAgICByZXR1cm4gZG9fbW91bnRfc3lzY2FsbCAoJmFyZ3MpOwogICB9Cgog
ICByZXR1cm4gcHJvY2ZzbG9vcChkb19tb3VudF9zeXNjYWxsLCAmYXJncywgdHlwZXMpOwp9Cgov
KgogKiBzdWlkX2NoZWNrKCkKICoJRGllIGlmIHRoZSB1c2VyIGlzIG5vdCBhbGxvd2VkIHRvIGRv
IHRoaXMuCiAqLwpzdGF0aWMgdm9pZApzdWlkX2NoZWNrKGNoYXIgKnNwZWMsIGNoYXIgKm5vZGUs
IGludCAqZmxhZ3MsIGNoYXIgKip1c2VyKSB7CiAgaWYgKHN1aWQpIHsKICAgICAgLyogUmVkSGF0
IHBhdGNoOiBhbGxvdyBvd25lcnMgdG8gbW91bnQgd2hlbiBmc3RhYiBjb250YWlucwoJIHRoZSBv
d25lciBvcHRpb24uICBOb3RlIHRoYXQgdGhpcyBzaG91bGQgbmV2ZXIgYmUgdXNlZAogICAgICAg
ICBpbiBhIGhpZ2ggc2VjdXJpdHkgZW52aXJvbm1lbnQsIGJ1dCBtYXkgYmUgdXNlZnVsIHRvIGdp
dmUKICAgICAgICAgcGVvcGxlIGF0IHRoZSBjb25zb2xlIHRoZSBwb3NzaWJpbGl0eSBvZiBtb3Vu
dGluZyBhIGZsb3BweS4gKi8KICAgICAgaWYgKCpmbGFncyAmIE1TX09XTkVSKSB7CgkgIGlmICgh
c3RybmNtcChzcGVjLCAiL2Rldi8iLCA1KSkgewoJICAgICAgc3RydWN0IHN0YXQgc2I7CgoJICAg
ICAgaWYgKCFzdGF0KHNwZWMsICZzYikpIHsKCQkgIGlmIChnZXR1aWQoKSA9PSBzYi5zdF91aWQp
CgkJICAgICAgKmZsYWdzIHw9IE1TX1VTRVI7CgkgICAgICB9CgkgIH0KICAgICAgfQogICAgICAv
KiBKYW1lcyBLZWhsIDxta2VobEBnaWwuY29tLmF1PiBjYW1lIHdpdGggYSBzaW1pbGFyIHBhdGNo
OgoJIGFsbG93IGFuIGFyYml0cmFyeSB1c2VyIHRvIG1vdW50IHdoZW4gaGUgaXMgdGhlIG93bmVy
IG9mCgkgdGhlIG1vdW50LXBvaW50IGFuZCBoYXMgd3JpdGUtYWNjZXNzIHRvIHRoZSBkZXZpY2Uu
CiAgICAgICAgIFRoaXMgaXMgZXZlbiBsZXNzIHNlY3VyZS4gTGV0IG1lIHNraXAgaXQgZm9yIHRo
ZSB0aW1lIGJlaW5nOwogICAgICAgICB0aGVyZSBzaG91bGQgYmUgYW4gZXhwbGljaXQgZnN0YWIg
bGluZSBhbGxvd2luZyBzdWNoIHRoaW5ncy4gKi8KCiAgICAgIGlmICghKCpmbGFncyAmIChNU19V
U0VSIHwgTVNfVVNFUlMpKSkgewogICAgICAgICAgaWYgKGFscmVhZHkgKHNwZWMsIG5vZGUpKQoJ
ICAgIGRpZSAoRVhfVVNBR0UsIF8oIm1vdW50IGZhaWxlZCIpKTsKCSAgZWxzZQogICAgICAgICAg
ICBkaWUgKEVYX1VTQUdFLCBfKCJtb3VudDogb25seSByb290IGNhbiBtb3VudCAlcyBvbiAlcyIp
LCBzcGVjLCBub2RlKTsKICAgICAgfQogICAgICBpZiAoKmZsYWdzICYgTVNfVVNFUikKCSAgKnVz
ZXIgPSBnZXR1c2VybmFtZSgpOwogIH0KCiAgaWYgKCpmbGFncyAmIE1TX09XTkVSKQogICAgICAq
ZmxhZ3MgJj0gfk1TX09XTkVSOwp9CgpzdGF0aWMgaW50Cmxvb3BfY2hlY2soY2hhciAqKnNwZWMs
IGNoYXIgKip0eXBlLCBpbnQgKmZsYWdzLAoJICAgaW50ICpsb29wLCBjaGFyICoqbG9vcGRldiwg
Y2hhciAqKmxvb3BmaWxlKSB7CiAgaW50IGxvb3B0eXBlLCBvZmZzZXQ7CgogIC8qCiAgICogSW4g
dGhlIGNhc2Ugb2YgYSBsb29wIG1vdW50LCBlaXRoZXIgdHlwZSBpcyBvZiB0aGUgZm9ybSBsb0Av
ZGV2L2xvb3A1CiAgICogb3IgdGhlIG9wdGlvbiAiLW8gbG9vcD0vZGV2L2xvb3A1IiBvciBqdXN0
ICItbyBsb29wIiBpcyBnaXZlbiwgb3IKICAgKiBtb3VudCBqdXN0IGhhcyB0byBmaWd1cmUgdGhp
bmdzIG91dCBmb3IgaXRzZWxmIGZyb20gdGhlIGZhY3QgdGhhdAogICAqIHNwZWMgaXMgbm90IGEg
YmxvY2sgZGV2aWNlLiBXZSBkbyBub3QgdGVzdCBmb3IgYSBibG9jayBkZXZpY2UKICAgKiBpbW1l
ZGlhdGVseTogbWF5YmUgbGF0ZXIgb3RoZXIgdHlwZXMgb2YgbW91bnRhYmxlIG9iamVjdHMgd2ls
bCBvY2N1ci4KICAgKi8KCiAgKmxvb3BkZXYgPSBvcHRfbG9vcGRldjsKCiAgbG9vcHR5cGUgPSAo
KnR5cGUgJiYgc3RybmNtcCgibG9AIiwgKnR5cGUsIDMpID09IDApOwogIGlmIChsb29wdHlwZSkg
ewogICAgaWYgKCpsb29wZGV2KQogICAgICBlcnJvcihfKCJtb3VudDogbG9vcCBkZXZpY2Ugc3Bl
Y2lmaWVkIHR3aWNlIikpOwogICAgKmxvb3BkZXYgPSAqdHlwZSArIDM7CiAgICAqdHlwZSA9IG9w
dF92ZnN0eXBlOwogIH0gZWxzZSBpZiAob3B0X3Zmc3R5cGUpIHsKICAgIGlmICgqdHlwZSkKICAg
ICAgZXJyb3IoXygibW91bnQ6IHR5cGUgc3BlY2lmaWVkIHR3aWNlIikpOwogICAgZWxzZQogICAg
ICAqdHlwZSA9IG9wdF92ZnN0eXBlOwogIH0KCiAgKmxvb3AgPSAoKCpmbGFncyAmIE1TX0xPT1Ap
IHx8ICpsb29wZGV2IHx8IG9wdF9vZmZzZXQgfHwgb3B0X2VuY3J5cHRpb24gfHwKCSAgIG9wdF9r
ZXliaXRzKTsKICAqbG9vcGZpbGUgPSAqc3BlYzsKCiAgaWYgKCpsb29wKSB7CiAgICAqZmxhZ3Mg
fD0gTVNfTE9PUDsKICAgIGlmIChmYWtlKSB7CiAgICAgIGlmICh2ZXJib3NlKQoJcHJpbnRmKF8o
Im1vdW50OiBza2lwcGluZyB0aGUgc2V0dXAgb2YgYSBsb29wIGRldmljZVxuIikpOwogICAgfSBl
bHNlIHsKICAgICAgaW50IGxvb3BybyA9ICgqZmxhZ3MgJiBNU19SRE9OTFkpOwoKICAgICAgaWYg
KCEqbG9vcGRldiB8fCAhKipsb29wZGV2KQoJKmxvb3BkZXYgPSBmaW5kX3VudXNlZF9sb29wX2Rl
dmljZSgpOwogICAgICBpZiAoISpsb29wZGV2KQoJcmV0dXJuIEVYX1NZU0VSUjsJLyogbm8gbW9y
ZSBsb29wIGRldmljZXMgKi8KICAgICAgaWYgKHZlcmJvc2UpCglwcmludGYoXygibW91bnQ6IGdv
aW5nIHRvIHVzZSB0aGUgbG9vcCBkZXZpY2UgJXNcbiIpLCAqbG9vcGRldik7CiAgICAgIG9mZnNl
dCA9IG9wdF9vZmZzZXQgPyBzdHJ0b3VsKG9wdF9vZmZzZXQsIE5VTEwsIDApIDogMDsKICAgICAg
aWYgKCFrZXlzeiAmJiBvcHRfa2V5Yml0cykKCWtleXN6ICA9IHN0cnRvdWwob3B0X2tleWJpdHMs
IE5VTEwsIDApOwogICAgICBpZiAob3B0X25vaGFzaHBhc3MpCgloYXNoX3Bhc3N3b3JkPTA7CiAg
ICAgIGlmIChzZXRfbG9vcCAoKmxvb3BkZXYsICpsb29wZmlsZSwgb2Zmc2V0LCBvcHRfZW5jcnlw
dGlvbiwgcGZkLCAKCQkgICAga2V5c3osICZsb29wcm8sIGhhc2hfcGFzc3dvcmQpKSB7CglpZiAo
dmVyYm9zZSkKCSAgcHJpbnRmKF8oIm1vdW50OiBmYWlsZWQgc2V0dGluZyB1cCBsb29wIGRldmlj
ZVxuIikpOwoJcmV0dXJuIEVYX0ZBSUw7CiAgICAgIH0KICAgICAgaWYgKHZlcmJvc2UgPiAxKQoJ
cHJpbnRmKF8oIm1vdW50OiBzZXR1cCBsb29wIGRldmljZSBzdWNjZXNzZnVsbHlcbiIpKTsKICAg
ICAgKnNwZWMgPSAqbG9vcGRldjsKICAgICAgaWYgKGxvb3BybykKCSpmbGFncyB8PSBNU19SRE9O
TFk7CiAgICB9CiAgfQoKICByZXR1cm4gMDsKfQoKc3RhdGljIHZvaWQKdXBkYXRlX210YWJfZW50
cnkoY2hhciAqc3BlYywgY2hhciAqbm9kZSwgY2hhciAqdHlwZSwgY2hhciAqb3B0cywKCQkgIGlu
dCBmbGFncywgaW50IGZyZXEsIGludCBwYXNzKSB7CiAgICBzdHJ1Y3QgbW50ZW50IG1udDsKCiAg
ICBtbnQubW50X2ZzbmFtZSA9IGNhbm9uaWNhbGl6ZSAoc3BlYyk7CiAgICBtbnQubW50X2RpciA9
IGNhbm9uaWNhbGl6ZSAobm9kZSk7CiAgICBtbnQubW50X3R5cGUgPSB0eXBlOwogICAgbW50Lm1u
dF9vcHRzID0gb3B0czsKICAgIG1udC5tbnRfZnJlcSA9IGZyZXE7CiAgICBtbnQubW50X3Bhc3Nu
byA9IHBhc3M7CiAgICAgIAogICAgLyogV2UgZ2V0IGNoYXR0eSBub3cgcmF0aGVyIHRoYW4gYWZ0
ZXIgdGhlIHVwZGF0ZSB0byBtdGFiIHNpbmNlIHRoZQogICAgICAgbW91bnQgc3VjY2VlZGVkLCBl
dmVuIGlmIHRoZSB3cml0ZSB0byAvZXRjL210YWIgc2hvdWxkIGZhaWwuICAqLwogICAgaWYgKHZl
cmJvc2UpCgkgICAgcHJpbnRfb25lICgmbW50KTsKCiAgICBpZiAoIW5vbXRhYiAmJiBtdGFiX2lz
X3dyaXRhYmxlKCkpIHsKCWlmIChmbGFncyAmIE1TX1JFTU9VTlQpCgkgICAgdXBkYXRlX210YWIg
KG1udC5tbnRfZGlyLCAmbW50KTsKCWVsc2UgewoJICAgIG1udEZJTEUgKm1mcDsKCgkgICAgbG9j
a19tdGFiKCk7CgkgICAgbWZwID0gbXlfc2V0bW50ZW50KE1PVU5URUQsICJhKyIpOwoJICAgIGlm
IChtZnAgPT0gTlVMTCB8fCBtZnAtPm1udGVudF9mcCA9PSBOVUxMKSB7CgkgICAgICAgCWludCBl
cnJzdiA9IGVycm5vOwoJCWVycm9yKF8oIm1vdW50OiBjYW4ndCBvcGVuICVzOiAlcyIpLCBNT1VO
VEVELAoJCSAgICAgIHN0cmVycm9yIChlcnJzdikpOwoJICAgIH0gZWxzZSB7CgkJaWYgKChteV9h
ZGRtbnRlbnQgKG1mcCwgJm1udCkpID09IDEpIHsKCQkJaW50IGVycnN2ID0gZXJybm87CgkJCWVy
cm9yKF8oIm1vdW50OiBlcnJvciB3cml0aW5nICVzOiAlcyIpLCBNT1VOVEVELAoJCQkgICAgICBz
dHJlcnJvciAoZXJyc3YpKTsKCQl9CgkJbXlfZW5kbW50ZW50KG1mcCk7CgkgICAgfQoJICAgIHVu
bG9ja19tdGFiKCk7Cgl9CiAgICB9Cn0KCnN0YXRpYyB2b2lkCnNldF9wZmQoY2hhciAqcykgewoJ
aWYgKCFpc2RpZ2l0KCpzKSkKCQlkaWUoRVhfVVNBR0UsCgkJICAgIF8oIm1vdW50OiBhcmd1bWVu
dCB0byAtcCBvciAtLXBhc3MtZmQgbXVzdCBiZSBhIG51bWJlciIpKTsKCXBmZCA9IGF0b2kob3B0
YXJnKTsKfQoKc3RhdGljIHZvaWQKY2Ryb21fc2V0c3BlZWQoY2hhciAqc3BlYykgewojZGVmaW5l
IENEUk9NX1NFTEVDVF9TUEVFRCAgICAgIDB4NTMyMiAgLyogU2V0IHRoZSBDRC1ST00gc3BlZWQg
Ki8KICAgIGlmIChvcHRfc3BlZWQpIHsKCWludCBjZHJvbTsKCWludCBzcGVlZCA9IGF0b2kob3B0
X3NwZWVkKTsKCglpZiAoKGNkcm9tID0gb3BlbihzcGVjLCBPX1JET05MWSB8IE9fTk9OQkxPQ0sp
KSA8IDApCgkgICAgZGllKEVYX0ZBSUwsIF8oIm1vdW50OiBjYW5ub3Qgb3BlbiAlcyBmb3Igc2V0
dGluZyBzcGVlZCIpLAoJCXNwZWMpOwoJaWYgKGlvY3RsKGNkcm9tLCBDRFJPTV9TRUxFQ1RfU1BF
RUQsIHNwZWVkKSA8IDApCgkgICAgZGllKEVYX0ZBSUwsIF8oIm1vdW50OiBjYW5ub3Qgc2V0IHNw
ZWVkOiAlcyIpLAoJCXN0cmVycm9yKGVycm5vKSk7CgljbG9zZShjZHJvbSk7CiAgICB9Cn0KCi8q
CiAqIGNoZWNrX3NwZWNpYWxfbW91bnRwcm9nKCkKICoJSWYgdGhlcmUgaXMgYSBzcGVjaWFsIG1v
dW50IHByb2dyYW0gZm9yIHRoaXMgdHlwZSwgZXhlYyBpdC4KICogcmV0dXJuczogMDogbm8gZXhl
YyB3YXMgZG9uZSwgMTogZXhlYyB3YXMgZG9uZSwgc3RhdHVzIGhhcyByZXN1bHQKICovCgpzdGF0
aWMgaW50CmNoZWNrX3NwZWNpYWxfbW91bnRwcm9nKGNoYXIgKnNwZWMsIGNoYXIgKm5vZGUsIGNo
YXIgKnR5cGUsIGludCBmbGFncywKCQkJY2hhciAqZXh0cmFfb3B0cywgaW50ICpzdGF0dXMpIHsK
ICBjaGFyIG1vdW50cHJvZ1sxMjBdOwogIHN0cnVjdCBzdGF0IHN0YXRidWY7CiAgaW50IHJlczsK
CiAgaWYgKCFleHRlcm5hbF9hbGxvd2VkKQogICAgICByZXR1cm4gMDsKCiAgaWYgKHR5cGUgJiYg
c3RybGVuKHR5cGUpIDwgMTAwKSB7CiAgICAgICBzcHJpbnRmKG1vdW50cHJvZywgIi9zYmluL21v
dW50LiVzIiwgdHlwZSk7CiAgICAgICBpZiAoc3RhdChtb3VudHByb2csICZzdGF0YnVmKSA9PSAw
KSB7CgkgICAgcmVzID0gZm9yaygpOwoJICAgIGlmIChyZXMgPT0gMCkgewoJCSBjaGFyICpvbywg
Km1vdW50YXJnc1sxMF07CgkJIGludCBpID0gMDsKCgkJIHNldHVpZChnZXR1aWQoKSk7CgkJIHNl
dGdpZChnZXRnaWQoKSk7CgkJIG9vID0gZml4X29wdHNfc3RyaW5nIChmbGFncywgZXh0cmFfb3B0
cywgTlVMTCk7CgkJIG1vdW50YXJnc1tpKytdID0gbW91bnRwcm9nOwoJCSBtb3VudGFyZ3NbaSsr
XSA9IHNwZWM7CgkJIG1vdW50YXJnc1tpKytdID0gbm9kZTsKCQkgaWYgKG5vbXRhYikKCQkgICAg
ICBtb3VudGFyZ3NbaSsrXSA9ICItbiI7CgkJIGlmICh2ZXJib3NlKQoJCSAgICAgIG1vdW50YXJn
c1tpKytdID0gIi12IjsKCQkgaWYgKG9vICYmICpvbykgewoJCSAgICAgIG1vdW50YXJnc1tpKytd
ID0gIi1vIjsKCQkgICAgICBtb3VudGFyZ3NbaSsrXSA9IG9vOwoJCSB9CgkJIG1vdW50YXJnc1tp
XSA9IE5VTEw7CgkJIGV4ZWN2KG1vdW50cHJvZywgbW91bnRhcmdzKTsKCQkgZXhpdCgxKTsJLyog
ZXhlYyBmYWlsZWQgKi8KCSAgICB9IGVsc2UgaWYgKHJlcyAhPSAtMSkgewoJCSBpbnQgc3Q7CgkJ
IHdhaXQoJnN0KTsKCQkgKnN0YXR1cyA9IChXSUZFWElURUQoc3QpID8gV0VYSVRTVEFUVVMoc3Qp
IDogRVhfU1lTRVJSKTsKCQkgcmV0dXJuIDE7CgkgICAgfSBlbHNlIHsKCSAgICAJIGludCBlcnJz
diA9IGVycm5vOwoJCSBlcnJvcihfKCJtb3VudDogY2Fubm90IGZvcms6ICVzIiksIHN0cmVycm9y
KGVycnN2KSk7CgkgICAgfQogICAgICAgfQogIH0KICByZXR1cm4gMDsKfQoKLyoKICogdHJ5X21v
dW50X29uZSgpCiAqCVRyeSB0byBtb3VudCBvbmUgZmlsZSBzeXN0ZW0uIFdoZW4gImJnIiBpcyAx
LCB0aGlzIGlzIGEgcmV0cnkKICoJaW4gdGhlIGJhY2tncm91bmQuIE9uZSBhZGRpdGlvbmFsIGV4
aXQgY29kZSBFWF9CRyBpcyB1c2VkIGhlcmUuCiAqCUl0IGlzIHVzZWQgdG8gaW5zdHJ1Y3QgdGhl
IGNhbGxlciB0byByZXRyeSB0aGUgbW91bnQgaW4gdGhlCiAqCWJhY2tncm91bmQuCiAqIHJldHVy
bnM6IDA6IE9LLCBFWF9TWVNFUlIsIEVYX0ZBSUwsIHJldHVybiBjb2RlIGZyb20gbmZzbW91bnQs
CiAqICAgICAgcmV0dXJuIHN0YXR1cyBmcm9tIHdhaXQKICovCnN0YXRpYyBpbnQKdHJ5X21vdW50
X29uZSAoY29uc3QgY2hhciAqc3BlYzAsIGNvbnN0IGNoYXIgKm5vZGUwLCBjaGFyICp0eXBlczAs
CgkgICAgICAgY29uc3QgY2hhciAqb3B0czAsIGludCBmcmVxLCBpbnQgcGFzcywgaW50IGJnLCBp
bnQgcm8pIHsKICBpbnQgcmVzLCBzdGF0dXM7CiAgaW50IG1udDVfcmVzID0gMDsJCS8qIG9ubHkg
Zm9yIGdjYyAqLwogIGludCBtbnRfZXJyOwogIGludCBmbGFnczsKICBjaGFyICpleHRyYV9vcHRz
OwkJLyogd3JpdHRlbiBpbiBtdGFiICovCiAgY2hhciAqbW91bnRfb3B0czsJCS8qIGFjdHVhbGx5
IHVzZWQgb24gc3lzdGVtIGNhbGwgKi8KICBjb25zdCBjaGFyICpvcHRzOwogIGNoYXIgKnNwZWMs
ICpub2RlLCAqdHlwZXM7CiAgY2hhciAqdXNlciA9IDA7CiAgaW50IGxvb3AgPSAwOwogIGNoYXIg
Kmxvb3BkZXYgPSAwLCAqbG9vcGZpbGUgPSAwOwogIHN0cnVjdCBzdGF0IHN0YXRidWY7CiAgaW50
IG5mc19tb3VudF92ZXJzaW9uID0gMDsJLyogYW55IHZlcnNpb24gKi8KCiAgc3BlYyA9IHhzdHJk
dXAoc3BlYzApOwogIG5vZGUgPSB4c3RyZHVwKG5vZGUwKTsKICB0eXBlcyA9IHhzdHJkdXAodHlw
ZXMwKTsKICBvcHRzID0geHN0cmR1cChvcHRzMCk7CgogIHBhcnNlX29wdHMgKHhzdHJkdXAgKG9w
dHMpLCAmZmxhZ3MsICZleHRyYV9vcHRzKTsKCiAgLyogcXVpZXRseSBzdWNjZWVkIGZvciBmc3Rh
YiBlbnRyaWVzIHRoYXQgZG9uJ3QgZ2V0IG1vdW50ZWQgYXV0b21hdGljYWxseSAqLwogIGlmICht
b3VudF9hbGwgJiYgKGZsYWdzICYgTVNfTk9BVVRPKSkKICAgIHJldHVybiAwOwoKICBzdWlkX2No
ZWNrKHNwZWMsIG5vZGUsICZmbGFncywgJnVzZXIpOwoKICBtb3VudF9vcHRzID0gZXh0cmFfb3B0
czsKCiAgaWYgKG9wdF9zcGVlZCkKICAgICAgY2Ryb21fc2V0c3BlZWQoc3BlYyk7CgogIGlmICgh
KGZsYWdzICYgTVNfUkVNT1VOVCkpIHsKICAgICAgLyoKICAgICAgICogRG9uJ3Qgc2V0IHVwIGEg
KG5ldykgbG9vcCBkZXZpY2UgaWYgd2Ugb25seSByZW1vdW50IC0gdGhpcyBsZWZ0CiAgICAgICAq
IHN0YWxlIGFzc2lnbm1lbnRzIG9mIGZpbGVzIHRvIGxvb3AgZGV2aWNlcy4gTmFzdHkgd2hlbiB1
c2VkIGZvcgogICAgICAgKiBlbmNyeXB0aW9uLgogICAgICAgKi8KICAgICAgcmVzID0gbG9vcF9j
aGVjaygmc3BlYywgJnR5cGVzLCAmZmxhZ3MsICZsb29wLCAmbG9vcGRldiwgJmxvb3BmaWxlKTsK
ICAgICAgaWYgKHJlcykKCSAgcmV0dXJuIHJlczsKICB9CgogIC8qCiAgICogQ2FsbCBtb3VudC5U
WVBFIGZvciB0eXBlcyB0aGF0IHJlcXVpcmUgYSBzZXBhcmF0ZSBtb3VudCBwcm9ncmFtLgogICAq
IEZvciB0aGUgbW9tZW50IHRoZXNlIHR5cGVzIGFyZSBuY3BmcyBhbmQgc21iZnMuIE1heWJlIGFs
c28gdnhmcy4KICAgKiBBbGwgc3VjaCBzcGVjaWFsIHRoaW5ncyBtdXN0IG9jY3VyIGlzb2xhdGVk
IGluIHRoZSB0eXBlcyBzdHJpbmcuCiAgICovCiAgaWYgKGNoZWNrX3NwZWNpYWxfbW91bnRwcm9n
IChzcGVjLCBub2RlLCB0eXBlcywgZmxhZ3MsIGV4dHJhX29wdHMsICZzdGF0dXMpKQogICAgICBy
ZXR1cm4gc3RhdHVzOwoKICAvKgogICAqIEFsc28gbmZzIHJlcXVpcmVzIGEgc2VwYXJhdGUgcHJv
Z3JhbSwgYnV0IGl0IGlzIGJ1aWx0IGluLgogICAqLwogIGlmICghZmFrZSAmJiB0eXBlcyAmJiBz
dHJlcSAodHlwZXMsICJuZnMiKSkgewojaWZkZWYgSEFWRV9ORlMKcmV0cnlfbmZzOgogICAgbW50
X2VyciA9IG5mc21vdW50IChzcGVjLCBub2RlLCAmZmxhZ3MsICZleHRyYV9vcHRzLCAmbW91bnRf
b3B0cywKCQkJJm5mc19tb3VudF92ZXJzaW9uLCBiZyk7CiAgICBpZiAobW50X2VycikKICAgICAg
cmV0dXJuIG1udF9lcnI7CiNlbHNlCiAgICBkaWUgKEVYX1NPRlRXQVJFLCBfKCJtb3VudDogdGhp
cyB2ZXJzaW9uIHdhcyBjb21waWxlZCAiCgkgICAgICAgICAgICAgICJ3aXRob3V0IHN1cHBvcnQg
Zm9yIHRoZSB0eXBlIGBuZnMnIikpOwojZW5kaWYKICB9CgogIGJsb2NrX3NpZ25hbHMgKFNJR19C
TE9DSyk7CgogIGlmICghZmFrZSkKICAgIG1udDVfcmVzID0gZ3Vlc3NfZnN0eXBlX2FuZF9tb3Vu
dCAoc3BlYywgbm9kZSwgJnR5cGVzLCBmbGFncyAmIH5NU19OT1NZUywKCQkJCSAgICAgICBtb3Vu
dF9vcHRzKTsKCiAgaWYgKGZha2UgfHwgbW50NV9yZXMgPT0gMCkgewogICAgICAvKiBNb3VudCBz
dWNjZWVkZWQsIHJlcG9ydCB0aGlzIChpZiB2ZXJib3NlKSBhbmQgd3JpdGUgbXRhYiBlbnRyeS4g
ICovCiAgICAgIGlmIChsb29wKQoJICBvcHRfbG9vcGRldiA9IGxvb3BkZXY7CgogICAgICB1cGRh
dGVfbXRhYl9lbnRyeShsb29wID8gbG9vcGZpbGUgOiBzcGVjLAoJCQlub2RlLAoJCQl0eXBlcyA/
IHR5cGVzIDogInVua25vd24iLAoJCQlmaXhfb3B0c19zdHJpbmcgKGZsYWdzICYgfk1TX05PTVRB
QiwgZXh0cmFfb3B0cywgdXNlciksCgkJCWZsYWdzLAoJCQlmcmVxLAoJCQlwYXNzKTsKCiAgICAg
IGJsb2NrX3NpZ25hbHMgKFNJR19VTkJMT0NLKTsKICAgICAgcmV0dXJuIDA7CiAgfQoKICBtbnRf
ZXJyID0gZXJybm87CgogIGlmIChsb29wKQoJZGVsX2xvb3Aoc3BlYyk7CgogIGJsb2NrX3NpZ25h
bHMgKFNJR19VTkJMT0NLKTsKCiNpZmRlZiBIQVZFX05GUwogIGlmIChtbnRfZXJyICYmIHR5cGVz
ICYmIHN0cmVxICh0eXBlcywgIm5mcyIpKSB7CiAgICAgIGlmIChuZnNfbW91bnRfdmVyc2lvbiA9
PSA0KSB7CgkgIGlmICh2ZXJib3NlKQoJICAgIHByaW50ZihfKCJtb3VudDogZmFpbGVkIHdpdGgg
bmZzIG1vdW50IHZlcnNpb24gNCwgdHJ5aW5nIDMuLlxuIikpOwoJICBuZnNfbW91bnRfdmVyc2lv
biA9IDM7CgkgIGdvdG8gcmV0cnlfbmZzOwogICAgICB9CiAgfQojZW5kaWYKCiAgLyogTW91bnQg
ZmFpbGVkLCBjb21wbGFpbiwgYnV0IGRvbid0IGRpZS4gICovCgogIGlmICh0eXBlcyA9PSAwKSB7
CiAgICBpZiAoc3VpZCkKICAgICAgZXJyb3IgKF8oIm1vdW50OiBJIGNvdWxkIG5vdCBkZXRlcm1p
bmUgdGhlIGZpbGVzeXN0ZW0gdHlwZSwgIgoJICAgICAgICJhbmQgbm9uZSB3YXMgc3BlY2lmaWVk
IikpOwogICAgZWxzZQogICAgICBlcnJvciAoXygibW91bnQ6IHlvdSBtdXN0IHNwZWNpZnkgdGhl
IGZpbGVzeXN0ZW0gdHlwZSIpKTsKICB9IGVsc2UgaWYgKG1udDVfcmVzICE9IC0xKSB7CiAgICAg
IC8qIHNob3VsZCBub3QgaGFwcGVuICovCiAgICAgIGVycm9yIChfKCJtb3VudDogbW91bnQgZmFp
bGVkIikpOwogIH0gZWxzZSB7CiAgIHN3aXRjaCAobW50X2VycikgewogICAgY2FzZSBFUEVSTToK
ICAgICAgaWYgKGdldGV1aWQoKSA9PSAwKSB7CgkgICBpZiAoc3RhdCAobm9kZSwgJnN0YXRidWYp
IHx8ICFTX0lTRElSKHN0YXRidWYuc3RfbW9kZSkpCgkJZXJyb3IgKF8oIm1vdW50OiBtb3VudCBw
b2ludCAlcyBpcyBub3QgYSBkaXJlY3RvcnkiKSwgbm9kZSk7CgkgICBlbHNlCgkJZXJyb3IgKF8o
Im1vdW50OiBwZXJtaXNzaW9uIGRlbmllZCIpKTsKICAgICAgfSBlbHNlCgllcnJvciAoXygibW91
bnQ6IG11c3QgYmUgc3VwZXJ1c2VyIHRvIHVzZSBtb3VudCIpKTsKICAgICAgYnJlYWs7CiAgICBj
YXNlIEVCVVNZOgogICAgICBpZiAoZmxhZ3MgJiBNU19SRU1PVU5UKSB7CgllcnJvciAoXygibW91
bnQ6ICVzIGlzIGJ1c3kiKSwgbm9kZSk7CiAgICAgIH0gZWxzZSBpZiAoIXN0cmNtcCh0eXBlcywg
InByb2MiKSAmJiAhc3RyY21wKG5vZGUsICIvcHJvYyIpKSB7CgkvKiBoZXVyaXN0aWM6IGlmIC9w
cm9jL3ZlcnNpb24gZXhpc3RzLCB0aGVuIHByb2JhYmx5IHByb2MgaXMgbW91bnRlZCAqLwoJaWYg
KHN0YXQgKCIvcHJvYy92ZXJzaW9uIiwgJnN0YXRidWYpKSAgIC8qIHByb2MgbW91bnRlZD8gKi8K
CSAgIGVycm9yIChfKCJtb3VudDogJXMgaXMgYnVzeSIpLCBub2RlKTsgICAvKiBubyAqLwoJZWxz
ZSBpZiAoIW1vdW50X2FsbCB8fCB2ZXJib3NlKSAgICAgICAgICAgIC8qIHllcywgZG9uJ3QgbWVu
dGlvbiBpdCAqLwoJICAgZXJyb3IgKF8oIm1vdW50OiBwcm9jIGFscmVhZHkgbW91bnRlZCIpKTsK
ICAgICAgfSBlbHNlIHsKCWVycm9yIChfKCJtb3VudDogJXMgYWxyZWFkeSBtb3VudGVkIG9yICVz
IGJ1c3kiKSwgc3BlYywgbm9kZSk7CglhbHJlYWR5IChzcGVjLCBub2RlKTsKICAgICAgfQogICAg
ICBicmVhazsKICAgIGNhc2UgRU5PRU5UOgogICAgICBpZiAobHN0YXQgKG5vZGUsICZzdGF0YnVm
KSkKCSAgIGVycm9yIChfKCJtb3VudDogbW91bnQgcG9pbnQgJXMgZG9lcyBub3QgZXhpc3QiKSwg
bm9kZSk7CiAgICAgIGVsc2UgaWYgKHN0YXQgKG5vZGUsICZzdGF0YnVmKSkKCSAgIGVycm9yIChf
KCJtb3VudDogbW91bnQgcG9pbnQgJXMgaXMgYSBzeW1ib2xpYyBsaW5rIHRvIG5vd2hlcmUiKSwK
CQkgIG5vZGUpOwogICAgICBlbHNlIGlmIChzdGF0IChzcGVjLCAmc3RhdGJ1ZikpCgkgICBlcnJv
ciAoXygibW91bnQ6IHNwZWNpYWwgZGV2aWNlICVzIGRvZXMgbm90IGV4aXN0IiksIHNwZWMpOwog
ICAgICBlbHNlIHsKICAgICAgICAgICBlcnJubyA9IG1udF9lcnI7CiAgICAgICAgICAgcGVycm9y
KCJtb3VudCIpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgY2FzZSBFTk9URElSOgogICAgICBp
ZiAoc3RhdCAobm9kZSwgJnN0YXRidWYpIHx8ICEgU19JU0RJUihzdGF0YnVmLnN0X21vZGUpKQog
ICAgICAgICAgIGVycm9yIChfKCJtb3VudDogbW91bnQgcG9pbnQgJXMgaXMgbm90IGEgZGlyZWN0
b3J5IiksIG5vZGUpOwogICAgICBlbHNlIGlmIChzdGF0IChzcGVjLCAmc3RhdGJ1ZikgJiYgZXJy
bm8gPT0gRU5PVERJUikKCSAgIGVycm9yIChfKCJtb3VudDogc3BlY2lhbCBkZXZpY2UgJXMgZG9l
cyBub3QgZXhpc3RcbiIKCQkgICAgIiAgICAgICAoYSBwYXRoIHByZWZpeCBpcyBub3QgYSBkaXJl
Y3RvcnkpXG4iKSwgc3BlYyk7CiAgICAgIGVsc2UgewoJICAgZXJybm8gPSBtbnRfZXJyOwoJICAg
cGVycm9yKCJtb3VudCIpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgY2FzZSBFSU5WQUw6CiAg
ICB7IGludCBmZDsKICAgICAgbG9uZyBzaXplOwogICAgICBpbnQgd2FybmVkPTA7CgogICAgICBp
ZiAoZmxhZ3MgJiBNU19SRU1PVU5UKSB7CgllcnJvciAoXygibW91bnQ6ICVzIG5vdCBtb3VudGVk
IGFscmVhZHksIG9yIGJhZCBvcHRpb24iKSwgbm9kZSk7CiAgICAgIH0gZWxzZSB7CgllcnJvciAo
XygibW91bnQ6IHdyb25nIGZzIHR5cGUsIGJhZCBvcHRpb24sIGJhZCBzdXBlcmJsb2NrIG9uICVz
LFxuIgoJICAgICAgICIgICAgICAgb3IgdG9vIG1hbnkgbW91bnRlZCBmaWxlIHN5c3RlbXMiKSwK
CSAgICAgICBzcGVjKTsKCglpZiAoc3RhdCAoc3BlYywgJnN0YXRidWYpID09IDAgJiYgU19JU0JM
SyhzdGF0YnVmLnN0X21vZGUpCgkgICAmJiAoZmQgPSBvcGVuKHNwZWMsIE9fUkRPTkxZIHwgT19O
T05CTE9DSykpID49IDApIHsKCSAgaWYoaW9jdGwoZmQsIEJMS0dFVFNJWkUsICZzaXplKSA9PSAw
KSB7CgkgICAgaWYgKHNpemUgPT0gMCkgewoJICAgICAgd2FybmVkKys7CgkgIGVycm9yICgiICAg
ICAgIChjb3VsZCB0aGlzIGJlIHRoZSBJREUgZGV2aWNlIHdoZXJlIHlvdSBpbiBmYWN0IHVzZVxu
IgoJCSAiICAgICAgIGlkZS1zY3NpIHNvIHRoYXQgc3IwIG9yIHNkYSBvciBzbyBpcyBuZWVkZWQ/
KSIpOwoJICAgIH0KCSAgICBpZiAoc2l6ZSAmJiBzaXplIDw9IDIpIHsKCSAgICAgIHdhcm5lZCsr
OwoJICBlcnJvciAoIiAgICAgICAoYXJlbid0IHlvdSB0cnlpbmcgdG8gbW91bnQgYW4gZXh0ZW5k
ZWQgcGFydGl0aW9uLFxuIgoJCSAiICAgICAgIGluc3RlYWQgb2Ygc29tZSBsb2dpY2FsIHBhcnRp
dGlvbiBpbnNpZGU/KSIpOwoJICAgIH0KCSAgY2xvc2UoZmQpOwoJICB9CiNpZiAwCgkgIC8qIDB4
ZiBmb3IgU0NTSSwgMHgzZiBmb3IgSURFLiBPbmUgbWlnaHQgY2hlY2sgL3Byb2MvcGFydGl0aW9u
cwoJICAgICB0byBzZWUgd2hldGhlciB0aGlzIHRoaW5nIHJlYWxseSBpcyBwYXJ0aXRpb25lZC4K
CSAgICAgRG8gbm90IHN1Z2dlc3QgcGFydGl0aW9ucyBmb3IgL2Rldi9mZDAuICovCgkgIGlmICgh
d2FybmVkICYmIChzdGF0YnVmLnN0X3JkZXYgJiAweGYpID09IDApIHsKCSAgICB3YXJuZWQrKzsK
CSAgICBlcnJvciAoIiAgICAgICAoY291bGQgdGhpcyBiZSB0aGUgd2hvbGUgZGlzayBkZXZpY2Vc
biIKCQkgICAiICAgICAgIHdoZXJlIHlvdSBuZWVkIGEgcGFydGl0aW9uPykiKTsKCSAgfQojZW5k
aWYKCX0KICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU1GSUxFOgogICAgICBl
cnJvciAoXygibW91bnQgdGFibGUgZnVsbCIpKTsgYnJlYWs7CiAgICBjYXNlIEVJTzoKICAgICAg
ZXJyb3IgKF8oIm1vdW50OiAlczogY2FuJ3QgcmVhZCBzdXBlcmJsb2NrIiksIHNwZWMpOyBicmVh
azsKICAgIGNhc2UgRU5PREVWOgogICAgeyBpbnQgcGZzOwogICAgICBpZiAoKHBmcyA9IGlzX2lu
X3Byb2Nmcyh0eXBlcykpID09IDEgfHwgIXN0cmNtcCh0eXBlcywgImd1ZXNzIikpCiAgICAgICAg
ZXJyb3IoXygibW91bnQ6ICVzOiB1bmtub3duIGRldmljZSIpLCBzcGVjKTsKICAgICAgZWxzZSBp
ZiAocGZzID09IDApIHsKCWNoYXIgKmxvd3R5cGUsICpwOwoJaW50IHU7CgoJZXJyb3IgKF8oIm1v
dW50OiBmcyB0eXBlICVzIG5vdCBzdXBwb3J0ZWQgYnkga2VybmVsIiksIHR5cGVzKTsKCgkvKiBt
YXliZSB0aGlzIGxvc2VyIGFza2VkIGZvciBGQVQgb3IgSVNPOTY2MCBvciBpc29mcyAqLwoJbG93
dHlwZSA9IHhzdHJkdXAodHlwZXMpOwoJdSA9IDA7Cglmb3IocD1sb3d0eXBlOyAqcDsgcCsrKSB7
CgkgIGlmKHRvbG93ZXIoKnApICE9ICpwKSB7CgkgICAgKnAgPSB0b2xvd2VyKCpwKTsKCSAgICB1
Kys7CgkgIH0KCX0KCWlmICh1ICYmIGlzX2luX3Byb2Nmcyhsb3d0eXBlKSA9PSAxKQoJICBlcnJv
ciAoXygibW91bnQ6IHByb2JhYmx5IHlvdSBtZWFudCAlcyIpLCBsb3d0eXBlKTsKCWVsc2UgaWYg
KCFzdHJuY21wKGxvd3R5cGUsICJpc28iLCAzKSAmJiBpc19pbl9wcm9jZnMoImlzbzk2NjAiKSA9
PSAxKQoJICBlcnJvciAoXygibW91bnQ6IG1heWJlIHlvdSBtZWFudCBpc285NjYwID8iKSk7Cglm
cmVlKGxvd3R5cGUpOwogICAgICB9IGVsc2UKCWVycm9yIChfKCJtb3VudDogJXMgaGFzIHdyb25n
IGRldmljZSBudW1iZXIgb3IgZnMgdHlwZSAlcyBub3Qgc3VwcG9ydGVkIiksCgkgICAgICAgc3Bl
YywgdHlwZXMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRU5PVEJMSzoKICAgICAgaWYg
KHN0YXQgKHNwZWMsICZzdGF0YnVmKSkgLyogc3RyYW5nZSAuLi4gKi8KCWVycm9yIChfKCJtb3Vu
dDogJXMgaXMgbm90IGEgYmxvY2sgZGV2aWNlLCBhbmQgc3RhdCBmYWlscz8iKSwgc3BlYyk7CiAg
ICAgIGVsc2UgaWYgKFNfSVNCTEsoc3RhdGJ1Zi5zdF9tb2RlKSkKICAgICAgICBlcnJvciAoXygi
bW91bnQ6IHRoZSBrZXJuZWwgZG9lcyBub3QgcmVjb2duaXplICVzIGFzIGEgYmxvY2sgZGV2aWNl
XG4iCgkgICAgICAgIiAgICAgICAobWF5YmUgYGluc21vZCBkcml2ZXInPykiKSwgc3BlYyk7CiAg
ICAgIGVsc2UgaWYgKFNfSVNSRUcoc3RhdGJ1Zi5zdF9tb2RlKSkKCWVycm9yIChfKCJtb3VudDog
JXMgaXMgbm90IGEgYmxvY2sgZGV2aWNlIChtYXliZSB0cnkgYC1vIGxvb3AnPykiKSwKCQkgc3Bl
Yyk7CiAgICAgIGVsc2UKCWVycm9yIChfKCJtb3VudDogJXMgaXMgbm90IGEgYmxvY2sgZGV2aWNl
IiksIHNwZWMpOwogICAgICBicmVhazsKICAgIGNhc2UgRU5YSU86CiAgICAgIGVycm9yIChfKCJt
b3VudDogJXMgaXMgbm90IGEgdmFsaWQgYmxvY2sgZGV2aWNlIiksIHNwZWMpOyBicmVhazsKICAg
IGNhc2UgRUFDQ0VTOiAgLyogcHJlLWxpbnV4IDEuMS4zOCwgMS4xLjQxIGFuZCBsYXRlciAqLwog
ICAgY2FzZSBFUk9GUzogICAvKiBsaW51eCAxLjEuMzggYW5kIGxhdGVyICovCiAgICB7IGNoYXIg
KmJkID0gKGxvb3AgPyAiIiA6IF8oImJsb2NrIGRldmljZSAiKSk7CiAgICAgIGlmIChybyB8fCAo
ZmxhZ3MgJiBNU19SRE9OTFkpKSB7CiAgICAgICAgICBlcnJvciAoXygibW91bnQ6IGNhbm5vdCBt
b3VudCAlcyVzIHJlYWQtb25seSIpLAoJCSBiZCwgc3BlYyk7CiAgICAgICAgICBicmVhazsKICAg
ICAgfSBlbHNlIGlmIChyZWFkd3JpdGUpIHsKCSAgZXJyb3IgKF8oIm1vdW50OiAlcyVzIGlzIHdy
aXRlLXByb3RlY3RlZCBidXQgZXhwbGljaXQgYC13JyBmbGFnIGdpdmVuIiksCgkJIGJkLCBzcGVj
KTsKCSAgYnJlYWs7CiAgICAgIH0gZWxzZSB7CgkgaWYgKGxvb3ApIHsKCSAgICAgb3B0cyA9IG9w
dHMwOwoJICAgICB0eXBlcyA9IHR5cGVzMDsKCSB9CiAgICAgICAgIGlmIChvcHRzKSB7CgkgICAg
IGNoYXIgKm9wdHMxID0gcmVhbGxvYyh4c3RyZHVwKG9wdHMpLCBzdHJsZW4ob3B0cykrNCk7CiAg
ICAgICAgICAgICBzdHJjYXQob3B0czEsICIscm8iKTsKCSAgICAgb3B0cyA9IG9wdHMxOwogICAg
ICAgICB9IGVsc2UKICAgICAgICAgICAgIG9wdHMgPSAicm8iOwoJIGlmICh0eXBlcyAmJiAhc3Ry
Y21wKHR5cGVzLCAiZ3Vlc3MiKSkKCSAgICAgdHlwZXMgPSAwOwogICAgICAgICBlcnJvciAoXygi
bW91bnQ6ICVzJXMgaXMgd3JpdGUtcHJvdGVjdGVkLCBtb3VudGluZyByZWFkLW9ubHkiKSwKCQli
ZCwgc3BlYzApOwoJIHJldHVybiB0cnlfbW91bnRfb25lIChzcGVjMCwgbm9kZTAsIHR5cGVzLCBv
cHRzLCBmcmVxLCBwYXNzLCBiZywgMSk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBk
ZWZhdWx0OgogICAgICBlcnJvciAoIm1vdW50OiAlcyIsIHN0cmVycm9yIChtbnRfZXJyKSk7IGJy
ZWFrOwogICAgfQogIH0KICByZXR1cm4gRVhfRkFJTDsKfQoKLyoKICogc2V0X3Byb2NfbmFtZSgp
CiAqCVVwZGF0ZSB0aGUgYXJndW1lbnQgdmVjdG9yLCBzbyB0aGF0IHRoaXMgcHJvY2VzcyBtYXkg
YmUgZWFzaWx5CiAqCWlkZW50aWZpZWQgaW4gYSAicHMiIGxpc3RpbmcuCiAqLwpzdGF0aWMgdm9p
ZApzZXRfcHJvY19uYW1lIChjb25zdCBjaGFyICpzcGVjKQp7CiNpZmRlZiBET19QU19GSURETElO
RwoJc2V0cHJvY3RpdGxlICgibW91bnQiLCBzcGVjKTsKI2VuZGlmCn0KCnN0YXRpYyBjaGFyICoK
c3Vic3Rfc3RyaW5nKGNvbnN0IGNoYXIgKnMsIGNvbnN0IGNoYXIgKnN1YiwgaW50IHN1Ymxlbiwg
Y29uc3QgY2hhciAqcmVwbCkgewoJY2hhciAqbjsKCgluID0gKGNoYXIgKikgeG1hbGxvYyhzdHJs
ZW4ocyktc3VibGVuK3N0cmxlbihyZXBsKSsxKTsKCXN0cm5jcHkgKG4sIHMsIHN1Yi1zKTsKCXN0
cmNweSAobiArIChzdWItcyksIHJlcGwpOwoJc3RyY2F0IChuLCBzdWIrc3VibGVuKTsKCXJldHVy
biBuOwp9CgpzdGF0aWMgY29uc3QgY2hhciAqCnVzZXJzdWJzdChjb25zdCBjaGFyICpvcHRzKSB7
CgljaGFyICpzLCAqdzsKCWNoYXIgaWRbNDBdOwoKCXMgPSAidWlkPXVzZXJ1aWQiOwoJaWYgKG9w
dHMgJiYgKHcgPSBzdHJzdHIob3B0cywgcykpICE9IE5VTEwpIHsKCQlzcHJpbnRmKGlkLCAidWlk
PSVkIiwgZ2V0dWlkKCkpOwoJCW9wdHMgPSBzdWJzdF9zdHJpbmcob3B0cywgdywgc3RybGVuKHMp
LCBpZCk7Cgl9CglzID0gImdpZD11c2VyZ2lkIjsKCWlmIChvcHRzICYmICh3ID0gc3Ryc3RyKG9w
dHMsIHMpKSAhPSBOVUxMKSB7CgkJc3ByaW50ZihpZCwgImdpZD0lZCIsIGdldGdpZCgpKTsKCQlv
cHRzID0gc3Vic3Rfc3RyaW5nKG9wdHMsIHcsIHN0cmxlbihzKSwgaWQpOwoJfQoJcmV0dXJuIG9w
dHM7Cn0KCQkKCi8qCiAqIFJldHVybiAwIGZvciBzdWNjZXNzIChlaXRoZXIgbW91bnRlZCBzdGgg
b3IgLWEgYW5kIE5PQVVUTyB3YXMgZ2l2ZW4pCiAqLwpzdGF0aWMgaW50Cm1vdW50X29uZSAoY29u
c3QgY2hhciAqc3BlYywgY29uc3QgY2hhciAqbm9kZSwgY2hhciAqdHlwZXMsIGNvbnN0IGNoYXIg
Km9wdHMsCgkgICBjaGFyICpjbWRsaW5lb3B0cywgaW50IGZyZXEsIGludCBwYXNzKSB7CiAgaW50
IHN0YXR1czsKICBpbnQgc3RhdHVzMjsKICBpbnQgc3BlY3NldCA9IDA7CiAgY2hhciAqbnNwZWM7
CgogIC8qIFN1YnN0aXR1dGUgdmFsdWVzIGluIG9wdHMsIGlmIHJlcXVpcmVkICovCiAgb3B0cyA9
IHVzZXJzdWJzdChvcHRzKTsKCiAgLyogTWVyZ2UgdGhlIGZzdGFiIGFuZCBjb21tYW5kIGxpbmUg
b3B0aW9ucy4gICovCiAgaWYgKG9wdHMgPT0gTlVMTCkKICAgICAgIG9wdHMgPSBjbWRsaW5lb3B0
czsKICBlbHNlIGlmIChjbWRsaW5lb3B0cyAhPSBOVUxMKQogICAgICAgb3B0cyA9IHhzdHJjb25j
YXQzKG9wdHMsICIsIiwgY21kbGluZW9wdHMpOwoKICBpZiAoIXN0cm5jbXAoc3BlYywgIlVVSUQ9
IiwgNSkpIHsKICAgICAgc3BlY3NldCA9IDE7CiAgICAgIG5zcGVjID0gZ2V0X3NwZWNfYnlfdXVp
ZChzcGVjKzUpOwogIH0gZWxzZSBpZiAoIXN0cm5jbXAoc3BlYywgIkxBQkVMPSIsIDYpKSB7CiAg
ICAgIGNvbnN0IGNoYXIgKm5zcGVjMiA9IE5VTEw7CiAgICAgIHNwZWNzZXQgPSAyOwogICAgICBu
c3BlYyA9IGdldF9zcGVjX2J5X3ZvbHVtZV9sYWJlbChzcGVjKzYpOwogICAgICBpZiAobnNwZWMp
CgkgICAgICBuc3BlYzIgPSBzZWNvbmRfb2NjdXJyZW5jZV9vZl92b2xfbGFiZWwoc3BlYys2KTsK
ICAgICAgaWYgKG5zcGVjMikgewoJICAgICAgaWYgKHZlcmJvc2UpCgkJICAgICAgcHJpbnRmKF8o
Im1vdW50OiB0aGUgbGFiZWwgJXMgb2NjdXJzIG9uICIKCQkJICAgICAgICJib3RoICVzIGFuZCAl
c1xuIiksCgkJCSAgICAgc3BlYys2LCBuc3BlYywgbnNwZWMyKTsKCSAgICAgIGRpZSAoRVhfRkFJ
TCwKCQkgICBfKCJtb3VudDogJXMgZHVwbGljYXRlIC0gbm90IG1vdW50ZWQiKSwKCQkgICBzcGVj
LCBfUEFUSF9GU1RBQik7CiAgICAgIH0KICB9IGVsc2UKICAgICAgbnNwZWMgPSAwOwkJLyoganVz
dCBmb3IgZ2NjICovCgogIGlmIChzcGVjc2V0KSB7CiAgICAgIGlmIChuc3BlYykgewoJICBzcGVj
ID0gbnNwZWM7CgkgIGlmICh2ZXJib3NlID4gMSkKCQkgIHByaW50ZihfKCJtb3VudDogZ29pbmcg
dG8gbW91bnQgJXMgYnkgJXNcbiIpLCBzcGVjLAoJCQkgKHNwZWNzZXQ9PTEpID8gXygiVVVJRCIp
IDogXygibGFiZWwiKSk7CiAgICAgIH0gZWxzZSBpZighbW91bnRfYWxsKQogICAgICAgICAgZGll
IChFWF9VU0FHRSwgXygibW91bnQ6IG5vIHN1Y2ggcGFydGl0aW9uIGZvdW5kIikpOwogICAgICAv
KiBpZiAtYSB0aGVuIHdlIG1heSBiZSByZXNjdWVkIGJ5IGEgbm9hdXRvIG9wdGlvbiAqLwogIH0K
CiAgaWYgKHR5cGVzID09IE5VTEwgJiYgIW1vdW50dHlwZSkgewogICAgICBpZiAoc3RyY2hyIChz
cGVjLCAnOicpICE9IE5VTEwpIHsKCXR5cGVzID0gIm5mcyI7CglpZiAodmVyYm9zZSkKCSAgcHJp
bnRmKF8oIm1vdW50OiBubyB0eXBlIHdhcyBnaXZlbiAtICIKCQkgIkknbGwgYXNzdW1lIG5mcyBi
ZWNhdXNlIG9mIHRoZSBjb2xvblxuIikpOwogICAgICB9IGVsc2UgaWYoIXN0cm5jbXAoc3BlYywg
Ii8vIiwgMikpIHsKCXR5cGVzID0gInNtYmZzIjsKCWlmICh2ZXJib3NlKQoJICBwcmludGYoXygi
bW91bnQ6IG5vIHR5cGUgd2FzIGdpdmVuIC0gIgoJCSAgICJJJ2xsIGFzc3VtZSBzbWJmcyBiZWNh
dXNlIG9mIHRoZSAvLyBwcmVmaXhcbiIpKTsKICAgICAgfQogIH0KCiAgLyoKICAgKiBUcnkgdG8g
bW91bnQgdGhlIGZpbGUgc3lzdGVtLiBXaGVuIHRoZSBleGl0IHN0YXR1cyBpcyBFWF9CRywKICAg
KiB3ZSB3aWxsIHJldHJ5IGluIHRoZSBiYWNrZ3JvdW5kLiBPdGhlcndpc2UsIHdlJ3JlIGRvbmUu
CiAgICovCiAgc3RhdHVzID0gdHJ5X21vdW50X29uZSAoc3BlYywgbm9kZSwgdHlwZXMsIG9wdHMs
IGZyZXEsIHBhc3MsIDAsIDApOwogIGlmIChzdGF0dXMgIT0gRVhfQkcpCiAgICByZXR1cm4gc3Rh
dHVzOwoKICAvKgogICAqIFJldHJ5IGluIHRoZSBiYWNrZ3JvdW5kLgogICAqLwogIHByaW50ZiAo
XygibW91bnQ6IGJhY2tncm91bmRpbmcgXCIlc1wiXG4iKSwgc3BlYyk7CiAgZmZsdXNoKCBzdGRv
dXQgKTsJCS8qIHByZXZlbnQgZHVwbGljYXRlIG91dHB1dCAqLwogIGlmIChmb3JrKCkgPiAwKQog
ICAgcmV0dXJuIDA7CQkJLyogcGFyZW50IHJldHVybnMgInN1Y2Nlc3MiICovCiAgc3BlYyA9IHhz
dHJkdXAoc3BlYyk7CQkvKiBhcmd1bWVudHMgd2lsbCBiZSBkZXN0cm95ZWQgKi8KICBub2RlID0g
eHN0cmR1cChub2RlKTsJCS8qIGJ5IHNldF9wcm9jX25hbWUoKSAgICAgICAgICAqLwogIHR5cGVz
ID0geHN0cmR1cCh0eXBlcyk7CiAgb3B0cyA9IHhzdHJkdXAob3B0cyk7CiAgc2V0X3Byb2NfbmFt
ZSAoc3BlYyk7CQkvKiBtYWtlIGEgbmljZSAicHMiIGxpc3RpbmcgKi8KICBzdGF0dXMyID0gdHJ5
X21vdW50X29uZSAoc3BlYywgbm9kZSwgdHlwZXMsIG9wdHMsIGZyZXEsIHBhc3MsIDEsIDApOwog
IGlmICh2ZXJib3NlICYmIHN0YXR1czIpCiAgICBwcmludGYgKF8oIm1vdW50OiBnaXZpbmcgdXAg
XCIlc1wiXG4iKSwgc3BlYyk7CiAgZXhpdCAoMCk7CQkJLyogY2hpbGQgc3RvcHMgaGVyZSAqLwp9
CgovKiBDaGVjayBpZiBhbiBmc25hbWUvZGlyIHBhaXIgd2FzIGFscmVhZHkgaW4gdGhlIG9sZCBt
dGFiLiAgKi8Kc3RhdGljIGludAptb3VudGVkIChjaGFyICpzcGVjLCBjaGFyICpub2RlKSB7CiAg
ICAgc3RydWN0IG1udGVudGNobiAqbWMsICptYzA7CiAgICAgY2hhciAqbnNwZWMgPSBOVUxMOwoK
ICAgICBpZiAoIXN0cm5jbXAoc3BlYywgIlVVSUQ9IiwgNSkpCgkgIG5zcGVjID0gZ2V0X3NwZWNf
YnlfdXVpZChzcGVjKzUpOwogICAgIGVsc2UgaWYgKCFzdHJuY21wKHNwZWMsICJMQUJFTD0iLCA2
KSkKCSAgbnNwZWMgPSBnZXRfc3BlY19ieV92b2x1bWVfbGFiZWwoc3BlYys2KTsKCiAgICAgaWYg
KG5zcGVjKQoJICBzcGVjID0gbnNwZWM7CgogICAgIHNwZWMgPSBjYW5vbmljYWxpemUgKHNwZWMp
OwogICAgIG5vZGUgPSBjYW5vbmljYWxpemUgKG5vZGUpOwoKICAgICBtYzAgPSBtdGFiX2hlYWQo
KTsKICAgICBmb3IgKG1jID0gbWMwLT5ueHQ7IG1jICYmIG1jICE9IG1jMDsgbWMgPSBtYy0+bnh0
KQoJICBpZiAoc3RyZXEgKHNwZWMsIG1jLT5tLm1udF9mc25hbWUpICYmIHN0cmVxIChub2RlLCBt
Yy0+bS5tbnRfZGlyKSkKCSAgICAgICByZXR1cm4gMTsKICAgICByZXR1cm4gMDsKfQoKLyogYXZv
aWQgdXNpbmcgc3RhdCgpIG9uIHRoaW5ncyB3ZSBhcmUgbm90IGdvaW5nIHRvIG1vdW50IGFueXdh
eS4uICovCnN0YXRpYyBpbnQKaGFzX25vYXV0byAoY2hhciAqb3B0cykgewoJY2hhciAqczsKCglp
ZiAoIW9wdHMpCgkJcmV0dXJuIDA7CglzID0gc3Ryc3RyKG9wdHMsICJub2F1dG8iKTsKCWlmICgh
cykKCQlyZXR1cm4gMDsKCXJldHVybiAocyA9PSBvcHRzIHx8IHNbLTFdID09ICcsJykgJiYgKHNb
Nl0gPT0gMCB8fCBzWzZdID09ICcsJyk7Cn0KCi8qIE1vdW50IGFsbCBmaWxlc3lzdGVtcyBvZiB0
aGUgc3BlY2lmaWVkIHR5cGVzIGV4Y2VwdCBzd2FwIGFuZCByb290LiAgKi8KLyogV2l0aCB0aGUg
LS1mb3JrIG9wdGlvbjogZm9yayBhbmQgbGV0IGRpZmZlcmVudCBpbmNhcm5hdGlvbnMgb2YKICAg
bW91bnQgaGFuZGxlIGRpZmZlcmVudCBmaWxlc3lzdGVtcy4gIEhvd2V2ZXIsIHRyeSB0byBhdm9p
ZCBzZXZlcmFsCiAgIHNpbXVsdGFuZW91cyBtb3VudHMgb24gdGhlIHNhbWUgcGh5c2ljYWwgZGlz
aywgc2luY2UgdGhhdCBpcyB2ZXJ5IHNsb3cuICovCiNkZWZpbmUgRElTS01BSk9SKG0pCSgoKGlu
dCkgbSkgJiB+MHhmKQoKc3RhdGljIGludApkb19tb3VudF9hbGwgKGNoYXIgKnR5cGVzLCBjaGFy
ICpvcHRpb25zLCBjaGFyICp0ZXN0X29wdHMpIHsKCXN0cnVjdCBtbnRlbnRjaG4gKm1jLCAqbWMw
LCAqbXRtcDsKCWludCBzdGF0dXMgPSAwOwoJc3RydWN0IHN0YXQgc3RhdGJ1ZjsKCXN0cnVjdCBj
aGlsZCB7CgkJcGlkX3QgcGlkOwoJCWNoYXIgKmdyb3VwOwoJCXN0cnVjdCBtbnRlbnRjaG4gKm1l
YzsKCQlzdHJ1Y3QgbW50ZW50Y2huICptZWNsYXN0OwoJCXN0cnVjdCBjaGlsZCAqbnh0OwoJfSBj
aGlsZGhlYWQsICpjaGlsZHRhaWwsICpjcDsKCWNoYXIgbWFqb3JbMjJdOwoJY2hhciAqZywgKmNv
bG9uOwoKCS8qIGJ1aWxkIGEgY2hhaW4gb2Ygd2hhdCB3ZSBoYXZlIHRvIGRvLCBvciBtYXliZQoJ
ICAgc2V2ZXJhbCBjaGFpbnMsIG9uZSBmb3IgZWFjaCBtYWpvciBvciBORlMgaG9zdCAqLwoJY2hp
bGRoZWFkLm54dCA9IDA7CgljaGlsZHRhaWwgPSAmY2hpbGRoZWFkOwoJbWMwID0gZnN0YWJfaGVh
ZCgpOwoJZm9yIChtYyA9IG1jMC0+bnh0OyBtYyAmJiBtYyAhPSBtYzA7IG1jID0gbWMtPm54dCkg
ewoJCWlmIChoYXNfbm9hdXRvIChtYy0+bS5tbnRfb3B0cykpCgkJCWNvbnRpbnVlOwoJCWlmICht
YXRjaGluZ190eXBlIChtYy0+bS5tbnRfdHlwZSwgdHlwZXMpCgkJICAgICYmIG1hdGNoaW5nX29w
dHMgKG1jLT5tLm1udF9vcHRzLCB0ZXN0X29wdHMpCgkJICAgICYmICFzdHJlcSAobWMtPm0ubW50
X2RpciwgIi8iKQoJCSAgICAmJiAhc3RyZXEgKG1jLT5tLm1udF9kaXIsICJyb290IikpIHsKCgkJ
CWlmIChtb3VudGVkIChtYy0+bS5tbnRfZnNuYW1lLCBtYy0+bS5tbnRfZGlyKSkgewoJCQkJaWYg
KHZlcmJvc2UpCgkJCQkJcHJpbnRmKF8oIm1vdW50OiAlcyBhbHJlYWR5IG1vdW50ZWQgIgoJCQkJ
CQkgIm9uICVzXG4iKSwKCQkJCQkgICAgICAgbWMtPm0ubW50X2ZzbmFtZSwKCQkJCQkgICAgICAg
bWMtPm0ubW50X2Rpcik7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJbXRtcCA9IChzdHJ1Y3QgbW50
ZW50Y2huICopIHhtYWxsb2Moc2l6ZW9mKCptdG1wKSk7CgkJCSptdG1wID0gKm1jOwoJCQltdG1w
LT5ueHQgPSAwOwoJCQlnID0gTlVMTDsKCQkJaWYgKG9wdGZvcmspIHsKCQkJCWlmIChzdGF0KG1j
LT5tLm1udF9mc25hbWUsICZzdGF0YnVmKSA9PSAwICYmCgkJCQkgICAgU19JU0JMSyhzdGF0YnVm
LnN0X21vZGUpKSB7CgkJCQkJc3ByaW50ZihtYWpvciwgIiMleCIsCgkJCQkJCURJU0tNQUpPUihz
dGF0YnVmLnN0X3JkZXYpKTsKCQkJCQlnID0gbWFqb3I7CgkJCQl9CiNpZmRlZiBIQVZFX05GUwoJ
CQkJaWYgKHN0cmNtcChtYy0+bS5tbnRfdHlwZSwgIm5mcyIpID09IDApIHsKCQkJCQlnID0geHN0
cmR1cChtYy0+bS5tbnRfZnNuYW1lKTsKCQkJCQljb2xvbiA9IHN0cmNocihnLCAnOicpOwoJCQkJ
CWlmIChjb2xvbikKCQkJCQkJKmNvbG9uID0gJ1wwJzsKCQkJCX0KI2VuZGlmCgkJCX0KCQkJaWYg
KGcpIHsKCQkJCWZvciAoY3AgPSBjaGlsZGhlYWQubnh0OyBjcDsgY3AgPSBjcC0+bnh0KQoJCQkJ
CWlmIChjcC0+Z3JvdXAgJiYKCQkJCQkgICAgc3RyY21wKGNwLT5ncm91cCwgZykgPT0gMCkgewoJ
CQkJCQljcC0+bWVjbGFzdC0+bnh0ID0gbXRtcDsKCQkJCQkJY3AtPm1lY2xhc3QgPSBtdG1wOwoJ
CQkJCQlnb3RvIGZuZDsKCQkJCQl9CgkJCX0KCQkJY3AgPSAoc3RydWN0IGNoaWxkICopIHhtYWxs
b2Moc2l6ZW9mICpjcCk7CgkJCWNwLT5ueHQgPSAwOwoJCQljcC0+bWVjID0gY3AtPm1lY2xhc3Qg
PSBtdG1wOwoJCQljcC0+Z3JvdXAgPSB4c3RyZHVwKGcpOwoJCQljcC0+cGlkID0gMDsKCQkJY2hp
bGR0YWlsLT5ueHQgPSBjcDsKCQkJY2hpbGR0YWlsID0gY3A7CgkJZm5kOjsKCgkJfQoJfQoJCQkg
ICAgICAKCS8qIG5vdyBkbyBldmVyeXRoaW5nICovCglmb3IgKGNwID0gY2hpbGRoZWFkLm54dDsg
Y3A7IGNwID0gY3AtPm54dCkgewoJCXBpZF90IHAgPSAtMTsKCQlpZiAob3B0Zm9yaykgewoJCQlw
ID0gZm9yaygpOwoJCQlpZiAocCA9PSAtMSkgewoJCQkJaW50IGVycnN2ID0gZXJybm87CgkJCQll
cnJvcihfKCJtb3VudDogY2Fubm90IGZvcms6ICVzIiksCgkJCQkgICAgICBzdHJlcnJvciAoZXJy
c3YpKTsKCQkJfQoJCQllbHNlIGlmIChwICE9IDApCgkJCQljcC0+cGlkID0gcDsKCQl9CgoJCS8q
IGlmIGNoaWxkLCBvciBub3QgZm9ya2VkLCBkbyB0aGUgbW91bnRpbmcgKi8KCQlpZiAocCA9PSAw
IHx8IHAgPT0gLTEpIHsKCQkJZm9yIChtYyA9IGNwLT5tZWM7IG1jOyBtYyA9IG1jLT5ueHQpIHsK
CQkJCXN0YXR1cyB8PSBtb3VudF9vbmUgKG1jLT5tLm1udF9mc25hbWUsCgkJCQkJCSAgICAgbWMt
Pm0ubW50X2RpciwKCQkJCQkJICAgICBtYy0+bS5tbnRfdHlwZSwKCQkJCQkJICAgICBtYy0+bS5t
bnRfb3B0cywKCQkJCQkJICAgICBvcHRpb25zLCAwLCAwKTsKCQkJfQoJCQlpZiAobW91bnRjb3Vu
dCkKCQkJCXN0YXR1cyB8PSBFWF9TT01FT0s7CgkJCWlmIChwID09IDApCgkJCQlleGl0KHN0YXR1
cyk7CgkJfQoJfQoKCS8qIHdhaXQgZm9yIGNoaWxkcmVuLCBpZiBhbnkgKi8KCXdoaWxlICgoY3Ag
PSBjaGlsZGhlYWQubnh0KSAhPSBOVUxMKSB7CgkJY2hpbGRoZWFkLm54dCA9IGNwLT5ueHQ7CgkJ
aWYgKGNwLT5waWQpIHsKCQkJaW50IHJldDsKCQlrZWVwX3dhaXRpbmc6CgkJCWlmKHdhaXRwaWQo
Y3AtPnBpZCwgJnJldCwgMCkgPT0gLTEpIHsKCQkJCWlmIChlcnJubyA9PSBFSU5UUikKCQkJCQln
b3RvIGtlZXBfd2FpdGluZzsKCQkJCXBlcnJvcigid2FpdHBpZCIpOwoJCQl9IGVsc2UgaWYgKFdJ
RkVYSVRFRChyZXQpKQoJCQkJc3RhdHVzIHw9IFdFWElUU1RBVFVTKHJldCk7CgkJCWVsc2UKCQkJ
CXN0YXR1cyB8PSBFWF9TWVNFUlI7CgkJfQoJfQoJaWYgKG1vdW50Y291bnQpCgkJc3RhdHVzIHw9
IEVYX1NPTUVPSzsKCXJldHVybiBzdGF0dXM7Cn0KCmV4dGVybiBjaGFyIHZlcnNpb25bXTsKc3Rh
dGljIHN0cnVjdCBvcHRpb24gbG9uZ29wdHNbXSA9IHsKCXsgImFsbCIsIDAsIDAsICdhJyB9LAoJ
eyAiZmFrZSIsIDAsIDAsICdmJyB9LAoJeyAiZm9yayIsIDAsIDAsICdGJyB9LAoJeyAiaGVscCIs
IDAsIDAsICdoJyB9LAoJeyAibm8tbXRhYiIsIDAsIDAsICduJyB9LAoJeyAicmVhZC1vbmx5Iiwg
MCwgMCwgJ3InIH0sCgl7ICJybyIsIDAsIDAsICdyJyB9LAoJeyAidmVyYm9zZSIsIDAsIDAsICd2
JyB9LAoJeyAidmVyc2lvbiIsIDAsIDAsICdWJyB9LAoJeyAicmVhZC13cml0ZSIsIDAsIDAsICd3
JyB9LAoJeyAicnciLCAwLCAwLCAndycgfSwKCXsgIm9wdGlvbnMiLCAxLCAwLCAnbycgfSwKCXsg
InRlc3Qtb3B0cyIsIDEsIDAsICdPJyB9LAoJeyAicGFzcy1mZCIsIDEsIDAsICdwJyB9LAoJeyAi
a2V5Yml0cyIsIDEsIDAsICdrJyB9LAoJeyAidHlwZXMiLCAxLCAwLCAndCcgfSwKCXsgImJpbmQi
LCAwLCAwLCAxMjggfSwKCXsgInJlcGxhY2UiLCAwLCAwLCAxMjkgfSwKCXsgImFmdGVyIiwgMCwg
MCwgMTMwIH0sCgl7ICJiZWZvcmUiLCAwLCAwLCAxMzEgfSwKCXsgIm92ZXIiLCAwLCAwLCAxMzIg
fSwKCXsgIm1vdmUiLCAwLCAwLCAxMzMgfSwKCXsgImd1ZXNzLWZzdHlwZSIsIDEsIDAsIDEzNCB9
LAoJeyAicmJpbmQiLCAwLCAwLCAxMzUgfSwKCXsgImludGVybmFsLW9ubHkiLCAwLCAwLCAnaScg
fSwKCXsgTlVMTCwgMCwgMCwgMCB9Cn07CgovKiBLZWVwIHRoZSB1c2FnZSBtZXNzYWdlIGF0IG1h
eCAyMiBsaW5lcywgZWFjaCBhdCBtb3N0IDcwIGNoYXJzIGxvbmcuCiAgIFRoZSB1c2VyIHNob3Vs
ZCBub3QgbmVlZCBhIHBhZ2VyIHRvIHJlYWQgaXQuICovCnN0YXRpYyB2b2lkCnVzYWdlIChGSUxF
ICpmcCwgaW50IG4pIHsKCWZwcmludGYoZnAsIF8oCgkgICJVc2FnZTogbW91bnQgLVYgICAgICAg
ICAgICAgICAgIDogcHJpbnQgdmVyc2lvblxuIgoJICAiICAgICAgIG1vdW50IC1oICAgICAgICAg
ICAgICAgICA6IHByaW50IHRoaXMgaGVscFxuIgoJICAiICAgICAgIG1vdW50ICAgICAgICAgICAg
ICAgICAgICA6IGxpc3QgbW91bnRlZCBmaWxlc3lzdGVtc1xuIgoJICAiICAgICAgIG1vdW50IC1s
ICAgICAgICAgICAgICAgICA6IGlkZW0sIGluY2x1ZGluZyB2b2x1bWUgbGFiZWxzXG4iCgkgICJT
byBmYXIgdGhlIGluZm9ybWF0aW9uYWwgcGFydC4gTmV4dCB0aGUgbW91bnRpbmcuXG4iCgkgICJU
aGUgY29tbWFuZCBpcyBgbW91bnQgWy10IGZzdHlwZV0gc29tZXRoaW5nIHNvbWV3aGVyZScuXG4i
CgkgICJEZXRhaWxzIGZvdW5kIGluIC9ldGMvZnN0YWIgbWF5IGJlIG9taXR0ZWQuXG4iCgkgICIg
ICAgICAgbW91bnQgLWEgWy10fC1PXSAuLi4gICAgIDogbW91bnQgYWxsIHN0dWZmIGZyb20gL2V0
Yy9mc3RhYlxuIgoJICAiICAgICAgIG1vdW50IGRldmljZSAgICAgICAgICAgICA6IG1vdW50IGRl
dmljZSBhdCB0aGUga25vd24gcGxhY2VcbiIKCSAgIiAgICAgICBtb3VudCBkaXJlY3RvcnkgICAg
ICAgICAgOiBtb3VudCBrbm93biBkZXZpY2UgaGVyZVxuIgoJICAiICAgICAgIG1vdW50IC10IHR5
cGUgZGV2IGRpciAgICA6IG9yZGluYXJ5IG1vdW50IGNvbW1hbmRcbiIKCSAgIk5vdGUgdGhhdCBv
bmUgZG9lcyBub3QgcmVhbGx5IG1vdW50IGEgZGV2aWNlLCBvbmUgbW91bnRzXG4iCgkgICJhIGZp
bGVzeXN0ZW0gKG9mIHRoZSBnaXZlbiB0eXBlKSBmb3VuZCBvbiB0aGUgZGV2aWNlLlxuIgoJICAi
T25lIGNhbiBhbHNvIG1vdW50IGFuIGFscmVhZHkgdmlzaWJsZSBkaXJlY3RvcnkgdHJlZSBlbHNl
d2hlcmU6XG4iCgkgICIgICAgICAgbW91bnQgLS1iaW5kIG9sZGRpciBuZXdkaXJcbiIKCSAgIm9y
IG1vdmUgYSBzdWJ0cmVlOlxuIgoJICAiICAgICAgIG1vdW50IC0tbW92ZSBvbGRkaXIgbmV3ZGly
XG4iCgkgICJBIGRldmljZSBjYW4gYmUgZ2l2ZW4gYnkgbmFtZSwgc2F5IC9kZXYvaGRhMSBvciAv
ZGV2L2Nkcm9tLFxuIgoJICAib3IgYnkgbGFiZWwsIHVzaW5nICAtTCBsYWJlbCAgb3IgYnkgdXVp
ZCwgdXNpbmcgIC1VIHV1aWQgLlxuIgoJICAiT3RoZXIgb3B0aW9uczogWy1uZkZyc3Z3XSBbLW8g
b3B0aW9uc10gWy1wIHBhc3N3ZGZkXS5cbiIKCSAgIkZvciBtYW55IG1vcmUgZGV0YWlscywgc2F5
ICBtYW4gOCBtb3VudCAuXG4iCgkpKTsKLyoKCSAgIlVuaW9uIG9yIHN0YWNrIG1vdW50cyBhcmUg
c3BlY2lmaWVkIHVzaW5nIG9uZSBvZlxuIgoJICAiICAgICAgIC0tcmVwbGFjZSwgLS1hZnRlciwg
LS1iZWZvcmUsIC0tb3ZlclxuIgoqLwoJdW5sb2NrX210YWIoKTsKCWV4aXQgKG4pOwp9CgppbnQK
bWFpbiAoaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkgewoJaW50IGMsIHJlc3VsdCA9IDAsIHNwZWNz
ZWVuOwoJY2hhciAqb3B0aW9ucyA9IE5VTEwsICp0ZXN0X29wdHMgPSBOVUxMLCAqc3BlYywgKm5v
ZGU7CgljaGFyICp2b2x1bWVsYWJlbCA9IE5VTEw7CgljaGFyICpwYXNzZmQgPSBOVUxMOwoJY2hh
ciAqa2V5c2l6ZSA9IE5VTEw7CgljaGFyICp1dWlkID0gTlVMTDsKCWNoYXIgKnR5cGVzID0gTlVM
TDsKCXN0cnVjdCBtbnRlbnRjaG4gKm1jOwoJaW50IGZkOwoKCXNhbml0aXplX2VudigpOwoJc2V0
bG9jYWxlKExDX0FMTCwgIiIpOwoJYmluZHRleHRkb21haW4oUEFDS0FHRSwgTE9DQUxFRElSKTsK
CXRleHRkb21haW4oUEFDS0FHRSk7CgoJdW1hc2soMDMzKTsKCgkvKiBQZW9wbGUgcmVwb3J0IHRo
YXQgYSBtb3VudCBjYWxsZWQgZnJvbSBpbml0IHdpdGhvdXQgY29uc29sZQoJICAgd3JpdGVzIGVy
cm9yIG1lc3NhZ2VzIHRvIC9ldGMvbXRhYgoJICAgTGV0IHVzIHRyeSB0byBhdm9pZCBnZXR0aW5n
IGZkJ3MgMCwxLDIgKi8KCXdoaWxlKChmZCA9IG9wZW4oIi9kZXYvbnVsbCIsIE9fUkRXUikpID09
IDAgfHwgZmQgPT0gMSB8fCBmZCA9PSAyKSA7CglpZiAoZmQgPiAyKQoJCWNsb3NlKGZkKTsKCiNp
ZmRlZiBET19QU19GSURETElORwoJaW5pdHByb2N0aXRsZShhcmdjLCBhcmd2KTsKI2VuZGlmCgoJ
d2hpbGUgKChjID0gZ2V0b3B0X2xvbmcgKGFyZ2MsIGFyZ3YsICJhZkZoaWxMOms6bm86TzpwOnJz
VTp2Vnd0OiIsCgkJCQkgbG9uZ29wdHMsIE5VTEwpKSAhPSAtMSkgewoJCXN3aXRjaCAoYykgewoJ
CWNhc2UgJ2EnOgkgICAgICAgLyogbW91bnQgZXZlcnl0aGluZyBpbiBmc3RhYiAqLwoJCQkrK21v
dW50X2FsbDsKCQkJYnJlYWs7CgkJY2FzZSAnZic6CSAgICAgICAvKiBmYWtlOiBkb24ndCBhY3R1
YWxseSBjYWxsIG1vdW50KDIpICovCgkJCSsrZmFrZTsKCQkJYnJlYWs7CgkJY2FzZSAnRic6CgkJ
CSsrb3B0Zm9yazsKCQkJYnJlYWs7CgkJY2FzZSAnaCc6CQkvKiBoZWxwICovCgkJCXVzYWdlIChz
dGRvdXQsIDApOwoJCQlicmVhazsKCQljYXNlICdpJzoKCQkJZXh0ZXJuYWxfYWxsb3dlZCA9IDA7
CgkJCWJyZWFrOwoJCWNhc2UgJ2wnOgoJCQlsaXN0X3dpdGhfdm9sdW1lbGFiZWwgPSAxOwoJCQli
cmVhazsKCQljYXNlICdMJzoKCQkJdm9sdW1lbGFiZWwgPSBvcHRhcmc7CgkJCWJyZWFrOwoJCWNh
c2UgJ2snOgoJCQlrZXlzaXplID0gb3B0YXJnOwoJCQlicmVhazsKCQljYXNlICduJzoJCS8qIGRv
IG5vdCB3cml0ZSAvZXRjL210YWIgKi8KCQkJKytub210YWI7CgkJCWJyZWFrOwoJCWNhc2UgJ28n
OgkJLyogc3BlY2lmeSBtb3VudCBvcHRpb25zICovCgkJCWlmIChvcHRpb25zKQoJCQkJb3B0aW9u
cyA9IHhzdHJjb25jYXQzKG9wdGlvbnMsICIsIiwgb3B0YXJnKTsKCQkJZWxzZQoJCQkJb3B0aW9u
cyA9IHhzdHJkdXAob3B0YXJnKTsKCQkJYnJlYWs7CgkJY2FzZSAnTyc6CQkvKiB3aXRoIC10OiBt
b3VudCBvbmx5IGlmIChub3QpIG9wdCAqLwoJCQlpZiAodGVzdF9vcHRzKQoJCQkJdGVzdF9vcHRz
ID0geHN0cmNvbmNhdDModGVzdF9vcHRzLCAiLCIsIG9wdGFyZyk7CgkJCWVsc2UKCQkJCXRlc3Rf
b3B0cyA9IHhzdHJkdXAob3B0YXJnKTsKCQkJYnJlYWs7CgkJY2FzZSAncCc6CQkvKiBmZCBvbiB3
aGljaCB0byByZWFkIHBhc3N3ZCAqLwoJCQlzZXRfcGZkKG9wdGFyZyk7CgkJCWJyZWFrOwoJCWNh
c2UgJ3InOgkJLyogbW91bnQgcmVhZG9ubHkgKi8KCQkJcmVhZG9ubHkgPSAxOwoJCQlyZWFkd3Jp
dGUgPSAwOwoJCQlicmVhazsKCQljYXNlICdzJzoJCS8qIGFsbG93IHNsb3BweSBtb3VudCBvcHRp
b25zICovCgkJCXNsb3BweSA9IDE7CgkJCWJyZWFrOwoJCWNhc2UgJ3QnOgkJLyogc3BlY2lmeSBm
aWxlIHN5c3RlbSB0eXBlcyAqLwoJCQl0eXBlcyA9IG9wdGFyZzsKCQkJYnJlYWs7CgkJY2FzZSAn
VSc6CgkJCXV1aWQgPSBvcHRhcmc7CgkJCWJyZWFrOwoJCWNhc2UgJ3YnOgkJLyogYmUgY2hhdHR5
IC0gbW9yZSBzbyBpZiByZXBlYXRlZCAqLwoJCQkrK3ZlcmJvc2U7CgkJCWJyZWFrOwoJCWNhc2Ug
J1YnOgkJLyogdmVyc2lvbiAqLwoJCQlwcmludGYgKCJtb3VudDogJXNcbiIsIHZlcnNpb24pOwoJ
CQlleGl0ICgwKTsKCQljYXNlICd3JzoJCS8qIG1vdW50IHJlYWQvd3JpdGUgKi8KCQkJcmVhZHdy
aXRlID0gMTsKCQkJcmVhZG9ubHkgPSAwOwoJCQlicmVhazsKCQljYXNlIDA6CgkJCWJyZWFrOwoK
CQljYXNlIDEyODogLyogYmluZCAqLwoJCQltb3VudHR5cGUgPSBNU19CSU5EOwoJCQlicmVhazsK
CQljYXNlIDEyOTogLyogcmVwbGFjZSAqLwoJCQltb3VudHR5cGUgPSBNU19SRVBMQUNFOwoJCQli
cmVhazsKCQljYXNlIDEzMDogLyogYWZ0ZXIgKi8KCQkJbW91bnR0eXBlID0gTVNfQUZURVI7CgkJ
CWJyZWFrOwoJCWNhc2UgMTMxOiAvKiBiZWZvcmUgKi8KCQkJbW91bnR0eXBlID0gTVNfQkVGT1JF
OwoJCQlicmVhazsKCQljYXNlIDEzMjogLyogb3ZlciAqLwoJCQltb3VudHR5cGUgPSBNU19PVkVS
OwoJCQlicmVhazsKCQljYXNlIDEzMzogLyogbW92ZSAqLwoJCQltb3VudHR5cGUgPSBNU19NT1ZF
OwoJCQlicmVhazsKCQljYXNlIDEzNDoKCQkJLyogdW5kb2N1bWVudGVkLCBtYXkgZ28gYXdheSBh
Z2FpbjoKCQkJICAgY2FsbDogbW91bnQgLS1ndWVzcy1mc3R5cGUgZGV2aWNlCgkJCSAgIHVzZSBv
bmx5IGZvciB0ZXN0aW5nIHB1cnBvc2VzIC0KCQkJICAgdGhlIGd1ZXNzaW5nIGlzIG5vdCByZWxp
YWJsZSBhdCBhbGwgKi8KCQkgICAgewoJCQljaGFyICpmc3R5cGU7CgkJCWZzdHlwZSA9IGRvX2d1
ZXNzX2ZzdHlwZShvcHRhcmcpOwoJCQlwcmludGYoIiVzXG4iLCBmc3R5cGUgPyBmc3R5cGUgOiAi
dW5rbm93biIpOwoJCQlleGl0KGZzdHlwZSA/IDAgOiBFWF9GQUlMKTsKCQkgICAgfQoJCWNhc2Ug
MTM1OgoJCQltb3VudHR5cGUgPSAoTVNfQklORCB8IE1TX1JFQyk7CgkJCWJyZWFrOwoJCWNhc2Ug
Jz8nOgoJCWRlZmF1bHQ6CgkJCXVzYWdlIChzdGRlcnIsIEVYX1VTQUdFKTsKCQl9Cgl9CgoJYXJn
YyAtPSBvcHRpbmQ7Cglhcmd2ICs9IG9wdGluZDsKCglzcGVjc2VlbiA9ICh1dWlkIHx8IHZvbHVt
ZWxhYmVsKSA/IDEgOiAwOyAJLyogeWVzLCAuLiBpIGtub3cgKi8KCglpZiAoYXJnYytzcGVjc2Vl
biA9PSAwICYmICFtb3VudF9hbGwpIHsKCQlpZiAob3B0aW9ucyB8fCBtb3VudHR5cGUpCgkJCXVz
YWdlIChzdGRlcnIsIEVYX1VTQUdFKTsKCQlyZXR1cm4gcHJpbnRfYWxsICh0eXBlcyk7Cgl9CgoJ
aWYgKGdldHVpZCAoKSAhPSBnZXRldWlkICgpKSB7CgkJc3VpZCA9IDE7CgkJaWYgKHR5cGVzIHx8
IG9wdGlvbnMgfHwgcmVhZHdyaXRlIHx8IG5vbXRhYiB8fCBtb3VudF9hbGwgfHwKCQkgICAgZmFr
ZSB8fCBtb3VudHR5cGUgfHwgKGFyZ2MgKyBzcGVjc2VlbikgIT0gMSkKCQkJZGllIChFWF9VU0FH
RSwgXygibW91bnQ6IG9ubHkgcm9vdCBjYW4gZG8gdGhhdCIpKTsKCX0KCglpZiAoIW5vbXRhYiAm
JiBtdGFiX2RvZXNfbm90X2V4aXN0KCkpIHsKCQlpZiAodmVyYm9zZSA+IDEpCgkJCXByaW50Zihf
KCJtb3VudDogbm8gJXMgZm91bmQgLSBjcmVhdGluZyBpdC4uXG4iKSwKCQkJICAgICAgIE1PVU5U
RUQpOwoJCWNyZWF0ZV9tdGFiICgpOwoJfQoKCWlmIChzcGVjc2VlbikgewoJCWlmICh1dWlkKQoJ
CQlzcGVjID0gZ2V0X3NwZWNfYnlfdXVpZCh1dWlkKTsKCQllbHNlIHsKCQkJY29uc3QgY2hhciAq
c3BlYzI7CgkJCXNwZWMgPSBnZXRfc3BlY19ieV92b2x1bWVfbGFiZWwodm9sdW1lbGFiZWwpOwoJ
CQlzcGVjMiA9IHNlY29uZF9vY2N1cnJlbmNlX29mX3ZvbF9sYWJlbCh2b2x1bWVsYWJlbCk7CgkJ
CWlmIChzcGVjMikKCQkJCWRpZSAoRVhfRkFJTCwKCQkJCSAgICAgXygibW91bnQ6IHRoZSBsYWJl
bCAlcyBvY2N1cnMgb24gIgoJCQkJICAgICAgICJib3RoICVzIGFuZCAlcyAtIG5vdCBtb3VudGVk
XG4iKSwKCQkJCSAgICAgdm9sdW1lbGFiZWwsIHNwZWMsIHNwZWMyKTsKCQl9CgkJaWYgKCFzcGVj
KQoJCQlkaWUgKEVYX1VTQUdFLCBfKCJtb3VudDogbm8gc3VjaCBwYXJ0aXRpb24gZm91bmQiKSk7
CgkJaWYgKHZlcmJvc2UpCgkJCXByaW50ZihfKCJtb3VudDogbW91bnRpbmcgJXNcbiIpLCBzcGVj
KTsKCX0gZWxzZQoJCXNwZWMgPSBOVUxMOwkJLyoganVzdCBmb3IgZ2NjICovCgoJaWYgKHBhc3Nm
ZCAmJiBzc2NhbmYocGFzc2ZkLCIlZCIsJnBmZCkgIT0gMSkKCSAgICAgICAgZGllIChFWF9VU0FH
RSwgXygibW91bnQ6IGFyZ3VtZW50IHRvIC0tcGFzcy1mZCBvciAtcCBtdXN0IGJlIGEgbnVtYmVy
IikpOwoJaWYgKGtleXNpemUgJiYgc3NjYW5mKGtleXNpemUsIiVkIiwma2V5c3opICE9IDEpCgkg
ICAgICAgIGRpZSAoRVhfVVNBR0UsIF8oIm1vdW50OiBhcmd1bWVudCB0byAtLWtleWJpdHMgb3Ig
LWsgbXVzdCBiZSBhIG51bWJlciIpKTsKCglzd2l0Y2ggKGFyZ2Mrc3BlY3NlZW4pIHsKCWNhc2Ug
MDoKCQkvKiBtb3VudCAtYSAqLwoJCXJlc3VsdCA9IGRvX21vdW50X2FsbCAodHlwZXMsIG9wdGlv
bnMsIHRlc3Rfb3B0cyk7CgkJaWYgKHJlc3VsdCA9PSAwICYmIHZlcmJvc2UpCgkJCWVycm9yKF8o
Im5vdGhpbmcgd2FzIG1vdW50ZWQiKSk7CgkJYnJlYWs7CgoJY2FzZSAxOgoJCS8qIG1vdW50IFst
bmZydnddIFstbyBvcHRpb25zXSBzcGVjaWFsIHwgbm9kZSAqLwoJCWlmICh0eXBlcyAhPSBOVUxM
KQoJCQl1c2FnZSAoc3RkZXJyLCBFWF9VU0FHRSk7CgkJaWYgKHNwZWNzZWVuKSB7CgkJCS8qIFdl
IGtub3cgdGhlIGRldmljZS4gV2hlcmUgc2hhbGwgd2UgbW91bnQgaXQ/ICovCgkJCW1jID0gKHV1
aWQgPyBnZXRmc3V1aWRzcGVjICh1dWlkKQoJCQkgICAgICAgICAgIDogZ2V0ZnN2b2xzcGVjICh2
b2x1bWVsYWJlbCkpOwoJCQlpZiAobWMgPT0gTlVMTCkKCQkJCW1jID0gZ2V0ZnNzcGVjIChzcGVj
KTsKCQkJaWYgKG1jID09IE5VTEwpCgkJCQlkaWUgKEVYX1VTQUdFLAoJCQkJICAgICBfKCJtb3Vu
dDogY2Fubm90IGZpbmQgJXMgaW4gJXMiKSwKCQkJCSAgICAgc3BlYywgX1BBVEhfRlNUQUIpOwoJ
CQltYy0+bS5tbnRfZnNuYW1lID0gc3BlYzsKCQl9IGVsc2UgewoJCQkvKiBUcnkgdG8gZmluZCB0
aGUgb3RoZXIgcGF0aG5hbWUgaW4gZnN0YWIuICAqLwoJCQlzcGVjID0gY2Fub25pY2FsaXplICgq
YXJndik7CgkJCWlmICgobWMgPSBnZXRmc3NwZWMgKHNwZWMpKSA9PSBOVUxMICYmCgkJCSAgICAo
bWMgPSBnZXRmc2ZpbGUgKHNwZWMpKSA9PSBOVUxMICYmCgkJCSAgICAvKiBUcnkgbm9uY2Fub25p
Y2FsIG5hbWUgaW4gZnN0YWIKCQkJICAgICAgIHBlcmhhcHMgL2Rldi9jZHJvbSBvciAvZG9zIGlz
IGEgc3ltbGluayAqLwoJCQkgICAgKG1jID0gZ2V0ZnNzcGVjICgqYXJndikpID09IE5VTEwgJiYK
CQkJICAgIChtYyA9IGdldGZzZmlsZSAoKmFyZ3YpKSA9PSBOVUxMICYmCgkJCSAgICAvKiBUcnkg
bXRhYiAtIG1heWJlIHRoaXMgd2FzIGEgcmVtb3VudCAqLwoJCQkgICAgKG1jID0gZ2V0bW50Zmls
ZSAoc3BlYykpID09IE5VTEwpCgkJCQlkaWUgKEVYX1VTQUdFLAoJCQkJICAgICBfKCJtb3VudDog
Y2FuJ3QgZmluZCAlcyBpbiAlcyBvciAlcyIpLAoJCQkJICAgICBzcGVjLCBfUEFUSF9GU1RBQiwg
TU9VTlRFRCk7CgkJCS8qIEVhcmxpZXIgbXRhYiB3YXMgdHJpZWQgZmlyc3QsIGJ1dCB0aGlzIHdv
dWxkCgkJCSAgIHNvbWV0aW1lcyB0cnkgdGhlIHdyb25nIG1vdW50IGluIGNhc2UgbXRhYiBoYWQK
CQkJICAgdGhlIHJvb3QgZGV2aWNlIGVudHJ5IHdyb25nLiAqLwoJCX0KCgkJcmVzdWx0ID0gbW91
bnRfb25lICh4c3RyZHVwIChtYy0+bS5tbnRfZnNuYW1lKSwKCQkJCSAgICB4c3RyZHVwIChtYy0+
bS5tbnRfZGlyKSwKCQkJCSAgICB4c3RyZHVwIChtYy0+bS5tbnRfdHlwZSksCgkJCQkgICAgbWMt
Pm0ubW50X29wdHMsIG9wdGlvbnMsIDAsIDApOwoJCWJyZWFrOwoKCWNhc2UgMjoKCQkvKiBtb3Vu
dCBbLW5mcnZ3XSBbLXQgdmZzdHlwZV0gWy1vIG9wdGlvbnNdIHNwZWNpYWwgbm9kZSAqLwoJCWlm
IChzcGVjc2VlbikgewoJCQkvKiB3ZSBoYXZlIHNwZWMgYWxyZWFkeSAqLwoJCQlub2RlID0gYXJn
dlswXTsKCQl9IGVsc2UgewoJCQlzcGVjID0gYXJndlswXTsKCQkJbm9kZSA9IGFyZ3ZbMV07CgkJ
fQoJCXJlc3VsdCA9IG1vdW50X29uZSAoc3BlYywgbm9kZSwgdHlwZXMsIE5VTEwsIG9wdGlvbnMs
IDAsIDApOwoJCWJyZWFrOwogICAgICAKCWRlZmF1bHQ6CgkJdXNhZ2UgKHN0ZGVyciwgRVhfVVNB
R0UpOwoJfQoKCWlmIChyZXN1bHQgPT0gRVhfU09NRU9LKQoJCXJlc3VsdCA9IDA7CglleGl0IChy
ZXN1bHQpOwp9Cg==

------_=_NextPart_001_01C5968D.0410407A--
