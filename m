Return-Path: <linux-kernel-owner+willy=40w.ods.org@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S261530AbTCETrJ>; Wed, 5 Mar 2003 14:47:09 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S261868AbTCETrH>; Wed, 5 Mar 2003 14:47:07 -0500
Received: from fmr02.intel.com ([192.55.52.25]:48833 "EHLO
	caduceus.fm.intel.com") by vger.kernel.org with ESMTP
	id <S261530AbTCETqx> convert rfc822-to-8bit; Wed, 5 Mar 2003 14:46:53 -0500
content-class: urn:content-classes:message
Subject: RE: [PATCH][IO_APIC] 2.5.63bk7 irq_balance improvments / bug-fixes
Date: Wed, 5 Mar 2003 11:57:03 -0800
Message-ID: <E88224AA79D2744187E7854CA8D9131DA8B7E1@fmsmsx407.fm.intel.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 8BIT
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: [PATCH][IO_APIC] 2.5.63bk7 irq_balance improvments / bug-fixes
X-MimeOLE: Produced By Microsoft Exchange V6.0.6334.0
Thread-Index: AcLjBOYJu/O/tqcITHK3r6ynhpJm/wARephA
From: "Kamble, Nitin A" <nitin.a.kamble@intel.com>
To: "Kai Bankett" <chaosman@ontika.net>
Cc: <linux-kernel@vger.kernel.org>, <kai.bankett@ontika.net>,
       <mingo@redhat.com>, <akpm@diago.com>,
       "Nakajima, Jun" <jun.nakajima@intel.com>,
       "Mallick, Asit K" <asit.k.mallick@intel.com>,
       "Saxena, Sunil" <sunil.saxena@intel.com>
X-OriginalArrivalTime: 05 Mar 2003 19:57:09.0886 (UTC) FILETIME=[682449E0:01C2E351]
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

> -----Original Message-----
> From: Kai Bankett [mailto:chaosman@ontika.net]
> Are you really sure that option 2 looks better on a static and heavy
> interrupt load ?
> If the load is generated by few heavy sources (sources_count <
> count(cpus)) why not distributed them (mostly) statically across the
> available cpus ? What gain do you have by rotating them round robin in
> this case ?
> I think round robin only starts making sense if the number of heavy
> sources is > number of physical cpus.

[NK] If there is no rotating around at all, then it is same as
statically binding the IRQs to cpus. And with the netstat benchmark the
kirq has performed about 10% better than nicely statically bound IRQs.
It is happening like that because, after processing the interrupt the
benchmark
also has to do some processing, and if all the threads are doing the
processing at almost equal speed it gives better performance. If one
thread is faster and another is slower, the slower guy slows down the
whole system.

Thanks,
Nitin
> 
> Kai
