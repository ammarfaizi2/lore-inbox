Return-Path: <linux-kernel-owner+willy=40w.ods.org-S261911AbVDCWbT@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261911AbVDCWbT (ORCPT <rfc822;willy@w.ods.org>);
	Sun, 3 Apr 2005 18:31:19 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261919AbVDCWbT
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Sun, 3 Apr 2005 18:31:19 -0400
Received: from natnoddy.rzone.de ([81.169.145.166]:25773 "EHLO
	natnoddy.rzone.de") by vger.kernel.org with ESMTP id S261911AbVDCWbQ convert rfc822-to-8bit
	(ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Sun, 3 Apr 2005 18:31:16 -0400
From: Arnd Bergmann <arnd@arndb.de>
To: paulmck@us.ibm.com
Subject: Re: [RFC,PATCH 2/4] Deprecate synchronize_kernel, GPL replacement
Date: Mon, 4 Apr 2005 00:26:50 +0200
User-Agent: KMail/1.7.1
Cc: Dipankar Sarma <dipankar@in.ibm.com>, linux-kernel@vger.kernel.org,
       shemminger@osdl.org, manfred@colorfullife.com, bunk@stusta.de
References: <20050403062149.GA1656@us.ibm.com> <20050403085650.GA4563@in.ibm.com> <20050403185016.GB1481@us.ibm.com>
In-Reply-To: <20050403185016.GB1481@us.ibm.com>
MIME-Version: 1.0
Content-Disposition: inline
Message-Id: <200504040026.52101.arnd@arndb.de>
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 8BIT
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

On Sünndag 03 April 2005 20:50, Paul E. McKenney wrote:
> I couldn't find any way to suppress the "deprecated" warning that is
> generated by the "&sym" in the last line of the __EXPORT_SYMBOL()
> macro.  Anyone know a way of doing this?  There doesn't seem to me
> to be any point to giving the warning on the EXPORT_SYMBOL() -- and
> it does clutter up compiler output with useless "deprecated" warnings.

You can define an inline function that is marked __deprecated and calls
the exported function:

extern void __synchronize_kernel(void);
static inline __deprecated synchronize_kernel(void)
{
        __synchronize_kernel();
}
===
void __synchronize_kernel(void)
{
        synchronize_rcu();
}
EXPORT_SYMBOL(__synchronize_kernel);

You could even make __synchronize_kernel() static to let it only be used
by modules, but that might create some confusion about the interface.

        Arnd <><
