Return-Path: <linux-kernel-owner+w=401wt.eu-S1751712AbXAUWKE@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751712AbXAUWKE (ORCPT <rfc822;w@1wt.eu>);
	Sun, 21 Jan 2007 17:10:04 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751718AbXAUWKE
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Sun, 21 Jan 2007 17:10:04 -0500
Received: from 69-100-st.zelcom.ru ([80.92.100.69]:4395 "EHLO
	etherstorm.feelingofgreen.ru" rhost-flags-OK-FAIL-OK-OK)
	by vger.kernel.org with ESMTP id S1751712AbXAUWKB (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Sun, 21 Jan 2007 17:10:01 -0500
Date: Mon, 22 Jan 2007 01:09:58 +0300
Message-ID: <87tzykuj49.wl@betelheise.deep.net>
From: Samium Gromoff <_deepfire@feelingofgreen.ru>
To: Arjan van de Ven <arjan@infradead.org>
Cc: Samium Gromoff <_deepfire@feelingofgreen.ru>, linux-kernel@vger.kernel.org,
       David Wagner <daw@cs.berkeley.edu>
Subject: Re: [PATCH] Undo some of the pseudo-security madness
In-Reply-To: <1169345764.3055.935.camel@laptopd505.fenrus.org>
References: <87y7nxvk65.wl@betelheise.deep.net>
	<1169345764.3055.935.camel@laptopd505.fenrus.org>
User-Agent: Wanderlust/2.15.5 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.8 (=?ISO-8859-4?Q?Shij=F2?=) APEL/10.6 Emacs/23.0.51
 (i486-pc-linux-gnu) MULE/5.0 (SAKAKI)
X-Face: "P-:w!.&Hdk.h~~pT`!Q%H6;/8Cce^m&%vIn"W-SXb4h88dCgwD\_}N5:\}lowY2gxg0u^wVO*L\$C@MvBDRTmh/=,468w{W{OTc$kfq5O9Y!`pd+N}SMHrN+Gs>jXe5}}EL`cRbc0^_0cZ-}M\b~55I;Qe$1uL8M`M`82<_%CQ(GwLk."M>zBLn:-u>n,$kjH`~Uo[pH`08#\G!GVMd`%7![m9]*w5PMts4@m>=;lX41Z90N
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

At Sun, 21 Jan 2007 03:16:04 +0100,
Arjan van de Ven wrote:
> 
> On Sat, 2007-01-20 at 17:37 +0300, Samium Gromoff wrote:
> > This patch removes the dropping of ADDR_NO_RANDOMIZE upon execution of setuid
> > binaries.
> > 
> > Why? The answer consists of two parts:
> > 
> > Firstly, there are valid applications which need an unadulterated memory map.
> > Some of those which do their memory management, like lisp systems (like SBCL).
> > They try to achieve this by setting ADDR_NO_RANDOMIZE and reexecuting themselves.
> 
> this is a ... funny way of achieving this
> 
> if an application for some reason wants some fixed address for a piece
> of memory there are other ways to do that.... (but to some degree all
> apps that can't take randomization broken; for example a glibc upgrade
> on a system will also move the address space around by virtue of being
> bigger or smaller etc etc)

the core of the problem are the cores which are customarily
dumped by lisps during the environment generation (or modification) stage,
and then mapped back, every time the environment is invoked.

at the current step of evolution, those core files are not relocatable
in certain natively compiling lisp systems.

in an even smaller subset of them, these cores are placed after
the shared libraries and the executable.

which obviously breaks when the latter are placed unpredictably.
(yes, i know, currently mmap_base() varies over a 1MB range, but who
says it will last indefinitely -- probably one day these people
from full-disclosure will prevail and it will become, like, 256MB ;-)

so, what do you propose?

regards, Samium Gromoff
