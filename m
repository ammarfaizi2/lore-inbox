Return-Path: <linux-kernel-owner@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id <S313578AbSDMOGo>; Sat, 13 Apr 2002 10:06:44 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org
	id <S313585AbSDMOGo>; Sat, 13 Apr 2002 10:06:44 -0400
Received: from miffy.tom-yam.or.jp ([210.227.182.210]:19141 "EHLO
	miffy.tom-yam.or.jp") by vger.kernel.org with ESMTP
	id <S313578AbSDMOGn>; Sat, 13 Apr 2002 10:06:43 -0400
Date: Sat, 13 Apr 2002 23:05:58 +0900 (JST)
Message-Id: <200204131405.g3DE5ws2014888@miffy.tom-yam.or.jp>
From: nao <nao@tom-yam.or.jp>
To: jgarzik@mandrakesoft.com
CC: linux-kernel@vger.kernel.org
Subject: PATCH: fixes for RTL8139 multicast problem on big-endian machines
User-Agent: SEMI/1.13.7 (Awazu) FLIM/1.13.2 (Kasanui) Emacs/21.1 (i386--freebsd) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.13.7 - "Awazu")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

RTL8139 interfaces cannot receive multicast packets on big-endian
machines. Tested kernel version is 2.4.19pre6. Both
driver/net/8139too.c and driver/net/8139cp.c have this problem.

These drivers have unnecessary byte-swap codes in their multicast
setup procedure. IPv6 networking on big-endian machines is deeply
affected because multicast packets are used to propagate routing
informations.

Applying the following paches fixes this problem.

--- drivers/net/8139cp.c-	Wed Apr 10 05:42:41 2002
+++ drivers/net/8139cp.c	Sat Apr 13 22:15:31 2002
@@ -812,7 +812,7 @@
 		     i++, mclist = mclist->next) {
 			int bit_nr = ether_crc(ETH_ALEN, mclist->dmi_addr) >> 26;
 
-			mc_filter[bit_nr >> 5] |= cpu_to_le32(1 << (bit_nr & 31));
+			mc_filter[bit_nr >> 5] |= 1 << (bit_nr & 31);
 			rx_mode |= AcceptMulticast;
 		}
 	}
--- drivers/net/8139too.c-	Wed Apr 10 05:43:48 2002
+++ drivers/net/8139too.c	Sat Apr 13 21:52:09 2002
@@ -2430,7 +2430,7 @@
 		     i++, mclist = mclist->next) {
 			int bit_nr = ether_crc(ETH_ALEN, mclist->dmi_addr) >> 26;
 
-			mc_filter[bit_nr >> 5] |= cpu_to_le32(1 << (bit_nr & 31));
+			mc_filter[bit_nr >> 5] |= 1 << (bit_nr & 31);
 			rx_mode |= AcceptMulticast;
 		}
 	}

Naoki Hamada
nao@tom-yam.or.jp
