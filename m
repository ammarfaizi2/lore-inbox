Return-Path: <linux-kernel-owner+w=401wt.eu-S1753561AbXACCHT@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753561AbXACCHT (ORCPT <rfc822;w@1wt.eu>);
	Tue, 2 Jan 2007 21:07:19 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1753598AbXACCHT
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Tue, 2 Jan 2007 21:07:19 -0500
Received: from inti.inf.utfsm.cl ([200.1.21.155]:36459 "EHLO inti.inf.utfsm.cl"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753561AbXACCHR (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Tue, 2 Jan 2007 21:07:17 -0500
Message-Id: <200701030205.l0325lki008679@laptop13.inf.utfsm.cl>
To: "D. Hazelton" <dhazelton@enter.net>
cc: Adrian Bunk <bunk@stusta.de>,
       Alistair John Strachan <s0348365@sms.ed.ac.uk>,
       "Zhang, Yanmin" <yanmin_zhang@linux.intel.com>,
       LKML <linux-kernel@vger.kernel.org>, Greg KH <greg@kroah.com>,
       Chuck Ebbert <76306.1226@compuserve.com>,
       Linus Torvalds <torvalds@osdl.org>, Andrew Morton <akpm@osdl.org>
Subject: Re: kernel + gcc 4.1 = several problems 
In-Reply-To: Message from "D. Hazelton" <dhazelton@enter.net> 
   of "Tue, 02 Jan 2007 18:41:33 CDT." <200701021841.34002.dhazelton@enter.net> 
X-Mailer: MH-E 7.4.2; nmh 1.1; XEmacs 21.5  (beta27)
Date: Tue, 02 Jan 2007 23:05:47 -0300
From: "Horst H. von Brand" <vonbrand@inf.utfsm.cl>
X-Greylist: Delayed for 00:05:08 by milter-greylist-3.0 (inti.inf.utfsm.cl [200.1.21.155]); Tue, 02 Jan 2007 23:06:00 -0300 (CLST)
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

D. Hazelton <dhazelton@enter.net> wrote:

[...]

> None. I didn't file a report on this because I didn't find the big, just
> noted a problem that appears to occur. In this case the call's generated
> seem to wrap loops - something I've never heard of anyone doing.

Example code showing this weirdness?

>                                                                  These
> *might* be causing the off-by-one that is causing the function to
> re-enter in the middle of an instruction.

If something like this happened, programs would be crashing left and right.

> Seeing this I'd guess that this follows for all system-level code
> generated by 4.1.1

Define "system-level code". What makes it different from, say,
bog-of-the-mill compiler code (yes, gcc compiles itself as part of its
sanity checking)?

>                    and this is exactly what I was reporting. If you'd
> like I'll go dig up the dumps he posted and post the two related segments
> side-by-side to give you a better example what I'm referring to.

If the related segments show code that is somehow wrong, by all means
report it /with your detailed analysis/ to the compiler people. Just a
warning, gcc is pretty smart in what it does, its code is often surprising
to the unwashed. Also, the C standard is subtle, the error might be in a
unwarranted assumption in the source code.
