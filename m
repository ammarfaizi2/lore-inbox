Return-Path: <linux-kernel-owner+willy=40w.ods.org-S268715AbUHUAvN@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S268715AbUHUAvN (ORCPT <rfc822;willy@w.ods.org>);
	Fri, 20 Aug 2004 20:51:13 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S268771AbUHUAvN
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Fri, 20 Aug 2004 20:51:13 -0400
Received: from zcars04e.nortelnetworks.com ([47.129.242.56]:45794 "EHLO
	zcars04e.nortelnetworks.com") by vger.kernel.org with ESMTP
	id S268715AbUHUAvK (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
	Fri, 20 Aug 2004 20:51:10 -0400
To: linux-kernel@vger.kernel.org
Subject: Re: [patch] voluntary-preempt-2.6.8.1-P5
References: <1092627691.867.150.camel@krustophenia.net>
	<20040816034618.GA13063@elte.hu>
	<1092628493.810.3.camel@krustophenia.net>
	<20040816040515.GA13665@elte.hu> <1092654819.5057.18.camel@localhost>
	<20040816113131.GA30527@elte.hu> <20040816120933.GA4211@elte.hu>
	<1092716644.876.1.camel@krustophenia.net>
	<20040817080512.GA1649@elte.hu> <20040819073247.GA1798@elte.hu>
	<20040820133031.GA13105@elte.hu> <41264506.1090302@cybsft.com>
From: Linh Dang <linhd@nortelnetworks.com>
Organization: Null
Date: Fri, 20 Aug 2004 20:51:07 -0400
In-Reply-To: <41264506.1090302@cybsft.com> (K. R. Foley's message of "Fri,
 20 Aug 2004 13:37:58 -0500")
Message-ID: <wn5n00pmhz8.fsf@linhd-2.ca.nortel.com>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

K. R. Foley <kr@cybsft.com> wrote:

> Ingo Molnar wrote:
>> i've uploaded the -P5 patch:
>>
>> http://redhat.com/~mingo/voluntary-preempt/voluntary-preempt-2.6.8.1-P5
>>
>
> Here is a latency trace generated by the NFS compile in the
> stress-kernel. It is ~1.7 ms which doesn't really surprise me for
> the NFS compile. I am going to take the NFS compile out of the test
> now and see what else falls out.
>
> If it would be useful for me to provide additional information with
> this, please let me know.
>
> http://www.cybsft.com/testresults/2.6.8.1-P5/latency_trace1.txt


You don't need to do a NFS compilation to trigger it. just to a "find"
on a huge NFS-mounted tree and you will see it.

Another candidate for cond_resched() is the loop in nfs_readdir(). It
seems safe to do so be cause it calls readdir_search_pagecache() which
would call schedule().


Regards
-- 
Linh Dang
