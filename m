Return-Path: <linux-kernel-owner+willy=40w.ods.org-S266360AbUGAXYL@vger.kernel.org>
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S266360AbUGAXYL (ORCPT <rfc822;willy@w.ods.org>);
	Thu, 1 Jul 2004 19:24:11 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S266362AbUGAXYL
	(ORCPT <rfc822;linux-kernel-outgoing>);
	Thu, 1 Jul 2004 19:24:11 -0400
Received: from e31.co.us.ibm.com ([32.97.110.129]:1211 "EHLO e31.co.us.ibm.com")
	by vger.kernel.org with ESMTP id S266360AbUGAXYH (ORCPT
	<rfc822;linux-kernel@vger.kernel.org>);
	Thu, 1 Jul 2004 19:24:07 -0400
Date: Thu, 1 Jul 2004 16:17:34 -0500
From: linas@austin.ibm.com
To: Greg KH <greg@kroah.com>
Cc: Dave Hansen <haveblue@us.ibm.com>, paulus@au1.ibm.com,
       Paul Mackerras <paulus@samba.org>,
       PPC64 External List <linuxppc64-dev@lists.linuxppc.org>,
       Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] 2.6 PPC64: lockfix for rtas error log (third-times-a-charm?)]
Message-ID: <20040701161733.J21634@forte.austin.ibm.com>
References: <20040701141931.E21634@forte.austin.ibm.com> <1088711355.21679.152.camel@nighthawk> <20040701153117.H21634@forte.austin.ibm.com> <20040701203938.GB23260@kroah.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5.1i
In-Reply-To: <20040701203938.GB23260@kroah.com>; from greg@kroah.com on Thu, Jul 01, 2004 at 01:39:38PM -0700
Sender: linux-kernel-owner@vger.kernel.org
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Jul 01, 2004 at 01:39:38PM -0700, Greg KH wrote:
> 
> And shouldn't you return -ENOMEM if you are out of memory, and can't log
> the message?

The current architected interface for this routine is to return
the error code as generated by firmware, and not an error code that
might be gen'ed during call execution.  If we change this convention,
then we'd have to audit all 68 uses of this routine to see if any
are affected, and fix the ones that are.  This is a potentially 
error-prone process. Also, the likelyhood of having a failed rtas
call is supposed to be very small (ideally never), to hava a failed
call *and* be out of memory to record the failure seems dim ... 
the benefit doesn't seem worth it.


--linas
